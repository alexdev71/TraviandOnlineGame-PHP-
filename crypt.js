/*!
Web Build: http://mootools.net/core/builder/e426a9ae7167c5807b173d5deff673fc
*/
;
/*! MooTools: the javascript framework. license: MIT-style license. copyright: Copyright (c) 2006-2015 [Valerio Proietti](http://mad4milk.net/).*/

(function() {
    this.MooTools = {
        version: "1.6.0",
        build: "529422872adfff401b901b8b6c7ca5114ee95e2b"
    };
    var e = this.typeOf = function(v) {
        if (v == null) {
            return "null"
        }
        if (v.$family != null) {
            return v.$family()
        }
        if (v.nodeName) {
            if (v.nodeType == 1) {
                return "element"
            }
            if (v.nodeType == 3) {
                return (/\S/).test(v.nodeValue) ? "textnode" : "whitespace"
            }
        } else {
            if (typeof v.length == "number") {
                if ("callee" in v) {
                    return "arguments"
                }
                if ("item" in v) {
                    return "collection"
                }
            }
        }
        return typeof v
    };
    var u = this.instanceOf = function(x, v) {
        if (x == null) {
            return false
        }
        var w = x.$constructor || x.constructor;
        while (w) {
            if (w === v) {
                return true
            }
            w = w.parent
        }
        if (!x.hasOwnProperty) {
            return false
        }
        return x instanceof v
    };
    var n = Object.prototype.hasOwnProperty;
    var r = true;
    for (var q in {
            toString: 1
        }) {
        r = null
    }
    if (r) {
        r = ["hasOwnProperty", "valueOf", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "constructor"]
    }

    function f(w, y, z) {
        if (r) {
            for (var x = r.length; x--;) {
                var v = r[x];
                if (n.call(w, v)) {
                    y.call(z, v, w[v])
                }
            }
        }
    }
    var g = this.Function;
    g.prototype.overloadSetter = function(w) {
        var v = this;
        return function(y, x) {
            if (y == null) {
                return this
            }
            if (w || typeof y != "string") {
                for (var z in y) {
                    v.call(this, z, y[z])
                }
                f(y, v, this)
            } else {
                v.call(this, y, x)
            }
            return this
        }
    };
    g.prototype.overloadGetter = function(w) {
        var v = this;
        return function(y) {
            var z, x;
            if (typeof y != "string") {
                z = y
            } else {
                if (arguments.length > 1) {
                    z = arguments
                } else {
                    if (w) {
                        z = [y]
                    }
                }
            }
            if (z) {
                x = {};
                for (var A = 0; A < z.length; A++) {
                    x[z[A]] = v.call(this, z[A])
                }
            } else {
                x = v.call(this, y)
            }
            return x
        }
    };
    g.prototype.extend = function(v, w) {
        this[v] = w
    }.overloadSetter();
    g.prototype.implement = function(v, w) {
        this.prototype[v] = w
    }.overloadSetter();
    var o = Array.prototype.slice;
    Array.convert = function(v) {
        if (v == null) {
            return []
        }
        return (m.isEnumerable(v) && typeof v != "string") ? (e(v) == "array") ? v : o.call(v) : [v]
    };
    g.convert = function(v) {
        return (e(v) == "function") ? v : function() {
            return v
        }
    };
    Number.convert = function(w) {
        var v = parseFloat(w);
        return isFinite(v) ? v : null
    };
    String.convert = function(v) {
        return v + ""
    };
    g.from = g.convert;
    Number.from = Number.convert;
    String.from = String.convert;
    g.implement({
        hide: function() {
            this.$hidden = true;
            return this
        },
        protect: function() {
            this.$protected = true;
            return this
        }
    });
    var m = this.Type = function(y, x) {
        if (y) {
            var w = y.toLowerCase();
            var v = function(z) {
                return (e(z) == w)
            };
            m["is" + y] = v;
            if (x != null) {
                x.prototype.$family = (function() {
                    return w
                }).hide()
            }
        }
        if (x == null) {
            return null
        }
        x.extend(this);
        x.$constructor = m;
        x.prototype.$constructor = x;
        return x
    };
    var p = Object.prototype.toString;
    m.isEnumerable = function(v) {
        return (v != null && typeof v.length == "number" && p.call(v) != "[object Function]")
    };
    var b = {};
    var d = function(v) {
        var w = e(v.prototype);
        return b[w] || (b[w] = [])
    };
    var h = function(w, A) {
        if (A && A.$hidden) {
            return
        }
        var v = d(this);
        for (var x = 0; x < v.length; x++) {
            var z = v[x];
            if (e(z) == "type") {
                h.call(z, w, A)
            } else {
                z.call(this, w, A)
            }
        }
        var y = this.prototype[w];
        if (y == null || !y.$protected) {
            this.prototype[w] = A
        }
        if (this[w] == null && e(A) == "function") {
            t.call(this, w, function(B) {
                return A.apply(B, o.call(arguments, 1))
            })
        }
    };
    var t = function(v, x) {
        if (x && x.$hidden) {
            return
        }
        var w = this[v];
        if (w == null || !w.$protected) {
            this[v] = x
        }
    };
    m.implement({
        implement: h.overloadSetter(),
        extend: t.overloadSetter(),
        alias: function(v, w) {
            h.call(this, v, this.prototype[w])
        }.overloadSetter(),
        mirror: function(v) {
            d(this).push(v);
            return this
        }
    });
    new m("Type", m);
    var c = function(v, A, y) {
        var x = (A != Object),
            E = A.prototype;
        if (x) {
            A = new m(v, A)
        }
        for (var B = 0, z = y.length; B < z; B++) {
            var F = y[B],
                D = A[F],
                C = E[F];
            if (D) {
                D.protect()
            }
            if (x && C) {
                A.implement(F, C.protect())
            }
        }
        if (x) {
            var w = E.propertyIsEnumerable(y[0]);
            A.forEachMethod = function(J) {
                if (!w) {
                    for (var I = 0, G = y.length; I < G; I++) {
                        J.call(E, E[y[I]], y[I])
                    }
                }
                for (var H in E) {
                    J.call(E, E[H], H)
                }
            }
        }
        return c
    };
    c("String", String, ["charAt", "charCodeAt", "concat", "contains", "indexOf", "lastIndexOf", "match", "quote", "replace", "search", "slice", "split", "substr", "substring", "trim", "toLowerCase", "toUpperCase"])("Array", Array, ["pop", "push", "reverse", "shift", "sort", "splice", "unshift", "concat", "join", "slice", "indexOf", "lastIndexOf", "filter", "forEach", "every", "map", "some", "reduce", "reduceRight", "contains"])("Number", Number, ["toExponential", "toFixed", "toLocaleString", "toPrecision"])("Function", g, ["apply", "call", "bind"])("RegExp", RegExp, ["exec", "test"])("Object", Object, ["create", "defineProperty", "defineProperties", "keys", "getPrototypeOf", "getOwnPropertyDescriptor", "getOwnPropertyNames", "preventExtensions", "isExtensible", "seal", "isSealed", "freeze", "isFrozen"])("Date", Date, ["now"]);
    Object.extend = t.overloadSetter();
    Date.extend("now", function() {
        return +(new Date)
    });
    new m("Boolean", Boolean);
    Number.prototype.$family = function() {
        return isFinite(this) ? "number" : "null"
    }.hide();
    Number.extend("random", function(w, v) {
        return Math.floor(Math.random() * (v - w + 1) + w)
    });
    Array.implement({
        forEach: function(x, y) {
            for (var w = 0, v = this.length; w < v; w++) {
                if (w in this) {
                    x.call(y, this[w], w, this)
                }
            }
        },
        each: function(v, w) {
            Array.forEach(this, v, w);
            return this
        }
    });
    Object.extend({
        keys: function(w) {
            var x = [];
            for (var v in w) {
                if (n.call(w, v)) {
                    x.push(v)
                }
            }
            f(w, function(y) {
                x.push(y)
            });
            return x
        },
        forEach: function(v, w, x) {
            Object.keys(v).forEach(function(y) {
                w.call(x, v[y], y, v)
            })
        }
    });
    Object.each = Object.forEach;
    var s = function(v) {
        switch (e(v)) {
            case "array":
                return v.clone();
            case "object":
                return Object.clone(v);
            default:
                return v
        }
    };
    Array.implement("clone", function() {
        var v = this.length,
            w = new Array(v);
        while (v--) {
            w[v] = s(this[v])
        }
        return w
    });
    var a = function(w, v, x) {
        switch (e(x)) {
            case "object":
                if (e(w[v]) == "object") {
                    Object.merge(w[v], x)
                } else {
                    w[v] = Object.clone(x)
                }
                break;
            case "array":
                w[v] = x.clone();
                break;
            default:
                w[v] = x
        }
        return w
    };
    Object.extend({
        merge: function(C, y, x) {
            if (e(y) == "string") {
                return a(C, y, x)
            }
            for (var B = 1, w = arguments.length; B < w; B++) {
                var z = arguments[B];
                for (var A in z) {
                    a(C, A, z[A])
                }
            }
            return C
        },
        clone: function(v) {
            var x = {};
            for (var w in v) {
                x[w] = s(v[w])
            }
            return x
        },
        append: function(z) {
            for (var y = 1, w = arguments.length; y < w; y++) {
                var v = arguments[y] || {};
                for (var x in v) {
                    z[x] = v[x]
                }
            }
            return z
        }
    });
    ["Object", "WhiteSpace", "TextNode", "Collection", "Arguments"].each(function(v) {
        new m(v)
    });
    var k = Date.now();
    String.extend("uniqueID", function() {
        return (k++).toString(36)
    })
})();
Array.implement({
    every: function(c, d) {
        for (var b = 0, a = this.length >>> 0; b < a; b++) {
            if ((b in this) && !c.call(d, this[b], b, this)) {
                return false
            }
        }
        return true
    },
    filter: function(d, f) {
        var c = [];
        for (var e, b = 0, a = this.length >>> 0; b < a; b++) {
            if (b in this) {
                e = this[b];
                if (d.call(f, e, b, this)) {
                    c.push(e)
                }
            }
        }
        return c
    },
    indexOf: function(c, d) {
        var b = this.length >>> 0;
        for (var a = (d < 0) ? Math.max(0, b + d) : d || 0; a < b; a++) {
            if (this[a] === c) {
                return a
            }
        }
        return -1
    },
    map: function(c, e) {
        var d = this.length >>> 0,
            b = Array(d);
        for (var a = 0; a < d; a++) {
            if (a in this) {
                b[a] = c.call(e, this[a], a, this)
            }
        }
        return b
    },
    some: function(c, d) {
        for (var b = 0, a = this.length >>> 0; b < a; b++) {
            if ((b in this) && c.call(d, this[b], b, this)) {
                return true
            }
        }
        return false
    },
    clean: function() {
        return this.filter(function(a) {
            return a != null
        })
    },
    invoke: function(a) {
        var b = Array.slice(arguments, 1);
        return this.map(function(c) {
            return c[a].apply(c, b)
        })
    },
    associate: function(c) {
        var d = {},
            b = Math.min(this.length, c.length);
        for (var a = 0; a < b; a++) {
            d[c[a]] = this[a]
        }
        return d
    },
    link: function(c) {
        var a = {};
        for (var e = 0, b = this.length; e < b; e++) {
            for (var d in c) {
                if (c[d](this[e])) {
                    a[d] = this[e];
                    delete c[d];
                    break
                }
            }
        }
        return a
    },
    contains: function(a, b) {
        return this.indexOf(a, b) != -1
    },
    append: function(a) {
        this.push.apply(this, a);
        return this
    },
    getLast: function() {
        return (this.length) ? this[this.length - 1] : null
    },
    getRandom: function() {
        return (this.length) ? this[Number.random(0, this.length - 1)] : null
    },
    include: function(a) {
        if (!this.contains(a)) {
            this.push(a)
        }
        return this
    },
    combine: function(c) {
        for (var b = 0, a = c.length; b < a; b++) {
            this.include(c[b])
        }
        return this
    },
    erase: function(b) {
        for (var a = this.length; a--;) {
            if (this[a] === b) {
                this.splice(a, 1)
            }
        }
        return this
    },
    empty: function() {
        this.length = 0;
        return this
    },
    flatten: function() {
        var d = [];
        for (var b = 0, a = this.length; b < a; b++) {
            var c = typeOf(this[b]);
            if (c == "null") {
                continue
            }
            d = d.concat((c == "array" || c == "collection" || c == "arguments" || instanceOf(this[b], Array)) ? Array.flatten(this[b]) : this[b])
        }
        return d
    },
    pick: function() {
        for (var b = 0, a = this.length; b < a; b++) {
            if (this[b] != null) {
                return this[b]
            }
        }
        return null
    },
    hexToRgb: function(b) {
        if (this.length != 3) {
            return null
        }
        var a = this.map(function(c) {
            if (c.length == 1) {
                c += c
            }
            return parseInt(c, 16)
        });
        return (b) ? a : "rgb(" + a + ")"
    },
    rgbToHex: function(d) {
        if (this.length < 3) {
            return null
        }
        if (this.length == 4 && this[3] == 0 && !d) {
            return "transparent"
        }
        var b = [];
        for (var a = 0; a < 3; a++) {
            var c = (this[a] - 0).toString(16);
            b.push((c.length == 1) ? "0" + c : c)
        }
        return (d) ? b : "#" + b.join("")
    }
});
Function.extend({
    attempt: function() {
        for (var b = 0, a = arguments.length; b < a; b++) {
            try {
                return arguments[b]()
            } catch (c) {}
        }
        return null
    }
});
Function.implement({
    attempt: function(a, c) {
        try {
            return this.apply(c, Array.convert(a))
        } catch (b) {}
        return null
    },
    bind: function(e) {
        var a = this,
            b = arguments.length > 1 ? Array.slice(arguments, 1) : null,
            d = function() {};
        var c = function() {
            var g = e,
                h = arguments.length;
            if (this instanceof c) {
                d.prototype = a.prototype;
                g = new d
            }
            var f = (!b && !h) ? a.call(g) : a.apply(g, b && h ? b.concat(Array.slice(arguments)) : b || arguments);
            return g == e ? f : g
        };
        return c
    },
    pass: function(b, c) {
        var a = this;
        if (b != null) {
            b = Array.convert(b)
        }
        return function() {
            return a.apply(c, b || arguments)
        }
    },
    delay: function(b, c, a) {
        return setTimeout(this.pass((a == null ? [] : a), c), b)
    },
    periodical: function(c, b, a) {
        return setInterval(this.pass((a == null ? [] : a), b), c)
    }
});
Number.implement({
    limit: function(b, a) {
        return Math.min(a, Math.max(b, this))
    },
    round: function(a) {
        a = Math.pow(10, a || 0).toFixed(a < 0 ? -a : 0);
        return Math.round(this * a) / a
    },
    times: function(b, c) {
        for (var a = 0; a < this; a++) {
            b.call(c, a, this)
        }
    },
    toFloat: function() {
        return parseFloat(this)
    },
    toInt: function(a) {
        return parseInt(this, a || 10)
    }
});
Number.alias("each", "times");
(function(b) {
    var a = {};
    b.each(function(c) {
        if (!Number[c]) {
            a[c] = function() {
                return Math[c].apply(null, [this].concat(Array.convert(arguments)))
            }
        }
    });
    Number.implement(a)
})(["abs", "acos", "asin", "atan", "atan2", "ceil", "cos", "exp", "floor", "log", "max", "min", "pow", "sin", "sqrt", "tan"]);
String.implement({
    contains: function(b, a) {
        return (a ? String(this).slice(a) : String(this)).indexOf(b) > -1
    },
    test: function(a, b) {
        return ((typeOf(a) == "regexp") ? a : new RegExp("" + a, b)).test(this)
    },
    trim: function() {
        return String(this).replace(/^\s+|\s+$/g, "")
    },
    clean: function() {
        return String(this).replace(/\s+/g, " ").trim()
    },
    camelCase: function() {
        return String(this).replace(/-\D/g, function(a) {
            return a.charAt(1).toUpperCase()
        })
    },
    hyphenate: function() {
        return String(this).replace(/[A-Z]/g, function(a) {
            return ("-" + a.charAt(0).toLowerCase())
        })
    },
    capitalize: function() {
        return String(this).replace(/\b[a-z]/g, function(a) {
            return a.toUpperCase()
        })
    },
    escapeRegExp: function() {
        return String(this).replace(/([-.*+?^${}()|[\]\/\\])/g, "\\$1")
    },
    toInt: function(a) {
        return parseInt(this, a || 10)
    },
    toFloat: function() {
        return parseFloat(this)
    },
    hexToRgb: function(b) {
        var a = String(this).match(/^#?(\w{1,2})(\w{1,2})(\w{1,2})$/);
        return (a) ? a.slice(1).hexToRgb(b) : null
    },
    rgbToHex: function(b) {
        var a = String(this).match(/\d{1,3}/g);
        return (a) ? a.rgbToHex(b) : null
    },
    substitute: function(a, b) {
        return String(this).replace(b || (/\\?\{([^{}]+)\}/g), function(d, c) {
            if (d.charAt(0) == "\\") {
                return d.slice(1)
            }
            return (a[c] != null) ? a[c] : ""
        })
    }
});
(function() {
    var f = this.document;
    var d = f.window = this;
    var a = function(n, e) {
        n = n.toLowerCase();
        e = (e ? e.toLowerCase() : "");
        var o = n.match(/(edge)[\s\/:]([\w\d\.]+)/);
        if (!o) {
            o = n.match(/(opera|ie|firefox|chrome|trident|crios|version)[\s\/:]([\w\d\.]+)?.*?(safari|(?:rv[\s\/:]|version[\s\/:])([\w\d\.]+)|$)/) || [null, "unknown", 0]
        }
        if (o[1] == "trident") {
            o[1] = "ie";
            if (o[4]) {
                o[2] = o[4]
            }
        } else {
            if (o[1] == "crios") {
                o[1] = "chrome"
            }
        }
        e = n.match(/ip(?:ad|od|hone)/) ? "ios" : (n.match(/(?:webos|android)/) || n.match(/mac|win|linux/) || ["other"])[0];
        if (e == "win") {
            e = "windows"
        }
        return {
            extend: Function.prototype.extend,
            name: (o[1] == "version") ? o[3] : o[1],
            version: parseFloat((o[1] == "opera" && o[4]) ? o[4] : o[2]),
            platform: e
        }
    };
    var m = this.Browser = a(navigator.userAgent, navigator.platform);
    if (m.name == "ie" && f.documentMode) {
        m.version = f.documentMode
    }
    m.extend({
        Features: {
            xpath: !!(f.evaluate),
            air: !!(d.runtime),
            query: !!(f.querySelector),
            json: !!(d.JSON)
        },
        parseUA: a
    });
    m.Request = (function() {
        var o = function() {
            return new XMLHttpRequest()
        };
        var n = function() {
            return new ActiveXObject("MSXML2.XMLHTTP")
        };
        var e = function() {
            return new ActiveXObject("Microsoft.XMLHTTP")
        };
        return Function.attempt(function() {
            o();
            return o
        }, function() {
            n();
            return n
        }, function() {
            e();
            return e
        })
    })();
    m.Features.xhr = !!(m.Request);
    m.exec = function(n) {
        if (!n) {
            return n
        }
        if (d.execScript) {
            d.execScript(n)
        } else {
            var e = f.createElement("script");
            e.setAttribute("type", "text/javascript");
            e.text = n;
            f.head.appendChild(e);
            f.head.removeChild(e)
        }
        return n
    };
    String.implement("stripScripts", function(n) {
        var e = "";
        var o = this.replace(/<script[^>]*>([\s\S]*?)<\/script>/gi, function(p, q) {
            e += q + "\n";
            return ""
        });
        if (n === true) {
            m.exec(e)
        } else {
            if (typeOf(n) == "function") {
                n(e, o)
            }
        }
        return o
    });
    m.extend({
        Document: this.Document,
        Window: this.Window,
        Element: this.Element,
        Event: this.Event
    });
    this.Window = this.$constructor = new Type("Window", function() {});
    this.$family = Function.convert("window").hide();
    Window.mirror(function(e, n) {
        d[e] = n
    });
    this.Document = f.$constructor = new Type("Document", function() {});
    f.$family = Function.convert("document").hide();
    Document.mirror(function(e, n) {
        f[e] = n
    });
    f.html = f.documentElement;
    if (!f.head) {
        f.head = f.getElementsByTagName("head")[0]
    }
    if (f.execCommand) {
        try {
            f.execCommand("BackgroundImageCache", false, true)
        } catch (c) {}
    }
    if (this.attachEvent && !this.addEventListener) {
        var b = function() {
            this.detachEvent("onunload", b);
            f.head = f.html = f.window = null;
            d = this.Window = f = null
        };
        this.attachEvent("onunload", b)
    }
    var g = Array.convert;
    try {
        g(f.html.childNodes)
    } catch (c) {
        Array.convert = function(n) {
            if (typeof n != "string" && Type.isEnumerable(n) && typeOf(n) != "array") {
                var e = n.length,
                    o = new Array(e);
                while (e--) {
                    o[e] = n[e]
                }
                return o
            }
            return g(n)
        };
        var h = Array.prototype,
            k = h.slice;
        ["pop", "push", "reverse", "shift", "sort", "splice", "unshift", "concat", "join", "slice"].each(function(e) {
            var n = h[e];
            Array[e] = function(o) {
                return n.apply(Array.convert(o), k.call(arguments, 1))
            }
        })
    }
})();
(function() {
    var a = this.Class = new Type("Class", function(h) {
        if (instanceOf(h, Function)) {
            h = {
                initialize: h
            }
        }
        var g = function() {
            e(this);
            if (g.$prototyping) {
                return this
            }
            this.$caller = null;
            this.$family = null;
            var k = (this.initialize) ? this.initialize.apply(this, arguments) : this;
            this.$caller = this.caller = null;
            return k
        }.extend(this).implement(h);
        g.$constructor = a;
        g.prototype.$constructor = g;
        g.prototype.parent = c;
        return g
    });
    var c = function() {
        if (!this.$caller) {
            throw new Error('The method "parent" cannot be called.')
        }
        var g = this.$caller.$name,
            h = this.$caller.$owner.parent,
            k = (h) ? h.prototype[g] : null;
        if (!k) {
            throw new Error('The method "' + g + '" has no parent.')
        }
        return k.apply(this, arguments)
    };
    var e = function(g) {
        for (var h in g) {
            var m = g[h];
            switch (typeOf(m)) {
                case "object":
                    var k = function() {};
                    k.prototype = m;
                    g[h] = e(new k);
                    break;
                case "array":
                    g[h] = m.clone();
                    break
            }
        }
        return g
    };
    var b = function(g, h, m) {
        if (m.$origin) {
            m = m.$origin
        }
        var k = function() {
            if (m.$protected && this.$caller == null) {
                throw new Error('The method "' + h + '" cannot be called.')
            }
            var o = this.caller,
                p = this.$caller;
            this.caller = p;
            this.$caller = k;
            var n = m.apply(this, arguments);
            this.$caller = p;
            this.caller = o;
            return n
        }.extend({
            $owner: g,
            $origin: m,
            $name: h
        });
        return k
    };
    var f = function(h, k, g) {
        if (a.Mutators.hasOwnProperty(h)) {
            k = a.Mutators[h].call(this, k);
            if (k == null) {
                return this
            }
        }
        if (typeOf(k) == "function") {
            if (k.$hidden) {
                return this
            }
            this.prototype[h] = (g) ? k : b(this, h, k)
        } else {
            Object.merge(this.prototype, h, k)
        }
        return this
    };
    var d = function(g) {
        g.$prototyping = true;
        var h = new g;
        delete g.$prototyping;
        return h
    };
    a.implement("implement", f.overloadSetter());
    a.Mutators = {
        Extends: function(g) {
            this.parent = g;
            this.prototype = d(g)
        },
        Implements: function(g) {
            Array.convert(g).each(function(m) {
                var h = new m;
                for (var k in h) {
                    f.call(this, k, h[k], true)
                }
            }, this)
        }
    }
})();
(function() {
    this.Chain = new Class({
        $chain: [],
        chain: function() {
            this.$chain.append(Array.flatten(arguments));
            return this
        },
        callChain: function() {
            return (this.$chain.length) ? this.$chain.shift().apply(this, arguments) : false
        },
        clearChain: function() {
            this.$chain.empty();
            return this
        }
    });
    var a = function(b) {
        return b.replace(/^on([A-Z])/, function(c, d) {
            return d.toLowerCase()
        })
    };
    this.Events = new Class({
        $events: {},
        addEvent: function(d, c, b) {
            d = a(d);
            this.$events[d] = (this.$events[d] || []).include(c);
            if (b) {
                c.internal = true
            }
            return this
        },
        addEvents: function(b) {
            for (var c in b) {
                this.addEvent(c, b[c])
            }
            return this
        },
        fireEvent: function(e, c, b) {
            e = a(e);
            var d = this.$events[e];
            if (!d) {
                return this
            }
            c = Array.convert(c);
            d.each(function(f) {
                if (b) {
                    f.delay(b, this, c)
                } else {
                    f.apply(this, c)
                }
            }, this);
            return this
        },
        removeEvent: function(e, d) {
            e = a(e);
            var c = this.$events[e];
            if (c && !d.internal) {
                var b = c.indexOf(d);
                if (b != -1) {
                    delete c[b]
                }
            }
            return this
        },
        removeEvents: function(d) {
            var e;
            if (typeOf(d) == "object") {
                for (e in d) {
                    this.removeEvent(e, d[e])
                }
                return this
            }
            if (d) {
                d = a(d)
            }
            for (e in this.$events) {
                if (d && d != e) {
                    continue
                }
                var c = this.$events[e];
                for (var b = c.length; b--;) {
                    if (b in c) {
                        this.removeEvent(e, c[b])
                    }
                }
            }
            return this
        }
    });
    this.Options = new Class({
        setOptions: function() {
            var b = this.options = Object.merge.apply(null, [{}, this.options].append(arguments));
            if (this.addEvent) {
                for (var c in b) {
                    if (typeOf(b[c]) != "function" || !(/^on[A-Z]/).test(c)) {
                        continue
                    }
                    this.addEvent(c, b[c]);
                    delete b[c]
                }
            }
            return this
        }
    })
})();
(function() {
    var n = 0,
        d = 1,
        b = 2;
    var h = Class.Thenable = new Class({
        $thenableState: n,
        $thenableResult: null,
        $thenableReactions: [],
        resolve: function(o) {
            k(this, o);
            return this
        },
        reject: function(o) {
            m(this, o);
            return this
        },
        getThenableState: function() {
            switch (this.$thenableState) {
                case n:
                    return "pending";
                case d:
                    return "fulfilled";
                case b:
                    return "rejected"
            }
        },
        resetThenable: function(o) {
            m(this, o);
            f(this);
            return this
        },
        then: function(q, p) {
            if (typeof q !== "function") {
                q = "Identity"
            }
            if (typeof p !== "function") {
                p = "Thrower"
            }
            var o = new h();
            this.$thenableReactions.push({
                thenable: o,
                fulfillHandler: q,
                rejectHandler: p
            });
            if (this.$thenableState !== n) {
                c(this)
            }
            return o
        },
        "catch": function(o) {
            return this.then(null, o)
        }
    });
    h.extend({
        resolve: function(p) {
            var o;
            if (p instanceof h) {
                o = p
            } else {
                o = new h();
                k(o, p)
            }
            return o
        },
        reject: function(p) {
            var o = new h();
            m(o, p);
            return o
        }
    });

    function k(o, r) {
        if (o.$thenableState === n) {
            if (o === r) {
                m(o, new TypeError("Tried to resolve a thenable with itself."))
            } else {
                if (r && (typeof r === "object" || typeof r === "function")) {
                    var s;
                    try {
                        s = r.then
                    } catch (q) {
                        m(o, q)
                    }
                    if (typeof s === "function") {
                        var p = false;
                        a(function() {
                            try {
                                s.call(r, function(u) {
                                    if (!p) {
                                        p = true;
                                        k(o, u)
                                    }
                                }, function(u) {
                                    if (!p) {
                                        p = true;
                                        m(o, u)
                                    }
                                })
                            } catch (t) {
                                if (!p) {
                                    p = true;
                                    m(o, t)
                                }
                            }
                        })
                    } else {
                        g(o, r)
                    }
                } else {
                    g(o, r)
                }
            }
        }
    }

    function g(o, p) {
        if (o.$thenableState === n) {
            o.$thenableResult = p;
            o.$thenableState = d;
            c(o)
        }
    }

    function m(o, p) {
        if (o.$thenableState === n) {
            o.$thenableResult = p;
            o.$thenableState = b;
            c(o)
        }
    }

    function f(o) {
        if (o.$thenableState !== n) {
            o.$thenableResult = null;
            o.$thenableState = n
        }
    }

    function c(p) {
        var s = p.$thenableState,
            o = p.$thenableResult,
            q = p.$thenableReactions,
            r;
        if (s === d) {
            p.$thenableReactions = [];
            r = "fulfillHandler"
        } else {
            if (s == b) {
                p.$thenableReactions = [];
                r = "rejectHandler"
            }
        }
        if (r) {
            a(e.pass([o, q, r]))
        }
    }

    function e(o, q, u) {
        for (var s = 0, p = q.length; s < p; ++s) {
            var v = q[s],
                t = v[u];
            if (t === "Identity") {
                k(v.thenable, o)
            } else {
                if (t === "Thrower") {
                    m(v.thenable, o)
                } else {
                    try {
                        k(v.thenable, t(o))
                    } catch (r) {
                        m(v.thenable, r)
                    }
                }
            }
        }
    }
    var a;
    if (typeof process !== "undefined" && typeof process.nextTick === "function") {
        a = process.nextTick
    } else {
        if (typeof setImmediate !== "undefined") {
            a = setImmediate
        } else {
            a = function(o) {
                setTimeout(o, 0)
            }
        }
    }
})();
(function() {
    Object.extend({
        subset: function(c, f) {
            var e = {};
            for (var d = 0, a = f.length; d < a; d++) {
                var b = f[d];
                if (b in c) {
                    e[b] = c[b]
                }
            }
            return e
        },
        map: function(a, e, g) {
            var d = {};
            var f = Object.keys(a);
            for (var c = 0; c < f.length; c++) {
                var b = f[c];
                d[b] = e.call(g, a[b], b, a)
            }
            return d
        },
        filter: function(a, e, h) {
            var d = {};
            var f = Object.keys(a);
            for (var c = 0; c < f.length; c++) {
                var b = f[c],
                    g = a[b];
                if (e.call(h, g, b, a)) {
                    d[b] = g
                }
            }
            return d
        },
        every: function(a, d, f) {
            var e = Object.keys(a);
            for (var c = 0; c < e.length; c++) {
                var b = e[c];
                if (!d.call(f, a[b], b)) {
                    return false
                }
            }
            return true
        },
        some: function(a, d, f) {
            var e = Object.keys(a);
            for (var c = 0; c < e.length; c++) {
                var b = e[c];
                if (d.call(f, a[b], b)) {
                    return true
                }
            }
            return false
        },
        values: function(c) {
            var b = [];
            var e = Object.keys(c);
            for (var d = 0; d < e.length; d++) {
                var a = e[d];
                b.push(c[a])
            }
            return b
        },
        getLength: function(a) {
            return Object.keys(a).length
        },
        keyOf: function(a, e) {
            var d = Object.keys(a);
            for (var c = 0; c < d.length; c++) {
                var b = d[c];
                if (a[b] === e) {
                    return b
                }
            }
            return null
        },
        contains: function(a, b) {
            return Object.keyOf(a, b) != null
        },
        toQueryString: function(a, b) {
            var c = [];
            Object.each(a, function(g, f) {
                if (b) {
                    f = b + "[" + f + "]"
                }
                var e;
                switch (typeOf(g)) {
                    case "object":
                        e = Object.toQueryString(g, f);
                        break;
                    case "array":
                        var d = {};
                        g.each(function(k, h) {
                            d[h] = k
                        });
                        e = Object.toQueryString(d, f);
                        break;
                    default:
                        e = f + "=" + encodeURIComponent(g)
                }
                if (g != null) {
                    c.push(e)
                }
            });
            return c.join("&")
        }
    })
})();
(function() {
    var n, q, o, g, a = {},
        c = {},
        p = /\\/g;
    var e = function(t, s) {
        if (t == null) {
            return null
        }
        if (t.Slick === true) {
            return t
        }
        t = ("" + t).replace(/^\s+|\s+$/g, "");
        g = !!s;
        var r = (g) ? c : a;
        if (r[t]) {
            return r[t]
        }
        n = {
            Slick: true,
            expressions: [],
            raw: t,
            reverse: function() {
                return e(this.raw, true)
            }
        };
        q = -1;
        while (t != (t = t.replace(m, b))) {}
        n.length = n.expressions.length;
        return r[n.raw] = (g) ? h(n) : n
    };
    var k = function(r) {
        if (r === "!") {
            return " "
        } else {
            if (r === " ") {
                return "!"
            } else {
                if ((/^!/).test(r)) {
                    return r.replace(/^!/, "")
                } else {
                    return "!" + r
                }
            }
        }
    };
    var h = function(x) {
        var u = x.expressions;
        for (var s = 0; s < u.length; s++) {
            var w = u[s];
            var t = {
                parts: [],
                tag: "*",
                combinator: k(w[0].combinator)
            };
            for (var r = 0; r < w.length; r++) {
                var v = w[r];
                if (!v.reverseCombinator) {
                    v.reverseCombinator = " "
                }
                v.combinator = v.reverseCombinator;
                delete v.reverseCombinator
            }
            w.reverse().push(t)
        }
        return x
    };
    var f = function(r) {
        return r.replace(/[-[\]{}()*+?.\\^$|,#\s]/g, function(s) {
            return "\\" + s
        })
    };
    var m = new RegExp("^(?:\\s*(,)\\s*|\\s*(<combinator>+)\\s*|(\\s+)|(<unicode>+|\\*)|\\#(<unicode>+)|\\.(<unicode>+)|\\[\\s*(<unicode1>+)(?:\\s*([*^$!~|]?=)(?:\\s*(?:([\"']?)(.*?)\\9)))?\\s*\\](?!\\])|(:+)(<unicode>+)(?:\\((?:(?:([\"'])([^\\13]*)\\13)|((?:\\([^)]+\\)|[^()]*)+))\\))?)".replace(/<combinator>/, "[" + f(">+~`!@$%^&={}\\;</") + "]").replace(/<unicode>/g, "(?:[\\w\\u00a1-\\uFFFF-]|\\\\[^\\s0-9a-f])").replace(/<unicode1>/g, "(?:[:\\w\\u00a1-\\uFFFF-]|\\\\[^\\s0-9a-f])"));

    function b(A, v, G, C, u, F, t, E, D, B, x, I, J, y, s, z) {
        if (v || q === -1) {
            n.expressions[++q] = [];
            o = -1;
            if (v) {
                return ""
            }
        }
        if (G || C || o === -1) {
            G = G || " ";
            var w = n.expressions[q];
            if (g && w[o]) {
                w[o].reverseCombinator = k(G)
            }
            w[++o] = {
                combinator: G,
                tag: "*"
            }
        }
        var r = n.expressions[q][o];
        if (u) {
            r.tag = u.replace(p, "")
        } else {
            if (F) {
                r.id = F.replace(p, "")
            } else {
                if (t) {
                    t = t.replace(p, "");
                    if (!r.classList) {
                        r.classList = []
                    }
                    if (!r.classes) {
                        r.classes = []
                    }
                    r.classList.push(t);
                    r.classes.push({
                        value: t,
                        regexp: new RegExp("(^|\\s)" + f(t) + "(\\s|$)")
                    })
                } else {
                    if (J) {
                        z = z || s;
                        z = z ? z.replace(p, "") : null;
                        if (!r.pseudos) {
                            r.pseudos = []
                        }
                        r.pseudos.push({
                            key: J.replace(p, ""),
                            value: z,
                            type: I.length == 1 ? "class" : "element"
                        })
                    } else {
                        if (E) {
                            E = E.replace(p, "");
                            x = (x || "").replace(p, "");
                            var H, K;
                            switch (D) {
                                case "^=":
                                    K = new RegExp("^" + f(x));
                                    break;
                                case "$=":
                                    K = new RegExp(f(x) + "$");
                                    break;
                                case "~=":
                                    K = new RegExp("(^|\\s)" + f(x) + "(\\s|$)");
                                    break;
                                case "|=":
                                    K = new RegExp("^" + f(x) + "(-|$)");
                                    break;
                                case "=":
                                    H = function(L) {
                                        return x == L
                                    };
                                    break;
                                case "*=":
                                    H = function(L) {
                                        return L && L.indexOf(x) > -1
                                    };
                                    break;
                                case "!=":
                                    H = function(L) {
                                        return x != L
                                    };
                                    break;
                                default:
                                    H = function(L) {
                                        return !!L
                                    }
                            }
                            if (x == "" && (/^[*$^]=$/).test(D)) {
                                H = function() {
                                    return false
                                }
                            }
                            if (!H) {
                                H = function(L) {
                                    return L && K.test(L)
                                }
                            }
                            if (!r.attributes) {
                                r.attributes = []
                            }
                            r.attributes.push({
                                key: E,
                                operator: D,
                                value: x,
                                test: H
                            })
                        }
                    }
                }
            }
        }
        return ""
    }
    var d = (this.Slick || {});
    d.parse = function(r) {
        return e(r)
    };
    d.escapeRegExp = f;
    if (!this.Slick) {
        this.Slick = d
    }
}).apply((typeof exports != "undefined") ? exports : this);
(function() {
    var n = {},
        q = {},
        d = Object.prototype.toString;
    n.isNativeCode = function(c) {
        return (/\{\s*\[native code\]\s*\}/).test("" + c)
    };
    n.isXML = function(c) {
        return (!!c.xmlVersion) || (!!c.xml) || (d.call(c) == "[object XMLDocument]") || (c.nodeType == 9 && c.documentElement.nodeName != "HTML")
    };
    n.setDocument = function(z) {
        var s = z.nodeType;
        if (s == 9) {} else {
            if (s) {
                z = z.ownerDocument
            } else {
                if (z.navigator) {
                    z = z.document
                } else {
                    return
                }
            }
        }
        if (this.document === z) {
            return
        }
        this.document = z;
        var D = z.documentElement,
            r = this.getUIDXML(D),
            v = q[r],
            u;
        if (v) {
            for (u in v) {
                this[u] = v[u]
            }
            return
        }
        v = q[r] = {};
        v.root = D;
        v.isXMLDocument = this.isXML(z);
        v.brokenStarGEBTN = v.starSelectsClosedQSA = v.idGetsName = v.brokenMixedCaseQSA = v.brokenGEBCN = v.brokenCheckedQSA = v.brokenEmptyAttributeQSA = v.isHTMLDocument = v.nativeMatchesSelector = false;
        var t, x, B, C, w;
        var A, y = "slick_uniqueid";
        var c = z.createElement("div");
        var p = z.body || z.getElementsByTagName("body")[0] || D;
        p.appendChild(c);
        try {
            c.innerHTML = '<a id="' + y + '"></a>';
            v.isHTMLDocument = !!z.getElementById(y)
        } catch (F) {}
        if (v.isHTMLDocument) {
            c.style.display = "none";
            c.appendChild(z.createComment(""));
            x = (c.getElementsByTagName("*").length > 1);
            try {
                c.innerHTML = "foo</foo>";
                A = c.getElementsByTagName("*");
                t = (A && !!A.length && A[0].nodeName.charAt(0) == "/")
            } catch (F) {}
            v.brokenStarGEBTN = x || t;
            try {
                c.innerHTML = '<a name="' + y + '"></a><b id="' + y + '"></b>';
                v.idGetsName = z.getElementById(y) === c.firstChild
            } catch (F) {}
            if (c.getElementsByClassName) {
                try {
                    c.innerHTML = '<a class="f"></a><a class="b"></a>';
                    c.getElementsByClassName("b").length;
                    c.firstChild.className = "b";
                    C = (c.getElementsByClassName("b").length != 2)
                } catch (F) {}
                try {
                    c.innerHTML = '<a class="a"></a><a class="f b a"></a>';
                    B = (c.getElementsByClassName("a").length != 2)
                } catch (F) {}
                v.brokenGEBCN = C || B
            }
            if (c.querySelectorAll) {
                try {
                    c.innerHTML = "foo</foo>";
                    A = c.querySelectorAll("*");
                    v.starSelectsClosedQSA = (A && !!A.length && A[0].nodeName.charAt(0) == "/")
                } catch (F) {}
                try {
                    c.innerHTML = '<a class="MiX"></a>';
                    v.brokenMixedCaseQSA = !c.querySelectorAll(".MiX").length
                } catch (F) {}
                try {
                    c.innerHTML = '<select><option selected="selected">a</option></select>';
                    v.brokenCheckedQSA = (c.querySelectorAll(":checked").length == 0)
                } catch (F) {}
                try {
                    c.innerHTML = '<a class=""></a>';
                    v.brokenEmptyAttributeQSA = (c.querySelectorAll('[class*=""]').length != 0)
                } catch (F) {}
            }
            try {
                c.innerHTML = '<form action="s"><input id="action"/></form>';
                w = (c.firstChild.getAttribute("action") != "s")
            } catch (F) {}
            v.nativeMatchesSelector = D.matches || D.mozMatchesSelector || D.webkitMatchesSelector;
            if (v.nativeMatchesSelector) {
                try {
                    v.nativeMatchesSelector.call(D, ":slick");
                    v.nativeMatchesSelector = null
                } catch (F) {}
            }
        }
        try {
            D.slick_expando = 1;
            delete D.slick_expando;
            v.getUID = this.getUIDHTML
        } catch (F) {
            v.getUID = this.getUIDXML
        }
        p.removeChild(c);
        c = A = p = null;
        v.getAttribute = (v.isHTMLDocument && w) ? function(J, H) {
            var K = this.attributeGetters[H];
            if (K) {
                return K.call(J)
            }
            var I = J.getAttributeNode(H);
            return (I) ? I.nodeValue : null
        } : function(I, H) {
            var J = this.attributeGetters[H];
            return (J) ? J.call(I) : I.getAttribute(H)
        };
        v.hasAttribute = (D && this.isNativeCode(D.hasAttribute)) ? function(I, H) {
            return I.hasAttribute(H)
        } : function(I, H) {
            I = I.getAttributeNode(H);
            return !!(I && (I.specified || I.nodeValue))
        };
        var G = D && this.isNativeCode(D.contains),
            E = z && this.isNativeCode(z.contains);
        v.contains = (G && E) ? function(H, I) {
            return H.contains(I)
        } : (G && !E) ? function(H, I) {
            return H === I || ((H === z) ? z.documentElement : H).contains(I)
        } : (D && D.compareDocumentPosition) ? function(H, I) {
            return H === I || !!(H.compareDocumentPosition(I) & 16)
        } : function(H, I) {
            if (I) {
                do {
                    if (I === H) {
                        return true
                    }
                } while ((I = I.parentNode))
            }
            return false
        };
        v.documentSorter = (D.compareDocumentPosition) ? function(I, H) {
            if (!I.compareDocumentPosition || !H.compareDocumentPosition) {
                return 0
            }
            return I.compareDocumentPosition(H) & 4 ? -1 : I === H ? 0 : 1
        } : ("sourceIndex" in D) ? function(I, H) {
            if (!I.sourceIndex || !H.sourceIndex) {
                return 0
            }
            return I.sourceIndex - H.sourceIndex
        } : (z.createRange) ? function(K, I) {
            if (!K.ownerDocument || !I.ownerDocument) {
                return 0
            }
            var J = K.ownerDocument.createRange(),
                H = I.ownerDocument.createRange();
            J.setStart(K, 0);
            J.setEnd(K, 0);
            H.setStart(I, 0);
            H.setEnd(I, 0);
            return J.compareBoundaryPoints(Range.START_TO_END, H)
        } : null;
        D = null;
        for (u in v) {
            this[u] = v[u]
        }
    };
    var f = /^([#.]?)((?:[\w-]+|\*))$/,
        h = /\[.+[*$^]=(?:""|'')?\]/,
        g = {};
    n.search = function(r, E, Q, w) {
        var C = this.found = (w) ? null : (Q || []);
        if (!r) {
            return C
        } else {
            if (r.navigator) {
                r = r.document
            } else {
                if (!r.nodeType) {
                    return C
                }
            }
        }
        var A, P, K, I, t = this.uniques = {},
            z = !!(Q && Q.length),
            c = (r.nodeType == 9);
        if (this.document !== (c ? r : r.ownerDocument)) {
            this.setDocument(r)
        }
        if (z) {
            for (P = C.length; P--;) {
                t[this.getUID(C[P])] = true
            }
        }
        if (typeof E == "string") {
            var D = E.match(f);
            simpleSelectors: if (D) {
                var M = D[1],
                    X = D[2];
                if (!M) {
                    if (X == "*" && this.brokenStarGEBTN) {
                        break simpleSelectors
                    }
                    I = r.getElementsByTagName(X);
                    if (w) {
                        return I[0] || null
                    }
                    for (P = 0; K = I[P++];) {
                        if (!(z && t[this.getUID(K)])) {
                            C.push(K)
                        }
                    }
                } else {
                    if (M == "#") {
                        if (!this.isHTMLDocument || !c) {
                            break simpleSelectors
                        }
                        K = r.getElementById(X);
                        if (!K) {
                            return C
                        }
                        if (this.idGetsName && K.getAttributeNode("id").nodeValue != X) {
                            break simpleSelectors
                        }
                        if (w) {
                            return K || null
                        }
                        if (!(z && t[this.getUID(K)])) {
                            C.push(K)
                        }
                    } else {
                        if (M == ".") {
                            if (!this.isHTMLDocument || ((!r.getElementsByClassName || this.brokenGEBCN) && r.querySelectorAll)) {
                                break simpleSelectors
                            }
                            if (r.getElementsByClassName && !this.brokenGEBCN) {
                                I = r.getElementsByClassName(X);
                                if (w) {
                                    return I[0] || null
                                }
                                for (P = 0; K = I[P++];) {
                                    if (!(z && t[this.getUID(K)])) {
                                        C.push(K)
                                    }
                                }
                            } else {
                                var v = new RegExp("(^|\\s)" + e.escapeRegExp(X) + "(\\s|$)");
                                I = r.getElementsByTagName("*");
                                for (P = 0; K = I[P++];) {
                                    className = K.className;
                                    if (!(className && v.test(className))) {
                                        continue
                                    }
                                    if (w) {
                                        return K
                                    }
                                    if (!(z && t[this.getUID(K)])) {
                                        C.push(K)
                                    }
                                }
                            }
                        }
                    }
                }
                if (z) {
                    this.sort(C)
                }
                return (w) ? null : C
            }
            querySelector: if (r.querySelectorAll) {
                if (!this.isHTMLDocument || g[E] || this.brokenMixedCaseQSA || (this.brokenCheckedQSA && E.indexOf(":checked") > -1) || (this.brokenEmptyAttributeQSA && h.test(E)) || (!c && E.indexOf(",") > -1) || e.disableQSA) {
                    break querySelector
                }
                var B = E,
                    F = r,
                    O;
                if (!c) {
                    O = F.getAttribute("id"), slickid = "slickid__";
                    F.setAttribute("id", slickid);
                    B = "#" + slickid + " " + B;
                    r = F.parentNode
                }
                try {
                    if (w) {
                        return r.querySelector(B) || null
                    } else {
                        I = r.querySelectorAll(B)
                    }
                } catch (R) {
                    g[E] = 1;
                    break querySelector
                } finally {
                    if (!c) {
                        if (O) {
                            F.setAttribute("id", O)
                        } else {
                            F.removeAttribute("id")
                        }
                        r = F
                    }
                }
                if (this.starSelectsClosedQSA) {
                    for (P = 0; K = I[P++];) {
                        if (K.nodeName > "@" && !(z && t[this.getUID(K)])) {
                            C.push(K)
                        }
                    }
                } else {
                    for (P = 0; K = I[P++];) {
                        if (!(z && t[this.getUID(K)])) {
                            C.push(K)
                        }
                    }
                }
                if (z) {
                    this.sort(C)
                }
                return C
            }
            A = this.Slick.parse(E);
            if (!A.length) {
                return C
            }
        } else {
            if (E == null) {
                return C
            } else {
                if (E.Slick) {
                    A = E
                } else {
                    if (this.contains(r.documentElement || r, E)) {
                        (C) ? C.push(E): C = E;
                        return C
                    } else {
                        return C
                    }
                }
            }
        }
        this.posNTH = {};
        this.posNTHLast = {};
        this.posNTHType = {};
        this.posNTHTypeLast = {};
        this.push = (!z && (w || (A.length == 1 && A.expressions[0].length == 1))) ? this.pushArray : this.pushUID;
        if (C == null) {
            C = []
        }
        var N, J, H;
        var L, W, G, V, S, y, u;
        var x, s, p, T, U = A.expressions;
        search: for (P = 0;
            (s = U[P]); P++) {
            for (N = 0;
                (p = s[N]); N++) {
                L = "combinator:" + p.combinator;
                if (!this[L]) {
                    continue search
                }
                W = (this.isXMLDocument) ? p.tag : p.tag.toUpperCase();
                G = p.id;
                V = p.classList;
                S = p.classes;
                y = p.attributes;
                u = p.pseudos;
                T = (N === (s.length - 1));
                this.bitUniques = {};
                if (T) {
                    this.uniques = t;
                    this.found = C
                } else {
                    this.uniques = {};
                    this.found = []
                }
                if (N === 0) {
                    this[L](r, W, G, S, y, u, V);
                    if (w && T && C.length) {
                        break search
                    }
                } else {
                    if (w && T) {
                        for (J = 0, H = x.length; J < H; J++) {
                            this[L](x[J], W, G, S, y, u, V);
                            if (C.length) {
                                break search
                            }
                        }
                    } else {
                        for (J = 0, H = x.length; J < H; J++) {
                            this[L](x[J], W, G, S, y, u, V)
                        }
                    }
                }
                x = this.found
            }
        }
        if (z || (A.expressions.length > 1)) {
            this.sort(C)
        }
        return (w) ? (C[0] || null) : C
    };
    n.uidx = 1;
    n.uidk = "slick-uniqueid";
    n.getUIDXML = function(p) {
        var c = p.getAttribute(this.uidk);
        if (!c) {
            c = this.uidx++;
            p.setAttribute(this.uidk, c)
        }
        return c
    };
    n.getUIDHTML = function(c) {
        return c.uniqueNumber || (c.uniqueNumber = this.uidx++)
    };
    n.sort = function(c) {
        if (!this.documentSorter) {
            return c
        }
        c.sort(this.documentSorter);
        return c
    };
    n.cacheNTH = {};
    n.matchNTH = /^([+-]?\d*)?([a-z]+)?([+-]\d+)?$/;
    n.parseNTHArgument = function(t) {
        var r = t.match(this.matchNTH);
        if (!r) {
            return false
        }
        var s = r[2] || false;
        var p = r[1] || 1;
        if (p == "-") {
            p = -1
        }
        var c = +r[3] || 0;
        r = (s == "n") ? {
            a: p,
            b: c
        } : (s == "odd") ? {
            a: 2,
            b: 1
        } : (s == "even") ? {
            a: 2,
            b: 0
        } : {
            a: 0,
            b: p
        };
        return (this.cacheNTH[t] = r)
    };
    n.createNTHPseudo = function(s, p, c, r) {
        return function(v, t) {
            var x = this.getUID(v);
            if (!this[c][x]) {
                var D = v.parentNode;
                if (!D) {
                    return false
                }
                var u = D[s],
                    w = 1;
                if (r) {
                    var C = v.nodeName;
                    do {
                        if (u.nodeName != C) {
                            continue
                        }
                        this[c][this.getUID(u)] = w++
                    } while ((u = u[p]))
                } else {
                    do {
                        if (u.nodeType != 1) {
                            continue
                        }
                        this[c][this.getUID(u)] = w++
                    } while ((u = u[p]))
                }
            }
            t = t || "n";
            var y = this.cacheNTH[t] || this.parseNTHArgument(t);
            if (!y) {
                return false
            }
            var B = y.a,
                A = y.b,
                z = this[c][x];
            if (B == 0) {
                return A == z
            }
            if (B > 0) {
                if (z < A) {
                    return false
                }
            } else {
                if (A < z) {
                    return false
                }
            }
            return ((z - A) % B) == 0
        }
    };
    n.pushArray = function(s, c, u, r, p, t) {
        if (this.matchSelector(s, c, u, r, p, t)) {
            this.found.push(s)
        }
    };
    n.pushUID = function(t, c, v, s, p, u) {
        var r = this.getUID(t);
        if (!this.uniques[r] && this.matchSelector(t, c, v, s, p, u)) {
            this.uniques[r] = true;
            this.found.push(t)
        }
    };
    n.matchNode = function(p, r) {
        if (this.isHTMLDocument && this.nativeMatchesSelector) {
            try {
                return this.nativeMatchesSelector.call(p, r.replace(/\[([^=]+)=\s*([^'"\]]+?)\s*\]/g, '[$1="$2"]'))
            } catch (x) {}
        }
        var w = this.Slick.parse(r);
        if (!w) {
            return true
        }
        var u = w.expressions,
            v = 0,
            t, z;
        for (t = 0;
            (z = u[t]); t++) {
            if (z.length == 1) {
                var s = z[0];
                if (this.matchSelector(p, (this.isXMLDocument) ? s.tag : s.tag.toUpperCase(), s.id, s.classes, s.attributes, s.pseudos)) {
                    return true
                }
                v++
            }
        }
        if (v == w.length) {
            return false
        }
        var c = this.search(this.document, w),
            y;
        for (t = 0; y = c[t++];) {
            if (y === p) {
                return true
            }
        }
        return false
    };
    n.matchPseudo = function(t, c, s) {
        var p = "pseudo:" + c;
        if (this[p]) {
            return this[p](t, s)
        }
        var r = this.getAttribute(t, c);
        return (s) ? s == r : !!r
    };
    n.matchSelector = function(r, y, c, s, t, v) {
        if (y) {
            var w = (this.isXMLDocument) ? r.nodeName : r.nodeName.toUpperCase();
            if (y == "*") {
                if (w < "@") {
                    return false
                }
            } else {
                if (w != y) {
                    return false
                }
            }
        }
        if (c && r.getAttribute("id") != c) {
            return false
        }
        var u, p, x;
        if (s) {
            for (u = s.length; u--;) {
                x = this.getAttribute(r, "class");
                if (!(x && s[u].regexp.test(x))) {
                    return false
                }
            }
        }
        if (t) {
            for (u = t.length; u--;) {
                p = t[u];
                if (p.operator ? !p.test(this.getAttribute(r, p.key)) : !this.hasAttribute(r, p.key)) {
                    return false
                }
            }
        }
        if (v) {
            for (u = v.length; u--;) {
                p = v[u];
                if (!this.matchPseudo(r, p.key, p.value)) {
                    return false
                }
            }
        }
        return true
    };
    var m = {
        " ": function(t, z, p, u, v, x, s) {
            var w, y, r;
            if (this.isHTMLDocument) {
                getById: if (p) {
                    y = this.document.getElementById(p);
                    if ((!y && t.all) || (this.idGetsName && y && y.getAttributeNode("id").nodeValue != p)) {
                        r = t.all[p];
                        if (!r) {
                            return
                        }
                        if (!r[0]) {
                            r = [r]
                        }
                        for (w = 0; y = r[w++];) {
                            var c = y.getAttributeNode("id");
                            if (c && c.nodeValue == p) {
                                this.push(y, z, null, u, v, x);
                                break
                            }
                        }
                        return
                    }
                    if (!y) {
                        if (this.contains(this.root, t)) {
                            return
                        } else {
                            break getById
                        }
                    } else {
                        if (this.document !== t && !this.contains(t, y)) {
                            return
                        }
                    }
                    this.push(y, z, null, u, v, x);
                    return
                }getByClass: if (u && t.getElementsByClassName && !this.brokenGEBCN) {
                    r = t.getElementsByClassName(s.join(" "));
                    if (!(r && r.length)) {
                        break getByClass
                    }
                    for (w = 0; y = r[w++];) {
                        this.push(y, z, p, null, v, x)
                    }
                    return
                }
            }
            getByTag: {
                r = t.getElementsByTagName(z);
                if (!(r && r.length)) {
                    break getByTag
                }
                if (!this.brokenStarGEBTN) {
                    z = null
                }
                for (w = 0; y = r[w++];) {
                    this.push(y, z, p, u, v, x)
                }
            }
        },
        ">": function(s, c, u, r, p, t) {
            if ((s = s.firstChild)) {
                do {
                    if (s.nodeType == 1) {
                        this.push(s, c, u, r, p, t)
                    }
                } while ((s = s.nextSibling))
            }
        },
        "+": function(s, c, u, r, p, t) {
            while ((s = s.nextSibling)) {
                if (s.nodeType == 1) {
                    this.push(s, c, u, r, p, t);
                    break
                }
            }
        },
        "^": function(s, c, u, r, p, t) {
            s = s.firstChild;
            if (s) {
                if (s.nodeType == 1) {
                    this.push(s, c, u, r, p, t)
                } else {
                    this["combinator:+"](s, c, u, r, p, t)
                }
            }
        },
        "~": function(t, c, v, s, p, u) {
            while ((t = t.nextSibling)) {
                if (t.nodeType != 1) {
                    continue
                }
                var r = this.getUID(t);
                if (this.bitUniques[r]) {
                    break
                }
                this.bitUniques[r] = true;
                this.push(t, c, v, s, p, u)
            }
        },
        "++": function(s, c, u, r, p, t) {
            this["combinator:+"](s, c, u, r, p, t);
            this["combinator:!+"](s, c, u, r, p, t)
        },
        "~~": function(s, c, u, r, p, t) {
            this["combinator:~"](s, c, u, r, p, t);
            this["combinator:!~"](s, c, u, r, p, t)
        },
        "!": function(s, c, u, r, p, t) {
            while ((s = s.parentNode)) {
                if (s !== this.document) {
                    this.push(s, c, u, r, p, t)
                }
            }
        },
        "!>": function(s, c, u, r, p, t) {
            s = s.parentNode;
            if (s !== this.document) {
                this.push(s, c, u, r, p, t)
            }
        },
        "!+": function(s, c, u, r, p, t) {
            while ((s = s.previousSibling)) {
                if (s.nodeType == 1) {
                    this.push(s, c, u, r, p, t);
                    break
                }
            }
        },
        "!^": function(s, c, u, r, p, t) {
            s = s.lastChild;
            if (s) {
                if (s.nodeType == 1) {
                    this.push(s, c, u, r, p, t)
                } else {
                    this["combinator:!+"](s, c, u, r, p, t)
                }
            }
        },
        "!~": function(t, c, v, s, p, u) {
            while ((t = t.previousSibling)) {
                if (t.nodeType != 1) {
                    continue
                }
                var r = this.getUID(t);
                if (this.bitUniques[r]) {
                    break
                }
                this.bitUniques[r] = true;
                this.push(t, c, v, s, p, u)
            }
        }
    };
    for (var k in m) {
        n["combinator:" + k] = m[k]
    }
    var o = {
        empty: function(c) {
            var p = c.firstChild;
            return !(p && p.nodeType == 1) && !(c.innerText || c.textContent || "").length
        },
        not: function(c, p) {
            return !this.matchNode(c, p)
        },
        contains: function(c, p) {
            return (c.innerText || c.textContent || "").indexOf(p) > -1
        },
        "first-child": function(c) {
            while ((c = c.previousSibling)) {
                if (c.nodeType == 1) {
                    return false
                }
            }
            return true
        },
        "last-child": function(c) {
            while ((c = c.nextSibling)) {
                if (c.nodeType == 1) {
                    return false
                }
            }
            return true
        },
        "only-child": function(r) {
            var p = r;
            while ((p = p.previousSibling)) {
                if (p.nodeType == 1) {
                    return false
                }
            }
            var c = r;
            while ((c = c.nextSibling)) {
                if (c.nodeType == 1) {
                    return false
                }
            }
            return true
        },
        "nth-child": n.createNTHPseudo("firstChild", "nextSibling", "posNTH"),
        "nth-last-child": n.createNTHPseudo("lastChild", "previousSibling", "posNTHLast"),
        "nth-of-type": n.createNTHPseudo("firstChild", "nextSibling", "posNTHType", true),
        "nth-last-of-type": n.createNTHPseudo("lastChild", "previousSibling", "posNTHTypeLast", true),
        index: function(p, c) {
            return this["pseudo:nth-child"](p, "" + (c + 1))
        },
        even: function(c) {
            return this["pseudo:nth-child"](c, "2n")
        },
        odd: function(c) {
            return this["pseudo:nth-child"](c, "2n+1")
        },
        "first-of-type": function(c) {
            var p = c.nodeName;
            while ((c = c.previousSibling)) {
                if (c.nodeName == p) {
                    return false
                }
            }
            return true
        },
        "last-of-type": function(c) {
            var p = c.nodeName;
            while ((c = c.nextSibling)) {
                if (c.nodeName == p) {
                    return false
                }
            }
            return true
        },
        "only-of-type": function(r) {
            var p = r,
                s = r.nodeName;
            while ((p = p.previousSibling)) {
                if (p.nodeName == s) {
                    return false
                }
            }
            var c = r;
            while ((c = c.nextSibling)) {
                if (c.nodeName == s) {
                    return false
                }
            }
            return true
        },
        enabled: function(c) {
            return !c.disabled
        },
        disabled: function(c) {
            return c.disabled
        },
        checked: function(c) {
            return c.checked || c.selected
        },
        focus: function(c) {
            return this.isHTMLDocument && this.document.activeElement === c && (c.href || c.type || this.hasAttribute(c, "tabindex"))
        },
        root: function(c) {
            return (c === this.root)
        },
        selected: function(c) {
            return c.selected
        }
    };
    for (var b in o) {
        n["pseudo:" + b] = o[b]
    }
    var a = n.attributeGetters = {
        "for": function() {
            return ("htmlFor" in this) ? this.htmlFor : this.getAttribute("for")
        },
        href: function() {
            return ("href" in this) ? this.getAttribute("href", 2) : this.getAttribute("href")
        },
        style: function() {
            return (this.style) ? this.style.cssText : this.getAttribute("style")
        },
        tabindex: function() {
            var c = this.getAttributeNode("tabindex");
            return (c && c.specified) ? c.nodeValue : null
        },
        type: function() {
            return this.getAttribute("type")
        },
        maxlength: function() {
            var c = this.getAttributeNode("maxLength");
            return (c && c.specified) ? c.nodeValue : null
        }
    };
    a.MAXLENGTH = a.maxLength = a.maxlength;
    var e = n.Slick = (this.Slick || {});
    e.version = "1.1.7";
    e.search = function(p, r, c) {
        return n.search(p, r, c)
    };
    e.find = function(c, p) {
        return n.search(c, p, null, true)
    };
    e.contains = function(c, p) {
        n.setDocument(c);
        return n.contains(c, p)
    };
    e.getAttribute = function(p, c) {
        n.setDocument(p);
        return n.getAttribute(p, c)
    };
    e.hasAttribute = function(p, c) {
        n.setDocument(p);
        return n.hasAttribute(p, c)
    };
    e.match = function(p, c) {
        if (!(p && c)) {
            return false
        }
        if (!c || c === p) {
            return true
        }
        n.setDocument(p);
        return n.matchNode(p, c)
    };
    e.defineAttributeGetter = function(c, p) {
        n.attributeGetters[c] = p;
        return this
    };
    e.lookupAttributeGetter = function(c) {
        return n.attributeGetters[c]
    };
    e.definePseudo = function(c, p) {
        n["pseudo:" + c] = function(s, r) {
            return p.call(s, r)
        };
        return this
    };
    e.lookupPseudo = function(c) {
        var p = n["pseudo:" + c];
        if (p) {
            return function(r) {
                return p.call(this, r)
            }
        }
        return null
    };
    e.override = function(p, c) {
        n.override(p, c);
        return this
    };
    e.isXML = n.isXML;
    e.uidOf = function(c) {
        return n.getUIDHTML(c)
    };
    if (!this.Slick) {
        this.Slick = e
    }
}).apply((typeof exports != "undefined") ? exports : this);
var Element = this.Element = function(b, g) {
    var h = Element.Constructors[b];
    if (h) {
        return h(g)
    }
    if (typeof b != "string") {
        return document.id(b).set(g)
    }
    if (!g) {
        g = {}
    }
    if (!(/^[\w-]+$/).test(b)) {
        var e = Slick.parse(b).expressions[0][0];
        b = (e.tag == "*") ? "div" : e.tag;
        if (e.id && g.id == null) {
            g.id = e.id
        }
        var d = e.attributes;
        if (d) {
            for (var a, f = 0, c = d.length; f < c; f++) {
                a = d[f];
                if (g[a.key] != null) {
                    continue
                }
                if (a.value != null && a.operator == "=") {
                    g[a.key] = a.value
                } else {
                    if (!a.value && !a.operator) {
                        g[a.key] = true
                    }
                }
            }
        }
        if (e.classList && g["class"] == null) {
            g["class"] = e.classList.join(" ")
        }
    }
    return document.newElement(b, g)
};
if (Browser.Element) {
    Element.prototype = Browser.Element.prototype;
    Element.prototype._fireEvent = (function(a) {
        return function(b, c) {
            return a.call(this, b, c)
        }
    })(Element.prototype.fireEvent)
}
new Type("Element", Element).mirror(function(a) {
    if (Array.prototype[a]) {
        return
    }
    var b = {};
    b[a] = function() {
        var h = [],
            e = arguments,
            k = true;
        for (var g = 0, d = this.length; g < d; g++) {
            var f = this[g],
                c = h[g] = f[a].apply(f, e);
            k = (k && typeOf(c) == "element")
        }
        return (k) ? new Elements(h) : h
    };
    Elements.implement(b)
});
if (!Browser.Element) {
    Element.parent = Object;
    Element.Prototype = {
        "$constructor": Element,
        "$family": Function.convert("element").hide()
    };
    Element.mirror(function(a, b) {
        Element.Prototype[a] = b
    })
}
Element.Constructors = {};
var IFrame = new Type("IFrame", function() {
    var e = Array.link(arguments, {
        properties: Type.isObject,
        iframe: function(f) {
            return (f != null)
        }
    });
    var c = e.properties || {},
        b;
    if (e.iframe) {
        b = document.id(e.iframe)
    }
    var d = c.onload || function() {};
    delete c.onload;
    c.id = c.name = [c.id, c.name, b ? (b.id || b.name) : "IFrame_" + String.uniqueID()].pick();
    b = new Element(b || "iframe", c);
    var a = function() {
        d.call(b.contentWindow)
    };
    if (window.frames[c.id]) {
        a()
    } else {
        b.addListener("load", a)
    }
    return b
});
var Elements = this.Elements = function(a) {
    if (a && a.length) {
        var e = {},
            d;
        for (var c = 0; d = a[c++];) {
            var b = Slick.uidOf(d);
            if (!e[b]) {
                e[b] = true;
                this.push(d)
            }
        }
    }
};
Elements.prototype = {
    length: 0
};
Elements.parent = Array;
new Type("Elements", Elements).implement({
    filter: function(a, b) {
        if (!a) {
            return this
        }
        return new Elements(Array.filter(this, (typeOf(a) == "string") ? function(c) {
            return c.match(a)
        } : a, b))
    }.protect(),
    push: function() {
        var d = this.length;
        for (var b = 0, a = arguments.length; b < a; b++) {
            var c = document.id(arguments[b]);
            if (c) {
                this[d++] = c
            }
        }
        return (this.length = d)
    }.protect(),
    unshift: function() {
        var b = [];
        for (var c = 0, a = arguments.length; c < a; c++) {
            var d = document.id(arguments[c]);
            if (d) {
                b.push(d)
            }
        }
        return Array.prototype.unshift.apply(this, b)
    }.protect(),
    concat: function() {
        var b = new Elements(this);
        for (var c = 0, a = arguments.length; c < a; c++) {
            var d = arguments[c];
            if (Type.isEnumerable(d)) {
                b.append(d)
            } else {
                b.push(d)
            }
        }
        return b
    }.protect(),
    append: function(c) {
        for (var b = 0, a = c.length; b < a; b++) {
            this.push(c[b])
        }
        return this
    }.protect(),
    empty: function() {
        while (this.length) {
            delete this[--this.length]
        }
        return this
    }.protect()
});
(function() {
    var g = Array.prototype.splice,
        a = {
            "0": 0,
            "1": 1,
            length: 2
        };
    g.call(a, 1, 1);
    if (a[1] == 1) {
        Elements.implement("splice", function() {
            var h = this.length;
            var e = g.apply(this, arguments);
            while (h >= this.length) {
                delete this[h--]
            }
            return e
        }.protect())
    }
    Array.forEachMethod(function(h, e) {
        Elements.implement(e, h)
    });
    Array.mirror(Elements);
    var f;
    try {
        f = (document.createElement("<input name=x>").name == "x")
    } catch (c) {}
    var d = function(e) {
        return ("" + e).replace(/&/g, "&amp;").replace(/"/g, "&quot;")
    };
    var b = (function() {
        var m = document.createElement("style"),
            h = false;
        try {
            m.innerHTML = "#justTesing{margin: 0px;}";
            h = !!m.innerHTML
        } catch (k) {}
        return h
    })();
    Document.implement({
        newElement: function(h, k) {
            if (k) {
                if (k.checked != null) {
                    k.defaultChecked = k.checked
                }
                if ((k.type == "checkbox" || k.type == "radio") && k.value == null) {
                    k.value = "on"
                }
                if (!b && h == "style") {
                    var e = document.createElement("style");
                    e.setAttribute("type", "text/css");
                    if (k.type) {
                        delete k.type
                    }
                    return this.id(e).set(k)
                }
                if (f) {
                    h = "<" + h;
                    if (k.name) {
                        h += ' name="' + d(k.name) + '"'
                    }
                    if (k.type) {
                        h += ' type="' + d(k.type) + '"'
                    }
                    h += ">";
                    delete k.name;
                    delete k.type
                }
            }
            return this.id(this.createElement(h)).set(k)
        }
    })
})();
(function() {
    Slick.uidOf(window);
    Slick.uidOf(document);
    Document.implement({
        newTextNode: function(e) {
            return this.createTextNode(e)
        },
        getDocument: function() {
            return this
        },
        getWindow: function() {
            return this.window
        },
        id: (function() {
            var e = {
                string: function(Q, P, O) {
                    Q = Slick.find(O, "#" + Q.replace(/(\W)/g, "\\$1"));
                    return (Q) ? e.element(Q, P) : null
                },
                element: function(P, Q) {
                    Slick.uidOf(P);
                    if (!Q && !P.$family && !(/^(?:object|embed)$/i).test(P.tagName)) {
                        var O = P.fireEvent;
                        P._fireEvent = function(R, S) {
                            return O(R, S)
                        };
                        Object.append(P, Element.Prototype)
                    }
                    return P
                },
                object: function(P, Q, O) {
                    if (P.toElement) {
                        return e.element(P.toElement(O), Q)
                    }
                    return null
                }
            };
            e.textnode = e.whitespace = e.window = e.document = function(O) {
                return O
            };
            return function(P, R, Q) {
                if (P && P.$family && P.uniqueNumber) {
                    return P
                }
                var O = typeOf(P);
                return (e[O]) ? e[O](P, R, Q || document) : null
            }
        })()
    });
    if (window.$ == null) {
        Window.implement("$", function(e, O) {
            return document.id(e, O, this.document)
        })
    }
    Window.implement({
        getDocument: function() {
            return this.document
        },
        getWindow: function() {
            return this
        }
    });
    [Document, Element].invoke("implement", {
        getElements: function(e) {
            return Slick.search(this, e, new Elements)
        },
        getElement: function(e) {
            return document.id(Slick.find(this, e))
        }
    });
    var B = {
        contains: function(e) {
            return Slick.contains(this, e)
        }
    };
    if (!document.contains) {
        Document.implement(B)
    }
    if (!document.createElement("div").contains) {
        Element.implement(B)
    }
    var p = function(Q, P) {
        if (!Q) {
            return P
        }
        Q = Object.clone(Slick.parse(Q));
        var O = Q.expressions;
        for (var e = O.length; e--;) {
            O[e][0].combinator = P
        }
        return Q
    };
    Object.forEach({
        getNext: "~",
        getPrevious: "!~",
        getParent: "!"
    }, function(e, O) {
        Element.implement(O, function(P) {
            return this.getElement(p(P, e))
        })
    });
    Object.forEach({
        getAllNext: "~",
        getAllPrevious: "!~",
        getSiblings: "~~",
        getChildren: ">",
        getParents: "!"
    }, function(e, O) {
        Element.implement(O, function(P) {
            return this.getElements(p(P, e))
        })
    });
    Element.implement({
        getFirst: function(e) {
            return document.id(Slick.search(this, p(e, ">"))[0])
        },
        getLast: function(e) {
            return document.id(Slick.search(this, p(e, ">")).getLast())
        },
        getWindow: function() {
            return this.ownerDocument.window
        },
        getDocument: function() {
            return this.ownerDocument
        },
        getElementById: function(e) {
            return document.id(Slick.find(this, "#" + ("" + e).replace(/(\W)/g, "\\$1")))
        },
        match: function(e) {
            return !e || Slick.match(this, e)
        }
    });
    if (window.$$ == null) {
        Window.implement("$$", function(e) {
            if (arguments.length == 1) {
                if (typeof e == "string") {
                    return Slick.search(this.document, e, new Elements)
                } else {
                    if (Type.isEnumerable(e)) {
                        return new Elements(e)
                    }
                }
            }
            return new Elements(arguments)
        })
    }
    var c = {
        before: function(O, e) {
            var P = e.parentNode;
            if (P) {
                P.insertBefore(O, e)
            }
        },
        after: function(O, e) {
            var P = e.parentNode;
            if (P) {
                P.insertBefore(O, e.nextSibling)
            }
        },
        bottom: function(O, e) {
            e.appendChild(O)
        },
        top: function(O, e) {
            e.insertBefore(O, e.firstChild)
        }
    };
    c.inside = c.bottom;
    var x = {},
        A = {};
    var a = {};
    Array.forEach(["type", "value", "defaultValue", "accessKey", "cellPadding", "cellSpacing", "colSpan", "frameBorder", "rowSpan", "tabIndex", "useMap"], function(e) {
        a[e.toLowerCase()] = e
    });
    a.html = "innerHTML";
    a.text = (document.createElement("div").textContent == null) ? "innerText" : "textContent";
    Object.forEach(a, function(O, e) {
        A[e] = function(P, Q) {
            P[O] = Q
        };
        x[e] = function(P) {
            return P[O]
        }
    });
    A.text = (function() {
        return function(e, O) {
            if (e.get("tag") == "style") {
                e.set("html", O)
            } else {
                e[a.text] = O
            }
        }
    })(A.text);
    x.text = (function(e) {
        return function(O) {
            return (O.get("tag") == "style") ? O.innerHTML : e(O)
        }
    })(x.text);
    var u = ["compact", "nowrap", "ismap", "declare", "noshade", "checked", "disabled", "readOnly", "multiple", "selected", "noresize", "defer", "defaultChecked", "autofocus", "controls", "autoplay", "loop"];
    var F = {};
    Array.forEach(u, function(e) {
        var O = e.toLowerCase();
        F[O] = e;
        A[O] = function(P, Q) {
            P[e] = !!Q
        };
        x[O] = function(P) {
            return !!P[e]
        }
    });
    Object.append(A, {
        "class": function(e, O) {
            ("className" in e) ? e.className = (O || ""): e.setAttribute("class", O)
        },
        "for": function(e, O) {
            ("htmlFor" in e) ? e.htmlFor = O: e.setAttribute("for", O)
        },
        style: function(e, O) {
            (e.style) ? e.style.cssText = O: e.setAttribute("style", O)
        },
        value: function(e, O) {
            e.value = (O != null) ? O : ""
        }
    });
    x["class"] = function(e) {
        return ("className" in e) ? e.className || null : e.getAttribute("class")
    };
    var J = document.createElement("button");
    try {
        J.type = "button"
    } catch (L) {}
    if (J.type != "button") {
        A.type = function(e, O) {
            e.setAttribute("type", O)
        }
    }
    J = null;
    var o = (function() {
        var Q = document.createElement("style"),
            O = false;
        try {
            Q.innerHTML = "#justTesing{margin: 0px;}";
            O = !!Q.innerHTML
        } catch (P) {}
        return O
    })();
    var b = document.createElement("input"),
        n, m;
    b.value = "t";
    b.type = "submit";
    n = b.value != "t";
    try {
        b.value = "";
        b.type = "email";
        m = b.type == "email"
    } catch (L) {}
    b = null;
    if (n || !m) {
        A.type = function(P, O) {
            try {
                var Q = P.value;
                P.type = O;
                P.value = Q
            } catch (R) {}
        }
    }
    var d = (function(e) {
        e.random = "attribute";
        return (e.getAttribute("random") == "attribute")
    })(document.createElement("div"));
    var G = (function(e) {
        e.innerHTML = '<object><param name="should_fix" value="the unknown" /></object>';
        return e.cloneNode(true).firstChild.childNodes.length != 1
    })(document.createElement("div"));
    var D = !!document.createElement("div").classList;
    var g = function(e) {
        var O = (e || "").clean().split(" "),
            P = {};
        return O.filter(function(Q) {
            if (Q !== "" && !P[Q]) {
                return P[Q] = Q
            }
        })
    };
    var H = function(e) {
        this.classList.add(e)
    };
    var v = function(e) {
        this.classList.remove(e)
    };
    Element.implement({
        setProperty: function(O, P) {
            var Q = A[O.toLowerCase()];
            if (Q) {
                Q(this, P)
            } else {
                var e;
                if (d) {
                    e = this.retrieve("$attributeWhiteList", {})
                }
                if (P == null) {
                    this.removeAttribute(O);
                    if (d) {
                        delete e[O]
                    }
                } else {
                    this.setAttribute(O, "" + P);
                    if (d) {
                        e[O] = true
                    }
                }
            }
            return this
        },
        setProperties: function(e) {
            for (var O in e) {
                this.setProperty(O, e[O])
            }
            return this
        },
        getProperty: function(R) {
            var P = x[R.toLowerCase()];
            if (P) {
                return P(this)
            }
            if (d) {
                var O = this.getAttributeNode(R),
                    Q = this.retrieve("$attributeWhiteList", {});
                if (!O) {
                    return null
                }
                if (O.expando && !Q[R]) {
                    var S = this.outerHTML;
                    if (S.substr(0, S.search(/\/?['"]?>(?![^<]*<['"])/)).indexOf(R) < 0) {
                        return null
                    }
                    Q[R] = true
                }
            }
            var e = Slick.getAttribute(this, R);
            return (!e && !Slick.hasAttribute(this, R)) ? null : e
        },
        getProperties: function() {
            var e = Array.convert(arguments);
            return e.map(this.getProperty, this).associate(e)
        },
        removeProperty: function(e) {
            return this.setProperty(e, null)
        },
        removeProperties: function() {
            Array.each(arguments, this.removeProperty, this);
            return this
        },
        set: function(P, O) {
            var e = Element.Properties[P];
            (e && e.set) ? e.set.call(this, O): this.setProperty(P, O)
        }.overloadSetter(),
        get: function(O) {
            var e = Element.Properties[O];
            return (e && e.get) ? e.get.apply(this) : this.getProperty(O)
        }.overloadGetter(),
        erase: function(O) {
            var e = Element.Properties[O];
            (e && e.erase) ? e.erase.apply(this): this.removeProperty(O);
            return this
        },
        hasClass: D ? function(e) {
            return this.classList.contains(e)
        } : function(e) {
            return g(this.className).contains(e)
        },
        addClass: D ? function(e) {
            g(e).forEach(H, this);
            return this
        } : function(e) {
            this.className = g(e + " " + this.className).join(" ");
            return this
        },
        removeClass: D ? function(e) {
            g(e).forEach(v, this);
            return this
        } : function(e) {
            var O = g(this.className);
            g(e).forEach(O.erase, O);
            this.className = O.join(" ");
            return this
        },
        toggleClass: function(e, O) {
            if (O == null) {
                O = !this.hasClass(e)
            }
            return (O) ? this.addClass(e) : this.removeClass(e)
        },
        adopt: function() {
            var Q = this,
                e, S = Array.flatten(arguments),
                R = S.length;
            if (R > 1) {
                Q = e = document.createDocumentFragment()
            }
            for (var P = 0; P < R; P++) {
                var O = document.id(S[P], true);
                if (O) {
                    Q.appendChild(O)
                }
            }
            if (e) {
                this.appendChild(e)
            }
            return this
        },
        appendText: function(O, e) {
            return this.grab(this.getDocument().newTextNode(O), e)
        },
        grab: function(O, e) {
            c[e || "bottom"](document.id(O, true), this);
            return this
        },
        inject: function(O, e) {
            c[e || "bottom"](this, document.id(O, true));
            return this
        },
        replaces: function(e) {
            e = document.id(e, true);
            e.parentNode.replaceChild(this, e);
            return this
        },
        wraps: function(O, e) {
            O = document.id(O, true);
            return this.replaces(O).grab(O, e)
        },
        getSelected: function() {
            this.selectedIndex;
            return new Elements(Array.convert(this.options).filter(function(e) {
                return e.selected
            }))
        },
        toQueryString: function() {
            var e = [];
            this.getElements("input, select, textarea").each(function(P) {
                var O = P.type;
                if (!P.name || P.disabled || O == "submit" || O == "reset" || O == "file" || O == "image") {
                    return
                }
                var Q = (P.get("tag") == "select") ? P.getSelected().map(function(R) {
                    return document.id(R).get("value")
                }) : ((O == "radio" || O == "checkbox") && !P.checked) ? null : P.get("value");
                Array.convert(Q).each(function(R) {
                    if (typeof R != "undefined") {
                        e.push(encodeURIComponent(P.name) + "=" + encodeURIComponent(R))
                    }
                })
            });
            return e.join("&")
        }
    });
    var k = {
        before: "beforeBegin",
        after: "afterEnd",
        bottom: "beforeEnd",
        top: "afterBegin",
        inside: "beforeEnd"
    };
    Element.implement("appendHTML", ("insertAdjacentHTML" in document.createElement("div")) ? function(O, e) {
        this.insertAdjacentHTML(k[e || "bottom"], O);
        return this
    } : function(T, Q) {
        var O = new Element("div", {
                html: T
            }),
            S = O.childNodes,
            P = O.firstChild;
        if (!P) {
            return this
        }
        if (S.length > 1) {
            P = document.createDocumentFragment();
            for (var R = 0, e = S.length; R < e; R++) {
                P.appendChild(S[R])
            }
        }
        c[Q || "bottom"](P, this);
        return this
    });
    var t = {},
        C = {};
    var I = function(e) {
        return (C[e] || (C[e] = {}))
    };
    var E = function(O) {
        var e = O.uniqueNumber;
        if (O.removeEvents) {
            O.removeEvents()
        }
        if (O.clearAttributes) {
            O.clearAttributes()
        }
        if (e != null) {
            delete t[e];
            delete C[e]
        }
        return O
    };
    var N = {
        input: "checked",
        option: "selected",
        textarea: "value"
    };
    Element.implement({
        destroy: function() {
            var e = E(this).getElementsByTagName("*");
            Array.each(e, E);
            Element.dispose(this);
            return null
        },
        empty: function() {
            Array.convert(this.childNodes).each(Element.dispose);
            return this
        },
        dispose: function() {
            return (this.parentNode) ? this.parentNode.removeChild(this) : this
        },
        clone: function(S, Q) {
            S = S !== false;
            var X = this.cloneNode(S),
                P = [X],
                R = [this],
                V;
            if (S) {
                P.append(Array.convert(X.getElementsByTagName("*")));
                R.append(Array.convert(this.getElementsByTagName("*")))
            }
            for (V = P.length; V--;) {
                var T = P[V],
                    W = R[V];
                if (!Q) {
                    T.removeAttribute("id")
                }
                if (T.clearAttributes) {
                    T.clearAttributes();
                    T.mergeAttributes(W);
                    T.removeAttribute("uniqueNumber");
                    if (T.options) {
                        var aa = T.options,
                            e = W.options;
                        for (var U = aa.length; U--;) {
                            aa[U].selected = e[U].selected
                        }
                    }
                }
                var O = N[W.tagName.toLowerCase()];
                if (O && W[O]) {
                    T[O] = W[O]
                }
            }
            if (G) {
                var Y = X.getElementsByTagName("object"),
                    Z = this.getElementsByTagName("object");
                for (V = Y.length; V--;) {
                    Y[V].outerHTML = Z[V].outerHTML
                }
            }
            return document.id(X)
        }
    });
    [Element, Window, Document].invoke("implement", {
        addListener: function(O, e) {
            if (window.attachEvent && !window.addEventListener) {
                t[Slick.uidOf(this)] = this
            }
            if (this.addEventListener) {
                this.addEventListener(O, e, !!arguments[2])
            } else {
                this.attachEvent("on" + O, e)
            }
            return this
        },
        removeListener: function(O, e) {
            if (this.removeEventListener) {
                this.removeEventListener(O, e, !!arguments[2])
            } else {
                this.detachEvent("on" + O, e)
            }
            return this
        },
        retrieve: function(O, e) {
            var Q = I(Slick.uidOf(this)),
                P = Q[O];
            if (e != null && P == null) {
                P = Q[O] = e
            }
            return P != null ? P : null
        },
        store: function(O, e) {
            var P = I(Slick.uidOf(this));
            P[O] = e;
            return this
        },
        eliminate: function(e) {
            var O = I(Slick.uidOf(this));
            delete O[e];
            return this
        }
    });
    if (window.attachEvent && !window.addEventListener) {
        var r = function() {
            Object.each(t, E);
            if (window.CollectGarbage) {
                CollectGarbage()
            }
            window.removeListener("unload", r)
        };
        window.addListener("unload", r)
    }
    Element.Properties = {};
    Element.Properties.style = {
        set: function(e) {
            this.style.cssText = e
        },
        get: function() {
            return this.style.cssText
        },
        erase: function() {
            this.style.cssText = ""
        }
    };
    Element.Properties.tag = {
        get: function() {
            return this.tagName.toLowerCase()
        }
    };
    Element.Properties.html = {
        set: function(e) {
            if (e == null) {
                e = ""
            } else {
                if (typeOf(e) == "array") {
                    e = e.join("")
                }
            }
            if (this.styleSheet && !o) {
                this.styleSheet.cssText = e
            } else {
                this.innerHTML = e
            }
        },
        erase: function() {
            this.set("html", "")
        }
    };
    var h = true,
        q = true,
        s = true;
    var K = document.createElement("div");
    var f;
    K.innerHTML = "<nav></nav>";
    h = (K.childNodes.length == 1);
    if (!h) {
        var z = "abbr article aside audio canvas datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video".split(" ");
        f = document.createDocumentFragment(), l = z.length;
        while (l--) {
            f.createElement(z[l])
        }
    }
    K = null;
    q = Function.attempt(function() {
        var e = document.createElement("table");
        e.innerHTML = "<tr><td></td></tr>";
        return true
    });
    var M = document.createElement("tr"),
        y = "<td></td>";
    M.innerHTML = y;
    s = (M.innerHTML == y);
    M = null;
    if (!q || !s || !h) {
        Element.Properties.html.set = (function(O) {
            var e = {
                table: [1, "<table>", "</table>"],
                select: [1, "<select>", "</select>"],
                tbody: [2, "<table><tbody>", "</tbody></table>"],
                tr: [3, "<table><tbody><tr>", "</tr></tbody></table>"]
            };
            e.thead = e.tfoot = e.tbody;
            return function(P) {
                if (this.styleSheet) {
                    return O.call(this, P)
                }
                var Q = e[this.get("tag")];
                if (!Q && !h) {
                    Q = [0, "", ""]
                }
                if (!Q) {
                    return O.call(this, P)
                }
                var T = Q[0],
                    S = document.createElement("div"),
                    R = S;
                if (!h) {
                    f.appendChild(S)
                }
                S.innerHTML = [Q[1], P, Q[2]].flatten().join("");
                while (T--) {
                    R = R.firstChild
                }
                this.empty().adopt(R.childNodes);
                if (!h) {
                    f.removeChild(S)
                }
                S = null
            }
        })(Element.Properties.html.set)
    }
    var w = document.createElement("form");
    w.innerHTML = "<select><option>s</option></select>";
    if (w.firstChild.value != "s") {
        Element.Properties.value = {
            set: function(S) {
                var O = this.get("tag");
                if (O != "select") {
                    return this.setProperty("value", S)
                }
                var P = this.getElements("option");
                S = String(S);
                for (var Q = 0; Q < P.length; Q++) {
                    var R = P[Q],
                        e = R.getAttributeNode("value"),
                        T = (e && e.specified) ? R.value : R.get("text");
                    if (T === S) {
                        return R.selected = true
                    }
                }
            },
            get: function() {
                var P = this,
                    O = P.get("tag");
                if (O != "select" && O != "option") {
                    return this.getProperty("value")
                }
                if (O == "select" && !(P = P.getSelected()[0])) {
                    return ""
                }
                var e = P.getAttributeNode("value");
                return (e && e.specified) ? P.value : P.get("text")
            }
        }
    }
    w = null;
    if (document.createElement("div").getAttributeNode("id")) {
        Element.Properties.id = {
            set: function(e) {
                this.id = this.getAttributeNode("id").value = e
            },
            get: function() {
                return this.id || null
            },
            erase: function() {
                this.id = this.getAttributeNode("id").value = ""
            }
        }
    }
})();
(function() {
    var c = {};
    var b = function(e) {
        var f;
        if (e.wheelDelta) {
            f = e.wheelDelta % 120 == 0 ? e.wheelDelta / 120 : e.wheelDelta / 12
        } else {
            var d = e.deltaY || e.detail || 0;
            f = -(d % 3 == 0 ? d / 3 : d * 10)
        }
        return f
    };
    var a = this.DOMEvent = new Type("DOMEvent", function(d, k) {
        if (!k) {
            k = window
        }
        d = d || k.event;
        if (d.$extended) {
            return d
        }
        this.event = d;
        this.$extended = true;
        this.shift = d.shiftKey;
        this.control = d.ctrlKey;
        this.alt = d.altKey;
        this.meta = d.metaKey;
        var n = this.type = d.type;
        var m = d.target || d.srcElement;
        while (m && m.nodeType == 3) {
            m = m.parentNode
        }
        this.target = document.id(m);
        if (n.indexOf("key") == 0) {
            var f = this.code = (d.which || d.keyCode);
            if (!this.shift || n != "keypress") {
                this.key = c[f]
            }
            if (n == "keydown" || n == "keyup") {
                if (f > 111 && f < 124) {
                    this.key = "f" + (f - 111)
                } else {
                    if (f > 95 && f < 106) {
                        this.key = f - 96
                    }
                }
            }
            if (this.key == null) {
                this.key = String.fromCharCode(f).toLowerCase()
            }
        } else {
            if (n == "click" || n == "dblclick" || n == "contextmenu" || n == "wheel" || n == "DOMMouseScroll" || n.indexOf("mouse") == 0) {
                var o = k.document;
                o = (!o.compatMode || o.compatMode == "CSS1Compat") ? o.html : o.body;
                this.page = {
                    x: (d.pageX != null) ? d.pageX : d.clientX + o.scrollLeft,
                    y: (d.pageY != null) ? d.pageY : d.clientY + o.scrollTop
                };
                this.client = {
                    x: (d.pageX != null) ? d.pageX - k.pageXOffset : d.clientX,
                    y: (d.pageY != null) ? d.pageY - k.pageYOffset : d.clientY
                };
                if (n == "DOMMouseScroll" || n == "wheel" || n == "mousewheel") {
                    this.wheel = b(d)
                }
                this.rightClick = (d.which == 3 || d.button == 2);
                if (n == "mouseover" || n == "mouseout" || n == "mouseenter" || n == "mouseleave") {
                    var e = n == "mouseover" || n == "mouseenter";
                    var p = d.relatedTarget || d[(e ? "from" : "to") + "Element"];
                    while (p && p.nodeType == 3) {
                        p = p.parentNode
                    }
                    this.relatedTarget = document.id(p)
                }
            } else {
                if (n.indexOf("touch") == 0 || n.indexOf("gesture") == 0) {
                    this.rotation = d.rotation;
                    this.scale = d.scale;
                    this.targetTouches = d.targetTouches;
                    this.changedTouches = d.changedTouches;
                    var h = this.touches = d.touches;
                    if (h && h[0]) {
                        var g = h[0];
                        this.page = {
                            x: g.pageX,
                            y: g.pageY
                        };
                        this.client = {
                            x: g.clientX,
                            y: g.clientY
                        }
                    }
                }
            }
        }
        if (!this.client) {
            this.client = {}
        }
        if (!this.page) {
            this.page = {}
        }
    });
    a.implement({
        stop: function() {
            return this.preventDefault().stopPropagation()
        },
        stopPropagation: function() {
            if (this.event.stopPropagation) {
                this.event.stopPropagation()
            } else {
                this.event.cancelBubble = true
            }
            return this
        },
        preventDefault: function() {
            if (this.event.preventDefault) {
                this.event.preventDefault()
            } else {
                this.event.returnValue = false
            }
            return this
        }
    });
    a.defineKey = function(e, d) {
        c[e] = d;
        return this
    };
    a.defineKeys = a.defineKey.overloadSetter(true);
    a.defineKeys({
        "38": "up",
        "40": "down",
        "37": "left",
        "39": "right",
        "27": "esc",
        "32": "space",
        "8": "backspace",
        "9": "tab",
        "46": "delete",
        "13": "enter"
    })
})();
(function() {
    Element.Properties.events = {
        set: function(b) {
            this.addEvents(b)
        }
    };
    [Element, Window, Document].invoke("implement", {
        addEvent: function(f, h) {
            var k = this.retrieve("events", {});
            if (!k[f]) {
                k[f] = {
                    keys: [],
                    values: []
                }
            }
            if (k[f].keys.contains(h)) {
                return this
            }
            k[f].keys.push(h);
            var g = f,
                b = Element.Events[f],
                d = h,
                m = this;
            if (b) {
                if (b.onAdd) {
                    b.onAdd.call(this, h, f)
                }
                if (b.condition) {
                    d = function(n) {
                        if (b.condition.call(this, n, f)) {
                            return h.call(this, n)
                        }
                        return true
                    }
                }
                if (b.base) {
                    g = Function.convert(b.base).call(this, f)
                }
            }
            var e = function() {
                return h.call(m)
            };
            var c = Element.NativeEvents[g];
            if (c) {
                if (c == 2) {
                    e = function(n) {
                        n = new DOMEvent(n, m.getWindow());
                        if (d.call(m, n) === false) {
                            n.stop()
                        }
                    }
                }
                this.addListener(g, e, arguments[2])
            }
            k[f].values.push(e);
            return this
        },
        removeEvent: function(e, d) {
            var c = this.retrieve("events");
            if (!c || !c[e]) {
                return this
            }
            var h = c[e];
            var b = h.keys.indexOf(d);
            if (b == -1) {
                return this
            }
            var g = h.values[b];
            delete h.keys[b];
            delete h.values[b];
            var f = Element.Events[e];
            if (f) {
                if (f.onRemove) {
                    f.onRemove.call(this, d, e)
                }
                if (f.base) {
                    e = Function.convert(f.base).call(this, e)
                }
            }
            return (Element.NativeEvents[e]) ? this.removeListener(e, g, arguments[2]) : this
        },
        addEvents: function(b) {
            for (var c in b) {
                this.addEvent(c, b[c])
            }
            return this
        },
        removeEvents: function(b) {
            var d;
            if (typeOf(b) == "object") {
                for (d in b) {
                    this.removeEvent(d, b[d])
                }
                return this
            }
            var c = this.retrieve("events");
            if (!c) {
                return this
            }
            if (!b) {
                for (d in c) {
                    this.removeEvents(d)
                }
                this.eliminate("events")
            } else {
                if (c[b]) {
                    c[b].keys.each(function(e) {
                        this.removeEvent(b, e)
                    }, this);
                    delete c[b]
                }
            }
            return this
        },
        fireEvent: function(e, c, b) {
            var d = this.retrieve("events");
            if (!d || !d[e]) {
                return this
            }
            c = Array.convert(c);
            d[e].keys.each(function(f) {
                if (b) {
                    f.delay(b, this, c)
                } else {
                    f.apply(this, c)
                }
            }, this);
            return this
        },
        cloneEvents: function(e, d) {
            e = document.id(e);
            var c = e.retrieve("events");
            if (!c) {
                return this
            }
            if (!d) {
                for (var b in c) {
                    this.cloneEvents(e, b)
                }
            } else {
                if (c[d]) {
                    c[d].keys.each(function(f) {
                        this.addEvent(d, f)
                    }, this)
                }
            }
            return this
        }
    });
    Element.NativeEvents = {
        click: 2,
        dblclick: 2,
        mouseup: 2,
        mousedown: 2,
        contextmenu: 2,
        wheel: 2,
        mousewheel: 2,
        DOMMouseScroll: 2,
        mouseover: 2,
        mouseout: 2,
        mousemove: 2,
        selectstart: 2,
        selectend: 2,
        keydown: 2,
        keypress: 2,
        keyup: 2,
        orientationchange: 2,
        touchstart: 2,
        touchmove: 2,
        touchend: 2,
        touchcancel: 2,
        gesturestart: 2,
        gesturechange: 2,
        gestureend: 2,
        focus: 2,
        blur: 2,
        change: 2,
        reset: 2,
        select: 2,
        submit: 2,
        paste: 2,
        input: 2,
        load: 2,
        unload: 1,
        beforeunload: 2,
        resize: 1,
        move: 1,
        DOMContentLoaded: 1,
        readystatechange: 1,
        hashchange: 1,
        popstate: 2,
        pageshow: 2,
        pagehide: 2,
        error: 1,
        abort: 1,
        scroll: 1,
        message: 2
    };
    Element.Events = {
        mousewheel: {
            base: "onwheel" in document ? "wheel" : "onmousewheel" in document ? "mousewheel" : "DOMMouseScroll"
        }
    };
    var a = function(b) {
        var c = b.relatedTarget;
        if (c == null) {
            return true
        }
        if (!c) {
            return false
        }
        return (c != this && c.prefix != "xul" && typeOf(this) != "document" && !this.contains(c))
    };
    if ("onmouseenter" in document.documentElement) {
        Element.NativeEvents.mouseenter = Element.NativeEvents.mouseleave = 2;
        Element.MouseenterCheck = a
    } else {
        Element.Events.mouseenter = {
            base: "mouseover",
            condition: a
        };
        Element.Events.mouseleave = {
            base: "mouseout",
            condition: a
        }
    }
    if (!window.addEventListener) {
        Element.NativeEvents.propertychange = 2;
        Element.Events.change = {
            base: function() {
                var b = this.type;
                return (this.get("tag") == "input" && (b == "radio" || b == "checkbox")) ? "propertychange" : "change"
            },
            condition: function(b) {
                return b.type != "propertychange" || b.event.propertyName == "checked"
            }
        }
    }
})();
(function() {
    var c = !!window.addEventListener;
    Element.NativeEvents.focusin = Element.NativeEvents.focusout = 2;
    var n = function(o, p, q, r, s) {
        while (s && s != o) {
            if (p(s, r)) {
                return q.call(s, r, s)
            }
            s = document.id(s.parentNode)
        }
    };
    var a = {
        mouseenter: {
            base: "mouseover",
            condition: Element.MouseenterCheck
        },
        mouseleave: {
            base: "mouseout",
            condition: Element.MouseenterCheck
        },
        focus: {
            base: "focus" + (c ? "" : "in"),
            capture: true
        },
        blur: {
            base: c ? "blur" : "focusout",
            capture: true
        }
    };
    var b = "$delegation:";
    var k = function(o) {
        return {
            base: "focusin",
            remove: function(p, r) {
                var s = p.retrieve(b + o + "listeners", {})[r];
                if (s && s.forms) {
                    for (var q = s.forms.length; q--;) {
                        if (s.forms[q].removeEvent) {
                            s.forms[q].removeEvent(o, s.fns[q])
                        }
                    }
                }
            },
            listen: function(A, u, y, q, w, v) {
                var r = (w.get("tag") == "form") ? w : q.target.getParent("form");
                if (!r) {
                    return
                }
                var x = A.retrieve(b + o + "listeners", {}),
                    s = x[v] || {
                        forms: [],
                        fns: []
                    },
                    p = s.forms,
                    z = s.fns;
                if (p.indexOf(r) != -1) {
                    return
                }
                p.push(r);
                var t = function(B) {
                    n(A, u, y, B, w)
                };
                r.addEvent(o, t);
                z.push(t);
                x[v] = s;
                A.store(b + o + "listeners", x)
            }
        }
    };
    var d = function(o) {
        return {
            base: "focusin",
            listen: function(p, q, s, t, u) {
                var r = {
                    blur: function() {
                        this.removeEvents(r)
                    }
                };
                r[o] = function(v) {
                    n(p, q, s, v, u)
                };
                t.target.addEvents(r)
            }
        }
    };
    if (!c) {
        Object.append(a, {
            submit: k("submit"),
            reset: k("reset"),
            change: d("change"),
            select: d("select")
        })
    }
    var h = Element.prototype,
        f = h.addEvent,
        m = h.removeEvent;
    var e = function(o, p) {
        return function(u, t, q) {
            if (u.indexOf(":relay") == -1) {
                return o.call(this, u, t, q)
            }
            var r = Slick.parse(u).expressions[0][0];
            if (r.pseudos[0].key != "relay") {
                return o.call(this, u, t, q)
            }
            var s = r.tag;
            r.pseudos.slice(1).each(function(v) {
                s += ":" + v.key + (v.value ? "(" + v.value + ")" : "")
            });
            o.call(this, u, t);
            return p.call(this, s, r.pseudos[0].value, t)
        }
    };
    var g = {
        addEvent: function(y, t, A) {
            var w = this.retrieve("$delegates", {}),
                u = w[y];
            if (u) {
                for (var B in u) {
                    if (u[B].fn == A && u[B].match == t) {
                        return this
                    }
                }
            }
            var s = y,
                x = t,
                r = A,
                q = a[y] || {};
            y = q.base || s;
            t = function(E) {
                return Slick.match(E, x)
            };
            var z = Element.Events[s];
            if (q.condition || z && z.condition) {
                var o = t,
                    p = q.condition || z.condition;
                t = function(F, E) {
                    return o(F, E) && p.call(F, E, y)
                }
            }
            var C = this,
                v = String.uniqueID();
            var D = q.listen ? function(E, F) {
                if (!F && E && E.target) {
                    F = E.target
                }
                if (F) {
                    q.listen(C, t, A, E, F, v)
                }
            } : function(E, F) {
                if (!F && E && E.target) {
                    F = E.target
                }
                if (F) {
                    n(C, t, A, E, F)
                }
            };
            if (!u) {
                u = {}
            }
            u[v] = {
                match: x,
                fn: r,
                delegator: D
            };
            w[s] = u;
            return f.call(this, y, D, q.capture)
        },
        removeEvent: function(v, q, w, x) {
            var u = this.retrieve("$delegates", {}),
                t = u[v];
            if (!t) {
                return this
            }
            if (x) {
                var p = v,
                    z = t[x].delegator,
                    o = a[v] || {};
                v = o.base || p;
                if (o.remove) {
                    o.remove(this, x)
                }
                delete t[x];
                u[p] = t;
                return m.call(this, v, z, o.capture)
            }
            var r, y;
            if (w) {
                for (r in t) {
                    y = t[r];
                    if (y.match == q && y.fn == w) {
                        return g.removeEvent.call(this, v, q, w, r)
                    }
                }
            } else {
                for (r in t) {
                    y = t[r];
                    if (y.match == q) {
                        g.removeEvent.call(this, v, q, y.fn, r)
                    }
                }
            }
            return this
        }
    };
    [Element, Window, Document].invoke("implement", {
        addEvent: e(f, g.addEvent),
        removeEvent: e(m, g.removeEvent)
    })
})();
(function() {
    var k = document.html,
        a;
    a = document.createElement("div");
    a.style.color = "red";
    a.style.color = null;
    var r = a.style.color == "red";
    var p = "1px solid #123abc";
    a.style.border = p;
    var q = a.style.border != p;
    a = null;
    var d = !!window.getComputedStyle,
        m = document.createElement("div").style.borderRadius != null;
    Element.Properties.styles = {
        set: function(x) {
            this.setStyles(x)
        }
    };
    var e = (k.style.opacity != null),
        u = (k.style.filter != null),
        w = /alpha\(opacity=([\d.]+)\)/i;
    var n = function(y, x) {
        y.store("$opacity", x);
        y.style.visibility = x > 0 || x == null ? "visible" : "hidden"
    };
    var c = function(x, B, A) {
        var z = x.style,
            y = z.filter || x.getComputedStyle("filter") || "";
        z.filter = (B.test(y) ? y.replace(B, A) : y + " " + A).trim();
        if (!z.filter) {
            z.removeAttribute("filter")
        }
    };
    var t = (e ? function(y, x) {
        y.style.opacity = x
    } : (u ? function(y, x) {
        if (!y.currentStyle || !y.currentStyle.hasLayout) {
            y.style.zoom = 1
        }
        if (x == null || x == 1) {
            c(y, w, "");
            if (x == 1 && g(y) != 1) {
                c(y, w, "alpha(opacity=100)")
            }
        } else {
            c(y, w, "alpha(opacity=" + (x * 100).limit(0, 100).round() + ")")
        }
    } : n));
    var g = (e ? function(y) {
        var x = y.style.opacity || y.getComputedStyle("opacity");
        return (x == "") ? 1 : x.toFloat()
    } : (u ? function(y) {
        var z = (y.style.filter || y.getComputedStyle("filter")),
            x;
        if (z) {
            x = z.match(w)
        }
        return (x == null || z == null) ? 1 : (x[1] / 100)
    } : function(y) {
        var x = y.retrieve("$opacity");
        if (x == null) {
            x = (y.style.visibility == "hidden" ? 0 : 1)
        }
        return x
    }));
    var h = (k.style.cssFloat == null) ? "styleFloat" : "cssFloat",
        v = {
            left: "0%",
            top: "0%",
            center: "50%",
            right: "100%",
            bottom: "100%"
        },
        b = (k.style.backgroundPositionX != null),
        f = /^-(ms)-/;
    var o = function(x) {
        return x.replace(f, "$1-").camelCase()
    };
    var s = function(x, y) {
        if (y == "backgroundPosition") {
            x.removeAttribute(y + "X");
            y += "Y"
        }
        x.removeAttribute(y)
    };
    Element.implement({
        getComputedStyle: function(z) {
            if (!d && this.currentStyle) {
                return this.currentStyle[o(z)]
            }
            var y = Element.getDocument(this).defaultView,
                x = y ? y.getComputedStyle(this, null) : null;
            return (x) ? x.getPropertyValue((z == h) ? "float" : z.hyphenate()) : ""
        },
        setStyle: function(y, x) {
            if (y == "opacity") {
                if (x != null) {
                    x = parseFloat(x)
                }
                t(this, x);
                return this
            }
            y = o(y == "float" ? h : y);
            if (typeOf(x) != "string") {
                var z = (Element.Styles[y] || "@").split(" ");
                x = Array.convert(x).map(function(B, A) {
                    if (!z[A]) {
                        return ""
                    }
                    return (typeOf(B) == "number") ? z[A].replace("@", Math.round(B)) : B
                }).join(" ")
            } else {
                if (x == String(Number(x))) {
                    x = Math.round(x)
                }
            }
            this.style[y] = x;
            if ((x == "" || x == null) && r && this.style.removeAttribute) {
                s(this.style, y)
            }
            return this
        },
        getStyle: function(C) {
            if (C == "opacity") {
                return g(this)
            }
            C = o(C == "float" ? h : C);
            if (m && C.indexOf("borderRadius") != -1) {
                return ["borderTopLeftRadius", "borderTopRightRadius", "borderBottomRightRadius", "borderBottomLeftRadius"].map(function(D) {
                    return this.style[D] || "0px"
                }, this).join(" ")
            }
            var x = this.style[C];
            if (!x || C == "zIndex") {
                if (Element.ShortStyles.hasOwnProperty(C)) {
                    x = [];
                    for (var B in Element.ShortStyles[C]) {
                        x.push(this.getStyle(B))
                    }
                    return x.join(" ")
                }
                x = this.getComputedStyle(C)
            }
            if (b && /^backgroundPosition[XY]?$/.test(C)) {
                return x.replace(/(top|right|bottom|left)/g, function(D) {
                    return v[D]
                }) || "0px"
            }
            if (!x && C == "backgroundPosition") {
                return "0px 0px"
            }
            if (x) {
                x = String(x);
                var z = x.match(/rgba?\([\d\s,]+\)/);
                if (z) {
                    x = x.replace(z[0], z[0].rgbToHex())
                }
            }
            if (!d && !this.style[C]) {
                if ((/^(height|width)$/).test(C) && !(/px$/.test(x))) {
                    var y = (C == "width") ? ["left", "right"] : ["top", "bottom"],
                        A = 0;
                    y.each(function(D) {
                        A += this.getStyle("border-" + D + "-width").toInt() + this.getStyle("padding-" + D).toInt()
                    }, this);
                    return this["offset" + C.capitalize()] - A + "px"
                }
                if ((/^border(.+)Width|margin|padding/).test(C) && isNaN(parseFloat(x))) {
                    return "0px"
                }
            }
            if (q && /^border(Top|Right|Bottom|Left)?$/.test(C) && /^#/.test(x)) {
                return x.replace(/^(.+)\s(.+)\s(.+)$/, "$2 $3 $1")
            }
            return x
        },
        setStyles: function(y) {
            for (var x in y) {
                this.setStyle(x, y[x])
            }
            return this
        },
        getStyles: function() {
            var x = {};
            Array.flatten(arguments).each(function(y) {
                x[y] = this.getStyle(y)
            }, this);
            return x
        }
    });
    Element.Styles = {
        left: "@px",
        top: "@px",
        bottom: "@px",
        right: "@px",
        width: "@px",
        height: "@px",
        maxWidth: "@px",
        maxHeight: "@px",
        minWidth: "@px",
        minHeight: "@px",
        backgroundColor: "rgb(@, @, @)",
        backgroundSize: "@px",
        backgroundPosition: "@px @px",
        color: "rgb(@, @, @)",
        fontSize: "@px",
        letterSpacing: "@px",
        lineHeight: "@px",
        clip: "rect(@px @px @px @px)",
        margin: "@px @px @px @px",
        padding: "@px @px @px @px",
        border: "@px @ rgb(@, @, @) @px @ rgb(@, @, @) @px @ rgb(@, @, @)",
        borderWidth: "@px @px @px @px",
        borderStyle: "@ @ @ @",
        borderColor: "rgb(@, @, @) rgb(@, @, @) rgb(@, @, @) rgb(@, @, @)",
        zIndex: "@",
        zoom: "@",
        fontWeight: "@",
        textIndent: "@px",
        opacity: "@",
        borderRadius: "@px @px @px @px"
    };
    Element.ShortStyles = {
        margin: {},
        padding: {},
        border: {},
        borderWidth: {},
        borderStyle: {},
        borderColor: {}
    };
    ["Top", "Right", "Bottom", "Left"].each(function(D) {
        var C = Element.ShortStyles;
        var y = Element.Styles;
        ["margin", "padding"].each(function(E) {
            var F = E + D;
            C[E][F] = y[F] = "@px"
        });
        var B = "border" + D;
        C.border[B] = y[B] = "@px @ rgb(@, @, @)";
        var A = B + "Width",
            x = B + "Style",
            z = B + "Color";
        C[B] = {};
        C.borderWidth[A] = C[B][A] = y[A] = "@px";
        C.borderStyle[x] = C[B][x] = y[x] = "@";
        C.borderColor[z] = C[B][z] = y[z] = "rgb(@, @, @)"
    });
    if (b) {
        Element.ShortStyles.backgroundPosition = {
            backgroundPositionX: "@",
            backgroundPositionY: "@"
        }
    }
})();
(function() {
    var k = document.createElement("div"),
        d = document.createElement("div");
    k.style.height = "0";
    k.appendChild(d);
    var c = (d.offsetParent === k);
    k = d = null;
    var n = ["height", "paddingTop", "paddingBottom", "borderTopWidth", "borderBottomWidth"],
        g = ["width", "paddingLeft", "paddingRight", "borderLeftWidth", "borderRightWidth"];
    var f = function(s) {
        var r = window.getComputedStyle(s),
            t = {
                x: 0,
                y: 0
            };
        n.each(function(u) {
            t.y += parseFloat(r[u])
        });
        g.each(function(u) {
            t.x += parseFloat(r[u])
        });
        return t
    };
    var q = function(r) {
        return p(r, "position") != "static" || a(r)
    };
    var m = function(r) {
        return q(r) || (/^(?:table|td|th)$/i).test(r.tagName)
    };
    Element.implement({
        scrollTo: function(r, s) {
            if (a(this)) {
                this.getWindow().scrollTo(r, s)
            } else {
                this.scrollLeft = r;
                this.scrollTop = s
            }
            return this
        },
        getSize: function() {
            if (a(this)) {
                return this.getWindow().getSize()
            }
            if (!window.getComputedStyle) {
                return {
                    x: this.offsetWidth,
                    y: this.offsetHeight
                }
            }
            if (this.get("tag") == "svg") {
                return f(this)
            }
            try {
                var r = this.getBoundingClientRect();
                return {
                    x: r.width,
                    y: r.height
                }
            } catch (s) {
                return {
                    x: 0,
                    y: 0
                }
            }
        },
        getScrollSize: function() {
            if (a(this)) {
                return this.getWindow().getScrollSize()
            }
            return {
                x: this.scrollWidth,
                y: this.scrollHeight
            }
        },
        getScroll: function() {
            if (a(this)) {
                return this.getWindow().getScroll()
            }
            return {
                x: this.scrollLeft,
                y: this.scrollTop
            }
        },
        getScrolls: function() {
            var s = this.parentNode,
                r = {
                    x: 0,
                    y: 0
                };
            while (s && !a(s)) {
                r.x += s.scrollLeft;
                r.y += s.scrollTop;
                s = s.parentNode
            }
            return r
        },
        getOffsetParent: c ? function() {
            var r = this;
            if (a(r) || p(r, "position") == "fixed") {
                return null
            }
            var s = (p(r, "position") == "static") ? m : q;
            while ((r = r.parentNode)) {
                if (s(r)) {
                    return r
                }
            }
            return null
        } : function() {
            var r = this;
            if (a(r) || p(r, "position") == "fixed") {
                return null
            }
            try {
                return r.offsetParent
            } catch (s) {}
            return null
        },
        getOffsets: function() {
            var s = this.getBoundingClientRect;
            if (s) {
                var w = this.getBoundingClientRect(),
                    u = document.id(this.getDocument().documentElement),
                    v = u.getScroll(),
                    y = this.getScrolls(),
                    x = (p(this, "position") == "fixed");
                return {
                    x: w.left.toFloat() + y.x + ((x) ? 0 : v.x) - u.clientLeft,
                    y: w.top.toFloat() + y.y + ((x) ? 0 : v.y) - u.clientTop
                }
            }
            var t = this,
                r = {
                    x: 0,
                    y: 0
                };
            if (a(this)) {
                return r
            }
            while (t && !a(t)) {
                r.x += t.offsetLeft;
                r.y += t.offsetTop;
                t = t.offsetParent
            }
            return r
        },
        getPosition: function(u) {
            var v = this.getOffsets(),
                s = this.getScrolls();
            var r = {
                x: v.x - s.x,
                y: v.y - s.y
            };
            if (u && (u = document.id(u))) {
                var t = u.getPosition();
                return {
                    x: r.x - t.x - b(u),
                    y: r.y - t.y - h(u)
                }
            }
            return r
        },
        getCoordinates: function(t) {
            if (a(this)) {
                return this.getWindow().getCoordinates()
            }
            var r = this.getPosition(t),
                s = this.getSize();
            var u = {
                left: r.x,
                top: r.y,
                width: s.x,
                height: s.y
            };
            u.right = u.left + u.width;
            u.bottom = u.top + u.height;
            return u
        },
        computePosition: function(r) {
            return {
                left: r.x - o(this, "margin-left"),
                top: r.y - o(this, "margin-top")
            }
        },
        setPosition: function(r) {
            return this.setStyles(this.computePosition(r))
        }
    });
    [Document, Window].invoke("implement", {
        getSize: function() {
            var r = e(this);
            return {
                x: r.clientWidth,
                y: r.clientHeight
            }
        },
        getScroll: function() {
            var s = this.getWindow(),
                r = e(this);
            return {
                x: s.pageXOffset || r.scrollLeft,
                y: s.pageYOffset || r.scrollTop
            }
        },
        getScrollSize: function() {
            var t = e(this),
                s = this.getSize(),
                r = this.getDocument().body;
            return {
                x: Math.max(t.scrollWidth, r.scrollWidth, s.x),
                y: Math.max(t.scrollHeight, r.scrollHeight, s.y)
            }
        },
        getPosition: function() {
            return {
                x: 0,
                y: 0
            }
        },
        getCoordinates: function() {
            var r = this.getSize();
            return {
                top: 0,
                left: 0,
                bottom: r.y,
                right: r.x,
                height: r.y,
                width: r.x
            }
        }
    });
    var p = Element.getComputedStyle;

    function o(r, s) {
        return p(r, s).toInt() || 0
    }

    function h(r) {
        return o(r, "border-top-width")
    }

    function b(r) {
        return o(r, "border-left-width")
    }

    function a(r) {
        return (/^(?:body|html)$/i).test(r.tagName)
    }

    function e(r) {
        var s = r.getDocument();
        return (!s.compatMode || s.compatMode == "CSS1Compat") ? s.html : s.body
    }
})();
Element.alias({
    position: "setPosition"
});
[Window, Document, Element].invoke("implement", {
    getHeight: function() {
        return this.getSize().y
    },
    getWidth: function() {
        return this.getSize().x
    },
    getScrollTop: function() {
        return this.getScroll().y
    },
    getScrollLeft: function() {
        return this.getScroll().x
    },
    getScrollHeight: function() {
        return this.getScrollSize().y
    },
    getScrollWidth: function() {
        return this.getScrollSize().x
    },
    getTop: function() {
        return this.getPosition().y
    },
    getLeft: function() {
        return this.getPosition().x
    }
});
(function() {
    var f = this.Fx = new Class({
        Implements: [Chain, Events, Options, Class.Thenable],
        options: {
            fps: 60,
            unit: false,
            duration: 500,
            frames: null,
            frameSkip: true,
            link: "ignore"
        },
        initialize: function(g) {
            this.subject = this.subject || this;
            this.setOptions(g)
        },
        getTransition: function() {
            return function(g) {
                return -(Math.cos(Math.PI * g) - 1) / 2
            }
        },
        step: function(g) {
            if (this.options.frameSkip) {
                var h = (this.time != null) ? (g - this.time) : 0,
                    k = h / this.frameInterval;
                this.time = g;
                this.frame += k
            } else {
                this.frame++
            }
            if (this.frame < this.frames) {
                var m = this.transition(this.frame / this.frames);
                this.set(this.compute(this.from, this.to, m))
            } else {
                this.frame = this.frames;
                this.set(this.compute(this.from, this.to, 1));
                this.stop()
            }
        },
        set: function(g) {
            return g
        },
        compute: function(k, h, g) {
            return f.compute(k, h, g)
        },
        check: function() {
            if (!this.isRunning()) {
                return true
            }
            switch (this.options.link) {
                case "cancel":
                    this.cancel();
                    return true;
                case "chain":
                    this.chain(this.caller.pass(arguments, this));
                    return false
            }
            return false
        },
        start: function(n, m) {
            if (!this.check(n, m)) {
                return this
            }
            this.from = n;
            this.to = m;
            this.frame = (this.options.frameSkip) ? 0 : -1;
            this.time = null;
            this.transition = this.getTransition();
            var k = this.options.frames,
                h = this.options.fps,
                g = this.options.duration;
            this.duration = f.Durations[g] || g.toInt();
            this.frameInterval = 1000 / h;
            this.frames = k || Math.round(this.duration / this.frameInterval);
            if (this.getThenableState() !== "pending") {
                this.resetThenable(this.subject)
            }
            this.fireEvent("start", this.subject);
            b.call(this, h);
            return this
        },
        stop: function() {
            if (this.isRunning()) {
                this.time = null;
                d.call(this, this.options.fps);
                if (this.frames == this.frame) {
                    this.fireEvent("complete", this.subject);
                    if (!this.callChain()) {
                        this.fireEvent("chainComplete", this.subject)
                    }
                } else {
                    this.fireEvent("stop", this.subject)
                }
                this.resolve(this.subject === this ? null : this.subject)
            }
            return this
        },
        cancel: function() {
            if (this.isRunning()) {
                this.time = null;
                d.call(this, this.options.fps);
                this.frame = this.frames;
                this.fireEvent("cancel", this.subject).clearChain();
                this.reject(this.subject)
            }
            return this
        },
        pause: function() {
            if (this.isRunning()) {
                this.time = null;
                d.call(this, this.options.fps)
            }
            return this
        },
        resume: function() {
            if (this.isPaused()) {
                b.call(this, this.options.fps)
            }
            return this
        },
        isRunning: function() {
            var g = e[this.options.fps];
            return g && g.contains(this)
        },
        isPaused: function() {
            return (this.frame < this.frames) && !this.isRunning()
        }
    });
    f.compute = function(k, h, g) {
        return (h - k) * g + k
    };
    f.Durations = {
        "short": 250,
        normal: 500,
        "long": 1000
    };
    var e = {},
        c = {};
    var a = function() {
        var h = Date.now();
        for (var k = this.length; k--;) {
            var g = this[k];
            if (g) {
                g.step(h)
            }
        }
    };
    var b = function(h) {
        var g = e[h] || (e[h] = []);
        g.push(this);
        if (!c[h]) {
            c[h] = a.periodical(Math.round(1000 / h), g)
        }
    };
    var d = function(h) {
        var g = e[h];
        if (g) {
            g.erase(this);
            if (!g.length && c[h]) {
                delete e[h];
                c[h] = clearInterval(c[h])
            }
        }
    }
})();
Fx.CSS = new Class({
    Extends: Fx,
    prepare: function(b, e, a) {
        a = Array.convert(a);
        var h = a[0],
            g = a[1];
        if (g == null) {
            g = h;
            h = b.getStyle(e);
            var c = this.options.unit;
            if (c && h && typeof h == "string" && h.slice(-c.length) != c && parseFloat(h) != 0) {
                b.setStyle(e, g + c);
                var d = b.getComputedStyle(e);
                if (!(/px$/.test(d))) {
                    d = b.style[("pixel-" + e).camelCase()];
                    if (d == null) {
                        var f = b.style.left;
                        b.style.left = g + c;
                        d = b.style.pixelLeft;
                        b.style.left = f
                    }
                }
                h = (g || 1) / (parseFloat(d) || 1) * (parseFloat(h) || 0);
                b.setStyle(e, h + c)
            }
        }
        return {
            from: this.parse(h),
            to: this.parse(g)
        }
    },
    parse: function(a) {
        a = Function.convert(a)();
        a = (typeof a == "string") ? a.split(" ") : Array.convert(a);
        return a.map(function(c) {
            c = String(c);
            var b = false;
            Object.each(Fx.CSS.Parsers, function(e) {
                if (b) {
                    return
                }
                var d = e.parse(c);
                if (d || d === 0) {
                    b = {
                        value: d,
                        parser: e
                    }
                }
            });
            b = b || {
                value: c,
                parser: Fx.CSS.Parsers.String
            };
            return b
        })
    },
    compute: function(d, c, b) {
        var a = [];
        (Math.min(d.length, c.length)).times(function(e) {
            a.push({
                value: d[e].parser.compute(d[e].value, c[e].value, b),
                parser: d[e].parser
            })
        });
        a.$family = Function.convert("fx:css:value");
        return a
    },
    serve: function(c, b) {
        if (typeOf(c) != "fx:css:value") {
            c = this.parse(c)
        }
        var a = [];
        c.each(function(d) {
            a = a.concat(d.parser.serve(d.value, b))
        });
        return a
    },
    render: function(a, d, c, b) {
        a.setStyle(d, this.serve(c, b))
    },
    search: function(a) {
        if (Fx.CSS.Cache[a]) {
            return Fx.CSS.Cache[a]
        }
        var d = {},
            c = new RegExp("^" + a.escapeRegExp() + "$");
        var b = function(e) {
            Array.each(e, function(g) {
                if (g.media) {
                    b(g.rules || g.cssRules);
                    return
                }
                if (!g.style) {
                    return
                }
                var f = (g.selectorText) ? g.selectorText.replace(/^\w+/, function(h) {
                    return h.toLowerCase()
                }) : null;
                if (!f || !c.test(f)) {
                    return
                }
                Object.each(Element.Styles, function(k, h) {
                    if (!g.style[h] || Element.ShortStyles[h]) {
                        return
                    }
                    k = String(g.style[h]);
                    d[h] = ((/^rgb/).test(k)) ? k.rgbToHex() : k
                })
            })
        };
        Array.each(document.styleSheets, function(f) {
            var e = f.href;
            if (e && e.indexOf("://") > -1 && e.indexOf(document.domain) == -1) {
                return
            }
            var g = f.rules || f.cssRules;
            b(g)
        });
        return Fx.CSS.Cache[a] = d
    }
});
Fx.CSS.Cache = {};
Fx.CSS.Parsers = {
    Color: {
        parse: function(a) {
            if (a.match(/^#[0-9a-f]{3,6}$/i)) {
                return a.hexToRgb(true)
            }
            return ((a = a.match(/(\d+),\s*(\d+),\s*(\d+)/))) ? [a[1], a[2], a[3]] : false
        },
        compute: function(c, b, a) {
            return c.map(function(e, d) {
                return Math.round(Fx.compute(c[d], b[d], a))
            })
        },
        serve: function(a) {
            return a.map(Number)
        }
    },
    Number: {
        parse: parseFloat,
        compute: Fx.compute,
        serve: function(b, a) {
            return (a) ? b + a : b
        }
    },
    String: {
        parse: Function.convert(false),
        compute: function(b, a) {
            return a
        },
        serve: function(a) {
            return a
        }
    }
};
Fx.Morph = new Class({
    Extends: Fx.CSS,
    initialize: function(b, a) {
        this.element = this.subject = document.id(b);
        this.parent(a)
    },
    set: function(a) {
        if (typeof a == "string") {
            a = this.search(a)
        }
        for (var b in a) {
            this.render(this.element, b, a[b], this.options.unit)
        }
        return this
    },
    compute: function(e, d, c) {
        var a = {};
        for (var b in e) {
            a[b] = this.parent(e[b], d[b], c)
        }
        return a
    },
    start: function(b) {
        if (!this.check(b)) {
            return this
        }
        if (typeof b == "string") {
            b = this.search(b)
        }
        var e = {},
            d = {};
        for (var c in b) {
            var a = this.prepare(this.element, c, b[c]);
            e[c] = a.from;
            d[c] = a.to
        }
        return this.parent(e, d)
    }
});
Element.Properties.morph = {
    set: function(a) {
        this.get("morph").cancel().setOptions(a);
        return this
    },
    get: function() {
        var a = this.retrieve("morph");
        if (!a) {
            a = new Fx.Morph(this, {
                link: "cancel"
            });
            this.store("morph", a)
        }
        return a
    }
};
Element.implement({
    morph: function(a) {
        this.get("morph").start(a);
        return this
    }
});
Fx.implement({
    getTransition: function() {
        var a = this.options.transition || Fx.Transitions.Sine.easeInOut;
        if (typeof a == "string") {
            var b = a.split(":");
            a = Fx.Transitions;
            a = a[b[0]] || a[b[0].capitalize()];
            if (b[1]) {
                a = a["ease" + b[1].capitalize() + (b[2] ? b[2].capitalize() : "")]
            }
        }
        return a
    }
});
Fx.Transition = function(c, b) {
    b = Array.convert(b);
    var a = function(d) {
        return c(d, b)
    };
    return Object.append(a, {
        easeIn: a,
        easeOut: function(d) {
            return 1 - c(1 - d, b)
        },
        easeInOut: function(d) {
            return (d <= 0.5 ? c(2 * d, b) : (2 - c(2 * (1 - d), b))) / 2
        }
    })
};
Fx.Transitions = {
    linear: function(a) {
        return a
    }
};
Fx.Transitions.extend = function(a) {
    for (var b in a) {
        Fx.Transitions[b] = new Fx.Transition(a[b])
    }
};
Fx.Transitions.extend({
    Pow: function(b, a) {
        return Math.pow(b, a && a[0] || 6)
    },
    Expo: function(a) {
        return Math.pow(2, 8 * (a - 1))
    },
    Circ: function(a) {
        return 1 - Math.sin(Math.acos(a))
    },
    Sine: function(a) {
        return 1 - Math.cos(a * Math.PI / 2)
    },
    Back: function(b, a) {
        a = a && a[0] || 1.618;
        return Math.pow(b, 2) * ((a + 1) * b - a)
    },
    Bounce: function(f) {
        var e;
        for (var d = 0, c = 1; 1; d += c, c /= 2) {
            if (f >= (7 - 4 * d) / 11) {
                e = c * c - Math.pow((11 - 6 * d - 11 * f) / 4, 2);
                break
            }
        }
        return e
    },
    Elastic: function(b, a) {
        return Math.pow(2, 10 * --b) * Math.cos(20 * b * Math.PI * (a && a[0] || 1) / 3)
    }
});
["Quad", "Cubic", "Quart", "Quint"].each(function(b, a) {
    Fx.Transitions[b] = new Fx.Transition(function(c) {
        return Math.pow(c, a + 2)
    })
});
Fx.Tween = new Class({
    Extends: Fx.CSS,
    initialize: function(b, a) {
        this.element = this.subject = document.id(b);
        this.parent(a)
    },
    set: function(b, a) {
        if (arguments.length == 1) {
            a = b;
            b = this.property || this.options.property
        }
        this.render(this.element, b, a, this.options.unit);
        return this
    },
    start: function(c, e, d) {
        if (!this.check(c, e, d)) {
            return this
        }
        var b = Array.flatten(arguments);
        this.property = this.options.property || b.shift();
        var a = this.prepare(this.element, this.property, b);
        return this.parent(a.from, a.to)
    }
});
Element.Properties.tween = {
    set: function(a) {
        this.get("tween").cancel().setOptions(a);
        return this
    },
    get: function() {
        var a = this.retrieve("tween");
        if (!a) {
            a = new Fx.Tween(this, {
                link: "cancel"
            });
            this.store("tween", a)
        }
        return a
    }
};
Element.implement({
    tween: function(a, c, b) {
        this.get("tween").start(a, c, b);
        return this
    },
    fade: function() {
        var d = this.get("tween"),
            f, c = ["opacity"].append(arguments),
            a;
        if (c[1] == null) {
            c[1] = "toggle"
        }
        switch (c[1]) {
            case "in":
                f = "start";
                c[1] = 1;
                break;
            case "out":
                f = "start";
                c[1] = 0;
                break;
            case "show":
                f = "set";
                c[1] = 1;
                break;
            case "hide":
                f = "set";
                c[1] = 0;
                break;
            case "toggle":
                var b = this.retrieve("fade:flag", this.getStyle("opacity") == 1);
                f = "start";
                c[1] = b ? 0 : 1;
                this.store("fade:flag", !b);
                a = true;
                break;
            default:
                f = "start"
        }
        if (!a) {
            this.eliminate("fade:flag")
        }
        d[f].apply(d, c);
        var e = c[c.length - 1];
        if (f == "set") {
            this.setStyle("visibility", e == 0 ? "hidden" : "visible")
        } else {
            if (e != 0) {
                if (d.$chain.length) {
                    d.chain(function() {
                        this.element.setStyle("visibility", "visible");
                        this.callChain()
                    })
                } else {
                    this.setStyle("visibility", "visible")
                }
            } else {
                d.chain(function() {
                    if (this.element.getStyle("opacity")) {
                        return
                    }
                    this.element.setStyle("visibility", "hidden");
                    this.callChain()
                })
            }
        }
        return this
    },
    highlight: function(c, a) {
        if (!a) {
            a = this.retrieve("highlight:original", this.getStyle("background-color"));
            a = (a == "transparent") ? "#fff" : a
        }
        var b = this.get("tween");
        b.start("background-color", c || "#ffff88", a).chain(function() {
            this.setStyle("background-color", this.retrieve("highlight:original"));
            b.callChain()
        }.bind(this));
        return this
    }
});
(function() {
    var d = function() {},
        a = ("onprogress" in new Browser.Request);
    var c = this.Request = new Class({
        Implements: [Chain, Events, Options, Class.Thenable],
        options: {
            url: "",
            data: "",
            headers: {
                "X-Requested-With": "XMLHttpRequest",
                Accept: "text/javascript, text/html, application/xml, text/xml, */*"
            },
            async: true,
            format: false,
            method: "post",
            link: "ignore",
            isSuccess: null,
            emulation: true,
            urlEncoded: true,
            encoding: "utf-8",
            evalScripts: false,
            evalResponse: false,
            timeout: 0,
            noCache: false
        },
        initialize: function(e) {
            this.xhr = new Browser.Request();
            this.setOptions(e);
            this.headers = this.options.headers
        },
        onStateChange: function() {
            var e = this.xhr;
            if (e.readyState != 4 || !this.running) {
                return
            }
            this.running = false;
            this.status = 0;
            Function.attempt(function() {
                var f = e.status;
                this.status = (f == 1223) ? 204 : f
            }.bind(this));
            e.onreadystatechange = d;
            if (a) {
                e.onprogress = e.onloadstart = d
            }
            if (this.timer) {
                clearTimeout(this.timer);
                delete this.timer
            }
            this.response = {
                text: this.xhr.responseText || "",
                xml: this.xhr.responseXML
            };
            if (this.options.isSuccess.call(this, this.status)) {
                this.success(this.response.text, this.response.xml)
            } else {
                this.failure()
            }
        },
        isSuccess: function() {
            var e = this.status;
            return (e >= 200 && e < 300)
        },
        isRunning: function() {
            return !!this.running
        },
        processScripts: function(e) {
            if (this.options.evalResponse || (/(ecma|java)script/).test(this.getHeader("Content-type"))) {
                return Browser.exec(e)
            }
            return e.stripScripts(this.options.evalScripts)
        },
        success: function(f, e) {
            this.onSuccess(this.processScripts(f), e);
            this.resolve({
                text: f,
                xml: e
            })
        },
        onSuccess: function() {
            this.fireEvent("complete", arguments).fireEvent("success", arguments).callChain()
        },
        failure: function() {
            this.onFailure();
            this.reject({
                reason: "failure",
                xhr: this.xhr
            })
        },
        onFailure: function() {
            this.fireEvent("complete").fireEvent("failure", this.xhr)
        },
        loadstart: function(e) {
            this.fireEvent("loadstart", [e, this.xhr])
        },
        progress: function(e) {
            this.fireEvent("progress", [e, this.xhr])
        },
        timeout: function() {
            this.fireEvent("timeout", this.xhr);
            this.reject({
                reason: "timeout",
                xhr: this.xhr
            })
        },
        setHeader: function(e, f) {
            this.headers[e] = f;
            return this
        },
        getHeader: function(e) {
            return Function.attempt(function() {
                return this.xhr.getResponseHeader(e)
            }.bind(this))
        },
        check: function() {
            if (!this.running) {
                return true
            }
            switch (this.options.link) {
                case "cancel":
                    this.cancel();
                    return true;
                case "chain":
                    this.chain(this.caller.pass(arguments, this));
                    return false
            }
            return false
        },
        send: function(r) {
            if (!this.check(r)) {
                return this
            }
            this.options.isSuccess = this.options.isSuccess || this.isSuccess;
            this.running = true;
            var o = typeOf(r);
            if (o == "string" || o == "element") {
                r = {
                    data: r
                }
            }
            var h = this.options;
            r = Object.append({
                data: h.data,
                url: h.url,
                method: h.method
            }, r);
            var m = r.data,
                f = String(r.url),
                e = r.method.toLowerCase();
            switch (typeOf(m)) {
                case "element":
                    m = document.id(m).toQueryString();
                    break;
                case "object":
                case "hash":
                    m = Object.toQueryString(m)
            }
            if (this.options.format) {
                var p = "format=" + this.options.format;
                m = (m) ? p + "&" + m : p
            }
            if (this.options.emulation && !["get", "post"].contains(e)) {
                var n = "_method=" + e;
                m = (m) ? n + "&" + m : n;
                e = "post"
            }
            if (this.options.urlEncoded && ["post", "put"].contains(e)) {
                var g = (this.options.encoding) ? "; charset=" + this.options.encoding : "";
                this.headers["Content-type"] = "application/x-www-form-urlencoded" + g
            }
            if (!f) {
                f = document.location.pathname
            }
            var k = f.lastIndexOf("/");
            if (k > -1 && (k = f.indexOf("#")) > -1) {
                f = f.substr(0, k)
            }
            if (this.options.noCache) {
                f += (f.indexOf("?") > -1 ? "&" : "?") + String.uniqueID()
            }
            if (m && (e == "get" || e == "delete")) {
                f += (f.indexOf("?") > -1 ? "&" : "?") + m;
                m = null
            }
            var q = this.xhr;
            if (a) {
                q.onloadstart = this.loadstart.bind(this);
                q.onprogress = this.progress.bind(this)
            }
            q.open(e.toUpperCase(), f, this.options.async, this.options.user, this.options.password);
            if ((this.options.withCredentials) && "withCredentials" in q) {
                q.withCredentials = true
            }
            q.onreadystatechange = this.onStateChange.bind(this);
            Object.each(this.headers, function(t, s) {
                try {
                    q.setRequestHeader(s, t)
                } catch (u) {
                    this.fireEvent("exception", [s, t]);
                    this.reject({
                        reason: "exception",
                        xhr: q,
                        exception: u
                    })
                }
            }, this);
            if (this.getThenableState() !== "pending") {
                this.resetThenable({
                    reason: "send"
                })
            }
            this.fireEvent("request");
            q.send(m);
            if (!this.options.async) {
                this.onStateChange()
            } else {
                if (this.options.timeout) {
                    this.timer = this.timeout.delay(this.options.timeout, this)
                }
            }
            return this
        },
        cancel: function() {
            if (!this.running) {
                return this
            }
            this.running = false;
            var e = this.xhr;
            e.abort();
            if (this.timer) {
                clearTimeout(this.timer);
                delete this.timer
            }
            e.onreadystatechange = d;
            if (a) {
                e.onprogress = e.onloadstart = d
            }
            this.xhr = new Browser.Request();
            this.fireEvent("cancel");
            this.reject({
                reason: "cancel",
                xhr: e
            });
            return this
        }
    });
    var b = {};
    ["get", "post", "put", "delete", "patch", "head", "GET", "POST", "PUT", "DELETE", "PATCH", "HEAD"].each(function(e) {
        b[e] = function(g) {
            var f = {
                method: e
            };
            if (g != null) {
                f.data = g
            }
            return this.send(f)
        }
    });
    c.implement(b);
    Element.Properties.send = {
        set: function(e) {
            var f = this.get("send").cancel();
            f.setOptions(e);
            return this
        },
        get: function() {
            var e = this.retrieve("send");
            if (!e) {
                e = new c({
                    data: this,
                    link: "cancel",
                    method: this.get("method") || "post",
                    url: this.get("action")
                });
                this.store("send", e)
            }
            return e
        }
    };
    Element.implement({
        send: function(e) {
            var f = this.get("send");
            f.send({
                data: this,
                url: e || f.options.url
            });
            return this
        }
    })
})();
Request.HTML = new Class({
    Extends: Request,
    options: {
        update: false,
        append: false,
        evalScripts: true,
        filter: false,
        headers: {
            Accept: "text/html, application/xml, text/xml, */*"
        }
    },
    success: function(f) {
        var e = this.options,
            c = this.response;
        c.html = f.stripScripts(function(h) {
            c.javascript = h
        });
        var d = c.html.match(/<body[^>]*>([\s\S]*?)<\/body>/i);
        if (d) {
            c.html = d[1]
        }
        var b = new Element("div").set("html", c.html);
        c.tree = b.childNodes;
        c.elements = b.getElements(e.filter || "*");
        if (e.filter) {
            c.tree = c.elements
        }
        if (e.update) {
            var g = document.id(e.update).empty();
            if (e.filter) {
                g.adopt(c.elements)
            } else {
                g.set("html", c.html)
            }
        } else {
            if (e.append) {
                var a = document.id(e.append);
                if (e.filter) {
                    c.elements.reverse().inject(a)
                } else {
                    a.adopt(b.getChildren())
                }
            }
        }
        if (e.evalScripts) {
            Browser.exec(c.javascript)
        }
        this.onSuccess(c.tree, c.elements, c.html, c.javascript);
        this.resolve({
            tree: c.tree,
            elements: c.elements,
            html: c.html,
            javascript: c.javascript
        })
    }
});
Element.Properties.load = {
    set: function(a) {
        var b = this.get("load").cancel();
        b.setOptions(a);
        return this
    },
    get: function() {
        var a = this.retrieve("load");
        if (!a) {
            a = new Request.HTML({
                data: this,
                link: "cancel",
                update: this,
                method: "get"
            });
            this.store("load", a)
        }
        return a
    }
};
Element.implement({
    load: function() {
        this.get("load").send(Array.link(arguments, {
            data: Type.isObject,
            url: Type.isString
        }));
        return this
    }
});
if (typeof JSON == "undefined") {
    this.JSON = {}
}(function() {
    var special = {
        "\b": "\\b",
        "\t": "\\t",
        "\n": "\\n",
        "\f": "\\f",
        "\r": "\\r",
        '"': '\\"',
        "\\": "\\\\"
    };
    var escape = function(chr) {
        return special[chr] || "\\u" + ("0000" + chr.charCodeAt(0).toString(16)).slice(-4)
    };
    JSON.validate = function(string) {
        string = string.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, "");
        return (/^[\],:{}\s]*$/).test(string)
    };
    JSON.encode = JSON.stringify ? function(obj) {
        return JSON.stringify(obj)
    } : function(obj) {
        if (obj && obj.toJSON) {
            obj = obj.toJSON()
        }
        switch (typeOf(obj)) {
            case "string":
                return '"' + obj.replace(/[\x00-\x1f\\"]/g, escape) + '"';
            case "array":
                return "[" + obj.map(JSON.encode).clean() + "]";
            case "object":
            case "hash":
                var string = [];
                Object.each(obj, function(value, key) {
                    var json = JSON.encode(value);
                    if (json) {
                        string.push(JSON.encode(key) + ":" + json)
                    }
                });
                return "{" + string + "}";
            case "number":
            case "boolean":
                return "" + obj;
            case "null":
                return "null"
        }
        return null
    };
    JSON.secure = true;
    JSON.decode = function(string, secure) {
        if (!string || typeOf(string) != "string") {
            return null
        }
        if (secure == null) {
            secure = JSON.secure
        }
        if (secure) {
            if (JSON.parse) {
                return JSON.parse(string)
            }
            if (!JSON.validate(string)) {
                throw new Error("JSON could not decode the input; security is enabled and the value is not secure.")
            }
        }
        return eval("(" + string + ")")
    }
})();
Request.JSON = new Class({
    Extends: Request,
    options: {
        secure: true
    },
    initialize: function(a) {
        this.parent(a);
        Object.append(this.headers, {
            Accept: "application/json",
            "X-Request": "JSON"
        })
    },
    success: function(c) {
        var b;
        try {
            b = this.response.json = JSON.decode(c, this.options.secure)
        } catch (a) {
            this.fireEvent("error", [c, a]);
            return
        }
        if (b == null) {
            this.failure()
        } else {
            this.onSuccess(b, c);
            this.resolve({
                json: b,
                text: c
            })
        }
    }
});
var Cookie = new Class({
    Implements: Options,
    options: {
        path: "/",
        domain: false,
        duration: false,
        secure: false,
        document: document,
        encode: true,
        httpOnly: false
    },
    initialize: function(b, a) {
        this.key = b;
        this.setOptions(a)
    },
    write: function(b) {
        if (this.options.encode) {
            b = encodeURIComponent(b)
        }
        if (this.options.domain) {
            b += "; domain=" + this.options.domain
        }
        if (this.options.path) {
            b += "; path=" + this.options.path
        }
        if (this.options.duration) {
            var a = new Date();
            a.setTime(a.getTime() + this.options.duration * 24 * 60 * 60 * 1000);
            b += "; expires=" + a.toGMTString()
        }
        if (this.options.secure) {
            b += "; secure"
        }
        if (this.options.httpOnly) {
            b += "; HttpOnly"
        }
        this.options.document.cookie = this.key + "=" + b;
        return this
    },
    read: function() {
        var a = this.options.document.cookie.match("(?:^|;)\\s*" + this.key.escapeRegExp() + "=([^;]*)");
        return (a) ? decodeURIComponent(a[1]) : null
    },
    dispose: function() {
        new Cookie(this.key, Object.merge({}, this.options, {
            duration: -1
        })).write("");
        return this
    }
});
Cookie.write = function(b, c, a) {
    return new Cookie(b, a).write(c)
};
Cookie.read = function(a) {
    return new Cookie(a).read()
};
Cookie.dispose = function(b, a) {
    return new Cookie(b, a).dispose()
};
(function(k, n) {
    var o, f, e = [],
        c, b, d = n.createElement("div");
    var g = function() {
        clearTimeout(b);
        if (!o) {
            Browser.loaded = o = true;
            n.removeListener("DOMContentLoaded", g).removeListener("readystatechange", a);
            n.fireEvent("domready");
            k.fireEvent("domready")
        }
        n = k = d = null
    };
    var a = function() {
        for (var p = e.length; p--;) {
            if (e[p]()) {
                g();
                return true
            }
        }
        return false
    };
    var m = function() {
        clearTimeout(b);
        if (!a()) {
            b = setTimeout(m, 10)
        }
    };
    n.addListener("DOMContentLoaded", g);
    var h = function() {
        try {
            d.doScroll();
            return true
        } catch (p) {}
        return false
    };
    if (d.doScroll && !h()) {
        e.push(h);
        c = true
    }
    if (n.readyState) {
        e.push(function() {
            var p = n.readyState;
            return (p == "loaded" || p == "complete")
        })
    }
    if ("onreadystatechange" in n) {
        n.addListener("readystatechange", a)
    } else {
        c = true
    }
    if (c) {
        m()
    }
    Element.Events.domready = {
        onAdd: function(p) {
            if (o) {
                p.call(this)
            }
        }
    };
    Element.Events.load = {
        base: "load",
        onAdd: function(p) {
            if (f && this == k) {
                p.call(this)
            }
        },
        condition: function() {
            if (this == k) {
                g();
                delete Element.Events.load
            }
            return true
        }
    };
    k.addEvent("load", function() {
        f = true
    })
})(window, document);
/*!
Web Build: http://mootools.net/more/builder/a3048f4bfdf603b22a69c141dbd0fca9
*/
;
MooTools.More = {
    version: "1.6.0",
    build: "45b71db70f879781a7e0b0d3fb3bb1307c2521eb"
};
(function() {
    var a = {
        wait: function(b) {
            return this.chain(function() {
                this.callChain.delay(b == null ? 500 : b, this);
                return this
            }.bind(this))
        }
    };
    Chain.implement(a);
    if (this.Fx) {
        Fx.implement(a)
    }
    if (this.Element && Element.implement && this.Fx) {
        Element.implement({
            chains: function(b) {
                Array.convert(b || ["tween", "morph", "reveal"]).each(function(c) {
                    c = this.get(c);
                    if (!c) {
                        return
                    }
                    c.setOptions({
                        link: "chain"
                    })
                }, this);
                return this
            },
            pauseFx: function(c, b) {
                this.chains(b).get(b || "tween").wait(c);
                return this
            }
        })
    }
})();
Class.Mutators.Binds = function(a) {
    if (!this.prototype.initialize) {
        this.implement("initialize", function() {})
    }
    return Array.convert(a).concat(this.prototype.Binds || [])
};
Class.Mutators.initialize = function(a) {
    return function() {
        Array.convert(this.Binds).each(function(b) {
            var c = this[b];
            if (c) {
                this[b] = c.bind(this)
            }
        }, this);
        return a.apply(this, arguments)
    }
};
Class.Occlude = new Class({
    occlude: function(c, b) {
        b = document.id(b || this.element);
        var a = b.retrieve(c || this.property);
        if (a && !this.occluded) {
            return (this.occluded = a)
        }
        this.occluded = false;
        b.store(c || this.property, this);
        return this.occluded
    }
});
Class.refactor = function(b, a) {
    Object.each(a, function(e, d) {
        var c = b.prototype[d];
        c = (c && c.$origin) || c || function() {};
        b.implement(d, (typeof e == "function") ? function() {
            var f = this.previous;
            this.previous = c;
            var g = e.apply(this, arguments);
            this.previous = f;
            return g
        } : e)
    });
    return b
};
Class.Singleton = new Class({
    initialize: function(c) {
        var b;
        var a = new Class(c);
        return function() {
            if (b) {
                return b
            }
            b = Object.append({}, a.prototype);
            b.constructor = a;
            var d = a.apply(b, arguments);
            b = typeof d == "object" ? d : b;
            return b
        }
    }
});
(function() {
    Events.Pseudos = function(h, e, f) {
        var d = "_monitorEvents:";
        var c = function(k) {
            return {
                store: k.store ? function(m, n) {
                    k.store(d + m, n)
                } : function(m, n) {
                    (k._monitorEvents || (k._monitorEvents = {}))[m] = n
                },
                retrieve: k.retrieve ? function(m, n) {
                    return k.retrieve(d + m, n)
                } : function(m, n) {
                    if (!k._monitorEvents) {
                        return n
                    }
                    return k._monitorEvents[m] || n
                }
            }
        };
        var g = function(n) {
            if (n.indexOf(":") == -1 || !h) {
                return null
            }
            var m = Slick.parse(n).expressions[0][0],
                r = m.pseudos,
                k = r.length,
                q = [];
            while (k--) {
                var p = r[k].key,
                    o = h[p];
                if (o != null) {
                    q.push({
                        event: m.tag,
                        value: r[k].value,
                        pseudo: p,
                        original: n,
                        listener: o
                    })
                }
            }
            return q.length ? q : null
        };
        return {
            addEvent: function(p, s, m) {
                var q = g(p);
                if (!q) {
                    return e.call(this, p, s, m)
                }
                var n = c(this),
                    u = n.retrieve(p, []),
                    k = q[0].event,
                    o = Array.slice(arguments, 2),
                    r = s,
                    t = this;
                q.each(function(v) {
                    var w = v.listener,
                        x = r;
                    if (w == false) {
                        k += ":" + v.pseudo + "(" + v.value + ")"
                    } else {
                        r = function() {
                            w.call(t, v, x, arguments, r)
                        }
                    }
                });
                u.include({
                    type: k,
                    event: s,
                    monitor: r
                });
                n.store(p, u);
                if (p != k) {
                    e.apply(this, [p, s].concat(o))
                }
                return e.apply(this, [k, r].concat(o))
            },
            removeEvent: function(p, o) {
                var n = g(p);
                if (!n) {
                    return f.call(this, p, o)
                }
                var q = c(this),
                    m = q.retrieve(p);
                if (!m) {
                    return this
                }
                var k = Array.slice(arguments, 2);
                f.apply(this, [p, o].concat(k));
                m.each(function(r, s) {
                    if (!o || r.event == o) {
                        f.apply(this, [r.type, r.monitor].concat(k))
                    }
                    delete m[s]
                }, this);
                q.store(p, m);
                return this
            }
        }
    };
    var b = {
        once: function(e, f, d, c) {
            f.apply(this, d);
            this.removeEvent(e.event, c).removeEvent(e.original, f)
        },
        throttle: function(d, e, c) {
            if (!e._throttled) {
                e.apply(this, c);
                e._throttled = setTimeout(function() {
                    e._throttled = false
                }, d.value || 250)
            }
        },
        pause: function(d, e, c) {
            clearTimeout(e._pause);
            e._pause = e.delay(d.value || 250, this, c)
        }
    };
    Events.definePseudo = function(c, d) {
        b[c] = d;
        return this
    };
    Events.lookupPseudo = function(c) {
        return b[c]
    };
    var a = Events.prototype;
    Events.implement(Events.Pseudos(b, a.addEvent, a.removeEvent));
    ["Request", "Fx"].each(function(c) {
        if (this[c]) {
            this[c].implement(Events.prototype)
        }
    })
})();
(function() {
    var a = this.Drag = new Class({
        Implements: [Events, Options],
        options: {
            snap: 6,
            unit: "px",
            grid: false,
            style: true,
            limit: false,
            handle: false,
            invert: false,
            unDraggableTags: ["button", "input", "a", "textarea", "select", "option"],
            preventDefault: false,
            stopPropagation: false,
            compensateScroll: false,
            modifiers: {
                x: "left",
                y: "top"
            }
        },
        initialize: function() {
            var c = Array.link(arguments, {
                options: Type.isObject,
                element: function(d) {
                    return d != null
                }
            });
            this.element = document.id(c.element);
            this.document = this.element.getDocument();
            this.setOptions(c.options || {});
            var b = typeOf(this.options.handle);
            this.handles = ((b == "array" || b == "collection") ? $$(this.options.handle) : document.id(this.options.handle)) || this.element;
            this.mouse = {
                now: {},
                pos: {}
            };
            this.value = {
                start: {},
                now: {}
            };
            this.offsetParent = (function(e) {
                var f = e.getOffsetParent();
                var d = !f || (/^(?:body|html)$/i).test(f.tagName);
                return d ? window : document.id(f)
            })(this.element);
            this.selection = "selectstart" in document ? "selectstart" : "mousedown";
            this.compensateScroll = {
                start: {},
                diff: {},
                last: {}
            };
            if ("ondragstart" in document && !("FileReader" in window) && !a.ondragstartFixed) {
                document.ondragstart = Function.convert(false);
                a.ondragstartFixed = true
            }
            this.bound = {
                start: this.start.bind(this),
                check: this.check.bind(this),
                drag: this.drag.bind(this),
                stop: this.stop.bind(this),
                cancel: this.cancel.bind(this),
                eventStop: Function.convert(false),
                scrollListener: this.scrollListener.bind(this)
            };
            this.attach()
        },
        attach: function() {
            this.handles.addEvent("mousedown", this.bound.start);
            this.handles.addEvent("touchstart", this.bound.start);
            if (this.options.compensateScroll) {
                this.offsetParent.addEvent("scroll", this.bound.scrollListener)
            }
            return this
        },
        detach: function() {
            this.handles.removeEvent("mousedown", this.bound.start);
            this.handles.removeEvent("touchstart", this.bound.start);
            if (this.options.compensateScroll) {
                this.offsetParent.removeEvent("scroll", this.bound.scrollListener)
            }
            return this
        },
        scrollListener: function() {
            if (!this.mouse.start) {
                return
            }
            var b = this.offsetParent.getScroll();
            if (this.element.getStyle("position") == "absolute") {
                var c = this.sumValues(b, this.compensateScroll.last, -1);
                this.mouse.now = this.sumValues(this.mouse.now, c, 1)
            } else {
                this.compensateScroll.diff = this.sumValues(b, this.compensateScroll.start, -1)
            }
            if (this.offsetParent != window) {
                this.compensateScroll.diff = this.sumValues(this.compensateScroll.start, b, -1)
            }
            this.compensateScroll.last = b;
            this.render(this.options)
        },
        sumValues: function(e, d, g) {
            var c = {},
                b = this.options;
            for (var f in b.modifiers) {
                if (!b.modifiers[f]) {
                    continue
                }
                c[f] = e[f] + d[f] * g
            }
            return c
        },
        start: function(b) {
            if (this.options.unDraggableTags.contains(b.target.get("tag"))) {
                return
            }
            var n = this.options;
            if (b.rightClick) {
                return
            }
            if (n.preventDefault) {
                b.preventDefault()
            }
            if (n.stopPropagation) {
                b.stopPropagation()
            }
            this.compensateScroll.start = this.compensateScroll.last = this.offsetParent.getScroll();
            this.compensateScroll.diff = {
                x: 0,
                y: 0
            };
            this.mouse.start = b.page;
            this.fireEvent("beforeStart", this.element);
            var e = n.limit;
            this.limit = {
                x: [],
                y: []
            };
            var g, k, c = this.offsetParent == window ? null : this.offsetParent;
            for (g in n.modifiers) {
                if (!n.modifiers[g]) {
                    continue
                }
                var d = this.element.getStyle(n.modifiers[g]);
                if (d && !d.match(/px$/)) {
                    if (!k) {
                        k = this.element.getCoordinates(c)
                    }
                    d = k[n.modifiers[g]]
                }
                if (n.style) {
                    this.value.now[g] = (d || 0).toInt()
                } else {
                    this.value.now[g] = this.element[n.modifiers[g]]
                }
                if (n.invert) {
                    this.value.now[g] *= -1
                }
                this.mouse.pos[g] = b.page[g] - this.value.now[g];
                if (e && e[g]) {
                    var f = 2;
                    while (f--) {
                        var h = e[g][f];
                        if (h || h === 0) {
                            this.limit[g][f] = (typeof h == "function") ? h() : h
                        }
                    }
                }
            }
            if (typeOf(this.options.grid) == "number") {
                this.options.grid = {
                    x: this.options.grid,
                    y: this.options.grid
                }
            }
            var m = {
                mousemove: this.bound.check,
                mouseup: this.bound.cancel,
                touchmove: this.bound.check,
                touchend: this.bound.cancel
            };
            m[this.selection] = this.bound.eventStop;
            this.document.addEvents(m)
        },
        check: function(b) {
            if (this.options.preventDefault) {
                b.preventDefault()
            }
            var c = Math.round(Math.sqrt(Math.pow(b.page.x - this.mouse.start.x, 2) + Math.pow(b.page.y - this.mouse.start.y, 2)));
            if (c > this.options.snap) {
                this.cancel();
                this.document.addEvents({
                    mousemove: this.bound.drag,
                    mouseup: this.bound.stop,
                    touchmove: this.bound.drag,
                    touchend: this.bound.stop
                });
                this.fireEvent("start", [this.element, b]).fireEvent("snap", this.element)
            }
        },
        drag: function(c) {
            var b = this.options;
            if (b.preventDefault) {
                c.preventDefault()
            }
            this.mouse.now = this.sumValues(c.page, this.compensateScroll.diff, -1);
            this.render(b);
            this.fireEvent("drag", [this.element, c])
        },
        render: function(b) {
            for (var c in b.modifiers) {
                if (!b.modifiers[c]) {
                    continue
                }
                this.value.now[c] = this.mouse.now[c] - this.mouse.pos[c];
                if (b.invert) {
                    this.value.now[c] *= -1
                }
                if (b.limit && this.limit[c]) {
                    if ((this.limit[c][1] || this.limit[c][1] === 0) && (this.value.now[c] > this.limit[c][1])) {
                        this.value.now[c] = this.limit[c][1]
                    } else {
                        if ((this.limit[c][0] || this.limit[c][0] === 0) && (this.value.now[c] < this.limit[c][0])) {
                            this.value.now[c] = this.limit[c][0]
                        }
                    }
                }
                if (b.grid[c]) {
                    this.value.now[c] -= ((this.value.now[c] - (this.limit[c][0] || 0)) % b.grid[c])
                }
                if (b.style) {
                    this.element.setStyle(b.modifiers[c], this.value.now[c] + b.unit)
                } else {
                    this.element[b.modifiers[c]] = this.value.now[c]
                }
            }
        },
        cancel: function(b) {
            this.document.removeEvents({
                mousemove: this.bound.check,
                mouseup: this.bound.cancel,
                touchmove: this.bound.check,
                touchend: this.bound.cancel
            });
            if (b) {
                this.document.removeEvent(this.selection, this.bound.eventStop);
                this.fireEvent("cancel", this.element)
            }
        },
        stop: function(c) {
            var b = {
                mousemove: this.bound.drag,
                mouseup: this.bound.stop,
                touchmove: this.bound.drag,
                touchend: this.bound.stop
            };
            b[this.selection] = this.bound.eventStop;
            this.document.removeEvents(b);
            this.mouse.start = null;
            if (c) {
                this.fireEvent("complete", [this.element, c])
            }
        }
    })
})();
Element.implement({
    makeResizable: function(a) {
        var b = new Drag(this, Object.merge({
            modifiers: {
                x: "width",
                y: "height"
            }
        }, a));
        this.store("resizer", b);
        return b.addEvent("drag", function() {
            this.fireEvent("resize", b)
        }.bind(this))
    }
});
Drag.Move = new Class({
    Extends: Drag,
    options: {
        droppables: [],
        container: false,
        precalculate: false,
        includeMargins: true,
        checkDroppables: true
    },
    initialize: function(b, a) {
        this.parent(b, a);
        b = this.element;
        this.droppables = $$(this.options.droppables);
        this.setContainer(this.options.container);
        if (this.options.style) {
            if (this.options.modifiers.x == "left" && this.options.modifiers.y == "top") {
                var c = b.getOffsetParent(),
                    d = b.getStyles("left", "top");
                if (c && (d.left == "auto" || d.top == "auto")) {
                    b.setPosition(b.getPosition(c))
                }
            }
            if (b.getStyle("position") == "static") {
                b.setStyle("position", "absolute")
            }
        }
        this.addEvent("start", this.checkDroppables, true);
        this.overed = null
    },
    setContainer: function(a) {
        this.container = document.id(a);
        if (this.container && typeOf(this.container) != "element") {
            this.container = document.id(this.container.getDocument().body)
        }
    },
    start: function(a) {
        if (this.container) {
            this.options.limit = this.calculateLimit()
        }
        if (this.options.precalculate) {
            this.positions = this.droppables.map(function(b) {
                return b.getCoordinates()
            })
        }
        this.parent(a)
    },
    calculateLimit: function() {
        var n = this.element,
            f = this.container,
            e = document.id(n.getOffsetParent()) || document.body,
            k = f.getCoordinates(e),
            d = {},
            c = {},
            o = {},
            h = {},
            q = {},
            b = e.getScroll();
        ["top", "right", "bottom", "left"].each(function(u) {
            d[u] = n.getStyle("margin-" + u).toInt();
            c[u] = n.getStyle("border-" + u).toInt();
            o[u] = f.getStyle("margin-" + u).toInt();
            h[u] = f.getStyle("border-" + u).toInt();
            q[u] = e.getStyle("padding-" + u).toInt()
        }, this);
        var g = n.offsetWidth + d.left + d.right,
            t = n.offsetHeight + d.top + d.bottom,
            m = 0 + b.x,
            p = 0 + b.y,
            s = k.right - h.right - g + b.x,
            a = k.bottom - h.bottom - t + b.y;
        if (this.options.includeMargins) {
            m += d.left;
            p += d.top
        } else {
            s += d.right;
            a += d.bottom
        }
        if (n.getStyle("position") == "relative") {
            var r = n.getCoordinates(e);
            r.left -= n.getStyle("left").toInt();
            r.top -= n.getStyle("top").toInt();
            m -= r.left;
            p -= r.top;
            if (f.getStyle("position") != "relative") {
                m += h.left;
                p += h.top
            }
            s += d.left - r.left;
            a += d.top - r.top;
            if (f != e) {
                m += o.left + q.left;
                if (!q.left && m < 0) {
                    m = 0
                }
                p += e == document.body ? 0 : o.top + q.top;
                if (!q.top && p < 0) {
                    p = 0
                }
            }
        } else {
            m -= d.left;
            p -= d.top;
            if (f != e) {
                m += k.left + h.left;
                p += k.top + h.top
            }
        }
        return {
            x: [m, s],
            y: [p, a]
        }
    },
    getDroppableCoordinates: function(c) {
        var b = c.getCoordinates();
        if (c.getStyle("position") == "fixed") {
            var a = window.getScroll();
            b.left += a.x;
            b.right += a.x;
            b.top += a.y;
            b.bottom += a.y
        }
        return b
    },
    checkDroppables: function() {
        var a = this.droppables.filter(function(d, c) {
            d = this.positions ? this.positions[c] : this.getDroppableCoordinates(d);
            var b = this.mouse.now;
            return (b.x > d.left && b.x < d.right && b.y < d.bottom && b.y > d.top)
        }, this).getLast();
        if (this.overed != a) {
            if (this.overed) {
                this.fireEvent("leave", [this.element, this.overed])
            }
            if (a) {
                this.fireEvent("enter", [this.element, a])
            }
            this.overed = a
        }
    },
    drag: function(a) {
        this.parent(a);
        if (this.options.checkDroppables && this.droppables.length) {
            this.checkDroppables()
        }
    },
    stop: function(a) {
        this.checkDroppables();
        this.fireEvent("drop", [this.element, this.overed, a]);
        this.overed = null;
        return this.parent(a)
    }
});
Element.implement({
    makeDraggable: function(a) {
        var b = new Drag.Move(this, a);
        this.store("dragger", b);
        return b
    }
});
(function() {
    var b = function(e, d) {
        var f = [];
        Object.each(d, function(g) {
            Object.each(g, function(h) {
                e.each(function(k) {
                    f.push(k + "-" + h + (k == "border" ? "-width" : ""))
                })
            })
        });
        return f
    };
    var c = function(f, e) {
        var d = 0;
        Object.each(e, function(h, g) {
            if (g.test(f)) {
                d = d + h.toInt()
            }
        });
        return d
    };
    var a = function(d) {
        return !!(!d || d.offsetHeight || d.offsetWidth)
    };
    Element.implement({
        measure: function(h) {
            if (a(this)) {
                return h.call(this)
            }
            var g = this.getParent(),
                e = [];
            while (!a(g) && g != document.body) {
                e.push(g.expose());
                g = g.getParent()
            }
            var f = this.expose(),
                d = h.call(this);
            f();
            e.each(function(k) {
                k()
            });
            return d
        },
        expose: function() {
            if (this.getStyle("display") != "none") {
                return function() {}
            }
            var d = this.style.cssText;
            this.setStyles({
                display: "block",
                position: "absolute",
                visibility: "hidden"
            });
            return function() {
                this.style.cssText = d
            }.bind(this)
        },
        getDimensions: function(d) {
            d = Object.merge({
                computeSize: false
            }, d);
            var k = {
                x: 0,
                y: 0
            };
            var h = function(m, e) {
                return (e.computeSize) ? m.getComputedSize(e) : m.getSize()
            };
            var f = this.getParent("body");
            if (f && this.getStyle("display") == "none") {
                k = this.measure(function() {
                    return h(this, d)
                })
            } else {
                if (f) {
                    try {
                        k = h(this, d)
                    } catch (g) {}
                }
            }
            return Object.append(k, (k.x || k.x === 0) ? {
                width: k.x,
                height: k.y
            } : {
                x: k.width,
                y: k.height
            })
        },
        getComputedSize: function(d) {
            d = Object.merge({
                styles: ["padding", "border"],
                planes: {
                    height: ["top", "bottom"],
                    width: ["left", "right"]
                },
                mode: "both"
            }, d);
            var g = {},
                e = {
                    width: 0,
                    height: 0
                },
                f;
            if (d.mode == "vertical") {
                delete e.width;
                delete d.planes.width
            } else {
                if (d.mode == "horizontal") {
                    delete e.height;
                    delete d.planes.height
                }
            }
            b(d.styles, d.planes).each(function(h) {
                g[h] = this.getStyle(h).toInt()
            }, this);
            Object.each(d.planes, function(k, h) {
                var n = h.capitalize(),
                    m = this.getStyle(h);
                if (m == "auto" && !f) {
                    f = this.getDimensions()
                }
                m = g[h] = (m == "auto") ? f[h] : m.toInt();
                e["total" + n] = m;
                k.each(function(p) {
                    var o = c(p, g);
                    e["computed" + p.capitalize()] = o;
                    e["total" + n] += o
                })
            }, this);
            return Object.append(e, g)
        }
    })
})();
(function() {
    var a = this.Slider = new Class({
        Implements: [Events, Options],
        Binds: ["clickedElement", "draggedKnob", "scrolledElement"],
        options: {
            onTick: function(b) {
                this.setKnobPosition(b)
            },
            initialStep: 0,
            snap: false,
            offset: 0,
            range: false,
            wheel: false,
            steps: 100,
            mode: "horizontal"
        },
        initialize: function(g, b, f) {
            this.setOptions(f);
            f = this.options;
            this.element = document.id(g);
            b = this.knob = document.id(b);
            this.previousChange = this.previousEnd = this.step = f.initialStep ? f.initialStep : f.range ? f.range[0] : 0;
            var c = {},
                e = {
                    x: false,
                    y: false
                };
            switch (f.mode) {
                case "vertical":
                    this.axis = "y";
                    this.property = "top";
                    this.offset = "offsetHeight";
                    break;
                case "horizontal":
                    this.axis = "x";
                    this.property = "left";
                    this.offset = "offsetWidth"
            }
            this.setSliderDimensions();
            this.setRange(f.range, null, true);
            if (b.getStyle("position") == "static") {
                b.setStyle("position", "relative")
            }
            b.setStyle(this.property, -f.offset);
            e[this.axis] = this.property;
            c[this.axis] = [-f.offset, this.full - f.offset];
            var d = {
                snap: 0,
                limit: c,
                modifiers: e,
                onDrag: this.draggedKnob,
                onStart: this.draggedKnob,
                onBeforeStart: (function() {
                    this.isDragging = true
                }).bind(this),
                onCancel: function() {
                    this.isDragging = false
                }.bind(this),
                onComplete: function() {
                    this.isDragging = false;
                    this.draggedKnob();
                    this.end()
                }.bind(this)
            };
            if (f.snap) {
                this.setSnap(d)
            }
            this.drag = new Drag(b, d);
            if (f.initialStep != null) {
                this.set(f.initialStep, true)
            }
            this.attach()
        },
        attach: function() {
            this.element.addEvent("mousedown", this.clickedElement);
            if (this.options.wheel) {
                this.element.addEvent("mousewheel", this.scrolledElement)
            }
            this.drag.attach();
            return this
        },
        detach: function() {
            this.element.removeEvent("mousedown", this.clickedElement).removeEvent("mousewheel", this.scrolledElement);
            this.drag.detach();
            return this
        },
        autosize: function() {
            this.setSliderDimensions().setKnobPosition(this.toPosition(this.step));
            this.drag.options.limit[this.axis] = [-this.options.offset, this.full - this.options.offset];
            if (this.options.snap) {
                this.setSnap()
            }
            return this
        },
        setSnap: function(b) {
            if (!b) {
                b = this.drag.options
            }
            b.grid = Math.ceil(this.stepWidth);
            b.limit[this.axis][1] = this.element[this.offset];
            return this
        },
        setKnobPosition: function(b) {
            if (this.options.snap) {
                b = this.toPosition(this.step)
            }
            this.knob.setStyle(this.property, b);
            return this
        },
        setSliderDimensions: function() {
            this.full = this.element.measure(function() {
                this.half = this.knob[this.offset] / 2;
                return this.element[this.offset] - this.knob[this.offset] + (this.options.offset * 2)
            }.bind(this));
            return this
        },
        set: function(b, c) {
            if (!((this.range > 0) ^ (b < this.min))) {
                b = this.min
            }
            if (!((this.range > 0) ^ (b > this.max))) {
                b = this.max
            }
            this.step = (b).round(this.modulus.decimalLength);
            if (c) {
                this.checkStep().setKnobPosition(this.toPosition(this.step))
            } else {
                this.checkStep().fireEvent("tick", this.toPosition(this.step)).fireEvent("move").end()
            }
            return this
        },
        setRange: function(c, e, d) {
            this.min = Array.pick([c[0], 0]);
            this.max = Array.pick([c[1], this.options.steps]);
            this.range = this.max - this.min;
            this.steps = this.options.steps || this.full;
            var b = this.stepSize = Math.abs(this.range) / this.steps;
            this.stepWidth = this.stepSize * this.full / Math.abs(this.range);
            this.setModulus();
            if (c) {
                this.set(Array.pick([e, this.step]).limit(this.min, this.max), d)
            }
            return this
        },
        setModulus: function() {
            var b = ((this.stepSize + "").split(".")[1] || []).length,
                c = 1 + "";
            while (b--) {
                c += "0"
            }
            this.modulus = {
                multiplier: (c).toInt(10),
                decimalLength: c.length - 1
            }
        },
        clickedElement: function(d) {
            if (this.isDragging || d.target == this.knob) {
                return
            }
            var c = this.range < 0 ? -1 : 1,
                b = d.page[this.axis] - this.element.getPosition()[this.axis] - this.half;
            b = b.limit(-this.options.offset, this.full - this.options.offset);
            this.step = (this.min + c * this.toStep(b)).round(this.modulus.decimalLength);
            this.checkStep().fireEvent("tick", b).fireEvent("move").end()
        },
        scrolledElement: function(b) {
            var c = (this.options.mode == "horizontal") ? (b.wheel < 0) : (b.wheel > 0);
            this.set(this.step + (c ? -1 : 1) * this.stepSize);
            b.stop()
        },
        draggedKnob: function() {
            var c = this.range < 0 ? -1 : 1,
                b = this.drag.value.now[this.axis];
            b = b.limit(-this.options.offset, this.full - this.options.offset);
            this.step = (this.min + c * this.toStep(b)).round(this.modulus.decimalLength);
            this.checkStep();
            this.fireEvent("move")
        },
        checkStep: function() {
            var b = this.step;
            if (this.previousChange != b) {
                this.previousChange = b;
                this.fireEvent("change", b)
            }
            return this
        },
        end: function() {
            var b = this.step;
            if (this.previousEnd !== b) {
                this.previousEnd = b;
                this.fireEvent("complete", b + "")
            }
            return this
        },
        toStep: function(b) {
            var c = (b + this.options.offset) * this.stepSize / this.full * this.steps;
            return this.options.steps ? (c - (c * this.modulus.multiplier) % (this.stepSize * this.modulus.multiplier) / this.modulus.multiplier).round(this.modulus.decimalLength) : c
        },
        toPosition: function(b) {
            return (this.full * Math.abs(this.min - b)) / (this.steps * this.stepSize) - this.options.offset || 0
        }
    })
})();
(function() {
    var a = this.Sortables = new Class({
        Implements: [Events, Options],
        options: {
            opacity: 1,
            clone: false,
            revert: false,
            handle: false,
            dragOptions: {},
            unDraggableTags: ["button", "input", "a", "textarea", "select", "option"]
        },
        initialize: function(b, c) {
            this.setOptions(c);
            this.elements = [];
            this.lists = [];
            this.idle = true;
            this.addLists($$(document.id(b) || b));
            if (!this.options.clone) {
                this.options.revert = false
            }
            if (this.options.revert) {
                this.effect = new Fx.Morph(null, Object.merge({
                    duration: 250,
                    link: "cancel"
                }, this.options.revert))
            }
        },
        attach: function() {
            this.addLists(this.lists);
            return this
        },
        detach: function() {
            this.lists = this.removeLists(this.lists);
            return this
        },
        addItems: function() {
            Array.flatten(arguments).each(function(b) {
                this.elements.push(b);
                var c = b.retrieve("sortables:start", function(d) {
                    this.start.call(this, d, b)
                }.bind(this));
                (this.options.handle ? b.getElement(this.options.handle) || b : b).addEvent("mousedown", c)
            }, this);
            return this
        },
        addLists: function() {
            Array.flatten(arguments).each(function(b) {
                this.lists.include(b);
                this.addItems(b.getChildren())
            }, this);
            return this
        },
        removeItems: function() {
            return $$(Array.flatten(arguments).map(function(b) {
                this.elements.erase(b);
                var c = b.retrieve("sortables:start");
                (this.options.handle ? b.getElement(this.options.handle) || b : b).removeEvent("mousedown", c);
                return b
            }, this))
        },
        removeLists: function() {
            return $$(Array.flatten(arguments).map(function(b) {
                this.lists.erase(b);
                this.removeItems(b.getChildren());
                return b
            }, this))
        },
        getDroppableCoordinates: function(d) {
            var e = d.getOffsetParent();
            var c = d.getPosition(e);
            var b = {
                w: window.getScroll(),
                offsetParent: e.getScroll()
            };
            c.x += b.offsetParent.x;
            c.y += b.offsetParent.y;
            if (e.getStyle("position") == "fixed") {
                c.x -= b.w.x;
                c.y -= b.w.y
            }
            return c
        },
        getClone: function(c, b) {
            if (!this.options.clone) {
                return new Element(b.tagName).inject(document.body)
            }
            if (typeOf(this.options.clone) == "function") {
                return this.options.clone.call(this, c, b, this.list)
            }
            var d = b.clone(true).setStyles({
                margin: 0,
                position: "absolute",
                visibility: "hidden",
                width: b.getStyle("width")
            }).addEvent("mousedown", function(e) {
                b.fireEvent("mousedown", e)
            });
            if (d.get("html").test("radio")) {
                d.getElements("input[type=radio]").each(function(e, f) {
                    e.set("name", "clone_" + f);
                    if (e.get("checked")) {
                        b.getElements("input[type=radio]")[f].set("checked", true)
                    }
                })
            }
            return d.inject(this.list).setPosition(this.getDroppableCoordinates(this.element))
        },
        getDroppables: function() {
            var b = this.list.getChildren().erase(this.clone).erase(this.element);
            if (!this.options.constrain) {
                b.append(this.lists).erase(this.list)
            }
            return b
        },
        insert: function(d, c) {
            var b = "inside";
            if (this.lists.contains(c)) {
                this.list = c;
                this.drag.droppables = this.getDroppables()
            } else {
                b = this.element.getAllPrevious().contains(c) ? "before" : "after"
            }
            this.element.inject(c, b);
            this.fireEvent("sort", [this.element, this.clone])
        },
        start: function(c, b) {
            if (!this.idle || c.rightClick || (!this.options.handle && this.options.unDraggableTags.contains(c.target.get("tag")))) {
                return
            }
            this.idle = false;
            this.element = b;
            this.opacity = b.getStyle("opacity");
            this.list = b.getParent();
            this.clone = this.getClone(c, b);
            this.drag = new Drag.Move(this.clone, Object.merge({
                droppables: this.getDroppables()
            }, this.options.dragOptions)).addEvents({
                onSnap: function() {
                    c.stop();
                    this.clone.setStyle("visibility", "visible");
                    this.element.setStyle("opacity", this.options.opacity || 0);
                    this.fireEvent("start", [this.element, this.clone])
                }.bind(this),
                onEnter: this.insert.bind(this),
                onCancel: this.end.bind(this),
                onComplete: this.end.bind(this)
            });
            this.clone.inject(this.element, "before");
            this.drag.start(c)
        },
        end: function() {
            this.drag.detach();
            this.element.setStyle("opacity", this.opacity);
            var b = this;
            if (this.effect) {
                var d = this.element.getStyles("width", "height"),
                    f = this.clone,
                    e = f.computePosition(this.getDroppableCoordinates(f));
                var c = function() {
                    this.removeEvent("cancel", c);
                    f.destroy();
                    b.reset()
                };
                this.effect.element = f;
                this.effect.start({
                    top: e.top,
                    left: e.left,
                    width: d.width,
                    height: d.height,
                    opacity: 0.25
                }).addEvent("cancel", c).chain(c)
            } else {
                this.clone.destroy();
                b.reset()
            }
        },
        reset: function() {
            this.idle = true;
            this.fireEvent("complete", this.element)
        },
        serialize: function() {
            var d = Array.link(arguments, {
                modifier: Type.isFunction,
                index: function(e) {
                    return e != null
                }
            });
            var c = this.lists.map(function(e) {
                return e.getChildren().map(d.modifier || function(f) {
                    return f.get("id")
                }, this)
            }, this);
            var b = d.index;
            if (this.lists.length == 1) {
                b = 0
            }
            return (b || b === 0) && b >= 0 && b < this.lists.length ? c[b] : c
        }
    })
})();
(function() {
    var d = {
            relay: false
        },
        c = ["once", "throttle", "pause"],
        b = c.length;
    while (b--) {
        d[c[b]] = Events.lookupPseudo(c[b])
    }
    DOMEvent.definePseudo = function(e, f) {
        d[e] = f;
        return this
    };
    var a = Element.prototype;
    [Element, Window, Document].invoke("implement", Events.Pseudos(d, a.addEvent, a.removeEvent))
})();
(function() {
    var a = "$moo:keys-pressed",
        b = "$moo:keys-keyup";
    DOMEvent.definePseudo("keys", function(d, e, c) {
        var g = c[0],
            f = [],
            k = this.retrieve(a, []),
            h = d.value;
        if (h != "+") {
            f.append(h.replace("++", function() {
                f.push("+");
                return ""
            }).split("+"))
        } else {
            f = ["+"]
        }
        k.include(g.key);
        if (f.every(function(n) {
                return k.contains(n)
            })) {
            e.apply(this, c)
        }
        this.store(a, k);
        if (!this.retrieve(b)) {
            var m = function(n) {
                (function() {
                    k = this.retrieve(a, []).erase(n.key);
                    this.store(a, k)
                }).delay(0, this)
            };
            this.store(b, m).addEvent("keyup", m)
        }
    });
    DOMEvent.defineKeys({
        "16": "shift",
        "17": "control",
        "18": "alt",
        "20": "capslock",
        "33": "pageup",
        "34": "pagedown",
        "35": "end",
        "36": "home",
        "144": "numlock",
        "145": "scrolllock",
        "186": ";",
        "187": "=",
        "188": ",",
        "190": ".",
        "191": "/",
        "192": "`",
        "219": "[",
        "220": "\\",
        "221": "]",
        "222": "'",
        "107": "+",
        "109": "-",
        "189": "-"
    })
})();
(function() {
    var e = {
            a: /[Ã Ã¡Ã¢Ã£Ã¤Ã¥ÄƒÄ…]/g,
            A: /[Ã€ÃÃ‚ÃƒÃ„Ã…Ä‚Ä„]/g,
            c: /[Ä‡ÄÃ§]/g,
            C: /[Ä†ÄŒÃ‡]/g,
            d: /[ÄÄ‘]/g,
            D: /[ÄŽÃ]/g,
            e: /[Ã¨Ã©ÃªÃ«Ä›Ä™]/g,
            E: /[ÃˆÃ‰ÃŠÃ‹ÄšÄ˜]/g,
            g: /[ÄŸ]/g,
            G: /[Äž]/g,
            i: /[Ã¬Ã­Ã®Ã¯]/g,
            I: /[ÃŒÃÃŽÃ]/g,
            l: /[ÄºÄ¾Å‚]/g,
            L: /[Ä¹Ä½Å]/g,
            n: /[Ã±ÅˆÅ„]/g,
            N: /[Ã‘Å‡Åƒ]/g,
            o: /[Ã²Ã³Ã´ÃµÃ¶Ã¸Å‘]/g,
            O: /[Ã’Ã“Ã”Ã•Ã–Ã˜]/g,
            r: /[Å™Å•]/g,
            R: /[Å˜Å”]/g,
            s: /[Å¡Å¡ÅŸ]/g,
            S: /[Å ÅžÅš]/g,
            t: /[Å¥Å£]/g,
            T: /[Å¤Å¢]/g,
            u: /[Ã¹ÃºÃ»Å¯Ã¼Âµ]/g,
            U: /[Ã™ÃšÃ›Å®Ãœ]/g,
            y: /[Ã¿Ã½]/g,
            Y: /[Å¸Ã]/g,
            z: /[Å¾ÅºÅ¼]/g,
            Z: /[Å½Å¹Å»]/g,
            th: /[Ã¾]/g,
            TH: /[Ãž]/g,
            dh: /[Ã°]/g,
            DH: /[Ã]/g,
            ss: /[ÃŸ]/g,
            oe: /[Å“]/g,
            OE: /[Å’]/g,
            ae: /[Ã¦]/g,
            AE: /[Ã†]/g
        },
        d = {
            " ": /[\xa0\u2002\u2003\u2009]/g,
            "*": /[\xb7]/g,
            "'": /[\u2018\u2019]/g,
            '"': /[\u201c\u201d]/g,
            "...": /[\u2026]/g,
            "-": /[\u2013]/g,
            "&raquo;": /[\uFFFD]/g
        },
        c = {
            ms: 1,
            s: 1000,
            m: 60000,
            h: 3600000
        },
        b = /(\d*.?\d+)([msh]+)/;
    var a = function(h, m) {
        var g = h,
            k;
        for (k in m) {
            g = g.replace(m[k], k)
        }
        return g
    };
    var f = function(g, h) {
        g = g || (h ? "" : "\\w+");
        var k = h ? "<" + g + "(?!\\w)[^>]*>([\\s\\S]*?)</" + g + "(?!\\w)>" : "</?" + g + "/?>|<" + g + "[\\s|/][^>]*>";
        return new RegExp(k, "gi")
    };
    String.implement({
        standardize: function() {
            return a(this, e)
        },
        repeat: function(g) {
            return new Array(g + 1).join(this)
        },
        pad: function(g, m, k) {
            if (this.length >= g) {
                return this
            }
            var h = (m == null ? " " : "" + m).repeat(g - this.length).substr(0, g - this.length);
            if (!k || k == "right") {
                return this + h
            }
            if (k == "left") {
                return h + this
            }
            return h.substr(0, (h.length / 2).floor()) + this + h.substr(0, (h.length / 2).ceil())
        },
        getTags: function(g, h) {
            return this.match(f(g, h)) || []
        },
        stripTags: function(g, h) {
            return this.replace(f(g, h), "")
        },
        tidy: function() {
            return a(this, d)
        },
        truncate: function(g, h, n) {
            var m = this;
            if (h == null && arguments.length == 1) {
                h = "â€¦"
            }
            if (m.length > g) {
                m = m.substring(0, g);
                if (n) {
                    var k = m.lastIndexOf(n);
                    if (k != -1) {
                        m = m.substr(0, k)
                    }
                }
                if (h) {
                    m += h
                }
            }
            return m
        },
        ms: function() {
            var g = b.exec(this);
            if (g == null) {
                return Number(this)
            }
            return Number(g[1]) * c[g[2]]
        }
    })
})();
Element.implement({
    tidy: function() {
        this.set("value", this.get("value").tidy())
    },
    getTextInRange: function(b, a) {
        return this.get("value").substring(b, a)
    },
    getSelectedText: function() {
        if (this.setSelectionRange) {
            return this.getTextInRange(this.getSelectionStart(), this.getSelectionEnd())
        }
        return document.selection.createRange().text
    },
    getSelectedRange: function() {
        if (this.selectionStart != null) {
            return {
                start: this.selectionStart,
                end: this.selectionEnd
            }
        }
        var e = {
            start: 0,
            end: 0
        };
        var a = this.getDocument().selection.createRange();
        if (!a || a.parentElement() != this) {
            return e
        }
        var c = a.duplicate();
        if (this.type == "text") {
            e.start = 0 - c.moveStart("character", -100000);
            e.end = e.start + a.text.length
        } else {
            var b = this.get("value");
            var d = b.length;
            c.moveToElementText(this);
            c.setEndPoint("StartToEnd", a);
            if (c.text.length) {
                d -= b.match(/[\n\r]*$/)[0].length
            }
            e.end = d - c.text.length;
            c.setEndPoint("StartToStart", a);
            e.start = d - c.text.length
        }
        return e
    },
    getSelectionStart: function() {
        return this.getSelectedRange().start
    },
    getSelectionEnd: function() {
        return this.getSelectedRange().end
    },
    setCaretPosition: function(a) {
        if (a == "end") {
            a = this.get("value").length
        }
        this.selectRange(a, a);
        return this
    },
    getCaretPosition: function() {
        return this.getSelectedRange().start
    },
    selectRange: function(e, a) {
        if (this.setSelectionRange) {
            this.focus();
            this.setSelectionRange(e, a)
        } else {
            var c = this.get("value");
            var d = c.substr(e, a - e).replace(/\r/g, "").length;
            e = c.substr(0, e).replace(/\r/g, "").length;
            var b = this.createTextRange();
            b.collapse(true);
            b.moveEnd("character", e + d);
            b.moveStart("character", e);
            b.select()
        }
        return this
    },
    insertAtCursor: function(b, a) {
        var d = this.getSelectedRange();
        var c = this.get("value");
        this.set("value", c.substring(0, d.start) + b + c.substring(d.end, c.length));
        if (a !== false) {
            this.selectRange(d.start, d.start + b.length)
        } else {
            this.setCaretPosition(d.start + b.length)
        }
        return this
    },
    insertAroundCursor: function(b, a) {
        b = Object.append({
            before: "",
            defaultMiddle: "",
            after: ""
        }, b);
        var c = this.getSelectedText() || b.defaultMiddle;
        var g = this.getSelectedRange();
        var f = this.get("value");
        if (g.start == g.end) {
            this.set("value", f.substring(0, g.start) + b.before + c + b.after + f.substring(g.end, f.length));
            this.selectRange(g.start + b.before.length, g.end + b.before.length + c.length)
        } else {
            var d = f.substring(g.start, g.end);
            this.set("value", f.substring(0, g.start) + b.before + d + b.after + f.substring(g.end, f.length));
            var e = g.start + b.before.length;
            if (a !== false) {
                this.selectRange(e, e + d.length)
            } else {
                this.setCaretPosition(e + f.length)
            }
        }
        return this
    }
});
(function() {
    var a = false,
        b = false;
    var c = function() {
        var d = new Element("div").setStyles({
            position: "fixed",
            top: 0,
            right: 0
        }).inject(document.body);
        a = (d.offsetTop === 0);
        d.dispose();
        b = true
    };
    Element.implement({
        pin: function(h, f) {
            if (!b) {
                c()
            }
            if (this.getStyle("display") == "none") {
                return this
            }
            var m, n = window.getScroll(),
                o, e;
            if (h !== false) {
                m = this.getPosition();
                if (!this.retrieve("pin:_pinned")) {
                    var g = {
                        top: m.y - n.y,
                        left: m.x - n.x,
                        margin: "0px",
                        padding: "0px"
                    };
                    if (a && !f) {
                        this.setStyle("position", "fixed").setStyles(g)
                    } else {
                        o = this.getOffsetParent();
                        var k = this.getPosition(o),
                            p = this.getStyles("left", "top");
                        if (o && p.left == "auto" || p.top == "auto") {
                            this.setPosition(k)
                        }
                        if (this.getStyle("position") == "static") {
                            this.setStyle("position", "absolute")
                        }
                        k = {
                            x: p.left.toInt() - n.x,
                            y: p.top.toInt() - n.y
                        };
                        e = function() {
                            if (!this.retrieve("pin:_pinned")) {
                                return
                            }
                            var q = window.getScroll();
                            this.setStyles({
                                left: k.x + q.x,
                                top: k.y + q.y
                            })
                        }.bind(this);
                        this.store("pin:_scrollFixer", e);
                        window.addEvent("scroll", e)
                    }
                    this.store("pin:_pinned", true)
                }
            } else {
                if (!this.retrieve("pin:_pinned")) {
                    return this
                }
                o = this.getParent();
                var d = (o.getComputedStyle("position") != "static" ? o : o.getOffsetParent());
                m = this.getPosition();
                this.store("pin:_pinned", false);
                e = this.retrieve("pin:_scrollFixer");
                if (!e) {
                    this.setStyles({
                        position: "absolute",
                        top: m.y + n.y,
                        left: m.x + n.x
                    })
                } else {
                    this.store("pin:_scrollFixer", null);
                    window.removeEvent("scroll", e)
                }
                this.removeClass("isPinned")
            }
            return this
        },
        unpin: function() {
            return this.pin(false)
        },
        togglePin: function() {
            return this.pin(!this.retrieve("pin:_pinned"))
        }
    })
})();
(function(b) {
    var a = Element.Position = {
        options: {
            relativeTo: document.body,
            position: {
                x: "center",
                y: "center"
            },
            offset: {
                x: 0,
                y: 0
            }
        },
        getOptions: function(d, c) {
            c = Object.merge({}, a.options, c);
            a.setPositionOption(c);
            a.setEdgeOption(c);
            a.setOffsetOption(d, c);
            a.setDimensionsOption(d, c);
            return c
        },
        setPositionOption: function(c) {
            c.position = a.getCoordinateFromValue(c.position)
        },
        setEdgeOption: function(d) {
            var c = a.getCoordinateFromValue(d.edge);
            d.edge = c ? c : (d.position.x == "center" && d.position.y == "center") ? {
                x: "center",
                y: "center"
            } : {
                x: "left",
                y: "top"
            }
        },
        setOffsetOption: function(f, d) {
            var c = {
                x: 0,
                y: 0
            };
            var e = {
                x: 0,
                y: 0
            };
            var g = f.measure(function() {
                return document.id(this.getOffsetParent())
            });
            if (!g || g == f.getDocument().body) {
                return
            }
            e = g.getScroll();
            c = g.measure(function() {
                var k = this.getPosition();
                if (this.getStyle("position") == "fixed") {
                    var h = window.getScroll();
                    k.x += h.x;
                    k.y += h.y
                }
                return k
            });
            d.offset = {
                parentPositioned: g != document.id(d.relativeTo),
                x: d.offset.x - c.x + e.x,
                y: d.offset.y - c.y + e.y
            }
        },
        setDimensionsOption: function(d, c) {
            c.dimensions = d.getDimensions({
                computeSize: true,
                styles: ["padding", "border", "margin"]
            })
        },
        getPosition: function(e, d) {
            var c = {};
            d = a.getOptions(e, d);
            var f = document.id(d.relativeTo) || document.body;
            a.setPositionCoordinates(d, c, f);
            if (d.edge) {
                a.toEdge(c, d)
            }
            var g = d.offset;
            c.left = ((c.x >= 0 || g.parentPositioned || d.allowNegative) ? c.x : 0).toInt();
            c.top = ((c.y >= 0 || g.parentPositioned || d.allowNegative) ? c.y : 0).toInt();
            a.toMinMax(c, d);
            if (d.relFixedPosition || f.getStyle("position") == "fixed") {
                a.toRelFixedPosition(f, c)
            }
            if (d.ignoreScroll) {
                a.toIgnoreScroll(f, c)
            }
            if (d.ignoreMargins) {
                a.toIgnoreMargins(c, d)
            }
            c.left = Math.ceil(c.left);
            c.top = Math.ceil(c.top);
            delete c.x;
            delete c.y;
            return c
        },
        setPositionCoordinates: function(n, g, d) {
            var f = n.offset.y,
                h = n.offset.x,
                e = (d == document.body) ? window.getScroll() : d.getPosition(),
                m = e.y,
                c = e.x,
                k = window.getSize();
            switch (n.position.x) {
                case "left":
                    g.x = c + h;
                    break;
                case "right":
                    g.x = c + h + d.offsetWidth;
                    break;
                default:
                    g.x = c + ((d == document.body ? k.x : d.offsetWidth) / 2) + h;
                    break
            }
            switch (n.position.y) {
                case "top":
                    g.y = m + f;
                    break;
                case "bottom":
                    g.y = m + f + d.offsetHeight;
                    break;
                default:
                    g.y = m + ((d == document.body ? k.y : d.offsetHeight) / 2) + f;
                    break
            }
        },
        toMinMax: function(c, d) {
            var f = {
                    left: "x",
                    top: "y"
                },
                e;
            ["minimum", "maximum"].each(function(g) {
                ["left", "top"].each(function(h) {
                    e = d[g] ? d[g][f[h]] : null;
                    if (e != null && ((g == "minimum") ? c[h] < e : c[h] > e)) {
                        c[h] = e
                    }
                })
            })
        },
        toRelFixedPosition: function(e, c) {
            var d = window.getScroll();
            c.top += d.y;
            c.left += d.x
        },
        toIgnoreScroll: function(e, d) {
            var c = e.getScroll();
            d.top -= c.y;
            d.left -= c.x
        },
        toIgnoreMargins: function(c, d) {
            c.left += d.edge.x == "right" ? d.dimensions["margin-right"] : (d.edge.x != "center" ? -d.dimensions["margin-left"] : -d.dimensions["margin-left"] + ((d.dimensions["margin-right"] + d.dimensions["margin-left"]) / 2));
            c.top += d.edge.y == "bottom" ? d.dimensions["margin-bottom"] : (d.edge.y != "center" ? -d.dimensions["margin-top"] : -d.dimensions["margin-top"] + ((d.dimensions["margin-bottom"] + d.dimensions["margin-top"]) / 2))
        },
        toEdge: function(c, d) {
            var e = {},
                g = d.dimensions,
                f = d.edge;
            switch (f.x) {
                case "left":
                    e.x = 0;
                    break;
                case "right":
                    e.x = -g.x - g.computedRight - g.computedLeft;
                    break;
                default:
                    e.x = -(Math.round(g.totalWidth / 2));
                    break
            }
            switch (f.y) {
                case "top":
                    e.y = 0;
                    break;
                case "bottom":
                    e.y = -g.y - g.computedTop - g.computedBottom;
                    break;
                default:
                    e.y = -(Math.round(g.totalHeight / 2));
                    break
            }
            c.x += e.x;
            c.y += e.y
        },
        getCoordinateFromValue: function(c) {
            if (typeOf(c) != "string") {
                return c
            }
            c = c.toLowerCase();
            return {
                x: c.test("left") ? "left" : (c.test("right") ? "right" : "center"),
                y: c.test(/upper|top/) ? "top" : (c.test("bottom") ? "bottom" : "center")
            }
        }
    };
    Element.implement({
        position: function(d) {
            if (d && (d.x != null || d.y != null)) {
                return (b ? b.apply(this, arguments) : this)
            }
            var c = this.setStyle("position", "absolute").calculatePosition(d);
            return (d && d.returnPos) ? c : this.setStyles(c)
        },
        calculatePosition: function(c) {
            return a.getPosition(this, c)
        }
    })
})(Element.prototype.position);
Element.implement({
    isDisplayed: function() {
        return this.getStyle("display") != "none"
    },
    isVisible: function() {
        var a = this.offsetWidth,
            b = this.offsetHeight;
        return (a == 0 && b == 0) ? false : (a > 0 && b > 0) ? true : this.style.display != "none"
    },
    toggle: function() {
        return this[this.isDisplayed() ? "hide" : "show"]()
    },
    hide: function() {
        var b;
        try {
            b = this.getStyle("display")
        } catch (a) {}
        if (b == "none") {
            return this
        }
        return this.store("element:_originalDisplay", b || "").setStyle("display", "none")
    },
    show: function(a) {
        if (!a && this.isDisplayed()) {
            return this
        }
        a = a || this.retrieve("element:_originalDisplay") || "block";
        return this.setStyle("display", (a == "none") ? "block" : a)
    },
    swapClass: function(a, b) {
        return this.removeClass(a).addClass(b)
    }
});
Document.implement({
    clearSelection: function() {
        if (window.getSelection) {
            var a = window.getSelection();
            if (a && a.removeAllRanges) {
                a.removeAllRanges()
            }
        } else {
            if (document.selection && document.selection.empty) {
                try {
                    document.selection.empty()
                } catch (b) {}
            }
        }
    }
});
Elements.from = function(e, d) {
    if (d || d == null) {
        e = e.stripScripts()
    }
    var b, c = e.match(/^\s*(?:<!--.*?-->\s*)*<(t[dhr]|tbody|tfoot|thead)/i);
    if (c) {
        b = new Element("table");
        var a = c[1].toLowerCase();
        if (["td", "th", "tr"].contains(a)) {
            b = new Element("tbody").inject(b);
            if (a != "tr") {
                b = new Element("tr").inject(b)
            }
        }
    }
    return (b || new Element("div")).set("html", e).getChildren()
};
(function() {
    var b = false;
    var a = this.IframeShim = new Class({
        Implements: [Options, Events, Class.Occlude],
        options: {
            className: "iframeShim",
            src: 'javascript:false;document.write("");',
            display: false,
            zIndex: null,
            margin: 0,
            offset: {
                x: 0,
                y: 0
            },
            browsers: b
        },
        property: "IframeShim",
        initialize: function(d, c) {
            this.element = document.id(d);
            if (this.occlude()) {
                return this.occluded
            }
            this.setOptions(c);
            this.makeShim();
            return this
        },
        makeShim: function() {
            if (this.options.browsers) {
                var e = this.element.getStyle("zIndex").toInt();
                if (!e) {
                    e = 1;
                    var d = this.element.getStyle("position");
                    if (d == "static" || !d) {
                        this.element.setStyle("position", "relative")
                    }
                    this.element.setStyle("zIndex", e)
                }
                e = ((this.options.zIndex != null || this.options.zIndex === 0) && e > this.options.zIndex) ? this.options.zIndex : e - 1;
                if (e < 0) {
                    e = 1
                }
                this.shim = new Element("iframe", {
                    src: this.options.src,
                    scrolling: "no",
                    frameborder: 0,
                    styles: {
                        zIndex: e,
                        position: "absolute",
                        border: "none",
                        filter: "progid:DXImageTransform.Microsoft.Alpha(style=0,opacity=0)"
                    },
                    "class": this.options.className
                }).store("IframeShim", this);
                var c = (function() {
                    this.shim.inject(this.element, "after");
                    this[this.options.display ? "show" : "hide"]();
                    this.fireEvent("inject")
                }).bind(this);
                if (!a.ready) {
                    window.addEvent("load", c)
                } else {
                    c()
                }
            } else {
                this.position = this.hide = this.show = this.dispose = Function.convert(this)
            }
        },
        position: function() {
            if (!a.ready || !this.shim) {
                return this
            }
            var c = this.element.measure(function() {
                return this.getSize()
            });
            if (this.options.margin != undefined) {
                c.x = c.x - (this.options.margin * 2);
                c.y = c.y - (this.options.margin * 2);
                this.options.offset.x += this.options.margin;
                this.options.offset.y += this.options.margin
            }
            this.shim.set({
                width: c.x,
                height: c.y
            }).position({
                relativeTo: this.element,
                offset: this.options.offset
            });
            return this
        },
        hide: function() {
            if (this.shim) {
                this.shim.setStyle("display", "none")
            }
            return this
        },
        show: function() {
            if (this.shim) {
                this.shim.setStyle("display", "block")
            }
            return this.position()
        },
        dispose: function() {
            if (this.shim) {
                this.shim.dispose()
            }
            return this
        },
        destroy: function() {
            if (this.shim) {
                this.shim.destroy()
            }
            return this
        }
    })
})();
window.addEvent("load", function() {
    IframeShim.ready = true
});
(function() {
    var a = this.Mask = new Class({
        Implements: [Options, Events],
        Binds: ["position"],
        options: {
            style: {},
            "class": "mask",
            maskMargins: false,
            useIframeShim: true,
            iframeShimOptions: {}
        },
        initialize: function(c, b) {
            this.target = document.id(c) || document.id(document.body);
            this.target.store("mask", this);
            this.setOptions(b);
            this.render();
            this.inject()
        },
        render: function() {
            this.element = new Element("div", {
                "class": this.options["class"],
                id: this.options.id || "mask-" + String.uniqueID(),
                styles: Object.merge({}, this.options.style, {
                    display: "none"
                }),
                events: {
                    click: function(b) {
                        this.fireEvent("click", b);
                        if (this.options.hideOnClick) {
                            this.hide()
                        }
                    }.bind(this)
                }
            });
            this.hidden = true
        },
        toElement: function() {
            return this.element
        },
        inject: function(c, b) {
            b = b || (this.options.inject ? this.options.inject.where : "") || (this.target == document.body ? "inside" : "after");
            c = c || (this.options.inject && this.options.inject.target) || this.target;
            this.element.inject(c, b);
            if (this.options.useIframeShim) {
                this.shim = new IframeShim(this.element, this.options.iframeShimOptions);
                this.addEvents({
                    show: this.shim.show.bind(this.shim),
                    hide: this.shim.hide.bind(this.shim),
                    destroy: this.shim.destroy.bind(this.shim)
                })
            }
        },
        position: function() {
            this.resize(this.options.width, this.options.height);
            this.element.position({
                relativeTo: this.target,
                position: "topLeft",
                ignoreMargins: !this.options.maskMargins,
                ignoreScroll: this.target == document.body
            });
            return this
        },
        resize: function(b, f) {
            var c = {
                styles: ["padding", "border"]
            };
            if (this.options.maskMargins) {
                c.styles.push("margin")
            }
            var e = this.target.getComputedSize(c);
            if (this.target == document.body) {
                this.element.setStyles({
                    width: 0,
                    height: 0
                });
                var d = window.getScrollSize();
                if (e.totalHeight < d.y) {
                    e.totalHeight = d.y
                }
                if (e.totalWidth < d.x) {
                    e.totalWidth = d.x
                }
            }
            this.element.setStyles({
                width: Array.pick([b, e.totalWidth, e.x]),
                height: Array.pick([f, e.totalHeight, e.y])
            });
            return this
        },
        show: function() {
            if (!this.hidden) {
                return this
            }
            window.addEvent("resize", this.position);
            this.position();
            this.showMask.apply(this, arguments);
            return this
        },
        showMask: function() {
            this.element.setStyle("display", "block");
            this.hidden = false;
            this.fireEvent("show")
        },
        hide: function() {
            if (this.hidden) {
                return this
            }
            window.removeEvent("resize", this.position);
            this.hideMask.apply(this, arguments);
            if (this.options.destroyOnHide) {
                return this.destroy()
            }
            return this
        },
        hideMask: function() {
            this.element.setStyle("display", "none");
            this.hidden = true;
            this.fireEvent("hide")
        },
        toggle: function() {
            this[this.hidden ? "show" : "hide"]()
        },
        destroy: function() {
            this.hide();
            this.element.destroy();
            this.fireEvent("destroy");
            this.target.eliminate("mask")
        }
    })
})();
Element.Properties.mask = {
    set: function(b) {
        var a = this.retrieve("mask");
        if (a) {
            a.destroy()
        }
        return this.eliminate("mask").store("mask:options", b)
    },
    get: function() {
        var a = this.retrieve("mask");
        if (!a) {
            a = new Mask(this, this.retrieve("mask:options"));
            this.store("mask", a)
        }
        return a
    }
};
Element.implement({
    mask: function(a) {
        if (a) {
            this.set("mask", a)
        }
        this.get("mask").show();
        return this
    },
    unmask: function() {
        this.get("mask").hide();
        return this
    }
});
(function() {
    var a = this.Spinner = new Class({
        Extends: this.Mask,
        Implements: Chain,
        options: {
            "class": "spinner",
            containerPosition: {},
            content: {
                "class": "spinner-content"
            },
            messageContainer: {
                "class": "spinner-msg"
            },
            img: {
                "class": "spinner-img"
            },
            fxOptions: {
                link: "chain"
            }
        },
        initialize: function(d, b) {
            this.target = document.id(d) || document.id(document.body);
            this.target.store("spinner", this);
            this.setOptions(b);
            this.render();
            this.inject();
            var c = function() {
                this.active = false
            }.bind(this);
            this.addEvents({
                hide: c,
                show: c
            })
        },
        render: function() {
            this.parent();
            this.element.set("id", this.options.id || "spinner-" + String.uniqueID());
            this.content = document.id(this.options.content) || new Element("div", this.options.content);
            this.content.inject(this.element);
            if (this.options.message) {
                this.msg = document.id(this.options.message) || new Element("p", this.options.messageContainer).appendText(this.options.message);
                this.msg.inject(this.content)
            }
            if (this.options.img) {
                this.img = document.id(this.options.img) || new Element("div", this.options.img);
                this.img.inject(this.content)
            }
            this.element.set("tween", this.options.fxOptions)
        },
        show: function(b) {
            if (this.active) {
                return this.chain(this.show.bind(this))
            }
            if (!this.hidden) {
                this.callChain.delay(20, this);
                return this
            }
            this.target.set("aria-busy", "true");
            this.active = true;
            return this.parent(b)
        },
        showMask: function(b) {
            var c = function() {
                this.content.position(Object.merge({
                    relativeTo: this.element
                }, this.options.containerPosition))
            }.bind(this);
            if (b) {
                this.parent();
                c()
            } else {
                if (!this.options.style.opacity) {
                    this.options.style.opacity = this.element.getStyle("opacity").toFloat()
                }
                this.element.setStyles({
                    display: "block",
                    opacity: 0
                }).tween("opacity", this.options.style.opacity);
                c();
                this.hidden = false;
                this.fireEvent("show");
                this.callChain()
            }
        },
        hide: function(b) {
            if (this.active) {
                return this.chain(this.hide.bind(this))
            }
            if (this.hidden) {
                this.callChain.delay(20, this);
                return this
            }
            this.target.set("aria-busy", "false");
            this.active = true;
            return this.parent(b)
        },
        hideMask: function(b) {
            if (b) {
                return this.parent()
            }
            this.element.tween("opacity", 0).get("tween").chain(function() {
                this.element.setStyle("display", "none");
                this.hidden = true;
                this.fireEvent("hide");
                this.callChain()
            }.bind(this))
        },
        destroy: function() {
            this.content.destroy();
            this.parent();
            this.target.eliminate("spinner")
        }
    })
})();
Request = Class.refactor(Request, {
    options: {
        useSpinner: false,
        spinnerOptions: {},
        spinnerTarget: false
    },
    initialize: function(a) {
        this._send = this.send;
        this.send = function(b) {
            var c = this.getSpinner();
            if (c) {
                c.chain(this._send.pass(b, this)).show()
            } else {
                this._send(b)
            }
            return this
        };
        this.previous(a)
    },
    getSpinner: function() {
        if (!this.spinner) {
            var b = document.id(this.options.spinnerTarget) || document.id(this.options.update);
            if (this.options.useSpinner && b) {
                b.set("spinner", this.options.spinnerOptions);
                var a = this.spinner = b.get("spinner");
                ["complete", "exception", "cancel"].each(function(c) {
                    this.addEvent(c, a.hide.bind(a))
                }, this)
            }
        }
        return this.spinner
    }
});
Element.Properties.spinner = {
    set: function(a) {
        var b = this.retrieve("spinner");
        if (b) {
            b.destroy()
        }
        return this.eliminate("spinner").store("spinner:options", a)
    },
    get: function() {
        var a = this.retrieve("spinner");
        if (!a) {
            a = new Spinner(this, this.retrieve("spinner:options"));
            this.store("spinner", a)
        }
        return a
    }
};
Element.implement({
    spin: function(a) {
        if (a) {
            this.set("spinner", a)
        }
        this.get("spinner").show();
        return this
    },
    unspin: function() {
        this.get("spinner").hide();
        return this
    }
});
(function() {
    var a = function(b) {
        return decodeURIComponent(b.replace(/\+/g, " "))
    };
    String.implement({
        parseQueryString: function(e, b) {
            if (e == null) {
                e = true
            }
            if (b == null) {
                b = true
            }
            var d = this.split(/[&;]/),
                c = {};
            if (!d.length) {
                return c
            }
            d.each(function(m) {
                var f = m.indexOf("=") + 1,
                    h = f ? m.substr(f) : "",
                    g = f ? m.substr(0, f - 1).match(/([^\]\[]+|(\B)(?=\]))/g) : [m],
                    k = c;
                if (!g) {
                    return
                }
                if (b) {
                    h = a(h)
                }
                g.each(function(o, n) {
                    if (e) {
                        o = a(o)
                    }
                    var p = k[o];
                    if (n < g.length - 1) {
                        k = k[o] = p || {}
                    } else {
                        if (typeOf(p) == "array") {
                            p.push(h)
                        } else {
                            k[o] = p != null ? [p, h] : h
                        }
                    }
                })
            });
            return c
        },
        cleanQueryString: function(b) {
            return this.split("&").filter(function(f) {
                var c = f.indexOf("="),
                    d = c < 0 ? "" : f.substr(0, c),
                    e = f.substr(c + 1);
                return b ? b.call(null, d, e) : (e || e === 0)
            }).join("&")
        }
    })
})();
if (!window.Form) {
    window.Form = {}
}(function() {
    Form.Request = new Class({
        Binds: ["onSubmit", "onFormValidate"],
        Implements: [Options, Events, Class.Occlude],
        options: {
            requestOptions: {
                evalScripts: true,
                useSpinner: true,
                emulation: false,
                link: "ignore"
            },
            sendButtonClicked: true,
            extraData: {},
            resetForm: true
        },
        property: "form.request",
        initialize: function(b, c, a) {
            this.element = document.id(b);
            if (this.occlude()) {
                return this.occluded
            }
            this.setOptions(a).setTarget(c).attach()
        },
        setTarget: function(a) {
            this.target = document.id(a);
            if (!this.request) {
                this.makeRequest()
            } else {
                this.request.setOptions({
                    update: this.target
                })
            }
            return this
        },
        toElement: function() {
            return this.element
        },
        makeRequest: function() {
            var a = this;
            this.request = new Request.HTML(Object.merge({
                update: this.target,
                emulation: false,
                spinnerTarget: this.element,
                method: this.element.get("method") || "post"
            }, this.options.requestOptions)).addEvents({
                success: function(c, e, d, b) {
                    ["complete", "success"].each(function(f) {
                        a.fireEvent(f, [a.target, c, e, d, b])
                    })
                },
                failure: function() {
                    a.fireEvent("complete", arguments).fireEvent("failure", arguments)
                },
                exception: function() {
                    a.fireEvent("failure", arguments)
                }
            });
            return this.attachReset()
        },
        attachReset: function() {
            if (!this.options.resetForm) {
                return this
            }
            this.request.addEvent("success", function() {
                Function.attempt(function() {
                    this.element.reset()
                }.bind(this));
                if (window.OverText) {
                    OverText.update()
                }
            }.bind(this));
            return this
        },
        attach: function(a) {
            var c = (a != false) ? "addEvent" : "removeEvent";
            this.element[c]("click:relay(button, input[type=submit])", this.saveClickedButton.bind(this));
            var b = this.element.retrieve("validator");
            if (b) {
                b[c]("onFormValidate", this.onFormValidate)
            } else {
                this.element[c]("submit", this.onSubmit)
            }
            return this
        },
        detach: function() {
            return this.attach(false)
        },
        enable: function() {
            return this.attach()
        },
        disable: function() {
            return this.detach()
        },
        onFormValidate: function(c, b, a) {
            if (!a) {
                return
            }
            var d = this.element.retrieve("validator");
            if (c || (d && !d.options.stopOnFailure)) {
                a.stop();
                this.send()
            }
        },
        onSubmit: function(a) {
            var b = this.element.retrieve("validator");
            if (b) {
                this.element.removeEvent("submit", this.onSubmit);
                b.addEvent("onFormValidate", this.onFormValidate);
                b.validate(a);
                return
            }
            if (a) {
                a.stop()
            }
            this.send()
        },
        saveClickedButton: function(b, c) {
            var a = c.get("name");
            if (!a || !this.options.sendButtonClicked) {
                return
            }
            this.options.extraData[a] = c.get("value") || true;
            this.clickedCleaner = function() {
                delete this.options.extraData[a];
                this.clickedCleaner = function() {}
            }.bind(this)
        },
        clickedCleaner: function() {},
        send: function() {
            var b = this.element.toQueryString().trim(),
                a = Object.toQueryString(this.options.extraData);
            if (b) {
                b += "&" + a
            } else {
                b = a
            }
            this.fireEvent("send", [this.element, b.parseQueryString()]);
            this.request.send({
                data: b,
                url: this.options.requestOptions.url || this.element.get("action")
            });
            this.clickedCleaner();
            return this
        }
    });
    Element.implement("formUpdate", function(c, b) {
        var a = this.retrieve("form.request");
        if (!a) {
            a = new Form.Request(this, c, b)
        } else {
            if (c) {
                a.setTarget(c)
            }
            if (b) {
                a.setOptions(b).makeRequest()
            }
        }
        a.send();
        return this
    })
})();
(function() {
    var a = function(d) {
        var b = d.options.hideInputs;
        if (window.OverText) {
            var c = [null];
            OverText.each(function(e) {
                c.include("." + e.options.labelClass)
            });
            if (c) {
                b += c.join(", ")
            }
        }
        return (b) ? d.element.getElements(b) : null
    };
    Fx.Reveal = new Class({
        Extends: Fx.Morph,
        options: {
            link: "cancel",
            styles: ["padding", "border", "margin"],
            transitionOpacity: "opacity" in document.documentElement,
            mode: "vertical",
            display: function() {
                return this.element.get("tag") != "tr" ? "block" : "table-row"
            },
            opacity: 1,
            hideInputs: !("opacity" in document.documentElement) ? "select, input, textarea, object, embed" : null
        },
        dissolve: function() {
            if (!this.hiding && !this.showing) {
                if (this.element.getStyle("display") != "none") {
                    this.hiding = true;
                    this.showing = false;
                    this.hidden = true;
                    this.cssText = this.element.style.cssText;
                    var d = this.element.getComputedSize({
                        styles: this.options.styles,
                        mode: this.options.mode
                    });
                    if (this.options.transitionOpacity) {
                        d.opacity = this.options.opacity
                    }
                    var c = {};
                    Object.each(d, function(f, e) {
                        c[e] = [f, 0]
                    });
                    this.element.setStyles({
                        display: Function.convert(this.options.display).call(this),
                        overflow: "hidden"
                    });
                    var b = a(this);
                    if (b) {
                        b.setStyle("visibility", "hidden")
                    }
                    this.$chain.unshift(function() {
                        if (this.hidden) {
                            this.hiding = false;
                            this.element.style.cssText = this.cssText;
                            this.element.setStyle("display", "none");
                            if (b) {
                                b.setStyle("visibility", "visible")
                            }
                        }
                        this.fireEvent("hide", this.element);
                        this.callChain()
                    }.bind(this));
                    this.start(c)
                } else {
                    this.callChain.delay(10, this);
                    this.fireEvent("complete", this.element);
                    this.fireEvent("hide", this.element)
                }
            } else {
                if (this.options.link == "chain") {
                    this.chain(this.dissolve.bind(this))
                } else {
                    if (this.options.link == "cancel" && !this.hiding) {
                        this.cancel();
                        this.dissolve()
                    }
                }
            }
            return this
        },
        reveal: function() {
            if (!this.showing && !this.hiding) {
                if (this.element.getStyle("display") == "none") {
                    this.hiding = false;
                    this.showing = true;
                    this.hidden = false;
                    this.cssText = this.element.style.cssText;
                    var d;
                    this.element.measure(function() {
                        d = this.element.getComputedSize({
                            styles: this.options.styles,
                            mode: this.options.mode
                        })
                    }.bind(this));
                    if (this.options.heightOverride != null) {
                        d.height = this.options.heightOverride.toInt()
                    }
                    if (this.options.widthOverride != null) {
                        d.width = this.options.widthOverride.toInt()
                    }
                    if (this.options.transitionOpacity) {
                        this.element.setStyle("opacity", 0);
                        d.opacity = this.options.opacity
                    }
                    var c = {
                        height: 0,
                        display: Function.convert(this.options.display).call(this)
                    };
                    Object.each(d, function(f, e) {
                        c[e] = 0
                    });
                    c.overflow = "hidden";
                    this.element.setStyles(c);
                    var b = a(this);
                    if (b) {
                        b.setStyle("visibility", "hidden")
                    }
                    this.$chain.unshift(function() {
                        this.element.style.cssText = this.cssText;
                        this.element.setStyle("display", Function.convert(this.options.display).call(this));
                        if (!this.hidden) {
                            this.showing = false
                        }
                        if (b) {
                            b.setStyle("visibility", "visible")
                        }
                        this.callChain();
                        this.fireEvent("show", this.element)
                    }.bind(this));
                    this.start(d)
                } else {
                    this.callChain();
                    this.fireEvent("complete", this.element);
                    this.fireEvent("show", this.element)
                }
            } else {
                if (this.options.link == "chain") {
                    this.chain(this.reveal.bind(this))
                } else {
                    if (this.options.link == "cancel" && !this.showing) {
                        this.cancel();
                        this.reveal()
                    }
                }
            }
            return this
        },
        toggle: function() {
            if (this.element.getStyle("display") == "none") {
                this.reveal()
            } else {
                this.dissolve()
            }
            return this
        },
        cancel: function() {
            this.parent.apply(this, arguments);
            if (this.cssText != null) {
                this.element.style.cssText = this.cssText
            }
            this.hiding = false;
            this.showing = false;
            return this
        }
    });
    Element.Properties.reveal = {
        set: function(b) {
            this.get("reveal").cancel().setOptions(b);
            return this
        },
        get: function() {
            var b = this.retrieve("reveal");
            if (!b) {
                b = new Fx.Reveal(this);
                this.store("reveal", b)
            }
            return b
        }
    };
    Element.Properties.dissolve = Element.Properties.reveal;
    Element.implement({
        reveal: function(b) {
            this.get("reveal").setOptions(b).reveal();
            return this
        },
        dissolve: function(b) {
            this.get("reveal").setOptions(b).dissolve();
            return this
        },
        nix: function(b) {
            var c = Array.link(arguments, {
                destroy: Type.isBoolean,
                options: Type.isObject
            });
            this.get("reveal").setOptions(b).dissolve().chain(function() {
                this[c.destroy ? "destroy" : "dispose"]()
            }.bind(this));
            return this
        },
        wink: function() {
            var c = Array.link(arguments, {
                duration: Type.isNumber,
                options: Type.isObject
            });
            var b = this.get("reveal").setOptions(c.options);
            b.reveal().chain(function() {
                (function() {
                    b.dissolve()
                }).delay(c.duration || 2000)
            })
        }
    })
})();
Form.Request.Append = new Class({
    Extends: Form.Request,
    options: {
        useReveal: true,
        revealOptions: {},
        inject: "bottom"
    },
    makeRequest: function() {
        this.request = new Request.HTML(Object.merge({
            url: this.element.get("action"),
            method: this.element.get("method") || "post",
            spinnerTarget: this.element
        }, this.options.requestOptions, {
            evalScripts: false
        })).addEvents({
            success: function(b, g, f, a) {
                var c;
                var d = Elements.from(f);
                if (d.length == 1) {
                    c = d[0]
                } else {
                    c = new Element("div", {
                        styles: {
                            display: "none"
                        }
                    }).adopt(d)
                }
                c.inject(this.target, this.options.inject);
                if (this.options.requestOptions.evalScripts) {
                    Browser.exec(a)
                }
                this.fireEvent("beforeEffect", c);
                var e = function() {
                    this.fireEvent("success", [c, this.target, b, g, f, a])
                }.bind(this);
                if (this.options.useReveal) {
                    c.set("reveal", this.options.revealOptions).get("reveal").chain(e);
                    c.reveal()
                } else {
                    e()
                }
            }.bind(this),
            failure: function(a) {
                this.fireEvent("failure", a)
            }.bind(this)
        });
        this.attachReset()
    }
});
(function() {
    var b = function(c) {
        return c != null
    };
    var a = Object.prototype.hasOwnProperty;
    Object.extend({
        getFromPath: function(e, f) {
            if (typeof f == "string") {
                f = f.split(".")
            }
            for (var d = 0, c = f.length; d < c; d++) {
                if (a.call(e, f[d])) {
                    e = e[f[d]]
                } else {
                    return null
                }
            }
            return e
        },
        cleanValues: function(c, e) {
            e = e || b;
            for (var d in c) {
                if (!e(c[d])) {
                    delete c[d]
                }
            }
            return c
        },
        erase: function(c, d) {
            if (a.call(c, d)) {
                delete c[d]
            }
            return c
        },
        run: function(d) {
            var c = Array.slice(arguments, 1);
            for (var e in d) {
                if (d[e].apply) {
                    d[e].apply(d, c)
                }
            }
            return d
        }
    })
})();
(function() {
    var b = null,
        a = {},
        d = {};
    var c = function(f) {
        if (instanceOf(f, e.Set)) {
            return f
        } else {
            return a[f]
        }
    };
    var e = this.Locale = {
        define: function(f, m, h, k) {
            var g;
            if (instanceOf(f, e.Set)) {
                g = f.name;
                if (g) {
                    a[g] = f
                }
            } else {
                g = f;
                if (!a[g]) {
                    a[g] = new e.Set(g)
                }
                f = a[g]
            }
            if (m) {
                f.define(m, h, k)
            }
            if (!b) {
                b = f
            }
            return f
        },
        use: function(f) {
            f = c(f);
            if (f) {
                b = f;
                this.fireEvent("change", f)
            }
            return this
        },
        getCurrent: function() {
            return b
        },
        get: function(g, f) {
            return (b) ? b.get(g, f) : ""
        },
        inherit: function(f, g, h) {
            f = c(f);
            if (f) {
                f.inherit(g, h)
            }
            return this
        },
        list: function() {
            return Object.keys(a)
        }
    };
    Object.append(e, new Events);
    e.Set = new Class({
        sets: {},
        inherits: {
            locales: [],
            sets: {}
        },
        initialize: function(f) {
            this.name = f || ""
        },
        define: function(k, g, h) {
            var f = this.sets[k];
            if (!f) {
                f = {}
            }
            if (g) {
                if (typeOf(g) == "object") {
                    f = Object.merge(f, g)
                } else {
                    f[g] = h
                }
            }
            this.sets[k] = f;
            return this
        },
        get: function(s, k, r) {
            var q = Object.getFromPath(this.sets, s);
            if (q != null) {
                var n = typeOf(q);
                if (n == "function") {
                    q = q.apply(null, Array.convert(k))
                } else {
                    if (n == "object") {
                        q = Object.clone(q)
                    }
                }
                return q
            }
            var h = s.indexOf("."),
                p = h < 0 ? s : s.substr(0, h),
                m = (this.inherits.sets[p] || []).combine(this.inherits.locales).include("en-US");
            if (!r) {
                r = []
            }
            for (var g = 0, f = m.length; g < f; g++) {
                if (r.contains(m[g])) {
                    continue
                }
                r.include(m[g]);
                var o = a[m[g]];
                if (!o) {
                    continue
                }
                q = o.get(s, k, r);
                if (q != null) {
                    return q
                }
            }
            return ""
        },
        inherit: function(g, h) {
            g = Array.convert(g);
            if (h && !this.inherits.sets[h]) {
                this.inherits.sets[h] = []
            }
            var f = g.length;
            while (f--) {
                (h ? this.inherits.sets[h] : this.inherits.locales).unshift(g[f])
            }
            return this
        }
    })
})();
Locale.define("en-US", "Date", {
    months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    months_abbr: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
    days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
    days_abbr: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
    dateOrder: ["month", "date", "year"],
    shortDate: "%m/%d/%Y",
    shortTime: "%I:%M%p",
    AM: "AM",
    PM: "PM",
    firstDayOfWeek: 0,
    ordinal: function(a) {
        return (a > 3 && a < 21) ? "th" : ["th", "st", "nd", "rd", "th"][Math.min(a % 10, 4)]
    },
    lessThanMinuteAgo: "less than a minute ago",
    minuteAgo: "about a minute ago",
    minutesAgo: "{delta} minutes ago",
    hourAgo: "about an hour ago",
    hoursAgo: "about {delta} hours ago",
    dayAgo: "1 day ago",
    daysAgo: "{delta} days ago",
    weekAgo: "1 week ago",
    weeksAgo: "{delta} weeks ago",
    monthAgo: "1 month ago",
    monthsAgo: "{delta} months ago",
    yearAgo: "1 year ago",
    yearsAgo: "{delta} years ago",
    lessThanMinuteUntil: "less than a minute from now",
    minuteUntil: "about a minute from now",
    minutesUntil: "{delta} minutes from now",
    hourUntil: "about an hour from now",
    hoursUntil: "about {delta} hours from now",
    dayUntil: "1 day from now",
    daysUntil: "{delta} days from now",
    weekUntil: "1 week from now",
    weeksUntil: "{delta} weeks from now",
    monthUntil: "1 month from now",
    monthsUntil: "{delta} months from now",
    yearUntil: "1 year from now",
    yearsUntil: "{delta} years from now"
});
(function() {
    var a = this.Date;
    var f = a.Methods = {
        ms: "Milliseconds",
        year: "FullYear",
        min: "Minutes",
        mo: "Month",
        sec: "Seconds",
        hr: "Hours"
    };
    ["Date", "Day", "FullYear", "Hours", "Milliseconds", "Minutes", "Month", "Seconds", "Time", "TimezoneOffset", "Week", "Timezone", "GMTOffset", "DayOfYear", "LastMonth", "LastDayOfMonth", "UTCDate", "UTCDay", "UTCFullYear", "AMPM", "Ordinal", "UTCHours", "UTCMilliseconds", "UTCMinutes", "UTCMonth", "UTCSeconds", "UTCMilliseconds"].each(function(v) {
        a.Methods[v.toLowerCase()] = v
    });
    var s = function(x, w, v) {
        if (w == 1) {
            return x
        }
        return x < Math.pow(10, w - 1) ? (v || "0") + s(x, w - 1, v) : x
    };
    a.implement({
        set: function(x, v) {
            x = x.toLowerCase();
            var w = f[x] && "set" + f[x];
            if (w && this[w]) {
                this[w](v)
            }
            return this
        }.overloadSetter(),
        get: function(w) {
            w = w.toLowerCase();
            var v = f[w] && "get" + f[w];
            if (v && this[v]) {
                return this[v]()
            }
            return null
        }.overloadGetter(),
        clone: function() {
            return new a(this.get("time"))
        },
        increment: function(v, x) {
            v = v || "day";
            x = x != null ? x : 1;
            switch (v) {
                case "year":
                    return this.increment("month", x * 12);
                case "month":
                    var w = this.get("date");
                    this.set("date", 1).set("mo", this.get("mo") + x);
                    return this.set("date", w.min(this.get("lastdayofmonth")));
                case "week":
                    return this.increment("day", x * 7);
                case "day":
                    return this.set("date", this.get("date") + x)
            }
            if (!a.units[v]) {
                throw new Error(v + " is not a supported interval")
            }
            return this.set("time", this.get("time") + x * a.units[v]())
        },
        decrement: function(v, w) {
            return this.increment(v, -1 * (w != null ? w : 1))
        },
        isLeapYear: function() {
            return a.isLeapYear(this.get("year"))
        },
        clearTime: function() {
            return this.set({
                hr: 0,
                min: 0,
                sec: 0,
                ms: 0
            })
        },
        diff: function(w, v) {
            if (typeOf(w) == "string") {
                w = a.parse(w)
            }
            return ((w - this) / a.units[v || "day"](3, 3)).round()
        },
        getLastDayOfMonth: function() {
            return a.daysInMonth(this.get("mo"), this.get("year"))
        },
        getDayOfYear: function() {
            return (a.UTC(this.get("year"), this.get("mo"), this.get("date") + 1) - a.UTC(this.get("year"), 0, 1)) / a.units.day()
        },
        setDay: function(w, v) {
            if (v == null) {
                v = a.getMsg("firstDayOfWeek");
                if (v === "") {
                    v = 1
                }
            }
            w = (7 + a.parseDay(w, true) - v) % 7;
            var x = (7 + this.get("day") - v) % 7;
            return this.increment("day", w - x)
        },
        getWeek: function(y) {
            if (y == null) {
                y = a.getMsg("firstDayOfWeek");
                if (y === "") {
                    y = 1
                }
            }
            var A = this,
                x = (7 + A.get("day") - y) % 7,
                w = 0,
                z;
            if (y == 1) {
                var B = A.get("month"),
                    v = A.get("date") - x;
                if (B == 11 && v > 28) {
                    return 1
                }
                if (B == 0 && v < -2) {
                    A = new a(A).decrement("day", x);
                    x = 0
                }
                z = new a(A.get("year"), 0, 1).get("day") || 7;
                if (z > 4) {
                    w = -7
                }
            } else {
                z = new a(A.get("year"), 0, 1).get("day")
            }
            w += A.get("dayofyear");
            w += 6 - x;
            w += (7 + z - y) % 7;
            return (w / 7)
        },
        getOrdinal: function(v) {
            return a.getMsg("ordinal", v || this.get("date"))
        },
        getTimezone: function() {
            return this.toString().replace(/^.*? ([A-Z]{3}).[0-9]{4}.*$/, "$1").replace(/^.*?\(([A-Z])[a-z]+ ([A-Z])[a-z]+ ([A-Z])[a-z]+\)$/, "$1$2$3")
        },
        getGMTOffset: function() {
            var v = this.get("timezoneOffset");
            return ((v > 0) ? "-" : "+") + s((v.abs() / 60).floor(), 2) + s(v % 60, 2)
        },
        setAMPM: function(v) {
            v = v.toUpperCase();
            var w = this.get("hr");
            if (w > 11 && v == "AM") {
                return this.decrement("hour", 12)
            } else {
                if (w < 12 && v == "PM") {
                    return this.increment("hour", 12)
                }
            }
            return this
        },
        getAMPM: function() {
            return (this.get("hr") < 12) ? "AM" : "PM"
        },
        parse: function(v) {
            this.set("time", a.parse(v));
            return this
        },
        isValid: function(v) {
            if (!v) {
                v = this
            }
            return typeOf(v) == "date" && !isNaN(v.valueOf())
        },
        format: function(v) {
            if (!this.isValid()) {
                return "invalid date"
            }
            if (!v) {
                v = "%x %X"
            }
            if (typeof v == "string") {
                v = g[v.toLowerCase()] || v
            }
            if (typeof v == "function") {
                return v(this)
            }
            var w = this;
            return v.replace(/%([a-z%])/gi, function(y, x) {
                switch (x) {
                    case "a":
                        return a.getMsg("days_abbr")[w.get("day")];
                    case "A":
                        return a.getMsg("days")[w.get("day")];
                    case "b":
                        return a.getMsg("months_abbr")[w.get("month")];
                    case "B":
                        return a.getMsg("months")[w.get("month")];
                    case "c":
                        return w.format("%a %b %d %H:%M:%S %Y");
                    case "d":
                        return s(w.get("date"), 2);
                    case "e":
                        return s(w.get("date"), 2, " ");
                    case "H":
                        return s(w.get("hr"), 2);
                    case "I":
                        return s((w.get("hr") % 12) || 12, 2);
                    case "j":
                        return s(w.get("dayofyear"), 3);
                    case "k":
                        return s(w.get("hr"), 2, " ");
                    case "l":
                        return s((w.get("hr") % 12) || 12, 2, " ");
                    case "L":
                        return s(w.get("ms"), 3);
                    case "m":
                        return s((w.get("mo") + 1), 2);
                    case "M":
                        return s(w.get("min"), 2);
                    case "o":
                        return w.get("ordinal");
                    case "p":
                        return a.getMsg(w.get("ampm"));
                    case "s":
                        return Math.round(w / 1000);
                    case "S":
                        return s(w.get("seconds"), 2);
                    case "T":
                        return w.format("%H:%M:%S");
                    case "U":
                        return s(w.get("week"), 2);
                    case "w":
                        return w.get("day");
                    case "x":
                        return w.format(a.getMsg("shortDate"));
                    case "X":
                        return w.format(a.getMsg("shortTime"));
                    case "y":
                        return w.get("year").toString().substr(2);
                    case "Y":
                        return w.get("year");
                    case "z":
                        return w.get("GMTOffset");
                    case "Z":
                        return w.get("Timezone")
                }
                return x
            })
        },
        toISOString: function() {
            return this.format("iso8601")
        }
    }).alias({
        toJSON: "toISOString",
        compare: "diff",
        strftime: "format"
    });
    var n = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
        h = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    var g = {
        db: "%Y-%m-%d %H:%M:%S",
        compact: "%Y%m%dT%H%M%S",
        "short": "%d %b %H:%M",
        "long": "%B %d, %Y %H:%M",
        rfc822: function(v) {
            return n[v.get("day")] + v.format(", %d ") + h[v.get("month")] + v.format(" %Y %H:%M:%S %Z")
        },
        rfc2822: function(v) {
            return n[v.get("day")] + v.format(", %d ") + h[v.get("month")] + v.format(" %Y %H:%M:%S %z")
        },
        iso8601: function(v) {
            return (v.getUTCFullYear() + "-" + s(v.getUTCMonth() + 1, 2) + "-" + s(v.getUTCDate(), 2) + "T" + s(v.getUTCHours(), 2) + ":" + s(v.getUTCMinutes(), 2) + ":" + s(v.getUTCSeconds(), 2) + "." + s(v.getUTCMilliseconds(), 3) + "Z")
        }
    };
    var c = [],
        q = a.parse;
    var u = function(y, A, x) {
        var w = -1,
            z = a.getMsg(y + "s");
        switch (typeOf(A)) {
            case "object":
                w = z[A.get(y)];
                break;
            case "number":
                w = z[A];
                if (!w) {
                    throw new Error("Invalid " + y + " index: " + A)
                }
                break;
            case "string":
                var v = z.filter(function(B) {
                    return this.test(B)
                }, new RegExp("^" + A, "i"));
                if (!v.length) {
                    throw new Error("Invalid " + y + " string")
                }
                if (v.length > 1) {
                    throw new Error("Ambiguous " + y)
                }
                w = v[0]
        }
        return (x) ? z.indexOf(w) : w
    };
    var k = 1900,
        r = 70;
    a.extend({
        getMsg: function(w, v) {
            return Locale.get("Date." + w, v)
        },
        units: {
            ms: Function.convert(1),
            second: Function.convert(1000),
            minute: Function.convert(60000),
            hour: Function.convert(3600000),
            day: Function.convert(86400000),
            week: Function.convert(608400000),
            month: function(w, v) {
                var x = new a;
                return a.daysInMonth(w != null ? w : x.get("mo"), v != null ? v : x.get("year")) * 86400000
            },
            year: function(v) {
                v = v || new a().get("year");
                return a.isLeapYear(v) ? 31622400000 : 31536000000
            }
        },
        daysInMonth: function(w, v) {
            return [31, a.isLeapYear(v) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][w]
        },
        isLeapYear: function(v) {
            return ((v % 4 === 0) && (v % 100 !== 0)) || (v % 400 === 0)
        },
        parse: function(x) {
            var w = typeOf(x);
            if (w == "number") {
                return new a(x)
            }
            if (w != "string") {
                return x
            }
            x = x.clean();
            if (!x.length) {
                return null
            }
            var v;
            c.some(function(z) {
                var y = z.re.exec(x);
                return (y) ? (v = z.handler(y)) : false
            });
            if (!(v && v.isValid())) {
                v = new a(q(x));
                if (!(v && v.isValid())) {
                    v = new a(x.toInt())
                }
            }
            return v
        },
        parseDay: function(v, w) {
            return u("day", v, w)
        },
        parseMonth: function(w, v) {
            return u("month", w, v)
        },
        parseUTC: function(w) {
            var v = new a(w);
            var x = a.UTC(v.get("year"), v.get("mo"), v.get("date"), v.get("hr"), v.get("min"), v.get("sec"), v.get("ms"));
            return new a(x)
        },
        orderIndex: function(v) {
            return a.getMsg("dateOrder").indexOf(v) + 1
        },
        defineFormat: function(v, w) {
            g[v] = w;
            return this
        },
        defineParser: function(v) {
            c.push((v.re && v.handler) ? v : o(v));
            return this
        },
        defineParsers: function() {
            Array.flatten(arguments).each(a.defineParser);
            return this
        },
        define2DigitYearStart: function(v) {
            r = v % 100;
            k = v - r;
            return this
        }
    }).extend({
        defineFormats: a.defineFormat.overloadSetter()
    });
    var d = function(v) {
        return new RegExp("(?:" + a.getMsg(v).map(function(w) {
            return w.substr(0, 3)
        }).join("|") + ")[a-z]*")
    };
    var p = function(v) {
        switch (v) {
            case "T":
                return "%H:%M:%S";
            case "x":
                return ((a.orderIndex("month") == 1) ? "%m[-./]%d" : "%d[-./]%m") + "([-./]%y)?";
            case "X":
                return "%H([.:]%M)?([.:]%S([.:]%s)?)? ?%p? ?%z?"
        }
        return null
    };
    var m = {
        d: /[0-2]?[0-9]|3[01]/,
        H: /[01]?[0-9]|2[0-3]/,
        I: /0?[1-9]|1[0-2]/,
        M: /[0-5]?\d/,
        s: /\d+/,
        o: /[a-z]*/,
        p: /[ap]\.?m\.?/,
        y: /\d{2}|\d{4}/,
        Y: /\d{4}/,
        z: /Z|[+-]\d{2}(?::?\d{2})?/
    };
    m.m = m.I;
    m.S = m.M;
    var e;
    var b = function(v) {
        e = v;
        m.a = m.A = d("days");
        m.b = m.B = d("months");
        c.each(function(x, w) {
            if (x.format) {
                c[w] = o(x.format)
            }
        })
    };
    var o = function(x) {
        if (!e) {
            return {
                format: x
            }
        }
        var v = [];
        var w = (x.source || x).replace(/%([a-z])/gi, function(z, y) {
            return p(y) || z
        }).replace(/\((?!\?)/g, "(?:").replace(/ (?!\?|\*)/g, ",? ").replace(/%([a-z%])/gi, function(z, y) {
            var A = m[y];
            if (!A) {
                return y
            }
            v.push(y);
            return "(" + A.source + ")"
        }).replace(/\[a-z\]/gi, "[a-z\\u00c0-\\uffff;&]");
        return {
            format: x,
            re: new RegExp("^" + w + "$", "i"),
            handler: function(B) {
                B = B.slice(1).associate(v);
                var y = new a().clearTime(),
                    A = B.y || B.Y;
                if (A != null) {
                    t.call(y, "y", A)
                }
                if ("d" in B) {
                    t.call(y, "d", 1)
                }
                if ("m" in B || B.b || B.B) {
                    t.call(y, "m", 1)
                }
                for (var z in B) {
                    t.call(y, z, B[z])
                }
                return y
            }
        }
    };
    var t = function(v, w) {
        if (!w) {
            return this
        }
        switch (v) {
            case "a":
            case "A":
                return this.set("day", a.parseDay(w, true));
            case "b":
            case "B":
                return this.set("mo", a.parseMonth(w, true));
            case "d":
                return this.set("date", w);
            case "H":
            case "I":
                return this.set("hr", w);
            case "m":
                return this.set("mo", w - 1);
            case "M":
                return this.set("min", w);
            case "p":
                return this.set("ampm", w.replace(/\./g, ""));
            case "S":
                return this.set("sec", w);
            case "s":
                return this.set("ms", ("0." + w) * 1000);
            case "w":
                return this.set("day", w);
            case "Y":
                return this.set("year", w);
            case "y":
                w = +w;
                if (w < 100) {
                    w += k + (w < r ? 100 : 0)
                }
                return this.set("year", w);
            case "z":
                if (w == "Z") {
                    w = "+00"
                }
                var x = w.match(/([+-])(\d{2}):?(\d{2})?/);
                x = (x[1] + "1") * (x[2] * 60 + (+x[3] || 0)) + this.getTimezoneOffset();
                return this.set("time", this - x * 60000)
        }
        return this
    };
    a.defineParsers("%Y([-./]%m([-./]%d((T| )%X)?)?)?", "%Y%m%d(T%H(%M%S?)?)?", "%x( %X)?", "%d%o( %b( %Y)?)?( %X)?", "%b( %d%o)?( %Y)?( %X)?", "%Y %b( %d%o( %X)?)?", "%o %b %d %X %z %Y", "%T", "%H:%M( ?%p)?");
    Locale.addEvent("change", function(v) {
        if (Locale.get("Date")) {
            b(v)
        }
    }).fireEvent("change", Locale.getCurrent())
})();
Locale.define("en-US", "FormValidator", {
    required: "This field is required.",
    length: "Please enter {length} characters (you entered {elLength} characters)",
    minLength: "Please enter at least {minLength} characters (you entered {length} characters).",
    maxLength: "Please enter no more than {maxLength} characters (you entered {length} characters).",
    integer: "Please enter an integer in this field. Numbers with decimals (e.g. 1.25) are not permitted.",
    numeric: 'Please enter only numeric values in this field (i.e. "1" or "1.1" or "-1" or "-1.1").',
    digits: "Please use numbers and punctuation only in this field (for example, a phone number with dashes or dots is permitted).",
    alpha: "Please use only letters (a-z) within this field. No spaces or other characters are allowed.",
    alphanum: "Please use only letters (a-z) or numbers (0-9) in this field. No spaces or other characters are allowed.",
    dateSuchAs: "Please enter a valid date such as {date}",
    dateInFormatMDY: 'Please enter a valid date such as MM/DD/YYYY (i.e. "12/31/1999")',
    email: 'Please enter a valid email address. For example "fred@domain.com".',
    url: "Please enter a valid URL such as http://www.example.com.",
    currencyDollar: "Please enter a valid $ amount. For example $100.00 .",
    oneRequired: "Please enter something for at least one of these inputs.",
    errorPrefix: "Error: ",
    warningPrefix: "Warning: ",
    noSpace: "There can be no spaces in this input.",
    reqChkByNode: "No items are selected.",
    requiredChk: "This field is required.",
    reqChkByName: "Please select a {label}.",
    match: "This field needs to match the {matchName} field",
    startDate: "the start date",
    endDate: "the end date",
    currentDate: "the current date",
    afterDate: "The date should be the same or after {label}.",
    beforeDate: "The date should be the same or before {label}.",
    startMonth: "Please select a start month",
    sameMonth: "These two dates must be in the same month - you must change one or the other.",
    creditcard: "The credit card number entered is invalid. Please check the number and try again. {length} digits entered."
});
if (!window.Form) {
    window.Form = {}
}
var InputValidator = this.InputValidator = new Class({
    Implements: [Options],
    options: {
        errorMsg: "Validation failed.",
        test: Function.convert(true)
    },
    initialize: function(b, a) {
        this.setOptions(a);
        this.className = b
    },
    test: function(b, a) {
        b = document.id(b);
        return (b) ? this.options.test(b, a || this.getProps(b)) : false
    },
    getError: function(c, a) {
        c = document.id(c);
        var b = this.options.errorMsg;
        if (typeOf(b) == "function") {
            b = b(c, a || this.getProps(c))
        }
        return b
    },
    getProps: function(a) {
        a = document.id(a);
        return (a) ? a.get("validatorProps") : {}
    }
});
Element.Properties.validators = {
    get: function() {
        return (this.get("data-validators") || this.className).clean().replace(/'(\\.|[^'])*'|"(\\.|[^"])*"/g, function(a) {
            return a.replace(" ", "\\x20")
        }).split(" ")
    }
};
Element.Properties.validatorProps = {
    set: function(a) {
        return this.eliminate("$moo:validatorProps").store("$moo:validatorProps", a)
    },
    get: function(a) {
        if (a) {
            this.set(a)
        }
        if (this.retrieve("$moo:validatorProps")) {
            return this.retrieve("$moo:validatorProps")
        }
        if (this.getProperty("data-validator-properties") || this.getProperty("validatorProps")) {
            try {
                this.store("$moo:validatorProps", JSON.decode(this.getProperty("validatorProps") || this.getProperty("data-validator-properties"), false))
            } catch (c) {
                return {}
            }
        } else {
            var b = this.get("validators").filter(function(d) {
                return d.test(":")
            });
            if (!b.length) {
                this.store("$moo:validatorProps", {})
            } else {
                a = {};
                b.each(function(d) {
                    var f = d.split(":");
                    if (f[1]) {
                        try {
                            a[f[0]] = JSON.decode(f[1], false)
                        } catch (g) {}
                    }
                });
                this.store("$moo:validatorProps", a)
            }
        }
        return this.retrieve("$moo:validatorProps")
    }
};
Form.Validator = new Class({
    Implements: [Options, Events],
    options: {
        fieldSelectors: "input, select, textarea",
        ignoreHidden: true,
        ignoreDisabled: true,
        useTitles: false,
        evaluateOnSubmit: true,
        evaluateFieldsOnBlur: true,
        evaluateFieldsOnChange: true,
        serial: true,
        stopOnFailure: true,
        warningPrefix: function() {
            return Form.Validator.getMsg("warningPrefix") || "Warning: "
        },
        errorPrefix: function() {
            return Form.Validator.getMsg("errorPrefix") || "Error: "
        }
    },
    initialize: function(b, a) {
        this.setOptions(a);
        this.element = document.id(b);
        this.warningPrefix = Function.convert(this.options.warningPrefix)();
        this.errorPrefix = Function.convert(this.options.errorPrefix)();
        this._bound = {
            onSubmit: this.onSubmit.bind(this),
            blurOrChange: function(c, d) {
                this.validationMonitor(d, true)
            }.bind(this)
        };
        this.enable()
    },
    toElement: function() {
        return this.element
    },
    getFields: function() {
        return (this.fields = this.element.getElements(this.options.fieldSelectors))
    },
    enable: function() {
        this.element.store("validator", this);
        if (this.options.evaluateOnSubmit) {
            this.element.addEvent("submit", this._bound.onSubmit)
        }
        if (this.options.evaluateFieldsOnBlur) {
            this.element.addEvent("blur:relay(input,select,textarea)", this._bound.blurOrChange)
        }
        if (this.options.evaluateFieldsOnChange) {
            this.element.addEvent("change:relay(input,select,textarea)", this._bound.blurOrChange)
        }
    },
    disable: function() {
        this.element.eliminate("validator");
        this.element.removeEvents({
            submit: this._bound.onSubmit,
            "blur:relay(input,select,textarea)": this._bound.blurOrChange,
            "change:relay(input,select,textarea)": this._bound.blurOrChange
        })
    },
    validationMonitor: function() {
        clearTimeout(this.timer);
        this.timer = this.validateField.delay(50, this, arguments)
    },
    onSubmit: function(a) {
        if (this.validate(a)) {
            this.reset()
        }
    },
    reset: function() {
        this.getFields().each(this.resetField, this);
        return this
    },
    validate: function(b) {
        var a = this.getFields().map(function(c) {
            return this.validateField(c, true)
        }, this).every(function(c) {
            return c
        });
        this.fireEvent("formValidate", [a, this.element, b]);
        if (this.options.stopOnFailure && !a && b) {
            b.preventDefault()
        }
        return a
    },
    validateField: function(m, b) {
        if (this.paused) {
            return true
        }
        m = document.id(m);
        var f = !m.hasClass("validation-failed");
        var g, k;
        if (this.options.serial && !b) {
            g = this.element.getElement(".validation-failed");
            k = this.element.getElement(".warning")
        }
        if (m && (!g || b || m.hasClass("validation-failed") || (g && !this.options.serial))) {
            var a = m.get("validators");
            var d = a.some(function(n) {
                return this.getValidator(n)
            }, this);
            var h = [];
            a.each(function(n) {
                if (n && !this.test(n, m)) {
                    h.include(n)
                }
            }, this);
            f = h.length === 0;
            if (d && !this.hasValidator(m, "warnOnly")) {
                if (f) {
                    m.addClass("validation-passed").removeClass("validation-failed");
                    this.fireEvent("elementPass", [m])
                } else {
                    m.addClass("validation-failed").removeClass("validation-passed");
                    this.fireEvent("elementFail", [m, h])
                }
            }
            if (!k) {
                var e = a.some(function(n) {
                    if (n.test("^warn")) {
                        return this.getValidator(n.replace(/^warn-/, ""))
                    } else {
                        return null
                    }
                }, this);
                m.removeClass("warning");
                var c = a.map(function(n) {
                    if (n.test("^warn")) {
                        return this.test(n.replace(/^warn-/, ""), m, true)
                    } else {
                        return null
                    }
                }, this)
            }
        }
        return f
    },
    test: function(b, d, e) {
        d = document.id(d);
        if ((this.options.ignoreHidden && !d.isVisible()) || (this.options.ignoreDisabled && d.get("disabled"))) {
            return true
        }
        var a = this.getValidator(b);
        if (e != null) {
            e = false
        }
        if (this.hasValidator(d, "warnOnly")) {
            e = true
        }
        var c = d.hasClass("ignoreValidation") || (a ? a.test(d) : true);
        if (a) {
            this.fireEvent("elementValidate", [c, d, b, e])
        }
        if (e) {
            return true
        }
        return c
    },
    hasValidator: function(b, a) {
        return b.get("validators").contains(a)
    },
    resetField: function(a) {
        a = document.id(a);
        if (a) {
            a.get("validators").each(function(b) {
                if (b.test("^warn-")) {
                    b = b.replace(/^warn-/, "")
                }
                a.removeClass("validation-failed");
                a.removeClass("warning");
                a.removeClass("validation-passed")
            }, this)
        }
        return this
    },
    stop: function() {
        this.paused = true;
        return this
    },
    start: function() {
        this.paused = false;
        return this
    },
    ignoreField: function(a, b) {
        a = document.id(a);
        if (a) {
            this.enforceField(a);
            if (b) {
                a.addClass("warnOnly")
            } else {
                a.addClass("ignoreValidation")
            }
        }
        return this
    },
    enforceField: function(a) {
        a = document.id(a);
        if (a) {
            a.removeClass("warnOnly").removeClass("ignoreValidation")
        }
        return this
    }
});
Form.Validator.getMsg = function(a) {
    return Locale.get("FormValidator." + a)
};
Form.Validator.adders = {
    validators: {},
    add: function(b, a) {
        this.validators[b] = new InputValidator(b, a);
        if (!this.initialize) {
            this.implement({
                validators: this.validators
            })
        }
    },
    addAllThese: function(a) {
        Array.convert(a).each(function(b) {
            this.add(b[0], b[1])
        }, this)
    },
    getValidator: function(a) {
        return this.validators[a.split(":")[0]]
    }
};
Object.append(Form.Validator, Form.Validator.adders);
Form.Validator.implement(Form.Validator.adders);
Form.Validator.add("IsEmpty", {
    errorMsg: false,
    test: function(a) {
        if (a.type == "select-one" || a.type == "select") {
            return !(a.selectedIndex >= 0 && a.options[a.selectedIndex].value != "")
        } else {
            return ((a.get("value") == null) || (a.get("value").length == 0))
        }
    }
});
Form.Validator.addAllThese([
    ["required", {
        errorMsg: function() {
            return Form.Validator.getMsg("required")
        },
        test: function(a) {
            return !Form.Validator.getValidator("IsEmpty").test(a)
        }
    }],
    ["length", {
        errorMsg: function(a, b) {
            if (typeOf(b.length) != "null") {
                return Form.Validator.getMsg("length").substitute({
                    length: b.length,
                    elLength: a.get("value").length
                })
            } else {
                return ""
            }
        },
        test: function(a, b) {
            if (typeOf(b.length) != "null") {
                return (a.get("value").length == b.length || a.get("value").length == 0)
            } else {
                return true
            }
        }
    }],
    ["minLength", {
        errorMsg: function(a, b) {
            if (typeOf(b.minLength) != "null") {
                return Form.Validator.getMsg("minLength").substitute({
                    minLength: b.minLength,
                    length: a.get("value").length
                })
            } else {
                return ""
            }
        },
        test: function(a, b) {
            if (typeOf(b.minLength) != "null") {
                return (a.get("value").length >= (b.minLength || 0))
            } else {
                return true
            }
        }
    }],
    ["maxLength", {
        errorMsg: function(a, b) {
            if (typeOf(b.maxLength) != "null") {
                return Form.Validator.getMsg("maxLength").substitute({
                    maxLength: b.maxLength,
                    length: a.get("value").length
                })
            } else {
                return ""
            }
        },
        test: function(a, b) {
            return a.get("value").length <= (b.maxLength || 10000)
        }
    }],
    ["validate-integer", {
        errorMsg: Form.Validator.getMsg.pass("integer"),
        test: function(a) {
            return Form.Validator.getValidator("IsEmpty").test(a) || (/^(-?[1-9]\d*|0)$/).test(a.get("value"))
        }
    }],
    ["validate-numeric", {
        errorMsg: Form.Validator.getMsg.pass("numeric"),
        test: function(a) {
            return Form.Validator.getValidator("IsEmpty").test(a) || (/^-?(?:0$0(?=\d*\.)|[1-9]|0)\d*(\.\d+)?$/).test(a.get("value"))
        }
    }],
    ["validate-digits", {
        errorMsg: Form.Validator.getMsg.pass("digits"),
        test: function(a) {
            return Form.Validator.getValidator("IsEmpty").test(a) || (/^[\d() .:\-\+#]+$/.test(a.get("value")))
        }
    }],
    ["validate-alpha", {
        errorMsg: Form.Validator.getMsg.pass("alpha"),
        test: function(a) {
            return Form.Validator.getValidator("IsEmpty").test(a) || (/^[a-zA-Z]+$/).test(a.get("value"))
        }
    }],
    ["validate-alphanum", {
        errorMsg: Form.Validator.getMsg.pass("alphanum"),
        test: function(a) {
            return Form.Validator.getValidator("IsEmpty").test(a) || !(/\W/).test(a.get("value"))
        }
    }],
    ["validate-date", {
        errorMsg: function(a, b) {
            if (Date.parse) {
                var c = b.dateFormat || "%x";
                return Form.Validator.getMsg("dateSuchAs").substitute({
                    date: new Date().format(c)
                })
            } else {
                return Form.Validator.getMsg("dateInFormatMDY")
            }
        },
        test: function(e, g) {
            if (Form.Validator.getValidator("IsEmpty").test(e)) {
                return true
            }
            var a = Locale.get("Date"),
                b = new RegExp([a.days, a.days_abbr, a.months, a.months_abbr, a.AM, a.PM].flatten().join("|"), "i"),
                k = e.get("value"),
                f = k.match(/[a-z]+/gi);
            if (f && !f.every(b.exec, b)) {
                return false
            }
            var c = Date.parse(k);
            if (!c) {
                return false
            }
            var h = g.dateFormat || "%x",
                d = c.format(h);
            if (d != "invalid date") {
                e.set("value", d)
            }
            return c.isValid()
        }
    }],
    ["validate-email", {
        errorMsg: Form.Validator.getMsg.pass("email"),
        test: function(a) {
            return Form.Validator.getValidator("IsEmpty").test(a) || (/^(?:[a-z0-9!#$%&'*+\/=?^_`{|}~-]\.?){0,63}[a-z0-9!#$%&'*+\/=?^_`{|}~-]@(?:(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\.)*[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\])$/i).test(a.get("value"))
        }
    }],
    ["validate-url", {
        errorMsg: Form.Validator.getMsg.pass("url"),
        test: function(a) {
            return Form.Validator.getValidator("IsEmpty").test(a) || (/^(https?|ftp|rmtp|mms):\/\/(([A-Z0-9][A-Z0-9_-]*)(\.[A-Z0-9][A-Z0-9_-]*)+)(:(\d+))?\/?/i).test(a.get("value"))
        }
    }],
    ["validate-currency-dollar", {
        errorMsg: Form.Validator.getMsg.pass("currencyDollar"),
        test: function(a) {
            return Form.Validator.getValidator("IsEmpty").test(a) || (/^\$?\-?([1-9]{1}[0-9]{0,2}(\,[0-9]{3})*(\.[0-9]{0,2})?|[1-9]{1}\d*(\.[0-9]{0,2})?|0(\.[0-9]{0,2})?|(\.[0-9]{1,2})?)$/).test(a.get("value"))
        }
    }],
    ["validate-one-required", {
        errorMsg: Form.Validator.getMsg.pass("oneRequired"),
        test: function(a, b) {
            var c = document.id(b["validate-one-required"]) || a.getParent(b["validate-one-required"]);
            return c.getElements("input").some(function(d) {
                if (["checkbox", "radio"].contains(d.get("type"))) {
                    return d.get("checked")
                }
                return d.get("value")
            })
        }
    }]
]);
Element.Properties.validator = {
    set: function(a) {
        this.get("validator").setOptions(a)
    },
    get: function() {
        var a = this.retrieve("validator");
        if (!a) {
            a = new Form.Validator(this);
            this.store("validator", a)
        }
        return a
    }
};
Element.implement({
    validate: function(a) {
        if (a) {
            this.set("validator", a)
        }
        return this.get("validator").validate()
    }
});
(function() {
    function a(f, c, b, e) {
        if (c && f[c]) {
            return f[c]
        }
        var d = document.id(f[b]);
        if (!d) {
            return []
        }
        return d.getElements(e)
    }
    Form.Validator.addAllThese([
        ["validate-enforce-oncheck", {
            test: function(b, c) {
                var d = b.getParent("form").retrieve("validator");
                if (!d) {
                    return true
                }
                a(c, "toEnforce", "enforceChildrenOf", "input, select, textarea").each(function(e) {
                    if (b.checked) {
                        d.enforceField(e)
                    } else {
                        d.ignoreField(e);
                        d.resetField(e)
                    }
                });
                return true
            }
        }],
        ["validate-ignore-oncheck", {
            test: function(b, c) {
                var d = b.getParent("form").retrieve("validator");
                if (!d) {
                    return true
                }
                a(c, "toIgnore", "ignoreChildrenOf", "input, select, textarea").each(function(e) {
                    if (b.checked) {
                        d.ignoreField(e);
                        d.resetField(e)
                    } else {
                        d.enforceField(e)
                    }
                });
                return true
            }
        }],
        ["validate-enforce-onselect-value", {
            test: function(b, c) {
                if (!c.value) {
                    return true
                }
                var d = b.getParent("form").retrieve("validator");
                if (!d) {
                    return true
                }
                a(c, "toEnforce", "enforceChildrenOf", "input, select, textarea").each(function(e) {
                    if (c.value == b.value) {
                        d.enforceField(e)
                    } else {
                        d.ignoreField(e);
                        d.resetField(e)
                    }
                });
                return true
            }
        }],
        ["validate-nospace", {
            errorMsg: function() {
                return Form.Validator.getMsg("noSpace")
            },
            test: function(b, c) {
                return !b.get("value").test(/\s/)
            }
        }],
        ["validate-toggle-oncheck", {
            test: function(c, d) {
                var e = c.getParent("form").retrieve("validator");
                if (!e) {
                    return true
                }
                var b = a(d, "toToggle", "toToggleChildrenOf", "input, select, textarea");
                if (!c.checked) {
                    b.each(function(f) {
                        e.ignoreField(f);
                        e.resetField(f)
                    })
                } else {
                    b.each(function(f) {
                        e.enforceField(f)
                    })
                }
                return true
            }
        }],
        ["validate-reqchk-bynode", {
            errorMsg: function() {
                return Form.Validator.getMsg("reqChkByNode")
            },
            test: function(b, c) {
                return a(c, false, "nodeId", c.selector || "input[type=checkbox], input[type=radio]").some(function(d) {
                    return d.checked
                })
            }
        }],
        ["validate-required-check", {
            errorMsg: function(b, c) {
                return c.useTitle ? b.get("title") : Form.Validator.getMsg("requiredChk")
            },
            test: function(b, c) {
                return !!b.checked
            }
        }],
        ["validate-reqchk-byname", {
            errorMsg: function(b, c) {
                return Form.Validator.getMsg("reqChkByName").substitute({
                    label: c.label || b.get("type")
                })
            },
            test: function(d, f) {
                var e = f.groupName || d.get("name");
                var c = $$("[name=" + e + "]");
                var b = c.some(function(k, h) {
                    return k.checked
                });
                var g = d.getParent("form").retrieve("validator");
                if (b && g) {
                    c.each(function(k, h) {
                        g.resetField(k)
                    })
                }
                return b
            }
        }],
        ["validate-match", {
            errorMsg: function(b, c) {
                return Form.Validator.getMsg("match").substitute({
                    matchName: decodeURIComponent((c.matchName + "").replace(/\+/g, "%20")) || document.id(c.matchInput).get("name")
                })
            },
            test: function(c, d) {
                var e = c.get("value");
                var b = document.id(d.matchInput) && document.id(d.matchInput).get("value");
                return e && b ? e == b : true
            }
        }],
        ["validate-after-date", {
            errorMsg: function(b, c) {
                return Form.Validator.getMsg("afterDate").substitute({
                    label: c.afterLabel || (c.afterElement ? Form.Validator.getMsg("startDate") : Form.Validator.getMsg("currentDate"))
                })
            },
            test: function(c, d) {
                var e = document.id(d.afterElement) ? Date.parse(document.id(d.afterElement).get("value")) : new Date();
                var b = Date.parse(c.get("value"));
                return b && e ? b >= e : true
            }
        }],
        ["validate-before-date", {
            errorMsg: function(b, c) {
                return Form.Validator.getMsg("beforeDate").substitute({
                    label: c.beforeLabel || (c.beforeElement ? Form.Validator.getMsg("endDate") : Form.Validator.getMsg("currentDate"))
                })
            },
            test: function(c, d) {
                var e = Date.parse(c.get("value"));
                var b = document.id(d.beforeElement) ? Date.parse(document.id(d.beforeElement).get("value")) : new Date();
                return b && e ? b >= e : true
            }
        }],
        ["validate-custom-required", {
            errorMsg: function() {
                return Form.Validator.getMsg("required")
            },
            test: function(b, c) {
                return b.get("value") != c.emptyValue
            }
        }],
        ["validate-same-month", {
            errorMsg: function(b, c) {
                var d = document.id(c.sameMonthAs) && document.id(c.sameMonthAs).get("value");
                var e = b.get("value");
                if (e != "") {
                    return Form.Validator.getMsg(d ? "sameMonth" : "startMonth")
                }
            },
            test: function(b, c) {
                var e = Date.parse(b.get("value"));
                var d = Date.parse(document.id(c.sameMonthAs) && document.id(c.sameMonthAs).get("value"));
                return e && d ? e.format("%B") == d.format("%B") : true
            }
        }],
        ["validate-cc-num", {
            errorMsg: function(b) {
                var c = b.get("value").replace(/[^0-9]/g, "");
                return Form.Validator.getMsg("creditcard").substitute({
                    length: c.length
                })
            },
            test: function(c) {
                if (Form.Validator.getValidator("IsEmpty").test(c)) {
                    return true
                }
                var h = c.get("value");
                h = h.replace(/[^0-9]/g, "");
                var e = false;
                if (h.test(/^4[0-9]{12}([0-9]{3})?$/)) {
                    e = "Visa"
                } else {
                    if (h.test(/^5[1-5]([0-9]{14})$/)) {
                        e = "Master Card"
                    } else {
                        if (h.test(/^3[47][0-9]{13}$/)) {
                            e = "American Express"
                        } else {
                            if (h.test(/^6(?:011|5[0-9]{2})[0-9]{12}$/)) {
                                e = "Discover"
                            } else {
                                if (h.test(/^3(?:0[0-5]|[68][0-9])[0-9]{11}$/)) {
                                    e = "Diners Club"
                                }
                            }
                        }
                    }
                }
                if (e) {
                    var d = 0;
                    var f = 0;
                    for (var b = h.length - 1; b >= 0; --b) {
                        f = h.charAt(b).toInt();
                        if (f == 0) {
                            continue
                        }
                        if ((h.length - b) % 2 == 0) {
                            f += f
                        }
                        if (f > 9) {
                            f = f.toString().charAt(0).toInt() + f.toString().charAt(1).toInt()
                        }
                        d += f
                    }
                    if ((d % 10) == 0) {
                        return true
                    }
                }
                var g = "";
                while (h != "") {
                    g += " " + h.substr(0, 4);
                    h = h.substr(4)
                }
                c.getParent("form").retrieve("validator").ignoreField(c);
                c.set("value", g.clean());
                c.getParent("form").retrieve("validator").enforceField(c);
                return false
            }
        }]
    ])
})();
Form.Validator.Inline = new Class({
    Extends: Form.Validator,
    options: {
        showError: function(a) {
            if (a.reveal) {
                a.reveal()
            } else {
                a.setStyle("display", "block")
            }
        },
        hideError: function(a) {
            if (a.dissolve) {
                a.dissolve()
            } else {
                a.setStyle("display", "none")
            }
        },
        scrollToErrorsOnSubmit: true,
        scrollToErrorsOnBlur: false,
        scrollToErrorsOnChange: false,
        scrollFxOptions: {
            transition: "quad:out",
            offset: {
                y: -20
            }
        }
    },
    initialize: function(b, a) {
        this.parent(b, a);
        this.addEvent("onElementValidate", function(g, f, e, h) {
            var d = this.getValidator(e);
            if (!g && d.getError(f)) {
                if (h) {
                    f.addClass("warning")
                }
                var c = this.makeAdvice(e, f, d.getError(f), h);
                this.insertAdvice(c, f);
                this.showAdvice(e, f)
            } else {
                this.hideAdvice(e, f)
            }
        })
    },
    makeAdvice: function(d, f, c, g) {
        var e = (g) ? this.warningPrefix : this.errorPrefix;
        e += (this.options.useTitles) ? f.title || c : c;
        var a = (g) ? "warning-advice" : "validation-advice";
        var b = this.getAdvice(d, f);
        if (b) {
            b = b.set("html", e)
        } else {
            b = new Element("div", {
                html: e,
                styles: {
                    display: "none"
                },
                id: "advice-" + d.split(":")[0] + "-" + this.getFieldId(f)
            }).addClass(a)
        }
        f.store("$moo:advice-" + d, b);
        return b
    },
    getFieldId: function(a) {
        return a.id ? a.id : a.id = "input_" + a.name
    },
    showAdvice: function(b, c) {
        var a = this.getAdvice(b, c);
        if (a && !c.retrieve("$moo:" + this.getPropName(b)) && (a.getStyle("display") == "none" || a.getStyle("visibility") == "hidden" || a.getStyle("opacity") == 0)) {
            c.store("$moo:" + this.getPropName(b), true);
            this.options.showError(a);
            this.fireEvent("showAdvice", [c, a, b])
        }
    },
    hideAdvice: function(b, c) {
        var a = this.getAdvice(b, c);
        if (a && c.retrieve("$moo:" + this.getPropName(b))) {
            c.store("$moo:" + this.getPropName(b), false);
            this.options.hideError(a);
            this.fireEvent("hideAdvice", [c, a, b])
        }
    },
    getPropName: function(a) {
        return "advice" + a
    },
    resetField: function(a) {
        a = document.id(a);
        if (!a) {
            return this
        }
        this.parent(a);
        a.get("validators").each(function(b) {
            this.hideAdvice(b, a)
        }, this);
        return this
    },
    getAllAdviceMessages: function(d, c) {
        var b = [];
        if (d.hasClass("ignoreValidation") && !c) {
            return b
        }
        var a = d.get("validators").some(function(g) {
            var e = g.test("^warn-") || d.hasClass("warnOnly");
            if (e) {
                g = g.replace(/^warn-/, "")
            }
            var f = this.getValidator(g);
            if (!f) {
                return
            }
            b.push({
                message: f.getError(d),
                warnOnly: e,
                passed: f.test(),
                validator: f
            })
        }, this);
        return b
    },
    getAdvice: function(a, b) {
        return b.retrieve("$moo:advice-" + a)
    },
    insertAdvice: function(a, c) {
        var b = c.get("validatorProps");
        if (!b.msgPos || !document.id(b.msgPos)) {
            if (c.type && c.type.toLowerCase() == "radio") {
                c.getParent().adopt(a)
            } else {
                a.inject(document.id(c), "after")
            }
        } else {
            document.id(b.msgPos).grab(a)
        }
    },
    validateField: function(g, f, b) {
        var a = this.parent(g, f);
        if (((this.options.scrollToErrorsOnSubmit && b == null) || b) && !a) {
            var c = document.id(this).getElement(".validation-failed");
            var d = document.id(this).getParent();
            while (d != document.body && d.getScrollSize().y == d.getSize().y) {
                d = d.getParent()
            }
            var e = d.retrieve("$moo:fvScroller");
            if (!e && window.Fx && Fx.Scroll) {
                e = new Fx.Scroll(d, this.options.scrollFxOptions);
                d.store("$moo:fvScroller", e)
            }
            if (c) {
                if (e) {
                    e.toElement(c)
                } else {
                    d.scrollTo(d.getScroll().x, c.getPosition(d).y - 20)
                }
            }
        }
        return a
    },
    watchFields: function(a) {
        a.each(function(b) {
            if (this.options.evaluateFieldsOnBlur) {
                b.addEvent("blur", this.validationMonitor.pass([b, false, this.options.scrollToErrorsOnBlur], this))
            }
            if (this.options.evaluateFieldsOnChange) {
                b.addEvent("change", this.validationMonitor.pass([b, true, this.options.scrollToErrorsOnChange], this))
            }
        }, this)
    }
});
(function() {
    var a = this.OverText = new Class({
        Implements: [Options, Events, Class.Occlude],
        Binds: ["reposition", "assert", "focus", "hide"],
        options: {
            element: "label",
            labelClass: "overTxtLabel",
            positionOptions: {
                position: "upperLeft",
                edge: "upperLeft",
                offset: {
                    x: 4,
                    y: 2
                }
            },
            poll: false,
            pollInterval: 250,
            wrap: false
        },
        property: "OverText",
        initialize: function(c, b) {
            c = this.element = document.id(c);
            if (this.occlude()) {
                return this.occluded
            }
            this.setOptions(b);
            this.attach(c);
            a.instances.push(this);
            if (this.options.poll) {
                this.poll()
            }
        },
        toElement: function() {
            return this.element
        },
        attach: function() {
            var c = this.element,
                b = this.options,
                d = b.textOverride || c.get("alt") || c.get("title");
            if (!d) {
                return this
            }
            var e = this.text = new Element(b.element, {
                "class": b.labelClass,
                styles: {
                    lineHeight: "normal",
                    position: "absolute",
                    cursor: "text"
                },
                html: d,
                events: {
                    click: this.hide.pass(b.element == "label", this)
                }
            }).inject(c, "after");
            if (b.element == "label") {
                if (!c.get("id")) {
                    c.set("id", "input_" + String.uniqueID())
                }
                e.set("for", c.get("id"))
            }
            if (b.wrap) {
                this.textHolder = new Element("div.overTxtWrapper", {
                    styles: {
                        lineHeight: "normal",
                        position: "relative"
                    }
                }).grab(e).inject(c, "before")
            }
            return this.enable()
        },
        destroy: function() {
            this.element.eliminate(this.property);
            this.disable();
            if (this.text) {
                this.text.destroy()
            }
            if (this.textHolder) {
                this.textHolder.destroy()
            }
            return this
        },
        disable: function() {
            this.element.removeEvents({
                focus: this.focus,
                blur: this.assert,
                change: this.assert
            });
            window.removeEvent("resize", this.reposition);
            this.hide(true, true);
            return this
        },
        enable: function() {
            this.element.addEvents({
                focus: this.focus,
                blur: this.assert,
                change: this.assert
            });
            window.addEvent("resize", this.reposition);
            this.reposition();
            return this
        },
        wrap: function() {
            if (this.options.element == "label") {
                if (!this.element.get("id")) {
                    this.element.set("id", "input_" + String.uniqueID())
                }
                this.text.set("for", this.element.get("id"))
            }
        },
        startPolling: function() {
            this.pollingPaused = false;
            return this.poll()
        },
        poll: function(b) {
            if (this.poller && !b) {
                return this
            }
            if (b) {
                clearInterval(this.poller)
            } else {
                this.poller = (function() {
                    if (!this.pollingPaused) {
                        this.assert(true)
                    }
                }).periodical(this.options.pollInterval, this)
            }
            return this
        },
        stopPolling: function() {
            this.pollingPaused = true;
            return this.poll(true)
        },
        focus: function() {
            if (this.text && (!this.text.isDisplayed() || this.element.get("disabled"))) {
                return this
            }
            return this.hide()
        },
        hide: function(d, b) {
            if (this.text && (this.text.isDisplayed() && (!this.element.get("disabled") || b))) {
                this.text.hide();
                this.fireEvent("textHide", [this.text, this.element]);
                this.pollingPaused = true;
                if (!d) {
                    try {
                        this.element.fireEvent("focus");
                        this.element.focus()
                    } catch (c) {}
                }
            }
            return this
        },
        show: function() {
            if (document.id(this.text) && !this.text.isDisplayed()) {
                this.text.show();
                this.reposition();
                this.fireEvent("textShow", [this.text, this.element]);
                this.pollingPaused = false
            }
            return this
        },
        test: function() {
            return !this.element.get("value")
        },
        assert: function(b) {
            return this[this.test() ? "show" : "hide"](b)
        },
        reposition: function() {
            this.assert(true);
            if (!this.element.isVisible()) {
                return this.stopPolling().hide()
            }
            if (this.text && this.test()) {
                this.text.position(Object.merge(this.options.positionOptions, {
                    relativeTo: this.element
                }))
            }
            return this
        }
    })
})();
OverText.instances = [];
Object.append(OverText, {
    each: function(a) {
        return OverText.instances.each(function(c, b) {
            if (c.element && c.text) {
                a.call(OverText, c, b)
            }
        })
    },
    update: function() {
        return OverText.each(function(a) {
            return a.reposition()
        })
    },
    hideAll: function() {
        return OverText.each(function(a) {
            return a.hide(true, true)
        })
    },
    showAll: function() {
        return OverText.each(function(a) {
            return a.show()
        })
    }
});
Fx.Elements = new Class({
    Extends: Fx.CSS,
    initialize: function(b, a) {
        this.elements = this.subject = $$(b);
        this.parent(a)
    },
    compute: function(g, h, k) {
        var c = {};
        for (var d in g) {
            var a = g[d],
                e = h[d],
                f = c[d] = {};
            for (var b in a) {
                f[b] = this.parent(a[b], e[b], k)
            }
        }
        return c
    },
    set: function(b) {
        for (var c in b) {
            if (!this.elements[c]) {
                continue
            }
            var a = b[c];
            for (var d in a) {
                this.render(this.elements[c], d, a[d], this.options.unit)
            }
        }
        return this
    },
    start: function(c) {
        if (!this.check(c)) {
            return this
        }
        var h = {},
            k = {};
        for (var d in c) {
            if (!this.elements[d]) {
                continue
            }
            var f = c[d],
                a = h[d] = {},
                g = k[d] = {};
            for (var b in f) {
                var e = this.prepare(this.elements[d], b, f[b]);
                a[b] = e.from;
                g[b] = e.to
            }
        }
        return this.parent(h, k)
    }
});
Fx.Accordion = new Class({
    Extends: Fx.Elements,
    options: {
        fixedHeight: false,
        fixedWidth: false,
        display: 0,
        show: false,
        height: true,
        width: false,
        opacity: true,
        alwaysHide: false,
        trigger: "click",
        initialDisplayFx: true,
        resetHeight: true,
        keepOpen: false
    },
    initialize: function() {
        var g = function(h) {
            return h != null
        };
        var f = Array.link(arguments, {
            container: Type.isElement,
            options: Type.isObject,
            togglers: g,
            elements: g
        });
        this.parent(f.elements, f.options);
        var b = this.options,
            e = this.togglers = $$(f.togglers);
        this.previous = -1;
        this.internalChain = new Chain();
        if (b.alwaysHide) {
            this.options.link = "chain"
        }
        if (b.show || this.options.show === 0) {
            b.display = false;
            this.previous = b.show
        }
        if (b.start) {
            b.display = false;
            b.show = false
        }
        var d = this.effects = {};
        if (b.opacity) {
            d.opacity = "fullOpacity"
        }
        if (b.width) {
            d.width = b.fixedWidth ? "fullWidth" : "offsetWidth"
        }
        if (b.height) {
            d.height = b.fixedHeight ? "fullHeight" : "scrollHeight"
        }
        for (var c = 0, a = e.length; c < a; c++) {
            this.addSection(e[c], this.elements[c])
        }
        this.elements.each(function(k, h) {
            if (b.show === h) {
                this.fireEvent("active", [e[h], k])
            } else {
                for (var m in d) {
                    k.setStyle(m, 0)
                }
            }
        }, this);
        if (b.display || b.display === 0 || b.initialDisplayFx === false) {
            this.display(b.display, b.initialDisplayFx)
        }
        if (b.fixedHeight !== false) {
            b.resetHeight = false
        }
        this.addEvent("complete", this.internalChain.callChain.bind(this.internalChain))
    },
    addSection: function(g, d) {
        g = document.id(g);
        d = document.id(d);
        this.togglers.include(g);
        this.elements.include(d);
        var f = this.togglers,
            c = this.options,
            h = f.contains(g),
            a = f.indexOf(g),
            b = this.display.pass(a, this);
        g.store("accordion:display", b).addEvent(c.trigger, b);
        if (c.height) {
            d.setStyles({
                "padding-top": 0,
                "border-top": "none",
                "padding-bottom": 0,
                "border-bottom": "none"
            })
        }
        if (c.width) {
            d.setStyles({
                "padding-left": 0,
                "border-left": "none",
                "padding-right": 0,
                "border-right": "none"
            })
        }
        d.fullOpacity = 1;
        if (c.fixedWidth) {
            d.fullWidth = c.fixedWidth
        }
        if (c.fixedHeight) {
            d.fullHeight = c.fixedHeight
        }
        d.setStyle("overflow", "hidden");
        if (!h) {
            for (var e in this.effects) {
                d.setStyle(e, 0)
            }
        }
        return this
    },
    removeSection: function(f, b) {
        var e = this.togglers,
            a = e.indexOf(f),
            c = this.elements[a];
        var d = function() {
            e.erase(f);
            this.elements.erase(c);
            this.detach(f)
        }.bind(this);
        if (this.now == a || b != null) {
            this.display(b != null ? b : (a - 1 >= 0 ? a - 1 : 0)).chain(d)
        } else {
            d()
        }
        return this
    },
    detach: function(b) {
        var a = function(c) {
            c.removeEvent(this.options.trigger, c.retrieve("accordion:display"))
        }.bind(this);
        if (!b) {
            this.togglers.each(a)
        } else {
            a(b)
        }
        return this
    },
    display: function(h, c) {
        if (!this.check(h, c)) {
            return this
        }
        var f = {},
            a = this.elements,
            m = this.options,
            b = this.effects,
            g = m.keepOpen,
            k = m.alwaysHide;
        if (c == null) {
            c = true
        }
        if (typeOf(h) == "element") {
            h = a.indexOf(h)
        }
        if (h == this.current && !k && !g) {
            return this
        }
        if (m.resetHeight) {
            var e = a[this.current];
            if (e && !this.selfHidden) {
                for (var d in b) {
                    e.setStyle(d, e[b[d]])
                }
            }
        }
        if (this.timer && m.link == "chain") {
            return this
        }
        if (this.current != null) {
            this.previous = this.current
        }
        this.current = h;
        this.selfHidden = false;
        a.each(function(q, p) {
            f[p] = {};
            var o, n;
            if (!g || p == h) {
                if (p == h) {
                    n = (q.offsetHeight > 0 && m.height) || (q.offsetWidth > 0 && m.width)
                }
                if (p != h) {
                    o = true
                } else {
                    if ((k || g) && n) {
                        o = true;
                        this.selfHidden = true
                    }
                }
                this.fireEvent(o ? "background" : "active", [this.togglers[p], q]);
                for (var r in b) {
                    f[p][r] = o ? 0 : q[b[r]]
                }
                if (!c && !o && m.resetHeight) {
                    f[p].height = "auto"
                }
            }
        }, this);
        this.internalChain.clearChain();
        this.internalChain.chain(function() {
            if (m.resetHeight && !this.selfHidden) {
                var n = a[h];
                if (n) {
                    n.setStyle("height", "auto")
                }
            }
        }.bind(this));
        return c ? this.start(f) : this.set(f).internalChain.callChain()
    }
});
Fx.Move = new Class({
    Extends: Fx.Morph,
    options: {
        relativeTo: document.body,
        position: "center",
        edge: false,
        offset: {
            x: 0,
            y: 0
        }
    },
    start: function(a) {
        var b = this.element,
            c = b.getStyles("top", "left");
        if (c.top == "auto" || c.left == "auto") {
            b.setPosition(b.getPosition(b.getOffsetParent()))
        }
        return this.parent(b.position(Object.merge({}, this.options, a, {
            returnPos: true
        })))
    }
});
Element.Properties.move = {
    set: function(a) {
        this.get("move").cancel().setOptions(a);
        return this
    },
    get: function() {
        var a = this.retrieve("move");
        if (!a) {
            a = new Fx.Move(this, {
                link: "cancel"
            });
            this.store("move", a)
        }
        return a
    }
};
Element.implement({
    move: function(a) {
        this.get("move").start(a);
        return this
    }
});
(function() {
    Fx.Scroll = new Class({
        Extends: Fx,
        options: {
            offset: {
                x: 0,
                y: 0
            },
            wheelStops: true
        },
        initialize: function(c, b) {
            this.element = this.subject = document.id(c);
            this.parent(b);
            if (typeOf(this.element) != "element") {
                this.element = document.id(this.element.getDocument().body)
            }
            if (this.options.wheelStops) {
                var d = this.element,
                    e = this.cancel.pass(false, this);
                this.addEvent("start", function() {
                    d.addEvent("mousewheel", e)
                }, true);
                this.addEvent("complete", function() {
                    d.removeEvent("mousewheel", e)
                }, true)
            }
        },
        set: function() {
            var b = Array.flatten(arguments);
            this.element.scrollTo(b[0], b[1]);
            return this
        },
        compute: function(d, c, b) {
            return [0, 1].map(function(e) {
                return Fx.compute(d[e], c[e], b)
            })
        },
        start: function(c, d) {
            if (!this.check(c, d)) {
                return this
            }
            var b = this.element.getScroll();
            return this.parent([b.x, b.y], [c, d])
        },
        calculateScroll: function(g, f) {
            var d = this.element,
                b = d.getScrollSize(),
                h = d.getScroll(),
                m = d.getSize(),
                c = this.options.offset,
                k = {
                    x: g,
                    y: f
                };
            for (var e in k) {
                if (!k[e] && k[e] !== 0) {
                    k[e] = h[e]
                }
                if (typeOf(k[e]) != "number") {
                    k[e] = b[e] - m[e]
                }
                k[e] += c[e]
            }
            return [k.x, k.y]
        },
        toTop: function() {
            return this.start.apply(this, this.calculateScroll(false, 0))
        },
        toLeft: function() {
            return this.start.apply(this, this.calculateScroll(0, false))
        },
        toRight: function() {
            return this.start.apply(this, this.calculateScroll("right", false))
        },
        toBottom: function() {
            return this.start.apply(this, this.calculateScroll(false, "bottom"))
        },
        toElement: function(d, e) {
            e = e ? Array.convert(e) : ["x", "y"];
            var c = a(this.element) ? {
                x: 0,
                y: 0
            } : this.element.getScroll();
            var b = Object.map(document.id(d).getPosition(this.element), function(g, f) {
                return e.contains(f) ? g + c[f] : false
            });
            return this.start.apply(this, this.calculateScroll(b.x, b.y))
        },
        toElementEdge: function(d, g, e) {
            g = g ? Array.convert(g) : ["x", "y"];
            d = document.id(d);
            var k = {},
                f = d.getPosition(this.element),
                m = d.getSize(),
                h = this.element.getScroll(),
                b = this.element.getSize(),
                c = {
                    x: f.x + m.x,
                    y: f.y + m.y
                };
            ["x", "y"].each(function(n) {
                if (g.contains(n)) {
                    if (c[n] > h[n] + b[n]) {
                        k[n] = c[n] - b[n]
                    }
                    if (f[n] < h[n]) {
                        k[n] = f[n]
                    }
                }
                if (k[n] == null) {
                    k[n] = h[n]
                }
                if (e && e[n]) {
                    k[n] = k[n] + e[n]
                }
            }, this);
            if (k.x != h.x || k.y != h.y) {
                this.start(k.x, k.y)
            }
            return this
        },
        toElementCenter: function(e, f, h) {
            f = f ? Array.convert(f) : ["x", "y"];
            e = document.id(e);
            var k = {},
                c = e.getPosition(this.element),
                d = e.getSize(),
                b = this.element.getScroll(),
                g = this.element.getSize();
            ["x", "y"].each(function(m) {
                if (f.contains(m)) {
                    k[m] = c[m] - (g[m] - d[m]) / 2
                }
                if (k[m] == null) {
                    k[m] = b[m]
                }
                if (h && h[m]) {
                    k[m] = k[m] + h[m]
                }
            }, this);
            if (k.x != b.x || k.y != b.y) {
                this.start(k.x, k.y)
            }
            return this
        }
    });

    function a(b) {
        return (/^(?:body|html)$/i).test(b.tagName)
    }
})();
Fx.Slide = new Class({
    Extends: Fx,
    options: {
        mode: "vertical",
        wrapper: false,
        hideOverflow: true,
        resetHeight: false
    },
    initialize: function(b, a) {
        b = this.element = this.subject = document.id(b);
        this.parent(a);
        a = this.options;
        var d = b.retrieve("wrapper"),
            c = b.getStyles("margin", "position", "overflow");
        if (a.hideOverflow) {
            c = Object.append(c, {
                overflow: "hidden"
            })
        }
        if (a.wrapper) {
            d = document.id(a.wrapper).setStyles(c)
        }
        if (!d) {
            d = new Element("div", {
                styles: c
            }).wraps(b)
        }
        b.store("wrapper", d).setStyle("margin", 0);
        if (b.getStyle("overflow") == "visible") {
            b.setStyle("overflow", "hidden")
        }
        this.now = [];
        this.open = true;
        this.wrapper = d;
        this.addEvent("complete", function() {
            this.open = (d["offset" + this.layout.capitalize()] != 0);
            if (this.open && this.options.resetHeight) {
                d.setStyle("height", "")
            }
        }, true)
    },
    vertical: function() {
        this.margin = "margin-top";
        this.layout = "height";
        this.offset = this.element.offsetHeight
    },
    horizontal: function() {
        this.margin = "margin-left";
        this.layout = "width";
        this.offset = this.element.offsetWidth
    },
    set: function(a) {
        this.element.setStyle(this.margin, a[0]);
        this.wrapper.setStyle(this.layout, a[1]);
        return this
    },
    compute: function(c, b, a) {
        return [0, 1].map(function(d) {
            return Fx.compute(c[d], b[d], a)
        })
    },
    start: function(b, e) {
        if (!this.check(b, e)) {
            return this
        }
        this[e || this.options.mode]();
        var d = this.element.getStyle(this.margin).toInt(),
            c = this.wrapper.getStyle(this.layout).toInt(),
            a = [
                [d, c],
                [0, this.offset]
            ],
            g = [
                [d, c],
                [-this.offset, 0]
            ],
            f;
        switch (b) {
            case "in":
                f = a;
                break;
            case "out":
                f = g;
                break;
            case "toggle":
                f = (c == 0) ? a : g
        }
        return this.parent(f[0], f[1])
    },
    slideIn: function(a) {
        return this.start("in", a)
    },
    slideOut: function(a) {
        return this.start("out", a)
    },
    hide: function(a) {
        this[a || this.options.mode]();
        this.open = false;
        return this.set([-this.offset, 0])
    },
    show: function(a) {
        this[a || this.options.mode]();
        this.open = true;
        return this.set([0, this.offset])
    },
    toggle: function(a) {
        return this.start("toggle", a)
    }
});
Element.Properties.slide = {
    set: function(a) {
        this.get("slide").cancel().setOptions(a);
        return this
    },
    get: function() {
        var a = this.retrieve("slide");
        if (!a) {
            a = new Fx.Slide(this, {
                link: "cancel"
            });
            this.store("slide", a)
        }
        return a
    }
};
Element.implement({
    slide: function(d, e) {
        d = d || "toggle";
        var b = this.get("slide"),
            a;
        switch (d) {
            case "hide":
                b.hide(e);
                break;
            case "show":
                b.show(e);
                break;
            case "toggle":
                var c = this.retrieve("slide:flag", b.open);
                b[c ? "slideOut" : "slideIn"](e);
                this.store("slide:flag", !c);
                a = true;
                break;
            default:
                b.start(d, e)
        }
        if (!a) {
            this.eliminate("slide:flag")
        }
        return this
    }
});
Fx.SmoothScroll = new Class({
    Extends: Fx.Scroll,
    options: {
        axes: ["x", "y"]
    },
    initialize: function(c, d) {
        d = d || document;
        this.doc = d.getDocument();
        this.parent(this.doc, c);
        var e = d.getWindow(),
            a = e.location.href.match(/^[^#]*/)[0] + "#",
            b = $$(this.options.links || this.doc.links);
        b.each(function(g) {
            if (g.href.indexOf(a) != 0) {
                return
            }
            var f = g.href.substr(a.length);
            if (f) {
                this.useLink(g, f)
            }
        }, this);
        this.addEvent("complete", function() {
            e.location.hash = this.anchor;
            this.element.scrollTo(this.to[0], this.to[1])
        }, true)
    },
    useLink: function(b, a) {
        b.addEvent("click", function(d) {
            var c = document.id(a) || this.doc.getElement("a[name=" + a + "]");
            if (!c) {
                return
            }
            d.preventDefault();
            this.toElement(c, this.options.axes).chain(function() {
                this.fireEvent("scrolledTo", [b, c])
            }.bind(this));
            this.anchor = a
        }.bind(this));
        return this
    }
});
Fx.Sort = new Class({
    Extends: Fx.Elements,
    options: {
        mode: "vertical"
    },
    initialize: function(b, a) {
        this.parent(b, a);
        this.elements.each(function(c) {
            if (c.getStyle("position") == "static") {
                c.setStyle("position", "relative")
            }
        });
        this.setDefaultOrder()
    },
    setDefaultOrder: function() {
        this.currentOrder = this.elements.map(function(b, a) {
            return a
        })
    },
    sort: function() {
        if (!this.check(arguments)) {
            return this
        }
        var e = Array.flatten(arguments);
        var k = 0,
            a = 0,
            c = {},
            h = {},
            d = this.options.mode == "vertical";
        var f = this.elements.map(function(p, n) {
            var o = p.getComputedSize({
                styles: ["border", "padding", "margin"]
            });
            var q;
            if (d) {
                q = {
                    top: k,
                    margin: o["margin-top"],
                    height: o.totalHeight
                };
                k += q.height - o["margin-top"]
            } else {
                q = {
                    left: a,
                    margin: o["margin-left"],
                    width: o.totalWidth
                };
                a += q.width
            }
            var m = d ? "top" : "left";
            h[n] = {};
            var r = p.getStyle(m).toInt();
            h[n][m] = r || 0;
            return q
        }, this);
        this.set(h);
        e = e.map(function(m) {
            return m.toInt()
        });
        if (e.length != this.elements.length) {
            this.currentOrder.each(function(m) {
                if (!e.contains(m)) {
                    e.push(m)
                }
            });
            if (e.length > this.elements.length) {
                e.splice(this.elements.length - 1, e.length - this.elements.length)
            }
        }
        var b = 0;
        k = a = 0;
        e.each(function(n) {
            var m = {};
            if (d) {
                m.top = k - f[n].top - b;
                k += f[n].height
            } else {
                m.left = a - f[n].left;
                a += f[n].width
            }
            b = b + f[n].margin;
            c[n] = m
        }, this);
        var g = {};
        Array.clone(e).sort().each(function(m) {
            g[m] = c[m]
        });
        this.start(g);
        this.currentOrder = e;
        return this
    },
    rearrangeDOM: function(a) {
        a = a || this.currentOrder;
        var b = this.elements[0].getParent();
        var c = [];
        this.elements.setStyle("opacity", 0);
        a.each(function(d) {
            c.push(this.elements[d].inject(b).setStyles({
                top: 0,
                left: 0
            }))
        }, this);
        this.elements.setStyle("opacity", 1);
        this.elements = $$(c);
        this.setDefaultOrder();
        return this
    },
    getDefaultOrder: function() {
        return this.elements.map(function(b, a) {
            return a
        })
    },
    getCurrentOrder: function() {
        return this.currentOrder
    },
    forward: function() {
        return this.sort(this.getDefaultOrder())
    },
    backward: function() {
        return this.sort(this.getDefaultOrder().reverse())
    },
    reverse: function() {
        return this.sort(this.currentOrder.reverse())
    },
    sortByElements: function(a) {
        return this.sort(a.map(function(b) {
            return this.elements.indexOf(b)
        }, this))
    },
    swap: function(c, b) {
        if (typeOf(c) == "element") {
            c = this.elements.indexOf(c)
        }
        if (typeOf(b) == "element") {
            b = this.elements.indexOf(b)
        }
        var a = Array.clone(this.currentOrder);
        a[this.currentOrder.indexOf(c)] = b;
        a[this.currentOrder.indexOf(b)] = c;
        return this.sort(a)
    }
});
(function() {
    var a = this.Keyboard = new Class({
        Extends: Events,
        Implements: [Options],
        options: {
            defaultEventType: "keydown",
            active: false,
            manager: null,
            events: {},
            nonParsedEvents: ["activate", "deactivate", "onactivate", "ondeactivate", "changed", "onchanged"]
        },
        initialize: function(f) {
            if (f && f.manager) {
                this._manager = f.manager;
                delete f.manager
            }
            this.setOptions(f);
            this._setup()
        },
        addEvent: function(h, g, f) {
            return this.parent(a.parse(h, this.options.defaultEventType, this.options.nonParsedEvents), g, f)
        },
        removeEvent: function(g, f) {
            return this.parent(a.parse(g, this.options.defaultEventType, this.options.nonParsedEvents), f)
        },
        toggleActive: function() {
            return this[this.isActive() ? "deactivate" : "activate"]()
        },
        activate: function(f) {
            if (f) {
                if (f.isActive()) {
                    return this
                }
                if (this._activeKB && f != this._activeKB) {
                    this.previous = this._activeKB;
                    this.previous.fireEvent("deactivate")
                }
                this._activeKB = f.fireEvent("activate");
                a.manager.fireEvent("changed")
            } else {
                if (this._manager) {
                    this._manager.activate(this)
                }
            }
            return this
        },
        isActive: function() {
            return this._manager ? (this._manager._activeKB == this) : (a.manager == this)
        },
        deactivate: function(f) {
            if (f) {
                if (f === this._activeKB) {
                    this._activeKB = null;
                    f.fireEvent("deactivate");
                    a.manager.fireEvent("changed")
                }
            } else {
                if (this._manager) {
                    this._manager.deactivate(this)
                }
            }
            return this
        },
        relinquish: function() {
            if (this.isActive() && this._manager && this._manager.previous) {
                this._manager.activate(this._manager.previous)
            } else {
                this.deactivate()
            }
            return this
        },
        manage: function(f) {
            if (f._manager) {
                f._manager.drop(f)
            }
            this._instances.push(f);
            f._manager = this;
            if (!this._activeKB) {
                this.activate(f)
            }
            return this
        },
        drop: function(f) {
            f.relinquish();
            this._instances.erase(f);
            if (this._activeKB == f) {
                if (this.previous && this._instances.contains(this.previous)) {
                    this.activate(this.previous)
                } else {
                    this._activeKB = this._instances[0]
                }
            }
            return this
        },
        trace: function() {
            a.trace(this)
        },
        each: function(f) {
            a.each(this, f)
        },
        _instances: [],
        _disable: function(f) {
            if (this._activeKB == f) {
                this._activeKB = null
            }
        },
        _setup: function() {
            this.addEvents(this.options.events);
            if (a.manager && !this._manager) {
                a.manager.manage(this)
            }
            if (this.options.active) {
                this.activate()
            } else {
                this.relinquish()
            }
        },
        _handle: function(h, g) {
            if (h.preventKeyboardPropagation) {
                return
            }
            var f = !!this._manager;
            if (f && this._activeKB) {
                this._activeKB._handle(h, g);
                if (h.preventKeyboardPropagation) {
                    return
                }
            }
            this.fireEvent(g, h);
            if (!f && this._activeKB) {
                this._activeKB._handle(h, g)
            }
        }
    });
    var b = {};
    var c = ["shift", "control", "alt", "meta"];
    var e = /^(?:shift|control|ctrl|alt|meta)$/;
    a.parse = function(h, g, n) {
        if (n && n.contains(h.toLowerCase())) {
            return h
        }
        h = h.toLowerCase().replace(/^(keyup|keydown):/, function(p, o) {
            g = o;
            return ""
        });
        if (!b[h]) {
            if (h != "+") {
                var f, m = {};
                h.split("+").each(function(o) {
                    if (e.test(o)) {
                        m[o] = true
                    } else {
                        f = o
                    }
                });
                m.control = m.control || m.ctrl;
                var k = [];
                c.each(function(o) {
                    if (m[o]) {
                        k.push(o)
                    }
                });
                if (f) {
                    k.push(f)
                }
                b[h] = k.join("+")
            } else {
                b[h] = h
            }
        }
        return g + ":keys(" + b[h] + ")"
    };
    a.each = function(f, g) {
        var h = f || a.manager;
        while (h) {
            g(h);
            h = h._activeKB
        }
    };
    a.stop = function(f) {
        f.preventKeyboardPropagation = true
    };
    a.manager = new a({
        active: true
    });
    a.trace = function(f) {
        f = f || a.manager;
        var g = window.console && console.log;
        if (g) {
            console.log("the following items have focus: ")
        }
        a.each(f, function(h) {
            if (g) {
                console.log(document.id(h.widget) || h.wiget || h)
            }
        })
    };
    var d = function(g) {
        var f = [];
        c.each(function(h) {
            if (g[h]) {
                f.push(h)
            }
        });
        if (!e.test(g.key)) {
            f.push(g.key)
        }
        a.manager._handle(g, g.type + ":keys(" + f.join("+") + ")")
    };
    document.addEvents({
        keyup: d,
        keydown: d
    })
})();
Keyboard.prototype.options.nonParsedEvents.combine(["rebound", "onrebound"]);
Keyboard.implement({
    addShortcut: function(b, a) {
        this._shortcuts = this._shortcuts || [];
        this._shortcutIndex = this._shortcutIndex || {};
        a.getKeyboard = Function.convert(this);
        a.name = b;
        this._shortcutIndex[b] = a;
        this._shortcuts.push(a);
        if (a.keys) {
            this.addEvent(a.keys, a.handler)
        }
        return this
    },
    addShortcuts: function(b) {
        for (var a in b) {
            this.addShortcut(a, b[a])
        }
        return this
    },
    removeShortcut: function(b) {
        var a = this.getShortcut(b);
        if (a && a.keys) {
            this.removeEvent(a.keys, a.handler);
            delete this._shortcutIndex[b];
            this._shortcuts.erase(a)
        }
        return this
    },
    removeShortcuts: function(a) {
        a.each(this.removeShortcut, this);
        return this
    },
    getShortcuts: function() {
        return this._shortcuts || []
    },
    getShortcut: function(a) {
        return (this._shortcutIndex || {})[a]
    }
});
Keyboard.rebind = function(b, a) {
    Array.convert(a).each(function(c) {
        c.getKeyboard().removeEvent(c.keys, c.handler);
        c.getKeyboard().addEvent(b, c.handler);
        c.keys = b;
        c.getKeyboard().fireEvent("rebound")
    })
};
Keyboard.getActiveShortcuts = function(b) {
    var a = [],
        c = [];
    Keyboard.each(b, [].push.bind(a));
    a.each(function(d) {
        c.extend(d.getShortcuts())
    });
    return c
};
Keyboard.getShortcut = function(c, b, d) {
    d = d || {};
    var a = d.many ? [] : null,
        e = d.many ? function(g) {
            var f = g.getShortcut(c);
            if (f) {
                a.push(f)
            }
        } : function(f) {
            if (!a) {
                a = f.getShortcut(c)
            }
        };
    Keyboard.each(b, e);
    return a
};
Keyboard.getShortcuts = function(b, a) {
    return Keyboard.getShortcut(b, a, {
        many: true
    })
};
(function() {
    var a = this.HtmlTable = new Class({
        Implements: [Options, Events, Class.Occlude],
        options: {
            properties: {
                cellpadding: 0,
                cellspacing: 0,
                border: 0
            },
            rows: [],
            headers: [],
            footers: []
        },
        property: "HtmlTable",
        initialize: function() {
            var b = Array.link(arguments, {
                options: Type.isObject,
                table: Type.isElement,
                id: Type.isString
            });
            this.setOptions(b.options);
            if (!b.table && b.id) {
                b.table = document.id(b.id)
            }
            this.element = b.table || new Element("table", this.options.properties);
            if (this.occlude()) {
                return this.occluded
            }
            this.build()
        },
        build: function() {
            this.element.store("HtmlTable", this);
            this.body = document.id(this.element.tBodies[0]) || new Element("tbody").inject(this.element);
            $$(this.body.rows);
            if (this.options.headers.length) {
                this.setHeaders(this.options.headers)
            } else {
                this.thead = document.id(this.element.tHead)
            }
            if (this.thead) {
                this.head = this.getHead()
            }
            if (this.options.footers.length) {
                this.setFooters(this.options.footers)
            }
            this.tfoot = document.id(this.element.tFoot);
            if (this.tfoot) {
                this.foot = document.id(this.tfoot.rows[0])
            }
            this.options.rows.each(function(b) {
                this.push(b)
            }, this)
        },
        toElement: function() {
            return this.element
        },
        empty: function() {
            this.body.empty();
            return this
        },
        set: function(f, b) {
            var e = (f == "headers") ? "tHead" : "tFoot",
                c = e.toLowerCase();
            this[c] = (document.id(this.element[e]) || new Element(c).inject(this.element, "top")).empty();
            var d = this.push(b, {}, this[c], f == "headers" ? "th" : "td");
            if (f == "headers") {
                this.head = this.getHead()
            } else {
                this.foot = this.getHead()
            }
            return d
        },
        getHead: function() {
            var b = this.thead.rows;
            return b.length > 1 ? $$(b) : b.length ? document.id(b[0]) : false
        },
        setHeaders: function(b) {
            this.set("headers", b);
            return this
        },
        setFooters: function(b) {
            this.set("footers", b);
            return this
        },
        update: function(e, f, b) {
            var c = e.getChildren(b || "td"),
                d = c.length - 1;
            f.each(function(m, g) {
                var n = c[g] || new Element(b || "td").inject(e),
                    k = ((m && Object.prototype.hasOwnProperty.call(m, "content")) ? m.content : "") || m,
                    h = typeOf(k);
                if (m && Object.prototype.hasOwnProperty.call(m, "properties")) {
                    n.set(m.properties)
                }
                if (/(element(s?)|array|collection)/.test(h)) {
                    n.empty().adopt(k)
                } else {
                    n.set("html", k)
                }
                if (g > d) {
                    c.push(n)
                } else {
                    c[g] = n
                }
            });
            return {
                tr: e,
                tds: c
            }
        },
        push: function(f, d, e, b, c) {
            if (typeOf(f) == "element" && f.get("tag") == "tr") {
                f.inject(e || this.body, c);
                return {
                    tr: f,
                    tds: f.getChildren("td")
                }
            }
            return this.update(new Element("tr", d).inject(e || this.body, c), f, b)
        },
        pushMany: function(e, d, f, b, c) {
            return e.map(function(g) {
                return this.push(g, d, f, b, c)
            }, this)
        }
    })
})();
["adopt", "inject", "wraps", "grab", "replaces", "dispose"].each(function(a) {
    HtmlTable.implement(a, function() {
        this.element[a].apply(this.element, arguments);
        return this
    })
});
HtmlTable = Class.refactor(HtmlTable, {
    options: {
        useKeyboard: true,
        classRowSelected: "table-tr-selected",
        classRowHovered: "table-tr-hovered",
        classSelectable: "table-selectable",
        shiftForMultiSelect: true,
        allowMultiSelect: true,
        selectable: false,
        selectHiddenRows: false
    },
    initialize: function() {
        this.previous.apply(this, arguments);
        if (this.occluded) {
            return this.occluded
        }
        this.selectedRows = new Elements();
        if (!this.bound) {
            this.bound = {}
        }
        this.bound.mouseleave = this.mouseleave.bind(this);
        this.bound.clickRow = this.clickRow.bind(this);
        this.bound.activateKeyboard = function() {
            if (this.keyboard && this.selectEnabled) {
                this.keyboard.activate()
            }
        }.bind(this);
        if (this.options.selectable) {
            this.enableSelect()
        }
    },
    empty: function() {
        if (this.body.rows.length) {
            this.selectNone()
        }
        return this.previous()
    },
    enableSelect: function() {
        this.selectEnabled = true;
        this.attachSelects();
        this.element.addClass(this.options.classSelectable);
        return this
    },
    disableSelect: function() {
        this.selectEnabled = false;
        this.attachSelects(false);
        this.element.removeClass(this.options.classSelectable);
        return this
    },
    push: function() {
        var a = this.previous.apply(this, arguments);
        this.updateSelects();
        return a
    },
    toggleRow: function(a) {
        return this[(this.isSelected(a) ? "de" : "") + "selectRow"](a)
    },
    selectRow: function(b, a) {
        if (this.isSelected(b) || (!a && !this.body.getChildren().contains(b))) {
            return
        }
        if (!this.options.allowMultiSelect) {
            this.selectNone()
        }
        if (!this.isSelected(b)) {
            this.selectedRows.push(b);
            b.addClass(this.options.classRowSelected);
            this.fireEvent("rowFocus", [b, this.selectedRows]);
            this.fireEvent("stateChanged")
        }
        this.focused = b;
        document.clearSelection();
        return this
    },
    isSelected: function(a) {
        return this.selectedRows.contains(a)
    },
    getSelected: function() {
        return this.selectedRows
    },
    serialize: function() {
        var a = this.previous.apply(this, arguments) || {};
        if (this.options.selectable) {
            a.selectedRows = this.selectedRows.map(function(b) {
                return Array.indexOf(this.body.rows, b)
            }.bind(this))
        }
        return a
    },
    restore: function(a) {
        if (this.options.selectable && a.selectedRows) {
            a.selectedRows.each(function(b) {
                this.selectRow(this.body.rows[b])
            }.bind(this))
        }
        this.previous.apply(this, arguments)
    },
    deselectRow: function(b, a) {
        if (!this.isSelected(b) || (!a && !this.body.getChildren().contains(b))) {
            return
        }
        this.selectedRows = new Elements(Array.convert(this.selectedRows).erase(b));
        b.removeClass(this.options.classRowSelected);
        this.fireEvent("rowUnfocus", [b, this.selectedRows]);
        this.fireEvent("stateChanged");
        return this
    },
    selectAll: function(a) {
        if (!a && !this.options.allowMultiSelect) {
            return
        }
        this.selectRange(0, this.body.rows.length, a);
        return this
    },
    selectNone: function() {
        return this.selectAll(true)
    },
    selectRange: function(b, a, f) {
        if (!this.options.allowMultiSelect && !f) {
            return
        }
        var g = f ? "deselectRow" : "selectRow",
            e = Array.clone(this.body.rows);
        if (typeOf(b) == "element") {
            b = e.indexOf(b)
        }
        if (typeOf(a) == "element") {
            a = e.indexOf(a)
        }
        a = a < e.length - 1 ? a : e.length - 1;
        if (a < b) {
            var d = b;
            b = a;
            a = d
        }
        for (var c = b; c <= a; c++) {
            if (this.options.selectHiddenRows || e[c].isDisplayed()) {
                this[g](e[c], true)
            }
        }
        return this
    },
    deselectRange: function(b, a) {
        this.selectRange(b, a, true)
    },
    enterRow: function(a) {
        if (this.hovered) {
            this.hovered = this.leaveRow(this.hovered)
        }
        this.hovered = a.addClass(this.options.classRowHovered)
    },
    leaveRow: function(a) {
        a.removeClass(this.options.classRowHovered)
    },
    updateSelects: function() {
        Array.each(this.body.rows, function(a) {
            var b = a.retrieve("binders");
            if (!b && !this.selectEnabled) {
                return
            }
            if (!b) {
                b = {
                    mouseenter: this.enterRow.pass([a], this),
                    mouseleave: this.leaveRow.pass([a], this)
                };
                a.store("binders", b)
            }
            if (this.selectEnabled) {
                a.addEvents(b)
            } else {
                a.removeEvents(b)
            }
        }, this)
    },
    shiftFocus: function(b, a) {
        if (!this.focused) {
            return this.selectRow(this.body.rows[0], a)
        }
        var c = this.getRowByOffset(b, this.options.selectHiddenRows);
        if (c === null || this.focused == this.body.rows[c]) {
            return this
        }
        this.toggleRow(this.body.rows[c], a)
    },
    clickRow: function(a, b) {
        var c = (a.shift || a.meta || a.control) && this.options.shiftForMultiSelect;
        if (!c && !(a.rightClick && this.isSelected(b) && this.options.allowMultiSelect)) {
            this.selectNone()
        }
        if (a.rightClick) {
            this.selectRow(b)
        } else {
            this.toggleRow(b)
        }
        if (a.shift) {
            this.selectRange(this.rangeStart || this.body.rows[0], b, this.rangeStart ? !this.isSelected(b) : true);
            this.focused = b
        }
        this.rangeStart = b
    },
    getRowByOffset: function(e, d) {
        if (!this.focused) {
            return 0
        }
        var b = Array.indexOf(this.body.rows, this.focused);
        if ((b == 0 && e < 0) || (b == this.body.rows.length - 1 && e > 0)) {
            return null
        }
        if (d) {
            b += e
        } else {
            var a = 0,
                c = 0;
            if (e > 0) {
                while (c < e && b < this.body.rows.length - 1) {
                    if (this.body.rows[++b].isDisplayed()) {
                        c++
                    }
                }
            } else {
                while (c > e && b > 0) {
                    if (this.body.rows[--b].isDisplayed()) {
                        c--
                    }
                }
            }
        }
        return b
    },
    attachSelects: function(d) {
        d = d != null ? d : true;
        var g = d ? "addEvents" : "removeEvents";
        this.element[g]({
            mouseleave: this.bound.mouseleave,
            click: this.bound.activateKeyboard
        });
        this.body[g]({
            "click:relay(tr)": this.bound.clickRow,
            "contextmenu:relay(tr)": this.bound.clickRow
        });
        if (this.options.useKeyboard || this.keyboard) {
            if (!this.keyboard) {
                this.keyboard = new Keyboard()
            }
            if (!this.selectKeysDefined) {
                this.selectKeysDefined = true;
                var f, e;
                var c = function(k) {
                    var h = function(m) {
                        clearTimeout(f);
                        m.preventDefault();
                        var n = this.body.rows[this.getRowByOffset(k, this.options.selectHiddenRows)];
                        if (m.shift && n && this.isSelected(n)) {
                            this.deselectRow(this.focused);
                            this.focused = n
                        } else {
                            if (n && (!this.options.allowMultiSelect || !m.shift)) {
                                this.selectNone()
                            }
                            this.shiftFocus(k, m)
                        }
                        if (e) {
                            f = h.delay(100, this, m)
                        } else {
                            f = (function() {
                                e = true;
                                h(m)
                            }).delay(400)
                        }
                    }.bind(this);
                    return h
                }.bind(this);
                var b = function() {
                    clearTimeout(f);
                    e = false
                };
                this.keyboard.addEvents({
                    "keydown:shift+up": c(-1),
                    "keydown:shift+down": c(1),
                    "keyup:shift+up": b,
                    "keyup:shift+down": b,
                    "keyup:up": b,
                    "keyup:down": b
                });
                var a = "";
                if (this.options.allowMultiSelect && this.options.shiftForMultiSelect && this.options.useKeyboard) {
                    a = " (Shift multi-selects)."
                }
                this.keyboard.addShortcuts({
                    "Select Previous Row": {
                        keys: "up",
                        shortcut: "up arrow",
                        handler: c(-1),
                        description: "Select the previous row in the table." + a
                    },
                    "Select Next Row": {
                        keys: "down",
                        shortcut: "down arrow",
                        handler: c(1),
                        description: "Select the next row in the table." + a
                    }
                })
            }
            this.keyboard[d ? "activate" : "deactivate"]()
        }
        this.updateSelects()
    },
    mouseleave: function() {
        if (this.hovered) {
            this.leaveRow(this.hovered)
        }
    }
});
(function() {
    var a = document.createElement("table");
    try {
        a.innerHTML = "<tr><td></td></tr>";
        a = a.childNodes.length === 0
    } catch (b) {
        a = true
    }
    HtmlTable = Class.refactor(HtmlTable, {
        options: {
            sortIndex: 0,
            sortReverse: false,
            parsers: [],
            defaultParser: "string",
            classSortable: "table-sortable",
            classHeadSort: "table-th-sort",
            classHeadSortRev: "table-th-sort-rev",
            classNoSort: "table-th-nosort",
            classGroupHead: "table-tr-group-head",
            classGroup: "table-tr-group",
            classCellSort: "table-td-sort",
            classSortSpan: "table-th-sort-span",
            sortable: false,
            thSelector: "th"
        },
        initialize: function() {
            this.previous.apply(this, arguments);
            if (this.occluded) {
                return this.occluded
            }
            this.sorted = {
                index: null,
                dir: 1
            };
            if (!this.bound) {
                this.bound = {}
            }
            this.bound.headClick = this.headClick.bind(this);
            this.sortSpans = new Elements();
            if (this.options.sortable) {
                this.enableSort();
                if (this.options.sortIndex != null) {
                    this.sort(this.options.sortIndex, this.options.sortReverse)
                }
            }
        },
        attachSorts: function(c) {
            this.detachSorts();
            if (c !== false) {
                this.element.addEvent("click:relay(" + this.options.thSelector + ")", this.bound.headClick)
            }
        },
        detachSorts: function() {
            this.element.removeEvents("click:relay(" + this.options.thSelector + ")")
        },
        setHeaders: function() {
            this.previous.apply(this, arguments);
            if (this.sortable) {
                this.setParsers()
            }
        },
        setParsers: function() {
            this.parsers = this.detectParsers()
        },
        detectParsers: function() {
            return this.head && this.head.getElements(this.options.thSelector).flatten().map(this.detectParser, this)
        },
        detectParser: function(c, d) {
            if (c.hasClass(this.options.classNoSort) || c.retrieve("htmltable-parser")) {
                return c.retrieve("htmltable-parser")
            }
            var e = new Element("div");
            e.adopt(c.childNodes).inject(c);
            var h = new Element("span", {
                "class": this.options.classSortSpan
            }).inject(e, "top");
            this.sortSpans.push(h);
            var k = this.options.parsers[d],
                g = this.body.rows,
                f;
            switch (typeOf(k)) {
                case "function":
                    k = {
                        convert: k
                    };
                    f = true;
                    break;
                case "string":
                    k = k;
                    f = true;
                    break
            }
            if (!f) {
                HtmlTable.ParserPriority.some(function(n) {
                    var r = HtmlTable.Parsers[n],
                        p = r.match;
                    if (!p) {
                        return false
                    }
                    for (var q = 0, o = g.length; q < o; q++) {
                        var m = document.id(g[q].cells[d]),
                            s = m ? m.get("html").clean() : "";
                        if (s && p.test(s)) {
                            k = r;
                            return true
                        }
                    }
                })
            }
            if (!k) {
                k = this.options.defaultParser
            }
            c.store("htmltable-parser", k);
            return k
        },
        headClick: function(d, c) {
            if (!this.head || c.hasClass(this.options.classNoSort)) {
                return
            }
            return this.sort(Array.indexOf(this.head.getElements(this.options.thSelector).flatten(), c) % this.body.rows[0].cells.length)
        },
        serialize: function() {
            var c = this.previous.apply(this, arguments) || {};
            if (this.options.sortable) {
                c.sortIndex = this.sorted.index;
                c.sortReverse = this.sorted.reverse
            }
            return c
        },
        restore: function(c) {
            if (this.options.sortable && c.sortIndex) {
                this.sort(c.sortIndex, c.sortReverse)
            }
            this.previous.apply(this, arguments)
        },
        setSortedState: function(d, c) {
            if (c != null) {
                this.sorted.reverse = c
            } else {
                if (this.sorted.index == d) {
                    this.sorted.reverse = !this.sorted.reverse
                } else {
                    this.sorted.reverse = this.sorted.index == null
                }
            }
            if (d != null) {
                this.sorted.index = d
            }
        },
        setHeadSort: function(c) {
            var d = $$(!this.head.length ? this.head.cells[this.sorted.index] : this.head.map(function(e) {
                return e.getElements(this.options.thSelector)[this.sorted.index]
            }, this).clean());
            if (!d.length) {
                return
            }
            if (c) {
                d.addClass(this.options.classHeadSort);
                if (this.sorted.reverse) {
                    d.addClass(this.options.classHeadSortRev)
                } else {
                    d.removeClass(this.options.classHeadSortRev)
                }
            } else {
                d.removeClass(this.options.classHeadSort).removeClass(this.options.classHeadSortRev)
            }
        },
        setRowSort: function(d, c) {
            var g = d.length,
                f = this.body,
                k, h;
            while (g) {
                var m = d[--g],
                    e = m.position,
                    n = f.rows[e];
                if (n.disabled) {
                    continue
                }
                if (!c) {
                    k = this.setGroupSort(k, n, m);
                    this.setRowStyle(n, g)
                }
                f.appendChild(n);
                for (h = 0; h < g; h++) {
                    if (d[h].position > e) {
                        d[h].position--
                    }
                }
            }
        },
        setRowStyle: function(d, c) {
            this.previous(d, c);
            d.cells[this.sorted.index].addClass(this.options.classCellSort)
        },
        setGroupSort: function(d, e, c) {
            if (d == c.value) {
                e.removeClass(this.options.classGroupHead).addClass(this.options.classGroup)
            } else {
                e.removeClass(this.options.classGroup).addClass(this.options.classGroupHead)
            }
            return c.value
        },
        getParser: function() {
            var c = this.parsers[this.sorted.index];
            return typeOf(c) == "string" ? HtmlTable.Parsers[c] : c
        },
        sort: function(f, e, h, d) {
            if (!this.head) {
                return
            }
            if (!h) {
                this.clearSort();
                this.setSortedState(f, e);
                this.setHeadSort(true)
            }
            var m = this.getParser();
            if (!m) {
                return
            }
            var c;
            if (!a) {
                c = this.body.getParent();
                this.body.dispose()
            }
            var g = this.parseData(m).sort(d ? d : function(o, n) {
                if (o.value === n.value) {
                    return 0
                }
                return o.value > n.value ? 1 : -1
            });
            var k = this.sorted.reverse == (m == HtmlTable.Parsers["input-checked"]);
            if (k) {
                g.reverse(true)
            }
            this.setRowSort(g, h);
            if (c) {
                c.grab(this.body)
            }
            this.fireEvent("stateChanged");
            return this.fireEvent("sort", [this.body, this.sorted.index, k ? "asc" : "desc"])
        },
        parseData: function(c) {
            return Array.map(this.body.rows, function(f, d) {
                var e = c.convert.call(document.id(f.cells[this.sorted.index]));
                return {
                    position: d,
                    value: e
                }
            }, this)
        },
        clearSort: function() {
            this.setHeadSort(false);
            this.body.getElements("td").removeClass(this.options.classCellSort)
        },
        reSort: function() {
            if (this.sortable) {
                this.sort.call(this, this.sorted.index, this.sorted.reverse)
            }
            return this
        },
        enableSort: function() {
            this.element.addClass(this.options.classSortable);
            this.attachSorts(true);
            this.setParsers();
            this.sortable = true;
            return this
        },
        disableSort: function() {
            this.element.removeClass(this.options.classSortable);
            this.attachSorts(false);
            this.sortSpans.each(function(c) {
                c.destroy()
            });
            this.sortSpans.empty();
            this.sortable = false;
            return this
        }
    });
    HtmlTable.ParserPriority = ["date", "input-checked", "input-value", "float", "number"];
    HtmlTable.Parsers = {
        date: {
            match: /^\d{2}[-\/ ]\d{2}[-\/ ]\d{2,4}$/,
            convert: function() {
                var c = Date.parse(this.get("text").stripTags());
                return (typeOf(c) == "date") ? c.format("db") : ""
            },
            type: "date"
        },
        "input-checked": {
            match: / type="(radio|checkbox)"/,
            convert: function() {
                return this.getElement("input").checked
            }
        },
        "input-value": {
            match: /<input/,
            convert: function() {
                return this.getElement("input").value
            }
        },
        number: {
            match: /^\d+[^\d.,]*$/,
            convert: function() {
                return this.get("text").stripTags().toInt()
            },
            number: true
        },
        numberLax: {
            match: /^[^\d]+\d+$/,
            convert: function() {
                return this.get("text").replace(/[^-?^0-9]/, "").stripTags().toInt()
            },
            number: true
        },
        "float": {
            match: /^[\d]+\.[\d]+/,
            convert: function() {
                return this.get("text").replace(/[^-?^\d.e]/, "").stripTags().toFloat()
            },
            number: true
        },
        floatLax: {
            match: /^[^\d]+[\d]+\.[\d]+$/,
            convert: function() {
                return this.get("text").replace(/[^-?^\d.]/, "").stripTags().toFloat()
            },
            number: true
        },
        string: {
            match: null,
            convert: function() {
                return this.get("text").stripTags().toLowerCase()
            }
        },
        title: {
            match: null,
            convert: function() {
                return this.title
            }
        }
    };
    HtmlTable.defineParsers = function(c) {
        HtmlTable.Parsers = Object.append(HtmlTable.Parsers, c);
        for (var d in c) {
            HtmlTable.ParserPriority.unshift(d)
        }
    }
})();
HtmlTable = Class.refactor(HtmlTable, {
    options: {
        classZebra: "table-tr-odd",
        zebra: true,
        zebraOnlyVisibleRows: true
    },
    initialize: function() {
        this.previous.apply(this, arguments);
        if (this.occluded) {
            return this.occluded
        }
        if (this.options.zebra) {
            this.updateZebras()
        }
    },
    updateZebras: function() {
        var a = 0;
        Array.each(this.body.rows, function(b) {
            if (!this.options.zebraOnlyVisibleRows || b.isDisplayed()) {
                this.zebra(b, a++)
            }
        }, this)
    },
    setRowStyle: function(b, a) {
        if (this.previous) {
            this.previous(b, a)
        }
        this.zebra(b, a)
    },
    zebra: function(b, a) {
        return b[((a % 2) ? "remove" : "add") + "Class"](this.options.classZebra)
    },
    push: function() {
        var a = this.previous.apply(this, arguments);
        if (this.options.zebra) {
            this.updateZebras()
        }
        return a
    }
});
(function() {
    var a = this.Scroller = new Class({
        Implements: [Events, Options],
        options: {
            area: 20,
            velocity: 1,
            onChange: function(b, c) {
                this.element.scrollTo(b, c)
            },
            fps: 50
        },
        initialize: function(c, b) {
            this.setOptions(b);
            this.element = document.id(c);
            this.docBody = document.id(this.element.getDocument().body);
            this.listener = (typeOf(this.element) != "element") ? this.docBody : this.element;
            this.timer = null;
            this.bound = {
                attach: this.attach.bind(this),
                detach: this.detach.bind(this),
                getCoords: this.getCoords.bind(this)
            }
        },
        start: function() {
            this.listener.addEvents({
                mouseover: this.bound.attach,
                mouseleave: this.bound.detach
            });
            return this
        },
        stop: function() {
            this.listener.removeEvents({
                mouseover: this.bound.attach,
                mouseleave: this.bound.detach
            });
            this.detach();
            this.timer = clearInterval(this.timer);
            return this
        },
        attach: function() {
            this.listener.addEvent("mousemove", this.bound.getCoords)
        },
        detach: function() {
            this.listener.removeEvent("mousemove", this.bound.getCoords);
            this.timer = clearInterval(this.timer)
        },
        getCoords: function(b) {
            this.page = (this.listener.get("tag") == "body") ? b.client : b.page;
            if (!this.timer) {
                this.timer = this.scroll.periodical(Math.round(1000 / this.options.fps), this)
            }
        },
        scroll: function() {
            var d = this.element.getSize(),
                b = this.element.getScroll(),
                k = ((this.element != this.docBody) && (this.element != window)) ? this.element.getOffsets() : {
                    x: 0,
                    y: 0
                },
                e = this.element.getScrollSize(),
                h = {
                    x: 0,
                    y: 0
                },
                f = this.options.area.top || this.options.area,
                c = this.options.area.bottom || this.options.area;
            for (var g in this.page) {
                if (this.page[g] < (f + k[g]) && b[g] != 0) {
                    h[g] = (this.page[g] - f - k[g]) * this.options.velocity
                } else {
                    if (this.page[g] + c > (d[g] + k[g]) && b[g] + d[g] != e[g]) {
                        h[g] = (this.page[g] - d[g] + c - k[g]) * this.options.velocity
                    }
                }
                h[g] = h[g].round()
            }
            if (h.y || h.x) {
                this.fireEvent("change", [b.x + h.x, b.y + h.y])
            }
        }
    })
})();
(function() {
    var a = function(d, c) {
        return (d) ? (typeOf(d) == "function" ? d(c) : c.get(d)) : ""
    };
    var b = this.Tips = new Class({
        Implements: [Events, Options],
        options: {
            onShow: function() {
                this.tip.setStyle("display", "block")
            },
            onHide: function() {
                this.tip.setStyle("display", "none")
            },
            title: "title",
            text: function(c) {
                return c.get("rel") || c.get("href")
            },
            showDelay: 100,
            hideDelay: 100,
            className: "tip-wrap",
            offset: {
                x: 16,
                y: 16
            },
            windowPadding: {
                x: 0,
                y: 0
            },
            fixed: false,
            waiAria: true,
            hideEmpty: false
        },
        initialize: function() {
            var c = Array.link(arguments, {
                options: Type.isObject,
                elements: function(d) {
                    return d != null
                }
            });
            this.setOptions(c.options);
            if (c.elements) {
                this.attach(c.elements)
            }
            this.container = new Element("div", {
                "class": "tip"
            });
            if (this.options.id) {
                this.container.set("id", this.options.id);
                if (this.options.waiAria) {
                    this.attachWaiAria()
                }
            }
        },
        toElement: function() {
            if (this.tip) {
                return this.tip
            }
            this.tip = new Element("div", {
                "class": this.options.className,
                styles: {
                    position: "absolute",
                    top: 0,
                    left: 0,
                    display: "none"
                }
            }).adopt(new Element("div", {
                "class": "tip-top"
            }), this.container, new Element("div", {
                "class": "tip-bottom"
            }));
            return this.tip
        },
        attachWaiAria: function() {
            var c = this.options.id;
            this.container.set("role", "tooltip");
            if (!this.waiAria) {
                this.waiAria = {
                    show: function(d) {
                        if (c) {
                            d.set("aria-describedby", c)
                        }
                        this.container.set("aria-hidden", "false")
                    },
                    hide: function(d) {
                        if (c) {
                            d.erase("aria-describedby")
                        }
                        this.container.set("aria-hidden", "true")
                    }
                }
            }
            this.addEvents(this.waiAria)
        },
        detachWaiAria: function() {
            if (this.waiAria) {
                this.container.erase("role");
                this.container.erase("aria-hidden");
                this.removeEvents(this.waiAria)
            }
        },
        attach: function(c) {
            $$(c).each(function(e) {
                var g = a(this.options.title, e),
                    f = a(this.options.text, e);
                e.set("title", "").store("tip:native", g).retrieve("tip:title", g);
                e.retrieve("tip:text", f);
                this.fireEvent("attach", [e]);
                var d = ["enter", "leave"];
                if (!this.options.fixed) {
                    d.push("move")
                }
                d.each(function(k) {
                    var h = e.retrieve("tip:" + k);
                    if (!h) {
                        h = function(m) {
                            this["element" + k.capitalize()].apply(this, [m, e])
                        }.bind(this)
                    }
                    e.store("tip:" + k, h).addEvent("mouse" + k, h)
                }, this)
            }, this);
            return this
        },
        detach: function(c) {
            $$(c).each(function(e) {
                ["enter", "leave", "move"].each(function(f) {
                    e.removeEvent("mouse" + f, e.retrieve("tip:" + f)).eliminate("tip:" + f)
                });
                this.fireEvent("detach", [e]);
                if (this.options.title == "title") {
                    var d = e.retrieve("tip:native");
                    if (d) {
                        e.set("title", d)
                    }
                }
            }, this);
            return this
        },
        elementEnter: function(d, c) {
            clearTimeout(this.timer);
            this.timer = (function() {
                this.container.empty();
                var e = !this.options.hideEmpty;
                ["title", "text"].each(function(g) {
                    var f = c.retrieve("tip:" + g);
                    var h = this["_" + g + "Element"] = new Element("div", {
                        "class": "tip-" + g
                    }).inject(this.container);
                    if (f) {
                        this.fill(h, f);
                        e = true
                    }
                }, this);
                if (e) {
                    this.show(c)
                } else {
                    this.hide(c)
                }
                this.position((this.options.fixed) ? {
                    page: c.getPosition()
                } : d)
            }).delay(this.options.showDelay, this)
        },
        elementLeave: function(d, c) {
            clearTimeout(this.timer);
            this.timer = this.hide.delay(this.options.hideDelay, this, c);
            this.fireForParent(d, c)
        },
        setTitle: function(c) {
            if (this._titleElement) {
                this._titleElement.empty();
                this.fill(this._titleElement, c)
            }
            return this
        },
        setText: function(c) {
            if (this._textElement) {
                this._textElement.empty();
                this.fill(this._textElement, c)
            }
            return this
        },
        fireForParent: function(d, c) {
            c = c.getParent();
            if (!c || c == document.body) {
                return
            }
            if (c.retrieve("tip:enter")) {
                c.fireEvent("mouseenter", d)
            } else {
                this.fireForParent(d, c)
            }
        },
        elementMove: function(d, c) {
            this.position(d)
        },
        position: function(g) {
            if (!this.tip) {
                document.id(this)
            }
            var d = window.getSize(),
                c = window.getScroll(),
                h = {
                    x: this.tip.offsetWidth,
                    y: this.tip.offsetHeight
                },
                e = {
                    x: "left",
                    y: "top"
                },
                f = {
                    y: false,
                    x2: false,
                    y2: false,
                    x: false
                },
                k = {};
            for (var m in e) {
                k[e[m]] = g.page[m] + this.options.offset[m];
                if (k[e[m]] < 0) {
                    f[m] = true
                }
                if ((k[e[m]] + h[m] - c[m]) > d[m] - this.options.windowPadding[m]) {
                    k[e[m]] = g.page[m] - this.options.offset[m] - h[m];
                    f[m + "2"] = true
                }
            }
            this.fireEvent("bound", f);
            this.tip.setStyles(k)
        },
        fill: function(c, d) {
            if (typeof d == "string") {
                c.set("html", d)
            } else {
                c.adopt(d)
            }
        },
        show: function(c) {
            if (!this.tip) {
                document.id(this)
            }
            if (!this.tip.getParent()) {
                this.tip.inject(document.body)
            }
            this.fireEvent("show", [this.tip, c])
        },
        hide: function(c) {
            if (!this.tip) {
                document.id(this)
            }
            this.fireEvent("hide", [this.tip, c])
        }
    })
})();
Locale.define("CH", "Number", {
    decimal: ",",
    group: "'",
    currency: {
        decimal: ".",
        suffix: " CHF"
    }
});
Locale.define("EU", "Number", {
    decimal: ",",
    group: ".",
    currency: {
        prefix: "â‚¬ "
    }
});
(function() {
    var a = {
        json: JSON.decode
    };
    Locale.Set.defineParser = function(b, c) {
        a[b] = c
    };
    Locale.Set.from = function(d, c) {
        if (instanceOf(d, Locale.Set)) {
            return d
        }
        if (!c && typeOf(d) == "string") {
            c = "json"
        }
        if (a[c]) {
            d = a[c](d)
        }
        var b = new Locale.Set;
        b.sets = d.sets || {};
        if (d.inherits) {
            b.inherits.locales = Array.convert(d.inherits.locales);
            b.inherits.sets = d.inherits.sets || {}
        }
        return b
    }
})();
Locale.define("ZA", "Number", {
    decimal: ".",
    group: ",",
    currency: {
        prefix: "R "
    }
});
Locale.define("af-ZA", "Date", {
    months: ["Januarie", "Februarie", "Maart", "April", "Mei", "Junie", "Julie", "Augustus", "September", "Oktober", "November", "Desember"],
    months_abbr: ["Jan", "Feb", "Mrt", "Apr", "Mei", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Des"],
    days: ["Sondag", "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrydag", "Saterdag"],
    days_abbr: ["Son", "Maa", "Din", "Woe", "Don", "Vry", "Sat"],
    dateOrder: ["date", "month", "year"],
    shortDate: "%d-%m-%Y",
    shortTime: "%H:%M",
    AM: "VM",
    PM: "NM",
    firstDayOfWeek: 1,
    ordinal: function(a) {
        return ((a > 1 && a < 20 && a != 8) || (a > 100 && a.toString().substr(-2, 1) == "1")) ? "de" : "ste"
    },
    lessThanMinuteAgo: "minder as 'n minuut gelede",
    minuteAgo: "ongeveer 'n minuut gelede",
    minutesAgo: "{delta} minute gelede",
    hourAgo: "omtret 'n uur gelede",
    hoursAgo: "ongeveer {delta} ure gelede",
    dayAgo: "1 dag gelede",
    daysAgo: "{delta} dae gelede",
    weekAgo: "1 week gelede",
    weeksAgo: "{delta} weke gelede",
    monthAgo: "1 maand gelede",
    monthsAgo: "{delta} maande gelede",
    yearAgo: "1 jaar gelede",
    yearsAgo: "{delta} jare gelede",
    lessThanMinuteUntil: "oor minder as 'n minuut",
    minuteUntil: "oor ongeveer 'n minuut",
    minutesUntil: "oor {delta} minute",
    hourUntil: "oor ongeveer 'n uur",
    hoursUntil: "oor {delta} uur",
    dayUntil: "oor ongeveer 'n dag",
    daysUntil: "oor {delta} dae",
    weekUntil: "oor 'n week",
    weeksUntil: "oor {delta} weke",
    monthUntil: "oor 'n maand",
    monthsUntil: "oor {delta} maande",
    yearUntil: "oor 'n jaar",
    yearsUntil: "oor {delta} jaar"
});
Locale.define("af-ZA", "FormValidator", {
    required: "Hierdie veld word vereis.",
    length: "Voer asseblief {length} karakters in (u het {elLength} karakters ingevoer)",
    minLength: "Voer asseblief ten minste {minLength} karakters in (u het {length} karakters ingevoer).",
    maxLength: "Moet asseblief nie meer as {maxLength} karakters invoer nie (u het {length} karakters ingevoer).",
    integer: "Voer asseblief 'n heelgetal in hierdie veld in. Getalle met desimale (bv. 1.25) word nie toegelaat nie.",
    numeric: 'Voer asseblief slegs numeriese waardes in hierdie veld in (bv. "1" of "1.1" of "-1" of "-1.1").',
    digits: "Gebruik asseblief slegs nommers en punktuasie in hierdie veld. (by voorbeeld, 'n telefoon nommer wat koppeltekens en punte bevat is toelaatbaar).",
    alpha: "Gebruik asseblief slegs letters (a-z) binne-in hierdie veld. Geen spasies of ander karakters word toegelaat nie.",
    alphanum: "Gebruik asseblief slegs letters (a-z) en nommers (0-9) binne-in hierdie veld. Geen spasies of ander karakters word toegelaat nie.",
    dateSuchAs: "Voer asseblief 'n geldige datum soos {date} in",
    dateInFormatMDY: 'Voer asseblief \'n geldige datum soos MM/DD/YYYY in (bv. "12/31/1999")',
    email: 'Voer asseblief \'n geldige e-pos adres in. Byvoorbeeld "fred@domain.com".',
    url: "Voer asseblief 'n geldige bronadres (URL) soos http://www.example.com in.",
    currencyDollar: "Voer asseblief 'n geldige $ bedrag in. Byvoorbeeld $100.00 .",
    oneRequired: "Voer asseblief iets in vir ten minste een van hierdie velde.",
    errorPrefix: "Fout: ",
    warningPrefix: "Waarskuwing: ",
    noSpace: "Daar mag geen spasies in hierdie toevoer wees nie.",
    reqChkByNode: "Geen items is gekies nie.",
    requiredChk: "Hierdie veld word vereis.",
    reqChkByName: "Kies asseblief 'n {label}.",
    match: "Hierdie veld moet by die {matchName} veld pas",
    startDate: "die begin datum",
    endDate: "die eind datum",
    currentDate: "die huidige datum",
    afterDate: "Die datum moet dieselfde of na {label} wees.",
    beforeDate: "Die datum moet dieselfde of voor {label} wees.",
    startMonth: "Kies asseblief 'n begin maand",
    sameMonth: "Hierdie twee datums moet in dieselfde maand wees - u moet een of beide verander.",
    creditcard: "Die ingevoerde kredietkaart nommer is ongeldig. Bevestig asseblief die nommer en probeer weer. {length} syfers is ingevoer."
});
Locale.define("af-ZA").inherit("ZA", "Number");
Locale.define("ar", "Date", {
    dateOrder: ["date", "month", "year"],
    shortDate: "%d/%m/%Y",
    shortTime: "%H:%M"
});
Locale.define("ar", "FormValidator", {
    required: "Ù‡Ø°Ø§ Ø§Ù„Ø­Ù‚Ù„ Ù…Ø·Ù„ÙˆØ¨.",
    minLength: "Ø±Ø¬Ø§Ø¡Ù‹ Ø¥Ø¯Ø®Ø§Ù„ {minLength} Ø£Ø­Ø±Ù Ø¹Ù„Ù‰ Ø§Ù„Ø£Ù‚Ù„ (ØªÙ… Ø¥Ø¯Ø®Ø§Ù„ {length} Ø£Ø­Ø±Ù).",
    maxLength: "Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø¹Ø¯Ù… Ø¥Ø¯Ø®Ø§Ù„ Ø£ÙƒØ«Ø± Ù…Ù† {maxLength} Ø£Ø­Ø±Ù (ØªÙ… Ø¥Ø¯Ø®Ø§Ù„ {length} Ø£Ø­Ø±Ù).",
    integer: "Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø¥Ø¯Ø®Ø§Ù„ Ø¹Ø¯Ø¯ ØµØ­ÙŠØ­ ÙÙŠ Ù‡Ø°Ø§ Ø§Ù„Ø­Ù‚Ù„. Ø£ÙŠ Ø±Ù‚Ù… Ø°Ùˆ ÙƒØ³Ø± Ø¹Ø´Ø±ÙŠ Ø£Ùˆ Ù…Ø¦ÙˆÙŠ (Ù…Ø«Ø§Ù„ 1.25 ) ØºÙŠØ± Ù…Ø³Ù…ÙˆØ­.",
    numeric: 'Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø¥Ø¯Ø®Ø§Ù„ Ù‚ÙŠÙ… Ø±Ù‚Ù…ÙŠØ© ÙÙŠ Ù‡Ø°Ø§ Ø§Ù„Ø­Ù‚Ù„ (Ù…Ø«Ø§Ù„ "1" Ø£Ùˆ "1.1" Ø£Ùˆ "-1" Ø£Ùˆ "-1.1").',
    digits: "Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø£Ø³ØªØ®Ø¯Ø§Ù… Ù‚ÙŠÙ… Ø±Ù‚Ù…ÙŠØ© ÙˆØ¹Ù„Ø§Ù…Ø§Øª ØªØ±Ù‚ÙŠÙ…ÙŠØ© ÙÙ‚Ø· ÙÙŠ Ù‡Ø°Ø§ Ø§Ù„Ø­Ù‚Ù„ (Ù…Ø«Ø§Ù„, Ø±Ù‚Ù… Ù‡Ø§ØªÙ Ù…Ø¹ Ù†Ù‚Ø·Ø© Ø£Ùˆ Ø´Ø­Ø·Ø©)",
    alpha: "Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø£Ø³ØªØ®Ø¯Ø§Ù… Ø£Ø­Ø±Ù ÙÙ‚Ø· (Ø§-ÙŠ) ÙÙŠ Ù‡Ø°Ø§ Ø§Ù„Ø­Ù‚Ù„. Ø£ÙŠ ÙØ±Ø§ØºØ§Øª Ø£Ùˆ Ø¹Ù„Ø§Ù…Ø§Øª ØºÙŠØ± Ù…Ø³Ù…ÙˆØ­Ø©.",
    alphanum: "Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø£Ø³ØªØ®Ø¯Ø§Ù… Ø£Ø­Ø±Ù ÙÙ‚Ø· (Ø§-ÙŠ) Ø£Ùˆ Ø£Ø±Ù‚Ø§Ù… (0-9) ÙÙ‚Ø· ÙÙŠ Ù‡Ø°Ø§ Ø§Ù„Ø­Ù‚Ù„. Ø£ÙŠ ÙØ±Ø§ØºØ§Øª Ø£Ùˆ Ø¹Ù„Ø§Ù…Ø§Øª ØºÙŠØ± Ù…Ø³Ù…ÙˆØ­Ø©.",
    dateSuchAs: "Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø¥Ø¯Ø®Ø§Ù„ ØªØ§Ø±ÙŠØ® ØµØ­ÙŠØ­ ÙƒØ§Ù„ØªØ§Ù„ÙŠ {date}",
    dateInFormatMDY: "Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø¥Ø¯Ø®Ø§Ù„ ØªØ§Ø±ÙŠØ® ØµØ­ÙŠØ­ (Ù…Ø«Ø§Ù„, 31-12-1999)",
    email: "Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø¥Ø¯Ø®Ø§Ù„ Ø¨Ø±ÙŠØ¯ Ø¥Ù„ÙƒØªØ±ÙˆÙ†ÙŠ ØµØ­ÙŠØ­.",
    url: "Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø¥Ø¯Ø®Ø§Ù„ Ø¹Ù†ÙˆØ§Ù† Ø¥Ù„ÙƒØªØ±ÙˆÙ†ÙŠ ØµØ­ÙŠØ­ Ù…Ø«Ù„ http://www.example.com",
    currencyDollar: "Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø¥Ø¯Ø®Ø§Ù„ Ù‚ÙŠÙ…Ø© $ ØµØ­ÙŠØ­Ø©. Ù…Ø«Ø§Ù„, 100.00$",
    oneRequired: "Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø¥Ø¯Ø®Ø§Ù„ Ù‚ÙŠÙ…Ø© ÙÙŠ Ø£Ø­Ø¯ Ù‡Ø°Ù‡ Ø§Ù„Ø­Ù‚ÙˆÙ„ Ø¹Ù„Ù‰ Ø§Ù„Ø£Ù‚Ù„.",
    errorPrefix: "Ø®Ø·Ø£: ",
    warningPrefix: "ØªØ­Ø°ÙŠØ±: "
});
Locale.define("ca-CA", "Date", {
    months: ["Gener", "Febrer", "MarÃ§", "Abril", "Maig", "Juny", "Juli", "Agost", "Setembre", "Octubre", "Novembre", "Desembre"],
    months_abbr: ["gen.", "febr.", "marÃ§", "abr.", "maig", "juny", "jul.", "ag.", "set.", "oct.", "nov.", "des."],
    days: ["Diumenge", "Dilluns", "Dimarts", "Dimecres", "Dijous", "Divendres", "Dissabte"],
    days_abbr: ["dg", "dl", "dt", "dc", "dj", "dv", "ds"],
    dateOrder: ["date", "month", "year"],
    shortDate: "%d/%m/%Y",
    shortTime: "%H:%M",
    AM: "AM",
    PM: "PM",
    firstDayOfWeek: 0,
    ordinal: "",
    lessThanMinuteAgo: "fa menys d`un minut",
    minuteAgo: "fa un minut",
    minutesAgo: "fa {delta} minuts",
    hourAgo: "fa un hora",
    hoursAgo: "fa unes {delta} hores",
    dayAgo: "fa un dia",
    daysAgo: "fa {delta} dies",
    lessThanMinuteUntil: "menys d`un minut des d`ara",
    minuteUntil: "un minut des d`ara",
    minutesUntil: "{delta} minuts des d`ara",
    hourUntil: "un hora des d`ara",
    hoursUntil: "unes {delta} hores des d`ara",
    dayUntil: "1 dia des d`ara",
    daysUntil: "{delta} dies des d`ara"
});
Locale.define("ca-CA", "FormValidator", {
    required: "Aquest camp es obligatori.",
    minLength: "Per favor introdueix al menys {minLength} caracters (has introduit {length} caracters).",
    maxLength: "Per favor introdueix no mes de {maxLength} caracters (has introduit {length} caracters).",
    integer: "Per favor introdueix un nombre enter en aquest camp. Nombres amb decimals (p.e. 1,25) no estan permesos.",
    numeric: 'Per favor introdueix sols valors numerics en aquest camp (p.e. "1" o "1,1" o "-1" o "-1,1").',
    digits: "Per favor usa sols numeros i puntuacio en aquest camp (per exemple, un nombre de telefon amb guions i punts no esta permes).",
    alpha: "Per favor utilitza lletres nomes (a-z) en aquest camp. No sÂ´admiteixen espais ni altres caracters.",
    alphanum: "Per favor, utilitza nomes lletres (a-z) o numeros (0-9) en aquest camp. No sÂ´admiteixen espais ni altres caracters.",
    dateSuchAs: "Per favor introdueix una data valida com {date}",
    dateInFormatMDY: 'Per favor introdueix una data valida com DD/MM/YYYY (p.e. "31/12/1999")',
    email: 'Per favor, introdueix una adreÃ§a de correu electronic valida. Per exemple, "fred@domain.com".',
    url: "Per favor introdueix una URL valida com http://www.example.com.",
    currencyDollar: "Per favor introdueix una quantitat valida de â‚¬. Per exemple â‚¬100,00 .",
    oneRequired: "Per favor introdueix alguna cosa per al menys una dÂ´aquestes entrades.",
    errorPrefix: "Error: ",
    warningPrefix: "Avis: ",
    noSpace: "No poden haver espais en aquesta entrada.",
    reqChkByNode: "No hi han elements seleccionats.",
    requiredChk: "Aquest camp es obligatori.",
    reqChkByName: "Per favor selecciona una {label}.",
    match: "Aquest camp necessita coincidir amb el camp {matchName}",
    startDate: "la data de inici",
    endDate: "la data de fi",
    currentDate: "la data actual",
    afterDate: "La data deu ser igual o posterior a {label}.",
    beforeDate: "La data deu ser igual o anterior a {label}.",
    startMonth: "Per favor selecciona un mes dÂ´orige",
    sameMonth: "Aquestes dos dates deuen estar dins del mateix mes - deus canviar una o altra."
});
(function() {
    var a = function(e, d, c, b) {
        if (e == 1) {
            return d
        } else {
            if (e == 2 || e == 3 || e == 4) {
                return c
            } else {
                return b
            }
        }
    };
    Locale.define("cs-CZ", "Date", {
        months: ["Leden", "Ãšnor", "BÅ™ezen", "Duben", "KvÄ›ten", "ÄŒerven", "ÄŒervenec", "Srpen", "ZÃ¡Å™Ã­", "Å˜Ã­jen", "Listopad", "Prosinec"],
        months_abbr: ["ledna", "Ãºnora", "bÅ™ezna", "dubna", "kvÄ›tna", "Äervna", "Äervence", "srpna", "zÃ¡Å™Ã­", "Å™Ã­jna", "listopadu", "prosince"],
        days: ["NedÄ›le", "PondÄ›lÃ­", "ÃšterÃ½", "StÅ™eda", "ÄŒtvrtek", "PÃ¡tek", "Sobota"],
        days_abbr: ["ne", "po", "Ãºt", "st", "Ät", "pÃ¡", "so"],
        dateOrder: ["date", "month", "year"],
        shortDate: "%d.%m.%Y",
        shortTime: "%H:%M",
        AM: "dop.",
        PM: "odp.",
        firstDayOfWeek: 1,
        ordinal: ".",
        lessThanMinuteAgo: "pÅ™ed chvÃ­lÃ­",
        minuteAgo: "pÅ™ibliÅ¾nÄ› pÅ™ed minutou",
        minutesAgo: function(b) {
            return "pÅ™ed {delta} " + a(b, "minutou", "minutami", "minutami")
        },
        hourAgo: "pÅ™ibliÅ¾nÄ› pÅ™ed hodinou",
        hoursAgo: function(b) {
            return "pÅ™ed {delta} " + a(b, "hodinou", "hodinami", "hodinami")
        },
        dayAgo: "pÅ™ed dnem",
        daysAgo: function(b) {
            return "pÅ™ed {delta} " + a(b, "dnem", "dny", "dny")
        },
        weekAgo: "pÅ™ed tÃ½dnem",
        weeksAgo: function(b) {
            return "pÅ™ed {delta} " + a(b, "tÃ½dnem", "tÃ½dny", "tÃ½dny")
        },
        monthAgo: "pÅ™ed mÄ›sÃ­cem",
        monthsAgo: function(b) {
            return "pÅ™ed {delta} " + a(b, "mÄ›sÃ­cem", "mÄ›sÃ­ci", "mÄ›sÃ­ci")
        },
        yearAgo: "pÅ™ed rokem",
        yearsAgo: function(b) {
            return "pÅ™ed {delta} " + a(b, "rokem", "lety", "lety")
        },
        lessThanMinuteUntil: "za chvÃ­li",
        minuteUntil: "pÅ™ibliÅ¾nÄ› za minutu",
        minutesUntil: function(b) {
            return "za {delta} " + a(b, "minutu", "minuty", "minut")
        },
        hourUntil: "pÅ™ibliÅ¾nÄ› za hodinu",
        hoursUntil: function(b) {
            return "za {delta} " + a(b, "hodinu", "hodiny", "hodin")
        },
        dayUntil: "za den",
        daysUntil: function(b) {
            return "za {delta} " + a(b, "den", "dny", "dnÅ¯")
        },
        weekUntil: "za tÃ½den",
        weeksUntil: function(b) {
            return "za {delta} " + a(b, "tÃ½den", "tÃ½dny", "tÃ½dnÅ¯")
        },
        monthUntil: "za mÄ›sÃ­c",
        monthsUntil: function(b) {
            return "za {delta} " + a(b, "mÄ›sÃ­c", "mÄ›sÃ­ce", "mÄ›sÃ­cÅ¯")
        },
        yearUntil: "za rok",
        yearsUntil: function(b) {
            return "za {delta} " + a(b, "rok", "roky", "let")
        }
    })
})();
Locale.define("cs-CZ", "FormValidator", {
    required: "Tato poloÅ¾ka je povinnÃ¡.",
    minLength: "Zadejte prosÃ­m alespoÅˆ {minLength} znakÅ¯ (napsÃ¡no {length} znakÅ¯).",
    maxLength: "Zadejte prosÃ­m mÃ©nÄ› neÅ¾ {maxLength} znakÅ¯ (nÃ¡psÃ¡no {length} znakÅ¯).",
    integer: "Zadejte prosÃ­m celÃ© ÄÃ­slo. DesetinnÃ¡ ÄÃ­sla (napÅ™. 1.25) nejsou povolena.",
    numeric: 'Zadejte jen ÄÃ­selnÃ© hodnoty (tj. "1" nebo "1.1" nebo "-1" nebo "-1.1").',
    digits: "Zadejte prosÃ­m pouze ÄÃ­sla a interpunkÄnÃ­ znamÃ©nka(napÅ™Ã­klad telefonnÃ­ ÄÃ­slo s pomlÄkami nebo teÄkami je povoleno).",
    alpha: "Zadejte prosÃ­m pouze pÃ­smena (a-z). Mezery nebo jinÃ© znaky nejsou povoleny.",
    alphanum: "Zadejte prosÃ­m pouze pÃ­smena (a-z) nebo ÄÃ­slice (0-9). Mezery nebo jinÃ© znaky nejsou povoleny.",
    dateSuchAs: "Zadejte prosÃ­m platnÃ© datum jako {date}",
    dateInFormatMDY: 'Zadejte prosÃ­m platnÃ© datum jako MM / DD / RRRR (tj. "12/31/1999")',
    email: 'Zadejte prosÃ­m platnou e-mailovou adresu. NapÅ™Ã­klad "fred@domain.com".',
    url: "Zadejte prosÃ­m platnou URL adresu jako http://www.example.com.",
    currencyDollar: "Zadejte prosÃ­m platnou ÄÃ¡stku. NapÅ™Ã­klad $100.00.",
    oneRequired: "Zadejte prosÃ­m alespoÅˆ jednu hodnotu pro tyto poloÅ¾ky.",
    errorPrefix: "Chyba: ",
    warningPrefix: "UpozornÄ›nÃ­: ",
    noSpace: "V tÃ©to poloÅ¾ce nejsou povoleny mezery",
    reqChkByNode: "Nejsou vybrÃ¡ny Å¾Ã¡dnÃ© poloÅ¾ky.",
    requiredChk: "Tato poloÅ¾ka je vyÅ¾adovÃ¡na.",
    reqChkByName: "ProsÃ­m vyberte {label}.",
    match: "Tato poloÅ¾ka se musÃ­ shodovat s poloÅ¾kou {matchName}",
    startDate: "datum zahÃ¡jenÃ­",
    endDate: "datum ukonÄenÃ­",
    currentDate: "aktuÃ¡lnÃ­ datum",
    afterDate: "Datum by mÄ›lo bÃ½t stejnÃ© nebo vÄ›tÅ¡Ã­ neÅ¾ {label}.",
    beforeDate: "Datum by mÄ›lo bÃ½t stejnÃ© nebo menÅ¡Ã­ neÅ¾ {label}.",
    startMonth: "Vyberte poÄÃ¡teÄnÃ­ mÄ›sÃ­c.",
    sameMonth: "Tyto dva datumy musÃ­ bÃ½t ve stejnÃ©m mÄ›sÃ­ci - zmÄ›Åˆte jeden z nich.",
    creditcard: "ZadanÃ© ÄÃ­slo kreditnÃ­ karty je neplatnÃ©. ProsÃ­m opravte ho. Bylo zadÃ¡no {length} ÄÃ­sel."
});
Locale.define("da-DK", "Date", {
    months: ["Januar", "Februar", "Marts", "April", "Maj", "Juni", "Juli", "August", "September", "Oktober", "November", "December"],
    months_abbr: ["jan.", "feb.", "mar.", "apr.", "maj.", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."],
    days: ["SÃ¸ndag", "Mandag", "Tirsdag", "Onsdag", "Torsdag", "Fredag", "LÃ¸rdag"],
    days_abbr: ["sÃ¸n", "man", "tir", "ons", "tor", "fre", "lÃ¸r"],
    dateOrder: ["date", "month", "year"],
    shortDate: "%d-%m-%Y",
    shortTime: "%H:%M",
    AM: "AM",
    PM: "PM",
    firstDayOfWeek: 1,
    ordinal: ".",
    lessThanMinuteAgo: "mindre end et minut siden",
    minuteAgo: "omkring et minut siden",
    minutesAgo: "{delta} minutter siden",
    hourAgo: "omkring en time siden",
    hoursAgo: "omkring {delta} timer siden",
    dayAgo: "1 dag siden",
    daysAgo: "{delta} dage siden",
    weekAgo: "1 uge siden",
    weeksAgo: "{delta} uger siden",
    monthAgo: "1 mÃ¥ned siden",
    monthsAgo: "{delta} mÃ¥neder siden",
    yearAgo: "1 Ã¥r siden",
    yearsAgo: "{delta} Ã¥r siden",
    lessThanMinuteUntil: "mindre end et minut fra nu",
    minuteUntil: "omkring et minut fra nu",
    minutesUntil: "{delta} minutter fra nu",
    hourUntil: "omkring en time fra nu",
    hoursUntil: "omkring {delta} timer fra nu",
    dayUntil: "1 dag fra nu",
    daysUntil: "{delta} dage fra nu",
    weekUntil: "1 uge fra nu",
    weeksUntil: "{delta} uger fra nu",
    monthUntil: "1 mÃ¥ned fra nu",
    monthsUntil: "{delta} mÃ¥neder fra nu",
    yearUntil: "1 Ã¥r fra nu",
    yearsUntil: "{delta} Ã¥r fra nu"
});
Locale.define("da-DK", "FormValidator", {
    required: "Feltet skal udfyldes.",
    minLength: "Skriv mindst {minLength} tegn (du skrev {length} tegn).",
    maxLength: "Skriv maksimalt {maxLength} tegn (du skrev {length} tegn).",
    integer: "Skriv et tal i dette felt. Decimal tal (f.eks. 1.25) er ikke tilladt.",
    numeric: 'Skriv kun tal i dette felt (i.e. "1" eller "1.1" eller "-1" eller "-1.1").',
    digits: "Skriv kun tal og tegnsÃ¦tning i dette felt (eksempel, et telefon nummer med bindestreg eller punktum er tilladt).",
    alpha: "Skriv kun bogstaver (a-z) i dette felt. Mellemrum og andre tegn er ikke tilladt.",
    alphanum: "Skriv kun bogstaver (a-z) eller tal (0-9) i dette felt. Mellemrum og andre tegn er ikke tilladt.",
    dateSuchAs: "Skriv en gyldig dato som {date}",
    dateInFormatMDY: 'Skriv dato i formatet DD-MM-YYYY (f.eks. "31-12-1999")',
    email: 'Skriv en gyldig e-mail adresse. F.eks "fred@domain.com".',
    url: 'Skriv en gyldig URL adresse. F.eks "http://www.example.com".',
    currencyDollar: "Skriv et gldigt belÃ¸b. F.eks Kr.100.00 .",
    oneRequired: "Et eller flere af felterne i denne formular skal udfyldes.",
    errorPrefix: "Fejl: ",
    warningPrefix: "Advarsel: ",
    noSpace: "Der mÃ¥ ikke benyttes mellemrum i dette felt.",
    reqChkByNode: "Foretag et valg.",
    requiredChk: "Dette felt skal udfyldes.",
    reqChkByName: "VÃ¦lg en {label}.",
    match: "Dette felt skal matche {matchName} feltet",
    startDate: "start dato",
    endDate: "slut dato",
    currentDate: "dags dato",
    afterDate: "Datoen skal vÃ¦re stÃ¸rre end eller lig med {label}.",
    beforeDate: "Datoen skal vÃ¦re mindre end eller lig med {label}.",
    startMonth: "VÃ¦lg en start mÃ¥ned",
    sameMonth: "De valgte datoer skal vÃ¦re i samme mÃ¥ned - skift en af dem."
});
Locale.define("de-DE", "Date", {
    months: ["Januar", "Februar", "MÃ¤rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"],
    months_abbr: ["Jan", "Feb", "MÃ¤r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"],
    days: ["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"],
    days_abbr: ["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"],
    dateOrder: ["date", "month", "year"],
    shortDate: "%d.%m.%Y",
    shortTime: "%H:%M",
    AM: "vormittags",
    PM: "nachmittags",
    firstDayOfWeek: 1,
    ordinal: ".",
    lessThanMinuteAgo: "vor weniger als einer Minute",
    minuteAgo: "vor einer Minute",
    minutesAgo: "vor {delta} Minuten",
    hourAgo: "vor einer Stunde",
    hoursAgo: "vor {delta} Stunden",
    dayAgo: "vor einem Tag",
    daysAgo: "vor {delta} Tagen",
    weekAgo: "vor einer Woche",
    weeksAgo: "vor {delta} Wochen",
    monthAgo: "vor einem Monat",
    monthsAgo: "vor {delta} Monaten",
    yearAgo: "vor einem Jahr",
    yearsAgo: "vor {delta} Jahren",
    lessThanMinuteUntil: "in weniger als einer Minute",
    minuteUntil: "in einer Minute",
    minutesUntil: "in {delta} Minuten",
    hourUntil: "in ca. einer Stunde",
    hoursUntil: "in ca. {delta} Stunden",
    dayUntil: "in einem Tag",
    daysUntil: "in {delta} Tagen",
    weekUntil: "in einer Woche",
    weeksUntil: "in {delta} Wochen",
    monthUntil: "in einem Monat",
    monthsUntil: "in {delta} Monaten",
    yearUntil: "in einem Jahr",
    yearsUntil: "in {delta} Jahren"
});
Locale.define("de-CH").inherit("de-DE", "Date");
Locale.define("de-CH", "FormValidator", {
    required: "Dieses Feld ist obligatorisch.",
    minLength: "Geben Sie bitte mindestens {minLength} Zeichen ein (Sie haben {length} Zeichen eingegeben).",
    maxLength: "Bitte geben Sie nicht mehr als {maxLength} Zeichen ein (Sie haben {length} Zeichen eingegeben).",
    integer: "Geben Sie bitte eine ganze Zahl ein. Dezimalzahlen (z.B. 1.25) sind nicht erlaubt.",
    numeric: "Geben Sie bitte nur Zahlenwerte in dieses Eingabefeld ein (z.B. &quot;1&quot;, &quot;1.1&quot;, &quot;-1&quot; oder &quot;-1.1&quot;).",
    digits: "Benutzen Sie bitte nur Zahlen und Satzzeichen in diesem Eingabefeld (erlaubt ist z.B. eine Telefonnummer mit Bindestrichen und Punkten).",
    alpha: "Benutzen Sie bitte nur Buchstaben (a-z) in diesem Feld. Leerzeichen und andere Zeichen sind nicht erlaubt.",
    alphanum: "Benutzen Sie bitte nur Buchstaben (a-z) und Zahlen (0-9) in diesem Eingabefeld. Leerzeichen und andere Zeichen sind nicht erlaubt.",
    dateSuchAs: "Geben Sie bitte ein g&uuml;ltiges Datum ein. Wie zum Beispiel {date}",
    dateInFormatMDY: "Geben Sie bitte ein g&uuml;ltiges Datum ein. Wie zum Beispiel TT.MM.JJJJ (z.B. &quot;31.12.1999&quot;)",
    email: "Geben Sie bitte eine g&uuml;ltige E-Mail Adresse ein. Wie zum Beispiel &quot;maria@bernasconi.ch&quot;.",
    url: "Geben Sie bitte eine g&uuml;ltige URL ein. Wie zum Beispiel http://www.example.com.",
    currencyDollar: "Geben Sie bitte einen g&uuml;ltigen Betrag in Schweizer Franken ein. Wie zum Beispiel 100.00 CHF .",
    oneRequired: "Machen Sie f&uuml;r mindestens eines der Eingabefelder einen Eintrag.",
    errorPrefix: "Fehler: ",
    warningPrefix: "Warnung: ",
    noSpace: "In diesem Eingabefeld darf kein Leerzeichen sein.",
    reqChkByNode: "Es wurden keine Elemente gew&auml;hlt.",
    requiredChk: "Dieses Feld ist obligatorisch.",
    reqChkByName: "Bitte w&auml;hlen Sie ein {label}.",
    match: "Dieses Eingabefeld muss mit dem Feld {matchName} &uuml;bereinstimmen.",
    startDate: "Das Anfangsdatum",
    endDate: "Das Enddatum",
    currentDate: "Das aktuelle Datum",
    afterDate: "Das Datum sollte zur gleichen Zeit oder sp&auml;ter sein {label}.",
    beforeDate: "Das Datum sollte zur gleichen Zeit oder fr&uuml;her sein {label}.",
    startMonth: "W&auml;hlen Sie bitte einen Anfangsmonat",
    sameMonth: "Diese zwei Datumsangaben m&uuml;ssen im selben Monat sein - Sie m&uuml;ssen eine von beiden ver&auml;ndern.",
    creditcard: "Die eingegebene Kreditkartennummer ist ung&uuml;ltig. Bitte &uuml;berpr&uuml;fen Sie diese und versuchen Sie es erneut. {length} Zahlen eingegeben."
});
Locale.define("de-CH").inherit("CH", "Number");
Locale.define("de-DE", "FormValidator", {
    required: "Dieses Eingabefeld muss ausgefÃ¼llt werden.",
    minLength: "Geben Sie bitte mindestens {minLength} Zeichen ein (Sie haben nur {length} Zeichen eingegeben).",
    maxLength: "Geben Sie bitte nicht mehr als {maxLength} Zeichen ein (Sie haben {length} Zeichen eingegeben).",
    integer: 'Geben Sie in diesem Eingabefeld bitte eine ganze Zahl ein. Dezimalzahlen (z.B. "1.25") sind nicht erlaubt.',
    numeric: 'Geben Sie in diesem Eingabefeld bitte nur Zahlenwerte (z.B. "1", "1.1", "-1" oder "-1.1") ein.',
    digits: "Geben Sie in diesem Eingabefeld bitte nur Zahlen und Satzzeichen ein (z.B. eine Telefonnummer mit Bindestrichen und Punkten ist erlaubt).",
    alpha: "Geben Sie in diesem Eingabefeld bitte nur Buchstaben (a-z) ein. Leerzeichen und andere Zeichen sind nicht erlaubt.",
    alphanum: "Geben Sie in diesem Eingabefeld bitte nur Buchstaben (a-z) und Zahlen (0-9) ein. Leerzeichen oder andere Zeichen sind nicht erlaubt.",
    dateSuchAs: 'Geben Sie bitte ein gÃ¼ltiges Datum ein (z.B. "{date}").',
    dateInFormatMDY: 'Geben Sie bitte ein gÃ¼ltiges Datum im Format TT.MM.JJJJ ein (z.B. "31.12.1999").',
    email: 'Geben Sie bitte eine gÃ¼ltige E-Mail-Adresse ein (z.B. "max@mustermann.de").',
    url: 'Geben Sie bitte eine gÃ¼ltige URL ein (z.B. "http://www.example.com").',
    currencyDollar: "Geben Sie bitte einen gÃ¼ltigen Betrag in EURO ein (z.B. 100.00â‚¬).",
    oneRequired: "Bitte fÃ¼llen Sie mindestens ein Eingabefeld aus.",
    errorPrefix: "Fehler: ",
    warningPrefix: "Warnung: ",
    noSpace: "Es darf kein Leerzeichen in diesem Eingabefeld sein.",
    reqChkByNode: "Es wurden keine Elemente gewÃ¤hlt.",
    requiredChk: "Dieses Feld muss ausgefÃ¼llt werden.",
    reqChkByName: "Bitte wÃ¤hlen Sie ein {label}.",
    match: "Dieses Eingabefeld muss mit dem {matchName} Eingabefeld Ã¼bereinstimmen.",
    startDate: "Das Anfangsdatum",
    endDate: "Das Enddatum",
    currentDate: "Das aktuelle Datum",
    afterDate: "Das Datum sollte zur gleichen Zeit oder spÃ¤ter sein als {label}.",
    beforeDate: "Das Datum sollte zur gleichen Zeit oder frÃ¼her sein als {label}.",
    startMonth: "WÃ¤hlen Sie bitte einen Anfangsmonat",
    sameMonth: "Diese zwei Datumsangaben mÃ¼ssen im selben Monat sein - Sie mÃ¼ssen eines von beiden verÃ¤ndern.",
    creditcard: "Die eingegebene Kreditkartennummer ist ungÃ¼ltig. Bitte Ã¼berprÃ¼fen Sie diese und versuchen Sie es erneut. {length} Zahlen eingegeben."
});
Locale.define("de-DE").inherit("EU", "Number");
Locale.define("el-GR", "Date", {
    months: ["Î™Î±Î½Î¿Ï…Î¬ÏÎ¹Î¿Ï‚", "Î¦ÎµÎ²ÏÎ¿Ï…Î¬ÏÎ¹Î¿Ï‚", "ÎœÎ¬ÏÏ„Î¹Î¿Ï‚", "Î‘Ï€ÏÎ¯Î»Î¹Î¿Ï‚", "ÎœÎ¬Î¹Î¿Ï‚", "Î™Î¿ÏÎ½Î¹Î¿Ï‚", "Î™Î¿ÏÎ»Î¹Î¿Ï‚", "Î‘ÏÎ³Î¿Ï…ÏƒÏ„Î¿Ï‚", "Î£ÎµÏ€Ï„Î­Î¼Î²ÏÎ¹Î¿Ï‚", "ÎŸÎºÏ„ÏŽÎ²ÏÎ¹Î¿Ï‚", "ÎÎ¿Î­Î¼Î²ÏÎ¹Î¿Ï‚", "Î”ÎµÎºÎ­Î¼Î²ÏÎ¹Î¿Ï‚"],
    months_abbr: ["Î™Î±Î½", "Î¦ÎµÎ²", "ÎœÎ±Ï", "Î‘Ï€Ï", "ÎœÎ¬Î¹", "Î™Î¿Ï…Î½", "Î™Î¿Ï…Î»", "Î‘Ï…Î³", "Î£ÎµÏ€", "ÎŸÎºÏ„", "ÎÎ¿Îµ", "Î”ÎµÎº"],
    days: ["ÎšÏ…ÏÎ¹Î±ÎºÎ®", "Î”ÎµÏ…Ï„Î­ÏÎ±", "Î¤ÏÎ¯Ï„Î·", "Î¤ÎµÏ„Î¬ÏÏ„Î·", "Î Î­Î¼Ï€Ï„Î·", "Î Î±ÏÎ±ÏƒÎºÎµÏ…Î®", "Î£Î¬Î²Î²Î±Ï„Î¿"],
    days_abbr: ["ÎšÏ…Ï", "Î”ÎµÏ…", "Î¤ÏÎ¹", "Î¤ÎµÏ„", "Î ÎµÎ¼", "Î Î±Ï", "Î£Î±Î²"],
    dateOrder: ["date", "month", "year"],
    shortDate: "%d/%m/%Y",
    shortTime: "%I:%M%p",
    AM: "Ï€Î¼",
    PM: "Î¼Î¼",
    firstDayOfWeek: 1,
    ordinal: function(a) {
        return (a > 3 && a < 21) ? "Î¿Ï‚" : ["Î¿Ï‚"][Math.min(a % 10, 4)]
    },
    lessThanMinuteAgo: "Î»Î¹Î³ÏŒÏ„ÎµÏÎ¿ Î±Ï€ÏŒ Î­Î½Î± Î»ÎµÏ€Ï„ÏŒ Ï€ÏÎ¹Î½",
    minuteAgo: "Ï€ÎµÏÎ¯Ï€Î¿Ï… Î­Î½Î± Î»ÎµÏ€Ï„ÏŒ Ï€ÏÎ¹Î½",
    minutesAgo: "{delta} Î»ÎµÏ€Ï„Î¬ Ï€ÏÎ¹Î½",
    hourAgo: "Ï€ÎµÏÎ¯Ï€Î¿Ï… Î¼Î¹Î± ÏŽÏÎ± Ï€ÏÎ¹Î½",
    hoursAgo: "Ï€ÎµÏÎ¯Ï€Î¿Ï… {delta} ÏŽÏÎµÏ‚ Ï€ÏÎ¹Î½",
    dayAgo: "1 Î·Î¼Î­ÏÎ± Ï€ÏÎ¹Î½",
    daysAgo: "{delta} Î·Î¼Î­ÏÎµÏ‚ Ï€ÏÎ¹Î½",
    weekAgo: "1 ÎµÎ²Î´Î¿Î¼Î¬Î´Î± Ï€ÏÎ¹Î½",
    weeksAgo: "{delta} ÎµÎ²Î´Î¿Î¼Î¬Î´ÎµÏ‚ Ï€ÏÎ¹Î½",
    monthAgo: "1 Î¼Î®Î½Î± Ï€ÏÎ¹Î½",
    monthsAgo: "{delta} Î¼Î®Î½ÎµÏ‚ Ï€ÏÎ¹Î½",
    yearAgo: "1 Ï‡ÏÏŒÎ½Î¿ Ï€ÏÎ¹Î½",
    yearsAgo: "{delta} Ï‡ÏÏŒÎ½Î¹Î± Ï€ÏÎ¹Î½",
    lessThanMinuteUntil: "Î»Î¹Î³ÏŒÏ„ÎµÏÎ¿ Î±Ï€ÏŒ Î»ÎµÏ€Ï„ÏŒ Î±Ï€ÏŒ Ï„ÏŽÏÎ±",
    minuteUntil: "Ï€ÎµÏÎ¯Ï€Î¿Ï… Î­Î½Î± Î»ÎµÏ€Ï„ÏŒ Î±Ï€ÏŒ Ï„ÏŽÏÎ±",
    minutesUntil: "{delta} Î»ÎµÏ€Ï„Î¬ Î±Ï€ÏŒ Ï„ÏŽÏÎ±",
    hourUntil: "Ï€ÎµÏÎ¯Ï€Î¿Ï… Î¼Î¹Î± ÏŽÏÎ± Î±Ï€ÏŒ Ï„ÏŽÏÎ±",
    hoursUntil: "Ï€ÎµÏÎ¯Ï€Î¿Ï… {delta} ÏŽÏÎµÏ‚ Î±Ï€ÏŒ Ï„ÏŽÏÎ±",
    dayUntil: "1 Î·Î¼Î­ÏÎ± Î±Ï€ÏŒ Ï„ÏŽÏÎ±",
    daysUntil: "{delta} Î·Î¼Î­ÏÎµÏ‚ Î±Ï€ÏŒ Ï„ÏŽÏÎ±",
    weekUntil: "1 ÎµÎ²Î´Î¿Î¼Î¬Î´Î± Î±Ï€ÏŒ Ï„ÏŽÏÎ±",
    weeksUntil: "{delta} ÎµÎ²Î´Î¿Î¼Î¬Î´ÎµÏ‚ Î±Ï€ÏŒ Ï„ÏŽÏÎ±",
    monthUntil: "1 Î¼Î®Î½Î±Ï‚ Î±Ï€ÏŒ Ï„ÏŽÏÎ±",
    monthsUntil: "{delta} Î¼Î®Î½ÎµÏ‚ Î±Ï€ÏŒ Ï„ÏŽÏÎ±",
    yearUntil: "1 Ï‡ÏÏŒÎ½Î¿Ï‚ Î±Ï€ÏŒ Ï„ÏŽÏÎ±",
    yearsUntil: "{delta} Ï‡ÏÏŒÎ½Î¹Î± Î±Ï€ÏŒ Ï„ÏŽÏÎ±"
});
Locale.define("el-GR", "FormValidator", {
    required: "Î‘Ï…Ï„ÏŒ Ï„Î¿ Ï€ÎµÎ´Î¯Î¿ ÎµÎ¯Î½Î±Î¹ Î±Ï€Î±ÏÎ±Î¯Ï„Î·Ï„Î¿.",
    length: "Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ, ÎµÎ¹ÏƒÎ¬Î³ÎµÏ„Îµ {length} Ï‡Î±ÏÎ±ÎºÏ„Î®ÏÎµÏ‚ (Î­Ï‡ÎµÏ„Îµ Î®Î´Î· ÎµÎ¹ÏƒÎ¬Î³ÎµÎ¹ {elLength} Ï‡Î±ÏÎ±ÎºÏ„Î®ÏÎµÏ‚).",
    minLength: "Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ, ÎµÎ¹ÏƒÎ¬Î³ÎµÏ„Îµ Ï„Î¿Ï…Î»Î¬Ï‡Î¹ÏƒÏ„Î¿Î½ {minLength} Ï‡Î±ÏÎ±ÎºÏ„Î®ÏÎµÏ‚ (Î­Ï‡ÎµÏ„Îµ Î®Î´Î· ÎµÎ¹ÏƒÎ¬Î³Îµ {length} Ï‡Î±ÏÎ±ÎºÏ„Î®ÏÎµÏ‚).",
    maxlength: "Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ, ÎµÎ¹ÏƒÎ¬Î³ÎµÏ„Îµ ÎµÏŽÏ‚ {maxlength} Ï‡Î±ÏÎ±ÎºÏ„Î®ÏÎµÏ‚ (Î­Ï‡ÎµÏ„Îµ Î®Î´Î· ÎµÎ¹ÏƒÎ¬Î³Îµ {length} Ï‡Î±ÏÎ±ÎºÏ„Î®ÏÎµÏ‚).",
    integer: "Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ, ÎµÎ¹ÏƒÎ¬Î³ÎµÏ„Îµ Î­Î½Î±Î½ Î±ÎºÎ­ÏÎ±Î¹Î¿ Î±ÏÎ¹Î¸Î¼ÏŒ ÏƒÎµ Î±Ï…Ï„ÏŒ Ï„Î¿ Ï€ÎµÎ´Î¯Î¿. ÎŸÎ¹ Î±ÏÎ¹Î¸Î¼Î¿Î¯ Î¼Îµ Î´ÎµÎºÎ±Î´Î¹ÎºÎ¬ ÏˆÎ·Ï†Î¯Î± (Ï€.Ï‡. 1.25) Î´ÎµÎ½ ÎµÏ€Î¹Ï„ÏÎ­Ï€Î¿Î½Ï„Î±Î¹.",
    numeric: 'Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ, ÎµÎ¹ÏƒÎ¬Î³ÎµÏ„Îµ Î¼ÏŒÎ½Î¿ Î±ÏÎ¹Î¸Î¼Î·Ï„Î¹ÎºÎ­Ï‚ Ï„Î¹Î¼Î­Ï‚ ÏƒÎµ Î±Ï…Ï„ÏŒ Ï„Î¿ Ï€ÎµÎ´Î¯Î¿ (Ï€.Ï‡." 1 " Î® " 1.1 " Î® " -1 " Î® " -1.1 " ).',
    digits: "Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ, Ï‡ÏÎ·ÏƒÎ¹Î¼Î¿Ï€Î¿Î¹Î®ÏƒÏ„Îµ Î¼ÏŒÎ½Î¿ Î±ÏÎ¹Î¸Î¼Î¿ÏÏ‚ ÎºÎ±Î¹ ÏƒÎ·Î¼ÎµÎ¯Î± ÏƒÏ„Î¯Î¾Î·Ï‚ ÏƒÎµ Î±Ï…Ï„ÏŒÎ½ Ï„Î¿Î½ Ï„Î¿Î¼Î­Î± (Ï€.Ï‡. ÎµÏ€Î¹Ï„ÏÎ­Ï€ÎµÏ„Î±Î¹ Î±ÏÎ¹Î¸Î¼ÏŒÏ‚ Ï„Î·Î»ÎµÏ†ÏŽÎ½Î¿Ï… Î¼Îµ Ï€Î±ÏÎ»ÎµÏ‚ Î® Ï„ÎµÎ»ÎµÎ¯ÎµÏ‚).",
    alpha: "Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ, Ï‡ÏÎ·ÏƒÎ¹Î¼Î¿Ï€Î¿Î¹Î®ÏƒÏ„Îµ Î¼ÏŒÎ½Î¿ Î³ÏÎ¬Î¼Î¼Î±Ï„Î± (a-z) ÏƒÎµ Î±Ï…Ï„ÏŒ Ï„Î¿ Ï€ÎµÎ´Î¯Î¿. Î”ÎµÎ½ ÎµÏ€Î¹Ï„ÏÎ­Ï€Î¿Î½Ï„Î±Î¹ ÎºÎµÎ½Î¬ Î® Î¬Î»Î»Î¿Î¹ Ï‡Î±ÏÎ±ÎºÏ„Î®ÏÎµÏ‚.",
    alphanum: "Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ, Ï‡ÏÎ·ÏƒÎ¹Î¼Î¿Ï€Î¿Î¹Î®ÏƒÏ„Îµ Î¼ÏŒÎ½Î¿ Î³ÏÎ¬Î¼Î¼Î±Ï„Î± (a-z) Î® Î±ÏÎ¹Î¸Î¼Î¿ÏÏ‚ (0-9) ÏƒÎµ Î±Ï…Ï„ÏŒÎ½ Ï„Î¿Î½ Ï„Î¿Î¼Î­Î±. Î”ÎµÎ½ ÎµÏ€Î¹Ï„ÏÎ­Ï€Î¿Î½Ï„Î±Î¹ ÎºÎµÎ½Î¬ Î® Î¬Î»Î»Î¿Î¹ Ï‡Î±ÏÎ±ÎºÏ„Î®ÏÎµÏ‚.",
    dateSuchAs: "Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ, ÎµÎ¹ÏƒÎ¬Î³ÎµÏ„Îµ Î¼Î¹Î± Î­Î³ÎºÏ…ÏÎ· Î·Î¼ÎµÏÎ¿Î¼Î·Î½Î¯Î±, ÏŒÏ€Ï‰Ï‚ {date}",
    dateInFormatMDY: 'Î Î±ÏÎ±ÎºÎ±Î»ÏŽ ÎµÎ¹ÏƒÎ¬Î³ÎµÏ„Îµ Î¼Î¹Î± Î­Î³ÎºÏ…ÏÎ· Î·Î¼ÎµÏÎ¿Î¼Î·Î½Î¯Î±, ÏŒÏ€Ï‰Ï‚ ÎœÎœ/Î—Î—/Î•Î•Î•Î• (Ï€.Ï‡. "12/31/1999").',
    email: 'Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ, ÎµÎ¹ÏƒÎ¬Î³ÎµÏ„Îµ Î¼Î¹Î± Î­Î³ÎºÏ…ÏÎ· Î´Î¹ÎµÏÎ¸Ï…Î½ÏƒÎ· Î·Î»ÎµÎºÏ„ÏÎ¿Î½Î¹ÎºÎ¿Ï Ï„Î±Ï‡Ï…Î´ÏÎ¿Î¼ÎµÎ¯Î¿Ï… (Ï€.Ï‡. "fred@domain.com").',
    url: "Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ, ÎµÎ¹ÏƒÎ¬Î³ÎµÏ„Îµ Î¼Î¹Î± Î­Î³ÎºÏ…ÏÎ· URL Î´Î¹ÎµÏÎ¸Ï…Î½ÏƒÎ·, ÏŒÏ€Ï‰Ï‚ http://www.example.com",
    currencyDollar: "Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ, ÎµÎ¹ÏƒÎ¬Î³ÎµÏ„Îµ Î­Î½Î± Î­Î³ÎºÏ…ÏÎ¿ Ï€Î¿ÏƒÏŒ ÏƒÎµ Î´Î¿Î»Î»Î¬ÏÎ¹Î± (Ï€.Ï‡. $100.00).",
    oneRequired: "Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ, ÎµÎ¹ÏƒÎ¬Î³ÎµÏ„Îµ ÎºÎ¬Ï„Î¹ Î³Î¹Î± Ï„Î¿Ï…Î»Î¬Ï‡Î¹ÏƒÏ„Î¿Î½ Î­Î½Î± Î±Ï€ÏŒ Î±Ï…Ï„Î¬ Ï„Î± Ï€ÎµÎ´Î¯Î±.",
    errorPrefix: "Î£Ï†Î¬Î»Î¼Î±: ",
    warningPrefix: "Î ÏÎ¿ÏƒÎ¿Ï‡Î®: ",
    noSpace: "Î”ÎµÎ½ ÎµÏ€Î¹Ï„ÏÎ­Ï€Î¿Î½Ï„Î±Î¹ Ï„Î± ÎºÎµÎ½Î¬ ÏƒÎµ Î±Ï…Ï„ÏŒ Ï„Î¿ Ï€ÎµÎ´Î¯Î¿.",
    reqChkByNode: "Î”ÎµÎ½ Î­Ï‡ÎµÎ¹ ÎµÏ€Î¹Î»ÎµÎ³ÎµÎ¯ ÎºÎ¬Ï€Î¿Î¹Î¿ Î±Î½Ï„Î¹ÎºÎµÎ¯Î¼ÎµÎ½Î¿",
    requiredChk: "Î‘Ï…Ï„ÏŒ Ï„Î¿ Ï€ÎµÎ´Î¯Î¿ ÎµÎ¯Î½Î±Î¹ Î±Ï€Î±ÏÎ±Î¯Ï„Î·Ï„Î¿.",
    reqChkByName: "Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ, ÎµÏ€Î¹Î»Î­Î¾Ï„Îµ Î¼Î¹Î± ÎµÏ„Î¹ÎºÎ­Ï„Î± {label}.",
    match: "Î‘Ï…Ï„ÏŒ Ï„Î¿ Ï€ÎµÎ´Î¯Î¿ Ï€ÏÎ­Ï€ÎµÎ¹ Î½Î± Ï„Î±Î¹ÏÎ¹Î¬Î¶ÎµÎ¹ Î¼Îµ Ï„Î¿ Ï€ÎµÎ´Î¯Î¿ {matchName}.",
    startDate: "Î· Î·Î¼ÎµÏÎ¿Î¼Î·Î½Î¯Î± Î­Î½Î±ÏÎ¾Î·Ï‚",
    endDate: "Î· Î·Î¼ÎµÏÎ¿Î¼Î·Î½Î¯Î± Î»Î®Î¾Î·Ï‚",
    currentDate: "Î· Ï„ÏÎ­Ï‡Î¿Ï…ÏƒÎ± Î·Î¼ÎµÏÎ¿Î¼Î·Î½Î¯Î±",
    afterDate: "Î— Î·Î¼ÎµÏÎ¿Î¼Î·Î½Î¯Î± Ï€ÏÎ­Ï€ÎµÎ¹ Î½Î± ÎµÎ¯Î½Î±Î¹ Î· Î¯Î´Î¹Î± Î® Î¼ÎµÏ„Î¬ Î±Ï€ÏŒ Ï„Î·Î½ {label}.",
    beforeDate: "Î— Î·Î¼ÎµÏÎ¿Î¼Î·Î½Î¯Î± Ï€ÏÎ­Ï€ÎµÎ¹ Î½Î± ÎµÎ¯Î½Î±Î¹ Î· Î¯Î´Î¹Î± Î® Ï€ÏÎ¹Î½ Î±Ï€ÏŒ Ï„Î·Î½ {label}.",
    startMonth: "Î Î±ÏÎ±ÎºÎ±Î»ÏŽ ÎµÏ€Î¹Î»Î­Î¾Ï„Îµ Î­Î½Î± Î¼Î®Î½Î± Î±ÏÏ‡Î®Ï‚.",
    sameMonth: "Î‘Ï…Ï„Î­Ï‚ Î¿Î¹ Î´ÏÎ¿ Î·Î¼ÎµÏÎ¿Î¼Î·Î½Î¯ÎµÏ‚ Ï€ÏÎ­Ï€ÎµÎ¹ Î½Î± Î­Ï‡Î¿Ï…Î½ Ï„Î¿Î½ Î¯Î´Î¹Î¿ Î¼Î®Î½Î± - Î¸Î± Ï€ÏÎ­Ï€ÎµÎ¹ Î½Î± Î±Î»Î»Î¬Î¾ÎµÏ„Îµ Î® Ï„Î¿ Î­Î½Î± Î® Ï„Î¿ Î¬Î»Î»Î¿",
    creditcard: "ÎŸ Î±ÏÎ¹Î¸Î¼ÏŒÏ‚ Ï„Î·Ï‚ Ï€Î¹ÏƒÏ„Ï‰Ï„Î¹ÎºÎ®Ï‚ ÎºÎ¬ÏÏ„Î±Ï‚ Î´ÎµÎ½ ÎµÎ¯Î½Î±Î¹ Î­Î³ÎºÏ…ÏÎ¿Ï‚. Î Î±ÏÎ±ÎºÎ±Î»Î¿ÏÎ¼Îµ ÎµÎ»Î­Î³Î¾Ï„Îµ Ï„Î¿Î½ Î±ÏÎ¹Î¸Î¼ÏŒ ÎºÎ±Î¹ Î´Î¿ÎºÎ¹Î¼Î¬ÏƒÏ„Îµ Î¾Î±Î½Î¬. {length} Î¼Î®ÎºÎ¿Ï‚ ÏˆÎ·Ï†Î¯Ï‰Î½."
});
Locale.define("en-GB", "Date", {
    dateOrder: ["date", "month", "year"],
    shortDate: "%d/%m/%Y",
    shortTime: "%H:%M"
}).inherit("en-US", "Date");
Locale.define("en-US", "Number", {
    decimal: ".",
    group: ",",
    currency: {
        prefix: "$ "
    }
});
Locale.define("es-ES", "Date", {
    months: ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"],
    months_abbr: ["ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic"],
    days: ["Domingo", "Lunes", "Martes", "MiÃ©rcoles", "Jueves", "Viernes", "SÃ¡bado"],
    days_abbr: ["dom", "lun", "mar", "miÃ©", "juv", "vie", "sÃ¡b"],
    dateOrder: ["date", "month", "year"],
    shortDate: "%d/%m/%Y",
    shortTime: "%H:%M",
    AM: "AM",
    PM: "PM",
    firstDayOfWeek: 1,
    ordinal: "",
    lessThanMinuteAgo: "hace menos de un minuto",
    minuteAgo: "hace un minuto",
    minutesAgo: "hace {delta} minutos",
    hourAgo: "hace una hora",
    hoursAgo: "hace unas {delta} horas",
    dayAgo: "hace un dÃ­a",
    daysAgo: "hace {delta} dÃ­as",
    weekAgo: "hace una semana",
    weeksAgo: "hace unas {delta} semanas",
    monthAgo: "hace un mes",
    monthsAgo: "hace {delta} meses",
    yearAgo: "hace un aÃ±o",
    yearsAgo: "hace {delta} aÃ±os",
    lessThanMinuteUntil: "menos de un minuto desde ahora",
    minuteUntil: "un minuto desde ahora",
    minutesUntil: "{delta} minutos desde ahora",
    hourUntil: "una hora desde ahora",
    hoursUntil: "unas {delta} horas desde ahora",
    dayUntil: "un dÃ­a desde ahora",
    daysUntil: "{delta} dÃ­as desde ahora",
    weekUntil: "una semana desde ahora",
    weeksUntil: "unas {delta} semanas desde ahora",
    monthUntil: "un mes desde ahora",
    monthsUntil: "{delta} meses desde ahora",
    yearUntil: "un aÃ±o desde ahora",
    yearsUntil: "{delta} aÃ±os desde ahora"
});
Locale.define("es-AR").inherit("es-ES", "Date");
Locale.define("es-AR", "FormValidator", {
    required: "Este campo es obligatorio.",
    minLength: "Por favor ingrese al menos {minLength} caracteres (ha ingresado {length} caracteres).",
    maxLength: "Por favor no ingrese mÃ¡s de {maxLength} caracteres (ha ingresado {length} caracteres).",
    integer: "Por favor ingrese un nÃºmero entero en este campo. NÃºmeros con decimales (p.e. 1,25) no se permiten.",
    numeric: 'Por favor ingrese solo valores numÃ©ricos en este campo (p.e. "1" o "1,1" o "-1" o "-1,1").',
    digits: "Por favor use sÃ³lo nÃºmeros y puntuaciÃ³n en este campo (por ejemplo, un nÃºmero de telÃ©fono con guiones y/o puntos no estÃ¡ permitido).",
    alpha: "Por favor use sÃ³lo letras (a-z) en este campo. No se permiten espacios ni otros caracteres.",
    alphanum: "Por favor, usa sÃ³lo letras (a-z) o nÃºmeros (0-9) en este campo. No se permiten espacios u otros caracteres.",
    dateSuchAs: "Por favor ingrese una fecha vÃ¡lida como {date}",
    dateInFormatMDY: 'Por favor ingrese una fecha vÃ¡lida, utulizando el formato DD/MM/YYYY (p.e. "31/12/1999")',
    email: 'Por favor, ingrese una direcciÃ³n de e-mail vÃ¡lida. Por ejemplo, "fred@dominio.com".',
    url: "Por favor ingrese una URL vÃ¡lida como http://www.example.com.",
    currencyDollar: "Por favor ingrese una cantidad vÃ¡lida de pesos. Por ejemplo $100,00 .",
    oneRequired: "Por favor ingrese algo para por lo menos una de estas entradas.",
    errorPrefix: "Error: ",
    warningPrefix: "Advertencia: ",
    noSpace: "No se permiten espacios en este campo.",
    reqChkByNode: "No hay elementos seleccionados.",
    requiredChk: "Este campo es obligatorio.",
    reqChkByName: "Por favor selecciona una {label}.",
    match: "Este campo necesita coincidir con el campo {matchName}",
    startDate: "la fecha de inicio",
    endDate: "la fecha de fin",
    currentDate: "la fecha actual",
    afterDate: "La fecha debe ser igual o posterior a {label}.",
    beforeDate: "La fecha debe ser igual o anterior a {label}.",
    startMonth: "Por favor selecciona un mes de origen",
    sameMonth: "Estas dos fechas deben estar en el mismo mes - debes cambiar una u otra."
});
Locale.define("es-AR", "Number", {
    decimal: ",",
    group: ".",
    currency: {
        decimals: 2,
        prefix: "$ "
    }
});
Locale.define("es-ES", "FormValidator", {
    required: "Este campo es obligatorio.",
    minLength: "Por favor introduce al menos {minLength} caracteres (has introducido {length} caracteres).",
    maxLength: "Por favor introduce no m&aacute;s de {maxLength} caracteres (has introducido {length} caracteres).",
    integer: "Por favor introduce un n&uacute;mero entero en este campo. N&uacute;meros con decimales (p.e. 1,25) no se permiten.",
    numeric: 'Por favor introduce solo valores num&eacute;ricos en este campo (p.e. "1" o "1,1" o "-1" o "-1,1").',
    digits: "Por favor usa solo n&uacute;meros y puntuaci&oacute;n en este campo (por ejemplo, un n&uacute;mero de tel&eacute;fono con guiones y puntos no esta permitido).",
    alpha: "Por favor usa letras solo (a-z) en este campo. No se admiten espacios ni otros caracteres.",
    alphanum: "Por favor, usa solo letras (a-z) o n&uacute;meros (0-9) en este campo. No se admiten espacios ni otros caracteres.",
    dateSuchAs: "Por favor introduce una fecha v&aacute;lida como {date}",
    dateInFormatMDY: 'Por favor introduce una fecha v&aacute;lida como DD/MM/YYYY (p.e. "31/12/1999")',
    email: 'Por favor, introduce una direcci&oacute;n de email v&aacute;lida. Por ejemplo, "fred@domain.com".',
    url: "Por favor introduce una URL v&aacute;lida como http://www.example.com.",
    currencyDollar: "Por favor introduce una cantidad v&aacute;lida de â‚¬. Por ejemplo â‚¬100,00 .",
    oneRequired: "Por favor introduce algo para por lo menos una de estas entradas.",
    errorPrefix: "Error: ",
    warningPrefix: "Aviso: ",
    noSpace: "No pueden haber espacios en esta entrada.",
    reqChkByNode: "No hay elementos seleccionados.",
    requiredChk: "Este campo es obligatorio.",
    reqChkByName: "Por favor selecciona una {label}.",
    match: "Este campo necesita coincidir con el campo {matchName}",
    startDate: "la fecha de inicio",
    endDate: "la fecha de fin",
    currentDate: "la fecha actual",
    afterDate: "La fecha debe ser igual o posterior a {label}.",
    beforeDate: "La fecha debe ser igual o anterior a {label}.",
    startMonth: "Por favor selecciona un mes de origen",
    sameMonth: "Estas dos fechas deben estar en el mismo mes - debes cambiar una u otra."
});
Locale.define("es-VE").inherit("es-ES", "Date");
Locale.define("es-VE", "FormValidator", {
    digits: "Por favor usa solo n&uacute;meros y puntuaci&oacute;n en este campo. Por ejemplo, un n&uacute;mero de tel&eacute;fono con guiones y puntos no esta permitido.",
    alpha: "Por favor usa solo letras (a-z) en este campo. No se admiten espacios ni otros caracteres.",
    currencyDollar: "Por favor introduce una cantidad v&aacute;lida de Bs. Por ejemplo Bs. 100,00 .",
    oneRequired: "Por favor introduce un valor para por lo menos una de estas entradas.",
    startDate: "La fecha de inicio",
    endDate: "La fecha de fin",
    currentDate: "La fecha actual"
}).inherit("es-ES", "FormValidator");
Locale.define("es-VE", "Number", {
    decimal: ",",
    group: ".",
    negative: {
        prefix: "-"
    },
    currency: {
        decimals: 2,
        prefix: "Bs. "
    },
    percentage: {
        decimals: 2,
        suffix: "%"
    }
});
Locale.define("et-EE", "Date", {
    months: ["jaanuar", "veebruar", "mÃ¤rts", "aprill", "mai", "juuni", "juuli", "august", "september", "oktoober", "november", "detsember"],
    months_abbr: ["jaan", "veebr", "mÃ¤rts", "apr", "mai", "juuni", "juuli", "aug", "sept", "okt", "nov", "dets"],
    days: ["pÃ¼hapÃ¤ev", "esmaspÃ¤ev", "teisipÃ¤ev", "kolmapÃ¤ev", "neljapÃ¤ev", "reede", "laupÃ¤ev"],
    days_abbr: ["pÃ¼hap", "esmasp", "teisip", "kolmap", "neljap", "reede", "laup"],
    dateOrder: ["month", "date", "year"],
    shortDate: "%m.%d.%Y",
    shortTime: "%H:%M",
    AM: "AM",
    PM: "PM",
    firstDayOfWeek: 1,
    ordinal: "",
    lessThanMinuteAgo: "vÃ¤hem kui minut aega tagasi",
    minuteAgo: "umbes minut aega tagasi",
    minutesAgo: "{delta} minutit tagasi",
    hourAgo: "umbes tund aega tagasi",
    hoursAgo: "umbes {delta} tundi tagasi",
    dayAgo: "1 pÃ¤ev tagasi",
    daysAgo: "{delta} pÃ¤eva tagasi",
    weekAgo: "1 nÃ¤dal tagasi",
    weeksAgo: "{delta} nÃ¤dalat tagasi",
    monthAgo: "1 kuu tagasi",
    monthsAgo: "{delta} kuud tagasi",
    yearAgo: "1 aasta tagasi",
    yearsAgo: "{delta} aastat tagasi",
    lessThanMinuteUntil: "vÃ¤hem kui minuti aja pÃ¤rast",
    minuteUntil: "umbes minuti aja pÃ¤rast",
    minutesUntil: "{delta} minuti pÃ¤rast",
    hourUntil: "umbes tunni aja pÃ¤rast",
    hoursUntil: "umbes {delta} tunni pÃ¤rast",
    dayUntil: "1 pÃ¤eva pÃ¤rast",
    daysUntil: "{delta} pÃ¤eva pÃ¤rast",
    weekUntil: "1 nÃ¤dala pÃ¤rast",
    weeksUntil: "{delta} nÃ¤dala pÃ¤rast",
    monthUntil: "1 kuu pÃ¤rast",
    monthsUntil: "{delta} kuu pÃ¤rast",
    yearUntil: "1 aasta pÃ¤rast",
    yearsUntil: "{delta} aasta pÃ¤rast"
});
Locale.define("et-EE", "FormValidator", {
    required: "VÃ¤li peab olema tÃ¤idetud.",
    minLength: "Palun sisestage vÃ¤hemalt {minLength} tÃ¤hte (te sisestasite {length} tÃ¤hte).",
    maxLength: "Palun Ã¤rge sisestage rohkem kui {maxLength} tÃ¤hte (te sisestasite {length} tÃ¤hte).",
    integer: "Palun sisestage vÃ¤ljale tÃ¤isarv. KÃ¼mnendarvud (nÃ¤iteks 1.25) ei ole lubatud.",
    numeric: 'Palun sisestage ainult numbreid vÃ¤ljale (nÃ¤iteks "1", "1.1", "-1" vÃµi "-1.1").',
    digits: "Palun kasutage ainult numbreid ja kirjavahemÃ¤rke (telefoninumbri sisestamisel on lubatud kasutada kriipse ja punkte).",
    alpha: "Palun kasutage ainult tÃ¤hti (a-z). TÃ¼hikud ja teised sÃ¼mbolid on keelatud.",
    alphanum: "Palun kasutage ainult tÃ¤hti (a-z) vÃµi numbreid (0-9). TÃ¼hikud ja teised sÃ¼mbolid on keelatud.",
    dateSuchAs: "Palun sisestage kehtiv kuupÃ¤ev kujul {date}",
    dateInFormatMDY: 'Palun sisestage kehtiv kuupÃ¤ev kujul MM.DD.YYYY (nÃ¤iteks: "12.31.1999").',
    email: 'Palun sisestage kehtiv e-maili aadress (nÃ¤iteks: "fred@domain.com").',
    url: "Palun sisestage kehtiv URL (nÃ¤iteks: http://www.example.com).",
    currencyDollar: "Palun sisestage kehtiv $ summa (nÃ¤iteks: $100.00).",
    oneRequired: "Palun sisestage midagi vÃ¤hemalt Ã¼hele antud vÃ¤ljadest.",
    errorPrefix: "Viga: ",
    warningPrefix: "Hoiatus: ",
    noSpace: "VÃ¤li ei tohi sisaldada tÃ¼hikuid.",
    reqChkByNode: "Ãœkski vÃ¤ljadest pole valitud.",
    requiredChk: "VÃ¤lja tÃ¤itmine on vajalik.",
    reqChkByName: "Palun valige Ã¼ks {label}.",
    match: "VÃ¤li peab sobima {matchName} vÃ¤ljaga",
    startDate: "algkuupÃ¤ev",
    endDate: "lÃµppkuupÃ¤ev",
    currentDate: "praegune kuupÃ¤ev",
    afterDate: "KuupÃ¤ev peab olema vÃµrdne vÃµi pÃ¤rast {label}.",
    beforeDate: "KuupÃ¤ev peab olema vÃµrdne vÃµi enne {label}.",
    startMonth: "Palun valige algkuupÃ¤ev.",
    sameMonth: "Antud kaks kuupÃ¤eva peavad olema samas kuus - peate muutma Ã¼hte kuupÃ¤eva."
});
Locale.define("fa", "Date", {
    months: ["Ú˜Ø§Ù†ÙˆÛŒÙ‡", "ÙÙˆØ±ÛŒÙ‡", "Ù…Ø§Ø±Ø³", "Ø¢Ù¾Ø±ÛŒÙ„", "Ù…Ù‡", "Ú˜ÙˆØ¦Ù†", "Ú˜ÙˆØ¦ÛŒÙ‡", "Ø¢Ú¯ÙˆØ³Øª", "Ø³Ù¾ØªØ§Ù…Ø¨Ø±", "Ø§Ú©ØªØ¨Ø±", "Ù†ÙˆØ§Ù…Ø¨Ø±", "Ø¯Ø³Ø§Ù…Ø¨Ø±"],
    months_abbr: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"],
    days: ["ÛŒÚ©Ø´Ù†Ø¨Ù‡", "Ø¯ÙˆØ´Ù†Ø¨Ù‡", "Ø³Ù‡ Ø´Ù†Ø¨Ù‡", "Ú†Ù‡Ø§Ø±Ø´Ù†Ø¨Ù‡", "Ù¾Ù†Ø¬Ø´Ù†Ø¨Ù‡", "Ø¬Ù…Ø¹Ù‡", "Ø´Ù†Ø¨Ù‡"],
    days_abbr: ["ÙŠ", "Ø¯", "Ø³", "Ú†", "Ù¾", "Ø¬", "Ø´"],
    dateOrder: ["month", "date", "year"],
    shortDate: "%m/%d/%Y",
    shortTime: "%I:%M%p",
    AM: "Ù‚.Ø¸",
    PM: "Ø¨.Ø¸",
    ordinal: "Ø§Ù…",
    lessThanMinuteAgo: "Ú©Ù…ØªØ± Ø§Ø² ÛŒÚ© Ø¯Ù‚ÛŒÙ‚Ù‡ Ù¾ÛŒØ´",
    minuteAgo: "Ø­Ø¯ÙˆØ¯ ÛŒÚ© Ø¯Ù‚ÛŒÙ‚Ù‡ Ù¾ÛŒØ´",
    minutesAgo: "{delta} Ø¯Ù‚ÛŒÙ‚Ù‡ Ù¾ÛŒØ´",
    hourAgo: "Ø­Ø¯ÙˆØ¯ ÛŒÚ© Ø³Ø§Ø¹Øª Ù¾ÛŒØ´",
    hoursAgo: "Ø­Ø¯ÙˆØ¯ {delta} Ø³Ø§Ø¹Øª Ù¾ÛŒØ´",
    dayAgo: "1 Ø±ÙˆØ² Ù¾ÛŒØ´",
    daysAgo: "{delta} Ø±ÙˆØ² Ù¾ÛŒØ´",
    weekAgo: "1 Ù‡ÙØªÙ‡ Ù¾ÛŒØ´",
    weeksAgo: "{delta} Ù‡ÙØªÙ‡ Ù¾ÛŒØ´",
    monthAgo: "1 Ù…Ø§Ù‡ Ù¾ÛŒØ´",
    monthsAgo: "{delta} Ù…Ø§Ù‡ Ù¾ÛŒØ´",
    yearAgo: "1 Ø³Ø§Ù„ Ù¾ÛŒØ´",
    yearsAgo: "{delta} Ø³Ø§Ù„ Ù¾ÛŒØ´",
    lessThanMinuteUntil: "Ú©Ù…ØªØ± Ø§Ø² ÛŒÚ© Ø¯Ù‚ÛŒÙ‚Ù‡ Ø§Ø² Ø­Ø§Ù„Ø§",
    minuteUntil: "Ø­Ø¯ÙˆØ¯ ÛŒÚ© Ø¯Ù‚ÛŒÙ‚Ù‡ Ø§Ø² Ø­Ø§Ù„Ø§",
    minutesUntil: "{delta} Ø¯Ù‚ÛŒÙ‚Ù‡ Ø§Ø² Ø­Ø§Ù„Ø§",
    hourUntil: "Ø­Ø¯ÙˆØ¯ ÛŒÚ© Ø³Ø§Ø¹Øª Ø§Ø² Ø­Ø§Ù„Ø§",
    hoursUntil: "Ø­Ø¯ÙˆØ¯ {delta} Ø³Ø§Ø¹Øª Ø§Ø² Ø­Ø§Ù„Ø§",
    dayUntil: "1 Ø±ÙˆØ² Ø§Ø² Ø­Ø§Ù„Ø§",
    daysUntil: "{delta} Ø±ÙˆØ² Ø§Ø² Ø­Ø§Ù„Ø§",
    weekUntil: "1 Ù‡ÙØªÙ‡ Ø§Ø² Ø­Ø§Ù„Ø§",
    weeksUntil: "{delta} Ù‡ÙØªÙ‡ Ø§Ø² Ø­Ø§Ù„Ø§",
    monthUntil: "1 Ù…Ø§Ù‡ Ø§Ø² Ø­Ø§Ù„Ø§",
    monthsUntil: "{delta} Ù…Ø§Ù‡ Ø§Ø² Ø­Ø§Ù„Ø§",
    yearUntil: "1 Ø³Ø§Ù„ Ø§Ø² Ø­Ø§Ù„Ø§",
    yearsUntil: "{delta} Ø³Ø§Ù„ Ø§Ø² Ø­Ø§Ù„Ø§"
});
Locale.define("fa", "FormValidator", {
    required: "Ø§ÛŒÙ† ÙÛŒÙ„Ø¯ Ø§Ù„Ø²Ø§Ù…ÛŒ Ø§Ø³Øª.",
    minLength: "Ø´Ù…Ø§ Ø¨Ø§ÛŒØ¯ Ø­Ø¯Ø§Ù‚Ù„ {minLength} Ø­Ø±Ù ÙˆØ§Ø±Ø¯ Ú©Ù†ÛŒØ¯ ({length} Ø­Ø±Ù ÙˆØ§Ø±Ø¯ Ú©Ø±Ø¯Ù‡ Ø§ÛŒØ¯).",
    maxLength: "Ù„Ø·ÙØ§ Ø­Ø¯Ø§Ú©Ø«Ø± {maxLength} Ø­Ø±Ù ÙˆØ§Ø±Ø¯ Ú©Ù†ÛŒØ¯ (Ø´Ù…Ø§ {length} Ø­Ø±Ù ÙˆØ§Ø±Ø¯ Ú©Ø±Ø¯Ù‡ Ø§ÛŒØ¯).",
    integer: "Ù„Ø·ÙØ§ Ø§Ø² Ø¹Ø¯Ø¯ ØµØ­ÛŒØ­ Ø§Ø³ØªÙØ§Ø¯Ù‡ Ú©Ù†ÛŒØ¯. Ø§Ø¹Ø¯Ø§Ø¯ Ø§Ø¹Ø´Ø§Ø±ÛŒ (Ù…Ø§Ù†Ù†Ø¯ 1.25) Ù…Ø¬Ø§Ø² Ù†ÛŒØ³ØªÙ†Ø¯.",
    numeric: 'Ù„Ø·ÙØ§ ÙÙ‚Ø· Ø¯Ø§Ø¯Ù‡ Ø¹Ø¯Ø¯ÛŒ ÙˆØ§Ø±Ø¯ Ú©Ù†ÛŒØ¯ (Ù…Ø§Ù†Ù†Ø¯ "1" ÛŒØ§ "1.1" ÛŒØ§ "1-" ÛŒØ§ "1.1-").',
    digits: "Ù„Ø·ÙØ§ ÙÙ‚Ø· Ø§Ø² Ø§Ø¹Ø¯Ø§Ø¯ Ùˆ Ø¹Ù„Ø§Ù…ØªÙ‡Ø§ Ø¯Ø± Ø§ÛŒÙ† ÙÛŒÙ„Ø¯ Ø§Ø³ØªÙØ§Ø¯Ù‡ Ú©Ù†ÛŒØ¯ (Ø¨Ø±Ø§ÛŒ Ù…Ø«Ø§Ù„ Ø´Ù…Ø§Ø±Ù‡ ØªÙ„ÙÙ† Ø¨Ø§ Ø®Ø· ØªÛŒØ±Ù‡ Ùˆ Ù†Ù‚Ø·Ù‡ Ù‚Ø§Ø¨Ù„ Ù‚Ø¨ÙˆÙ„ Ø§Ø³Øª).",
    alpha: "Ù„Ø·ÙØ§ ÙÙ‚Ø· Ø§Ø² Ø­Ø±ÙˆÙ Ø§Ù„ÙØ¨Ø§Ø¡ Ø¨Ø±Ø§ÛŒ Ø§ÛŒÙ† Ø¨Ø®Ø´ Ø§Ø³ØªÙØ§Ø¯Ù‡ Ú©Ù†ÛŒØ¯. Ú©Ø§Ø±Ø§Ú©ØªØ±Ù‡Ø§ÛŒ Ø¯ÛŒÚ¯Ø± Ùˆ ÙØ§ØµÙ„Ù‡ Ù…Ø¬Ø§Ø² Ù†ÛŒØ³ØªÙ†Ø¯.",
    alphanum: "Ù„Ø·ÙØ§ ÙÙ‚Ø· Ø§Ø² Ø­Ø±ÙˆÙ Ø§Ù„ÙØ¨Ø§Ø¡ Ùˆ Ø§Ø¹Ø¯Ø§Ø¯ Ø¯Ø± Ø§ÛŒÙ† Ø¨Ø®Ø´ Ø§Ø³ØªÙØ§Ø¯Ù‡ Ú©Ù†ÛŒØ¯. Ú©Ø§Ø±Ø§Ú©ØªØ±Ù‡Ø§ÛŒ Ø¯ÛŒÚ¯Ø± Ùˆ ÙØ§ØµÙ„Ù‡ Ù…Ø¬Ø§Ø² Ù†ÛŒØ³ØªÙ†Ø¯.",
    dateSuchAs: "Ù„Ø·ÙØ§ ÛŒÚ© ØªØ§Ø±ÛŒØ® Ù…Ø¹ØªØ¨Ø± Ù…Ø§Ù†Ù†Ø¯ {date} ÙˆØ§Ø±Ø¯ Ú©Ù†ÛŒØ¯.",
    dateInFormatMDY: 'Ù„Ø·ÙØ§ ÛŒÚ© ØªØ§Ø±ÛŒØ® Ù…Ø¹ØªØ¨Ø± Ø¨Ù‡ Ø´Ú©Ù„ MM/DD/YYYY ÙˆØ§Ø±Ø¯ Ú©Ù†ÛŒØ¯ (Ù…Ø§Ù†Ù†Ø¯ "12/31/1999").',
    email: 'Ù„Ø·ÙØ§ ÛŒÚ© Ø¢Ø¯Ø±Ø³ Ø§ÛŒÙ…ÛŒÙ„ Ù…Ø¹ØªØ¨Ø± ÙˆØ§Ø±Ø¯ Ú©Ù†ÛŒØ¯. Ø¨Ø±Ø§ÛŒ Ù…Ø«Ø§Ù„ "fred@domain.com".',
    url: "Ù„Ø·ÙØ§ ÛŒÚ© URL Ù…Ø¹ØªØ¨Ø± Ù…Ø§Ù†Ù†Ø¯ http://www.example.com ÙˆØ§Ø±Ø¯ Ú©Ù†ÛŒØ¯.",
    currencyDollar: "Ù„Ø·ÙØ§ ÛŒÚ© Ù…Ø­Ø¯ÙˆØ¯Ù‡ Ù…Ø¹ØªØ¨Ø± Ø¨Ø±Ø§ÛŒ Ø§ÛŒÙ† Ø¨Ø®Ø´ ÙˆØ§Ø±Ø¯ Ú©Ù†ÛŒØ¯ Ù…Ø§Ù†Ù†Ø¯ 100.00$ .",
    oneRequired: "Ù„Ø·ÙØ§ Ø­Ø¯Ø§Ù‚Ù„ ÛŒÚ©ÛŒ Ø§Ø² ÙÛŒÙ„Ø¯Ù‡Ø§ Ø±Ø§ Ù¾Ø± Ú©Ù†ÛŒØ¯.",
    errorPrefix: "Ø®Ø·Ø§: ",
    warningPrefix: "Ù‡Ø´Ø¯Ø§Ø±: ",
    noSpace: "Ø§Ø³ØªÙØ§Ø¯Ù‡ Ø§Ø² ÙØ§ØµÙ„Ù‡ Ø¯Ø± Ø§ÛŒÙ† Ø¨Ø®Ø´ Ù…Ø¬Ø§Ø² Ù†ÛŒØ³Øª.",
    reqChkByNode: "Ù…ÙˆØ±Ø¯ÛŒ Ø§Ù†ØªØ®Ø§Ø¨ Ù†Ø´Ø¯Ù‡ Ø§Ø³Øª.",
    requiredChk: "Ø§ÛŒÙ† ÙÛŒÙ„Ø¯ Ø§Ù„Ø²Ø§Ù…ÛŒ Ø§Ø³Øª.",
    reqChkByName: "Ù„Ø·ÙØ§ ÛŒÚ© {label} Ø±Ø§ Ø§Ù†ØªØ®Ø§Ø¨ Ú©Ù†ÛŒØ¯.",
    match: "Ø§ÛŒÙ† ÙÛŒÙ„Ø¯ Ø¨Ø§ÛŒØ¯ Ø¨Ø§ ÙÛŒÙ„Ø¯ {matchName} Ù…Ø·Ø§Ø¨Ù‚Øª Ø¯Ø§Ø´ØªÙ‡ Ø¨Ø§Ø´Ø¯.",
    startDate: "ØªØ§Ø±ÛŒØ® Ø´Ø±ÙˆØ¹",
    endDate: "ØªØ§Ø±ÛŒØ® Ù¾Ø§ÛŒØ§Ù†",
    currentDate: "ØªØ§Ø±ÛŒØ® Ú©Ù†ÙˆÙ†ÛŒ",
    afterDate: "ØªØ§Ø±ÛŒØ® Ù…ÛŒØ¨Ø§ÛŒØ³Øª Ø¨Ø±Ø§Ø¨Ø± ÛŒØ§ Ø¨Ø¹Ø¯ Ø§Ø² {label} Ø¨Ø§Ø´Ø¯",
    beforeDate: "ØªØ§Ø±ÛŒØ® Ù…ÛŒØ¨Ø§ÛŒØ³Øª Ø¨Ø±Ø§Ø¨Ø± ÛŒØ§ Ù‚Ø¨Ù„ Ø§Ø² {label} Ø¨Ø§Ø´Ø¯",
    startMonth: "Ù„Ø·ÙØ§ Ù…Ø§Ù‡ Ø´Ø±ÙˆØ¹ Ø±Ø§ Ø§Ù†ØªØ®Ø§Ø¨ Ú©Ù†ÛŒØ¯",
    sameMonth: "Ø§ÛŒÙ† Ø¯Ùˆ ØªØ§Ø±ÛŒØ® Ø¨Ø§ÛŒØ¯ Ø¯Ø± ÛŒÚ© Ù…Ø§Ù‡ Ø¨Ø§Ø´Ù†Ø¯ - Ø´Ù…Ø§ Ø¨Ø§ÛŒØ¯ ÛŒÚ©ÛŒ ÛŒØ§ Ù‡Ø± Ø¯Ùˆ Ø±Ø§ ØªØºÛŒÛŒØ± Ø¯Ù‡ÛŒØ¯.",
    creditcard: "Ø´Ù…Ø§Ø±Ù‡ Ú©Ø§Ø±Øª Ø§Ø¹ØªØ¨Ø§Ø±ÛŒ Ú©Ù‡ ÙˆØ§Ø±Ø¯ Ú©Ø±Ø¯Ù‡ Ø§ÛŒØ¯ Ù…Ø¹ØªØ¨Ø± Ù†ÛŒØ³Øª. Ù„Ø·ÙØ§ Ø´Ù…Ø§Ø±Ù‡ Ø±Ø§ Ø¨Ø±Ø±Ø³ÛŒ Ú©Ù†ÛŒØ¯ Ùˆ Ù…Ø¬Ø¯Ø¯Ø§ ØªÙ„Ø§Ø´ Ú©Ù†ÛŒØ¯. {length} Ø±Ù‚Ù… ÙˆØ§Ø±Ø¯ Ø´Ø¯Ù‡ Ø§Ø³Øª."
});
Locale.define("fi-FI", "Date", {
    months: ["tammikuu", "helmikuu", "maaliskuu", "huhtikuu", "toukokuu", "kesÃ¤kuu", "heinÃ¤kuu", "elokuu", "syyskuu", "lokakuu", "marraskuu", "joulukuu"],
    months_abbr: ["tammik.", "helmik.", "maalisk.", "huhtik.", "toukok.", "kesÃ¤k.", "heinÃ¤k.", "elok.", "syysk.", "lokak.", "marrask.", "jouluk."],
    days: ["sunnuntai", "maanantai", "tiistai", "keskiviikko", "torstai", "perjantai", "lauantai"],
    days_abbr: ["su", "ma", "ti", "ke", "to", "pe", "la"],
    dateOrder: ["date", "month", "year"],
    shortDate: "%d.%m.%Y",
    shortTime: "%H:%M",
    AM: "AM",
    PM: "PM",
    firstDayOfWeek: 1,
    ordinal: ".",
    lessThanMinuteAgo: "vajaa minuutti sitten",
    minuteAgo: "noin minuutti sitten",
    minutesAgo: "{delta} minuuttia sitten",
    hourAgo: "noin tunti sitten",
    hoursAgo: "noin {delta} tuntia sitten",
    dayAgo: "pÃ¤ivÃ¤ sitten",
    daysAgo: "{delta} pÃ¤ivÃ¤Ã¤ sitten",
    weekAgo: "viikko sitten",
    weeksAgo: "{delta} viikkoa sitten",
    monthAgo: "kuukausi sitten",
    monthsAgo: "{delta} kuukautta sitten",
    yearAgo: "vuosi sitten",
    yearsAgo: "{delta} vuotta sitten",
    lessThanMinuteUntil: "vajaan minuutin kuluttua",
    minuteUntil: "noin minuutin kuluttua",
    minutesUntil: "{delta} minuutin kuluttua",
    hourUntil: "noin tunnin kuluttua",
    hoursUntil: "noin {delta} tunnin kuluttua",
    dayUntil: "pÃ¤ivÃ¤n kuluttua",
    daysUntil: "{delta} pÃ¤ivÃ¤n kuluttua",
    weekUntil: "viikon kuluttua",
    weeksUntil: "{delta} viikon kuluttua",
    monthUntil: "kuukauden kuluttua",
    monthsUntil: "{delta} kuukauden kuluttua",
    yearUntil: "vuoden kuluttua",
    yearsUntil: "{delta} vuoden kuluttua"
});
Locale.define("fi-FI", "FormValidator", {
    required: "TÃ¤mÃ¤ kenttÃ¤ on pakollinen.",
    minLength: "Ole hyvÃ¤ ja anna vÃ¤hintÃ¤Ã¤n {minLength} merkkiÃ¤ (annoit {length} merkkiÃ¤).",
    maxLength: "Ã„lÃ¤ anna enempÃ¤Ã¤ kuin {maxLength} merkkiÃ¤ (annoit {length} merkkiÃ¤).",
    integer: "Ole hyvÃ¤ ja anna kokonaisluku. Luvut, joissa on desimaaleja (esim. 1.25) eivÃ¤t ole sallittuja.",
    numeric: 'Anna tÃ¤hÃ¤n kenttÃ¤Ã¤n lukuarvo (kuten "1" tai "1.1" tai "-1" tai "-1.1").',
    digits: "KÃ¤ytÃ¤ pelkÃ¤stÃ¤Ã¤n numeroita ja vÃ¤limerkkejÃ¤ tÃ¤ssÃ¤ kentÃ¤ssÃ¤ (syÃ¶tteet, kuten esim. puhelinnumero, jossa on vÃ¤liviivoja, pilkkuja tai pisteitÃ¤, kelpaa).",
    alpha: "Anna tÃ¤hÃ¤n kenttÃ¤Ã¤n vain kirjaimia (a-z). VÃ¤lilyÃ¶nnit tai muut merkit eivÃ¤t ole sallittuja.",
    alphanum: "Anna tÃ¤hÃ¤n kenttÃ¤Ã¤n vain kirjaimia (a-z) tai numeroita (0-9). VÃ¤lilyÃ¶nnit tai muut merkit eivÃ¤t ole sallittuja.",
    dateSuchAs: "Ole hyvÃ¤ ja anna kelvollinen pÃ¤ivmÃ¤Ã¤rÃ¤, kuten esimerkiksi {date}",
    dateInFormatMDY: 'Ole hyvÃ¤ ja anna kelvollinen pÃ¤ivÃ¤mÃ¤Ã¤rÃ¤ muodossa pp/kk/vvvv (kuten "12/31/1999")',
    email: 'Ole hyvÃ¤ ja anna kelvollinen sÃ¤hkÃ¶postiosoite (kuten esimerkiksi "matti@meikalainen.com").',
    url: "Ole hyvÃ¤ ja anna kelvollinen URL, kuten esimerkiksi http://www.example.com.",
    currencyDollar: "Ole hyvÃ¤ ja anna kelvollinen eurosumma (kuten esimerkiksi 100,00 EUR) .",
    oneRequired: "Ole hyvÃ¤ ja syÃ¶tÃ¤ jotakin ainakin johonkin nÃ¤istÃ¤ kentistÃ¤.",
    errorPrefix: "Virhe: ",
    warningPrefix: "Varoitus: ",
    noSpace: "TÃ¤ssÃ¤ syÃ¶tteessÃ¤ ei voi olla vÃ¤lilyÃ¶ntejÃ¤",
    reqChkByNode: "Ei valintoja.",
    requiredChk: "TÃ¤mÃ¤ kenttÃ¤ on pakollinen.",
    reqChkByName: "Ole hyvÃ¤ ja valitse {label}.",
    match: "TÃ¤mÃ¤n kentÃ¤n tulee vastata kenttÃ¤Ã¤ {matchName}",
    startDate: "alkupÃ¤ivÃ¤mÃ¤Ã¤rÃ¤",
    endDate: "loppupÃ¤ivÃ¤mÃ¤Ã¤rÃ¤",
    currentDate: "nykyinen pÃ¤ivÃ¤mÃ¤Ã¤rÃ¤",
    afterDate: "PÃ¤ivÃ¤mÃ¤Ã¤rÃ¤n tulisi olla sama tai myÃ¶hÃ¤isempi ajankohta kuin {label}.",
    beforeDate: "PÃ¤ivÃ¤mÃ¤Ã¤rÃ¤n tulisi olla sama tai aikaisempi ajankohta kuin {label}.",
    startMonth: "Ole hyvÃ¤ ja valitse aloituskuukausi",
    sameMonth: "NÃ¤iden kahden pÃ¤ivÃ¤mÃ¤Ã¤rÃ¤n tulee olla saman kuun sisÃ¤llÃ¤ -- sinun pitÃ¤Ã¤ muuttaa jompaa kumpaa.",
    creditcard: "Annettu luottokortin numero ei kelpaa. Ole hyvÃ¤ ja tarkista numero sekÃ¤ yritÃ¤ uudelleen. {length} numeroa syÃ¶tetty."
});
Locale.define("fi-FI", "Number", {
    group: " "
}).inherit("EU", "Number");
Locale.define("fr-FR", "Date", {
    months: ["Janvier", "FÃ©vrier", "Mars", "Avril", "Mai", "Juin", "Juillet", "AoÃ»t", "Septembre", "Octobre", "Novembre", "DÃ©cembre"],
    months_abbr: ["janv.", "fÃ©vr.", "mars", "avr.", "mai", "juin", "juil.", "aoÃ»t", "sept.", "oct.", "nov.", "dÃ©c."],
    days: ["Dimanche", "Lundi", "Mardi", "Mercredi", "Jeudi", "Vendredi", "Samedi"],
    days_abbr: ["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."],
    dateOrder: ["date", "month", "year"],
    shortDate: "%d/%m/%Y",
    shortTime: "%H:%M",
    AM: "AM",
    PM: "PM",
    firstDayOfWeek: 1,
    ordinal: function(a) {
        return (a > 1) ? "" : "er"
    },
    lessThanMinuteAgo: "il y a moins d'une minute",
    minuteAgo: "il y a une minute",
    minutesAgo: "il y a {delta} minutes",
    hourAgo: "il y a une heure",
    hoursAgo: "il y a {delta} heures",
    dayAgo: "il y a un jour",
    daysAgo: "il y a {delta} jours",
    weekAgo: "il y a une semaine",
    weeksAgo: "il y a {delta} semaines",
    monthAgo: "il y a 1 mois",
    monthsAgo: "il y a {delta} mois",
    yearthAgo: "il y a 1 an",
    yearsAgo: "il y a {delta} ans",
    lessThanMinuteUntil: "dans moins d'une minute",
    minuteUntil: "dans une minute",
    minutesUntil: "dans {delta} minutes",
    hourUntil: "dans une heure",
    hoursUntil: "dans {delta} heures",
    dayUntil: "dans un jour",
    daysUntil: "dans {delta} jours",
    weekUntil: "dans 1 semaine",
    weeksUntil: "dans {delta} semaines",
    monthUntil: "dans 1 mois",
    monthsUntil: "dans {delta} mois",
    yearUntil: "dans 1 an",
    yearsUntil: "dans {delta} ans"
});
Locale.define("fr-FR", "FormValidator", {
    required: "Ce champ est obligatoire.",
    length: "Veuillez saisir {length} caract&egrave;re(s) (vous avez saisi {elLength} caract&egrave;re(s)",
    minLength: "Veuillez saisir un minimum de {minLength} caract&egrave;re(s) (vous avez saisi {length} caract&egrave;re(s)).",
    maxLength: "Veuillez saisir un maximum de {maxLength} caract&egrave;re(s) (vous avez saisi {length} caract&egrave;re(s)).",
    integer: 'Veuillez saisir un nombre entier dans ce champ. Les nombres d&eacute;cimaux (ex : "1,25") ne sont pas autoris&eacute;s.',
    numeric: 'Veuillez saisir uniquement des chiffres dans ce champ (ex : "1" ou "1,1" ou "-1" ou "-1,1").',
    digits: "Veuillez saisir uniquement des chiffres et des signes de ponctuation dans ce champ (ex : un num&eacute;ro de t&eacute;l&eacute;phone avec des traits d'union est autoris&eacute;).",
    alpha: "Veuillez saisir uniquement des lettres (a-z) dans ce champ. Les espaces ou autres caract&egrave;res ne sont pas autoris&eacute;s.",
    alphanum: "Veuillez saisir uniquement des lettres (a-z) ou des chiffres (0-9) dans ce champ. Les espaces ou autres caract&egrave;res ne sont pas autoris&eacute;s.",
    dateSuchAs: "Veuillez saisir une date correcte comme {date}",
    dateInFormatMDY: 'Veuillez saisir une date correcte, au format JJ/MM/AAAA (ex : "31/11/1999").',
    email: 'Veuillez saisir une adresse de courrier &eacute;lectronique. Par exemple "fred@domaine.com".',
    url: "Veuillez saisir une URL, comme http://www.exemple.com.",
    currencyDollar: "Veuillez saisir une quantit&eacute; correcte. Par exemple 100,00&euro;.",
    oneRequired: "Veuillez s&eacute;lectionner au moins une de ces options.",
    errorPrefix: "Erreur : ",
    warningPrefix: "Attention : ",
    noSpace: "Ce champ n'accepte pas les espaces.",
    reqChkByNode: "Aucun &eacute;l&eacute;ment n'est s&eacute;lectionn&eacute;.",
    requiredChk: "Ce champ est obligatoire.",
    reqChkByName: "Veuillez s&eacute;lectionner un(e) {label}.",
    match: "Ce champ doit correspondre avec le champ {matchName}.",
    startDate: "date de d&eacute;but",
    endDate: "date de fin",
    currentDate: "date actuelle",
    afterDate: "La date doit &ecirc;tre identique ou post&eacute;rieure &agrave; {label}.",
    beforeDate: "La date doit &ecirc;tre identique ou ant&eacute;rieure &agrave; {label}.",
    startMonth: "Veuillez s&eacute;lectionner un mois de d&eacute;but.",
    sameMonth: "Ces deux dates doivent &ecirc;tre dans le m&ecirc;me mois - vous devez en modifier une.",
    creditcard: "Le num&eacute;ro de carte de cr&eacute;dit est invalide. Merci de v&eacute;rifier le num&eacute;ro et de r&eacute;essayer. Vous avez entr&eacute; {length} chiffre(s)."
});
Locale.define("fr-FR", "Number", {
    group: " "
}).inherit("EU", "Number");
Locale.define("he-IL", "Date", {
    months: ["×™× ×•××¨", "×¤×‘×¨×•××¨", "×ž×¨×¥", "××¤×¨×™×œ", "×ž××™", "×™×•× ×™", "×™×•×œ×™", "××•×’×•×¡×˜", "×¡×¤×˜×ž×‘×¨", "××•×§×˜×•×‘×¨", "× ×•×‘×ž×‘×¨", "×“×¦×ž×‘×¨"],
    months_abbr: ["×™× ×•××¨", "×¤×‘×¨×•××¨", "×ž×¨×¥", "××¤×¨×™×œ", "×ž××™", "×™×•× ×™", "×™×•×œ×™", "××•×’×•×¡×˜", "×¡×¤×˜×ž×‘×¨", "××•×§×˜×•×‘×¨", "× ×•×‘×ž×‘×¨", "×“×¦×ž×‘×¨"],
    days: ["×¨××©×•×Ÿ", "×©× ×™", "×©×œ×™×©×™", "×¨×‘×™×¢×™", "×—×ž×™×©×™", "×©×™×©×™", "×©×‘×ª"],
    days_abbr: ["×¨××©×•×Ÿ", "×©× ×™", "×©×œ×™×©×™", "×¨×‘×™×¢×™", "×—×ž×™×©×™", "×©×™×©×™", "×©×‘×ª"],
    dateOrder: ["date", "month", "year"],
    shortDate: "%d/%m/%Y",
    shortTime: "%H:%M",
    AM: "AM",
    PM: "PM",
    firstDayOfWeek: 0,
    ordinal: "",
    lessThanMinuteAgo: "×œ×¤× ×™ ×¤×—×•×ª ×ž×“×§×”",
    minuteAgo: "×œ×¤× ×™ ×›×“×§×”",
    minutesAgo: "×œ×¤× ×™ {delta} ×“×§×•×ª",
    hourAgo: "×œ×¤× ×™ ×›×©×¢×”",
    hoursAgo: "×œ×¤× ×™ {delta} ×©×¢×•×ª",
    dayAgo: "×œ×¤× ×™ ×™×•×",
    daysAgo: "×œ×¤× ×™ {delta} ×™×ž×™×",
    weekAgo: "×œ×¤× ×™ ×©×‘×•×¢",
    weeksAgo: "×œ×¤× ×™ {delta} ×©×‘×•×¢×•×ª",
    monthAgo: "×œ×¤× ×™ ×—×•×“×©",
    monthsAgo: "×œ×¤× ×™ {delta} ×—×•×“×©×™×",
    yearAgo: "×œ×¤× ×™ ×©× ×”",
    yearsAgo: "×œ×¤× ×™ {delta} ×©× ×™×",
    lessThanMinuteUntil: "×‘×¢×•×“ ×¤×—×•×ª ×ž×“×§×”",
    minuteUntil: "×‘×¢×•×“ ×›×“×§×”",
    minutesUntil: "×‘×¢×•×“ {delta} ×“×§×•×ª",
    hourUntil: "×‘×¢×•×“ ×›×©×¢×”",
    hoursUntil: "×‘×¢×•×“ {delta} ×©×¢×•×ª",
    dayUntil: "×‘×¢×•×“ ×™×•×",
    daysUntil: "×‘×¢×•×“ {delta} ×™×ž×™×",
    weekUntil: "×‘×¢×•×“ ×©×‘×•×¢",
    weeksUntil: "×‘×¢×•×“ {delta} ×©×‘×•×¢×•×ª",
    monthUntil: "×‘×¢×•×“ ×—×•×“×©",
    monthsUntil: "×‘×¢×•×“ {delta} ×—×•×“×©×™×",
    yearUntil: "×‘×¢×•×“ ×©× ×”",
    yearsUntil: "×‘×¢×•×“ {delta} ×©× ×™×"
});
Locale.define("he-IL", "FormValidator", {
    required: "× × ×œ×ž×œ× ×©×“×” ×–×”.",
    minLength: "× × ×œ×”×–×™×Ÿ ×œ×¤×—×•×ª {minLength} ×ª×•×•×™× (×”×–× ×ª {length} ×ª×•×•×™×).",
    maxLength: "× × ×œ×”×–×™×Ÿ ×¢×“ {maxLength} ×ª×•×•×™× (×”×–× ×ª {length} ×ª×•×•×™×).",
    integer: "× × ×œ×”×–×™×Ÿ ×ž×¡×¤×¨ ×©×œ× ×œ×©×“×” ×–×”. ×ž×¡×¤×¨×™× ×¢×©×¨×•× ×™×™× (×›×ž×• 1.25) ××™× × ×—×•×§×™×™×.",
    numeric: '× × ×œ×”×–×™×Ÿ ×¢×¨×š ×ž×¡×¤×¨×™ ×‘×œ×‘×“ ×‘×©×“×” ×–×” (×›×ž×• "1", "1.1", "-1" ××• "-1.1").',
    digits: "× × ×œ×”×–×™×Ÿ ×¨×§ ×¡×¤×¨×•×ª ×•×¡×™×ž× ×™ ×”×¤×¨×“×” ×‘×©×“×” ×–×” (×œ×ž×©×œ, ×ž×¡×¤×¨ ×˜×œ×¤×•×Ÿ ×¢× ×ž×§×¤×™× ××• × ×§×•×“×•×ª ×”×•× ×—×•×§×™).",
    alpha: "× × ×œ×”×–×™×Ÿ ×¨×§ ××•×ª×™×•×ª ×‘×× ×’×œ×™×ª (a-z) ×‘×©×“×” ×–×”. ×¨×•×•×—×™× ××• ×ª×•×•×™× ××—×¨×™× ××™× × ×—×•×§×™×™×.",
    alphanum: "× × ×œ×”×–×™×Ÿ ×¨×§ ××•×ª×¨×™×•×ª ×‘×× ×’×œ×™×ª (a-z) ××• ×¡×¤×¨×•×ª (0-9) ×‘×©×“×” ×–×”. ××•×•×—×¨×™× ××• ×ª×•×•×™× ××—×¨×™× ××™× × ×—×•×§×™×™×.",
    dateSuchAs: "× × ×œ×”×–×™×Ÿ ×ª××¨×™×š ×—×•×§×™, ×›×ž×• {date}",
    dateInFormatMDY: '× × ×œ×”×–×™×Ÿ ×ª××¨×™×š ×—×•×§×™ ×‘×¤×•×¨×ž×˜ MM/DD/YYYY (×›×ž×• "12/31/1999")',
    email: '× × ×œ×”×–×™×Ÿ ×›×ª×•×‘×ª ××™×ž×™×™×œ ×—×•×§×™×ª. ×œ×“×•×’×ž×”: "fred@domain.com".',
    url: "× × ×œ×”×–×™×Ÿ ×›×ª×•×‘×ª ××ª×¨ ×—×•×§×™×ª, ×›×ž×• http://www.example.com.",
    currencyDollar: "× × ×œ×”×–×™×Ÿ ×¡×›×•× ×“×•×œ×¨×™ ×—×•×§×™. ×œ×“×•×’×ž×” $100.00.",
    oneRequired: "× × ×œ×‘×—×•×¨ ×œ×¤×—×•×ª ×‘×©×“×” ××—×“.",
    errorPrefix: "×©×’×™××”: ",
    warningPrefix: "××–×”×¨×”: ",
    noSpace: "××™×Ÿ ×œ×”×–×™×Ÿ ×¨×•×•×—×™× ×‘×©×“×” ×–×”.",
    reqChkByNode: "× × ×œ×‘×—×•×¨ ××—×ª ×ž×”××¤×©×¨×•×™×•×ª.",
    requiredChk: "×©×“×” ×–×” × ×“×¨×©.",
    reqChkByName: "× × ×œ×‘×—×•×¨ {label}.",
    match: "×©×“×” ×–×” ×¦×¨×™×š ×œ×”×ª××™× ×œ×©×“×” {matchName}",
    startDate: "×ª××¨×™×š ×”×”×ª×—×œ×”",
    endDate: "×ª××¨×™×š ×”×¡×™×•×",
    currentDate: "×”×ª××¨×™×š ×”× ×•×›×—×™",
    afterDate: "×”×ª××¨×™×š ×¦×¨×™×š ×œ×”×™×•×ª ×–×”×” ××• ××—×¨×™ {label}.",
    beforeDate: "×”×ª××¨×™×š ×¦×¨×™×š ×œ×”×™×•×ª ×–×”×” ××• ×œ×¤× ×™ {label}.",
    startMonth: "× × ×œ×‘×—×•×¨ ×—×•×“×© ×”×ª×—×œ×”",
    sameMonth: "×©× ×™ ×ª××¨×™×›×™× ××œ×” ×¦×¨×™×›×™× ×œ×”×™×•×ª ×‘××•×ª×• ×—×•×“×© - × × ×œ×©× ×•×ª ××—×“ ×”×ª××¨×™×›×™×.",
    creditcard: "×ž×¡×¤×¨ ×›×¨×˜×™×¡ ×”××©×¨××™ ×©×”×•×–×Ÿ ××™× ×• ×—×•×§×™. × × ×œ×‘×“×•×§ ×©× ×™×ª. ×”×•×–× ×• {length} ×¡×¤×¨×•×ª."
});
Locale.define("he-IL", "Number", {
    decimal: ".",
    group: ",",
    currency: {
        suffix: " â‚ª"
    }
});
Locale.define("hu-HU", "Date", {
    months: ["JanuÃ¡r", "FebruÃ¡r", "MÃ¡rcius", "Ãprilis", "MÃ¡jus", "JÃºnius", "JÃºlius", "Augusztus", "Szeptember", "OktÃ³ber", "November", "December"],
    months_abbr: ["jan.", "febr.", "mÃ¡rc.", "Ã¡pr.", "mÃ¡j.", "jÃºn.", "jÃºl.", "aug.", "szept.", "okt.", "nov.", "dec."],
    days: ["VasÃ¡rnap", "HÃ©tfÅ‘", "Kedd", "Szerda", "CsÃ¼tÃ¶rtÃ¶k", "PÃ©ntek", "Szombat"],
    days_abbr: ["V", "H", "K", "Sze", "Cs", "P", "Szo"],
    dateOrder: ["year", "month", "date"],
    shortDate: "%Y.%m.%d.",
    shortTime: "%I:%M",
    AM: "de.",
    PM: "du.",
    firstDayOfWeek: 1,
    ordinal: ".",
    lessThanMinuteAgo: "alig egy perce",
    minuteAgo: "egy perce",
    minutesAgo: "{delta} perce",
    hourAgo: "egy Ã³rÃ¡ja",
    hoursAgo: "{delta} Ã³rÃ¡ja",
    dayAgo: "1 napja",
    daysAgo: "{delta} napja",
    weekAgo: "1 hete",
    weeksAgo: "{delta} hete",
    monthAgo: "1 hÃ³napja",
    monthsAgo: "{delta} hÃ³napja",
    yearAgo: "1 Ã©ve",
    yearsAgo: "{delta} Ã©ve",
    lessThanMinuteUntil: "alig egy perc mÃºlva",
    minuteUntil: "egy perc mÃºlva",
    minutesUntil: "{delta} perc mÃºlva",
    hourUntil: "egy Ã³ra mÃºlva",
    hoursUntil: "{delta} Ã³ra mÃºlva",
    dayUntil: "1 nap mÃºlva",
    daysUntil: "{delta} nap mÃºlva",
    weekUntil: "1 hÃ©t mÃºlva",
    weeksUntil: "{delta} hÃ©t mÃºlva",
    monthUntil: "1 hÃ³nap mÃºlva",
    monthsUntil: "{delta} hÃ³nap mÃºlva",
    yearUntil: "1 Ã©v mÃºlva",
    yearsUntil: "{delta} Ã©v mÃºlva"
});
Locale.define("hu-HU", "FormValidator", {
    required: "A mezÅ‘ kitÃ¶ltÃ©se kÃ¶telezÅ‘.",
    minLength: "LegalÃ¡bb {minLength} karakter megadÃ¡sa szÃ¼ksÃ©ges (megadva {length} karakter).",
    maxLength: "Legfeljebb {maxLength} karakter megadÃ¡sa lehetsÃ©ges (megadva {length} karakter).",
    integer: "EgÃ©sz szÃ¡m megadÃ¡sa szÃ¼ksÃ©ges. A tizedesjegyek (pl. 1.25) nem engedÃ©lyezettek.",
    numeric: 'SzÃ¡m megadÃ¡sa szÃ¼ksÃ©ges (pl. "1" vagy "1.1" vagy "-1" vagy "-1.1").',
    digits: "Csak szÃ¡mok Ã©s Ã­rÃ¡sjelek megadÃ¡sa lehetsÃ©ges (pl. telefonszÃ¡m kÃ¶tÅ‘jelek Ã©s/vagy perjelekkel).",
    alpha: "Csak betÅ±k (a-z) megadÃ¡sa lehetsÃ©ges. SzÃ³kÃ¶z Ã©s egyÃ©b karakterek nem engedÃ©lyezettek.",
    alphanum: "Csak betÅ±k (a-z) vagy szÃ¡mok (0-9) megadÃ¡sa lehetsÃ©ges. SzÃ³kÃ¶z Ã©s egyÃ©b karakterek nem engedÃ©lyezettek.",
    dateSuchAs: "ValÃ³s dÃ¡tum megadÃ¡sa szÃ¼ksÃ©ges (pl. {date}).",
    dateInFormatMDY: 'ValÃ³s dÃ¡tum megadÃ¡sa szÃ¼ksÃ©ges Ã‰Ã‰Ã‰Ã‰.HH.NN. formÃ¡ban. (pl. "1999.12.31.")',
    email: 'ValÃ³s e-mail cÃ­m megadÃ¡sa szÃ¼ksÃ©ges (pl. "fred@domain.hu").',
    url: "ValÃ³s URL megadÃ¡sa szÃ¼ksÃ©ges (pl. http://www.example.com).",
    currencyDollar: "ValÃ³s pÃ©nzÃ¶sszeg megadÃ¡sa szÃ¼ksÃ©ges (pl. 100.00 Ft.).",
    oneRequired: "Az alÃ¡bbi mezÅ‘k legalÃ¡bb egyikÃ©nek kitÃ¶ltÃ©se kÃ¶telezÅ‘.",
    errorPrefix: "Hiba: ",
    warningPrefix: "Figyelem: ",
    noSpace: "A mezÅ‘ nem tartalmazhat szÃ³kÃ¶zÃ¶ket.",
    reqChkByNode: "Nincs egyetlen kijelÃ¶lt elem sem.",
    requiredChk: "A mezÅ‘ kitÃ¶ltÃ©se kÃ¶telezÅ‘.",
    reqChkByName: "Egy {label} kivÃ¡lasztÃ¡sa szÃ¼ksÃ©ges.",
    match: "A mezÅ‘nek egyeznie kell a(z) {matchName} mezÅ‘vel.",
    startDate: "a kezdet dÃ¡tuma",
    endDate: "a vÃ©g dÃ¡tuma",
    currentDate: "jelenlegi dÃ¡tum",
    afterDate: "A dÃ¡tum nem lehet kisebb, mint {label}.",
    beforeDate: "A dÃ¡tum nem lehet nagyobb, mint {label}.",
    startMonth: "Kezdeti hÃ³nap megadÃ¡sa szÃ¼ksÃ©ges.",
    sameMonth: "A kÃ©t dÃ¡tumnak ugyanazon hÃ³napban kell lennie.",
    creditcard: "A megadott bankkÃ¡rtyaszÃ¡m nem valÃ³di (megadva {length} szÃ¡mjegy)."
});
Locale.define("it-IT", "Date", {
    months: ["Gennaio", "Febbraio", "Marzo", "Aprile", "Maggio", "Giugno", "Luglio", "Agosto", "Settembre", "Ottobre", "Novembre", "Dicembre"],
    months_abbr: ["gen", "feb", "mar", "apr", "mag", "giu", "lug", "ago", "set", "ott", "nov", "dic"],
    days: ["Domenica", "LunedÃ¬", "MartedÃ¬", "MercoledÃ¬", "GiovedÃ¬", "VenerdÃ¬", "Sabato"],
    days_abbr: ["dom", "lun", "mar", "mer", "gio", "ven", "sab"],
    dateOrder: ["date", "month", "year"],
    shortDate: "%d/%m/%Y",
    shortTime: "%H.%M",
    AM: "AM",
    PM: "PM",
    firstDayOfWeek: 1,
    ordinal: "Âº",
    lessThanMinuteAgo: "meno di un minuto fa",
    minuteAgo: "circa un minuto fa",
    minutesAgo: "circa {delta} minuti fa",
    hourAgo: "circa un'ora fa",
    hoursAgo: "circa {delta} ore fa",
    dayAgo: "circa 1 giorno fa",
    daysAgo: "circa {delta} giorni fa",
    weekAgo: "una settimana fa",
    weeksAgo: "{delta} settimane fa",
    monthAgo: "un mese fa",
    monthsAgo: "{delta} mesi fa",
    yearAgo: "un anno fa",
    yearsAgo: "{delta} anni fa",
    lessThanMinuteUntil: "tra meno di un minuto",
    minuteUntil: "tra circa un minuto",
    minutesUntil: "tra circa {delta} minuti",
    hourUntil: "tra circa un'ora",
    hoursUntil: "tra circa {delta} ore",
    dayUntil: "tra circa un giorno",
    daysUntil: "tra circa {delta} giorni",
    weekUntil: "tra una settimana",
    weeksUntil: "tra {delta} settimane",
    monthUntil: "tra un mese",
    monthsUntil: "tra {delta} mesi",
    yearUntil: "tra un anno",
    yearsUntil: "tra {delta} anni"
});
Locale.define("it-IT", "FormValidator", {
    required: "Il campo &egrave; obbligatorio.",
    minLength: "Inserire almeno {minLength} caratteri (ne sono stati inseriti {length}).",
    maxLength: "Inserire al massimo {maxLength} caratteri (ne sono stati inseriti {length}).",
    integer: "Inserire un numero intero. Non sono consentiti decimali (es.: 1.25).",
    numeric: 'Inserire solo valori numerici (es.: "1" oppure "1.1" oppure "-1" oppure "-1.1").',
    digits: "Inserire solo numeri e caratteri di punteggiatura. Per esempio &egrave; consentito un numero telefonico con trattini o punti.",
    alpha: "Inserire solo lettere (a-z). Non sono consentiti spazi o altri caratteri.",
    alphanum: "Inserire solo lettere (a-z) o numeri (0-9). Non sono consentiti spazi o altri caratteri.",
    dateSuchAs: "Inserire una data valida del tipo {date}",
    dateInFormatMDY: 'Inserire una data valida nel formato MM/GG/AAAA (es.: "12/31/1999")',
    email: 'Inserire un indirizzo email valido. Per esempio "nome@dominio.com".',
    url: 'Inserire un indirizzo valido. Per esempio "http://www.example.com".',
    currencyDollar: 'Inserire un importo valido. Per esempio "$100.00".',
    oneRequired: "Completare almeno uno dei campi richiesti.",
    errorPrefix: "Errore: ",
    warningPrefix: "Attenzione: ",
    noSpace: "Non sono consentiti spazi.",
    reqChkByNode: "Nessuna voce selezionata.",
    requiredChk: "Il campo &egrave; obbligatorio.",
    reqChkByName: "Selezionare un(a) {label}.",
    match: "Il valore deve corrispondere al campo {matchName}",
    startDate: "data d'inizio",
    endDate: "data di fine",
    currentDate: "data attuale",
    afterDate: "La data deve corrispondere o essere successiva al {label}.",
    beforeDate: "La data deve corrispondere o essere precedente al {label}.",
    startMonth: "Selezionare un mese d'inizio",
    sameMonth: "Le due date devono essere dello stesso mese - occorre modificarne una."
});
Locale.define("ja-JP", "Date", {
    months: ["1æœˆ", "2æœˆ", "3æœˆ", "4æœˆ", "5æœˆ", "6æœˆ", "7æœˆ", "8æœˆ", "9æœˆ", "10æœˆ", "11æœˆ", "12æœˆ"],
    months_abbr: ["1æœˆ", "2æœˆ", "3æœˆ", "4æœˆ", "5æœˆ", "6æœˆ", "7æœˆ", "8æœˆ", "9æœˆ", "10æœˆ", "11æœˆ", "12æœˆ"],
    days: ["æ—¥æ›œæ—¥", "æœˆæ›œæ—¥", "ç«æ›œæ—¥", "æ°´æ›œæ—¥", "æœ¨æ›œæ—¥", "é‡‘æ›œæ—¥", "åœŸæ›œæ—¥"],
    days_abbr: ["æ—¥", "æœˆ", "ç«", "æ°´", "æœ¨", "é‡‘", "åœŸ"],
    dateOrder: ["year", "month", "date"],
    shortDate: "%Y/%m/%d",
    shortTime: "%H:%M",
    AM: "åˆå‰",
    PM: "åˆå¾Œ",
    firstDayOfWeek: 0,
    ordinal: "",
    lessThanMinuteAgo: "1åˆ†ä»¥å†…å‰",
    minuteAgo: "ç´„1åˆ†å‰",
    minutesAgo: "ç´„{delta}åˆ†å‰",
    hourAgo: "ç´„1æ™‚é–“å‰",
    hoursAgo: "ç´„{delta}æ™‚é–“å‰",
    dayAgo: "1æ—¥å‰",
    daysAgo: "{delta}æ—¥å‰",
    weekAgo: "1é€±é–“å‰",
    weeksAgo: "{delta}é€±é–“å‰",
    monthAgo: "1ãƒ¶æœˆå‰",
    monthsAgo: "{delta}ãƒ¶æœˆå‰",
    yearAgo: "1å¹´å‰",
    yearsAgo: "{delta}å¹´å‰",
    lessThanMinuteUntil: "ä»Šã‹ã‚‰ç´„1åˆ†ä»¥å†…",
    minuteUntil: "ä»Šã‹ã‚‰ç´„1åˆ†",
    minutesUntil: "ä»Šã‹ã‚‰ç´„{delta}åˆ†",
    hourUntil: "ä»Šã‹ã‚‰ç´„1æ™‚é–“",
    hoursUntil: "ä»Šã‹ã‚‰ç´„{delta}æ™‚é–“",
    dayUntil: "ä»Šã‹ã‚‰1æ—¥é–“",
    daysUntil: "ä»Šã‹ã‚‰{delta}æ—¥é–“",
    weekUntil: "ä»Šã‹ã‚‰1é€±é–“",
    weeksUntil: "ä»Šã‹ã‚‰{delta}é€±é–“",
    monthUntil: "ä»Šã‹ã‚‰1ãƒ¶æœˆ",
    monthsUntil: "ä»Šã‹ã‚‰{delta}ãƒ¶æœˆ",
    yearUntil: "ä»Šã‹ã‚‰1å¹´",
    yearsUntil: "ä»Šã‹ã‚‰{delta}å¹´"
});
Locale.define("ja-JP", "FormValidator", {
    required: "å…¥åŠ›ã¯å¿…é ˆã§ã™ã€‚",
    minLength: "å…¥åŠ›æ–‡å­—æ•°ã¯{minLength}ä»¥ä¸Šã«ã—ã¦ãã ã•ã„ã€‚({length}æ–‡å­—)",
    maxLength: "å…¥åŠ›æ–‡å­—æ•°ã¯{maxLength}ä»¥ä¸‹ã«ã—ã¦ãã ã•ã„ã€‚({length}æ–‡å­—)",
    integer: "æ•´æ•°ã‚’å…¥åŠ›ã—ã¦ãã ã•ã„ã€‚",
    numeric: 'å…¥åŠ›ã§ãã‚‹ã®ã¯æ•°å€¤ã ã‘ã§ã™ã€‚(ä¾‹: "1", "1.1", "-1", "-1.1"....)',
    digits: "å…¥åŠ›ã§ãã‚‹ã®ã¯æ•°å€¤ã¨å¥èª­è¨˜å·ã§ã™ã€‚ (ä¾‹: -ã‚„+ã‚’å«ã‚€é›»è©±ç•ªå·ãªã©).",
    alpha: "å…¥åŠ›ã§ãã‚‹ã®ã¯åŠè§’è‹±å­—ã ã‘ã§ã™ã€‚ãã‚Œä»¥å¤–ã®æ–‡å­—ã¯å…¥åŠ›ã§ãã¾ã›ã‚“ã€‚",
    alphanum: "å…¥åŠ›ã§ãã‚‹ã®ã¯åŠè§’è‹±æ•°å­—ã ã‘ã§ã™ã€‚ãã‚Œä»¥å¤–ã®æ–‡å­—ã¯å…¥åŠ›ã§ãã¾ã›ã‚“ã€‚",
    dateSuchAs: "æœ‰åŠ¹ãªæ—¥ä»˜ã‚’å…¥åŠ›ã—ã¦ãã ã•ã„ã€‚{date}",
    dateInFormatMDY: 'æ—¥ä»˜ã®æ›¸å¼ã«èª¤ã‚ŠãŒã‚ã‚Šã¾ã™ã€‚YYYY/MM/DD (i.e. "1999/12/31")',
    email: "ãƒ¡ãƒ¼ãƒ«ã‚¢ãƒ‰ãƒ¬ã‚¹ã«èª¤ã‚ŠãŒã‚ã‚Šã¾ã™ã€‚",
    url: "URLã‚¢ãƒ‰ãƒ¬ã‚¹ã«èª¤ã‚ŠãŒã‚ã‚Šã¾ã™ã€‚",
    currencyDollar: "é‡‘é¡ã«èª¤ã‚ŠãŒã‚ã‚Šã¾ã™ã€‚",
    oneRequired: "ã²ã¨ã¤ä»¥ä¸Šå…¥åŠ›ã—ã¦ãã ã•ã„ã€‚",
    errorPrefix: "ã‚¨ãƒ©ãƒ¼: ",
    warningPrefix: "è­¦å‘Š: ",
    noSpace: "ã‚¹ãƒšãƒ¼ã‚¹ã¯å…¥åŠ›ã§ãã¾ã›ã‚“ã€‚",
    reqChkByNode: "é¸æŠžã•ã‚Œã¦ã„ã¾ã›ã‚“ã€‚",
    requiredChk: "ã“ã®é …ç›®ã¯å¿…é ˆã§ã™ã€‚",
    reqChkByName: "{label}ã‚’é¸æŠžã—ã¦ãã ã•ã„ã€‚",
    match: "{matchName}ãŒå…¥åŠ›ã•ã‚Œã¦ã„ã‚‹å ´åˆå¿…é ˆã§ã™ã€‚",
    startDate: "é–‹å§‹æ—¥",
    endDate: "çµ‚äº†æ—¥",
    currentDate: "ä»Šæ—¥",
    afterDate: "{label}ä»¥é™ã®æ—¥ä»˜ã«ã—ã¦ãã ã•ã„ã€‚",
    beforeDate: "{label}ä»¥å‰ã®æ—¥ä»˜ã«ã—ã¦ãã ã•ã„ã€‚",
    startMonth: "é–‹å§‹æœˆã‚’é¸æŠžã—ã¦ãã ã•ã„ã€‚",
    sameMonth: "æ—¥ä»˜ãŒåŒä¸€ã§ã™ã€‚ã©ã¡ã‚‰ã‹ã‚’å¤‰æ›´ã—ã¦ãã ã•ã„ã€‚"
});
Locale.define("ja-JP", "Number", {
    decimal: ".",
    group: ",",
    currency: {
        decimals: 0,
        prefix: "\\"
    }
});
Locale.define("nl-NL", "Date", {
    months: ["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"],
    months_abbr: ["jan", "feb", "mrt", "apr", "mei", "jun", "jul", "aug", "sep", "okt", "nov", "dec"],
    days: ["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"],
    days_abbr: ["zo", "ma", "di", "wo", "do", "vr", "za"],
    dateOrder: ["date", "month", "year"],
    shortDate: "%d-%m-%Y",
    shortTime: "%H:%M",
    AM: "AM",
    PM: "PM",
    firstDayOfWeek: 1,
    ordinal: "e",
    lessThanMinuteAgo: "minder dan een minuut geleden",
    minuteAgo: "ongeveer een minuut geleden",
    minutesAgo: "{delta} minuten geleden",
    hourAgo: "ongeveer een uur geleden",
    hoursAgo: "ongeveer {delta} uur geleden",
    dayAgo: "een dag geleden",
    daysAgo: "{delta} dagen geleden",
    weekAgo: "een week geleden",
    weeksAgo: "{delta} weken geleden",
    monthAgo: "een maand geleden",
    monthsAgo: "{delta} maanden geleden",
    yearAgo: "een jaar geleden",
    yearsAgo: "{delta} jaar geleden",
    lessThanMinuteUntil: "over minder dan een minuut",
    minuteUntil: "over ongeveer een minuut",
    minutesUntil: "over {delta} minuten",
    hourUntil: "over ongeveer een uur",
    hoursUntil: "over {delta} uur",
    dayUntil: "over ongeveer een dag",
    daysUntil: "over {delta} dagen",
    weekUntil: "over een week",
    weeksUntil: "over {delta} weken",
    monthUntil: "over een maand",
    monthsUntil: "over {delta} maanden",
    yearUntil: "over een jaar",
    yearsUntil: "over {delta} jaar"
});
Locale.define("nl-NL", "FormValidator", {
    required: "Dit veld is verplicht.",
    length: "Vul precies {length} karakters in (je hebt {elLength} karakters ingevoerd).",
    minLength: "Vul minimaal {minLength} karakters in (je hebt {length} karakters ingevoerd).",
    maxLength: "Vul niet meer dan {maxLength} karakters in (je hebt {length} karakters ingevoerd).",
    integer: "Vul een getal in. Getallen met decimalen (bijvoorbeeld 1.25) zijn niet toegestaan.",
    numeric: 'Vul alleen numerieke waarden in (bijvoorbeeld "1" of "1.1" of "-1" of "-1.1").',
    digits: "Vul alleen nummers en leestekens in (bijvoorbeeld een telefoonnummer met streepjes is toegestaan).",
    alpha: "Vul alleen letters in (a-z). Spaties en andere karakters zijn niet toegestaan.",
    alphanum: "Vul alleen letters (a-z) of nummers (0-9) in. Spaties en andere karakters zijn niet toegestaan.",
    dateSuchAs: "Vul een geldige datum in, zoals {date}",
    dateInFormatMDY: 'Vul een geldige datum, in het formaat MM/DD/YYYY (bijvoorbeeld "12/31/1999")',
    email: 'Vul een geldig e-mailadres in. Bijvoorbeeld "fred@domein.nl".',
    url: "Vul een geldige URL in, zoals http://www.example.com.",
    currencyDollar: "Vul een geldig $ bedrag in. Bijvoorbeeld $100.00 .",
    oneRequired: "Vul iets in bij in ieder geval een van deze velden.",
    warningPrefix: "Waarschuwing: ",
    errorPrefix: "Fout: ",
    noSpace: "Spaties zijn niet toegestaan in dit veld.",
    reqChkByNode: "Er zijn geen items geselecteerd.",
    requiredChk: "Dit veld is verplicht.",
    reqChkByName: "Selecteer een {label}.",
    match: "Dit veld moet overeen komen met het {matchName} veld",
    startDate: "de begin datum",
    endDate: "de eind datum",
    currentDate: "de huidige datum",
    afterDate: "De datum moet hetzelfde of na {label} zijn.",
    beforeDate: "De datum moet hetzelfde of voor {label} zijn.",
    startMonth: "Selecteer een begin maand",
    sameMonth: "Deze twee data moeten in dezelfde maand zijn - u moet een van beide aanpassen.",
    creditcard: "Het ingevulde creditcardnummer is niet geldig. Controleer het nummer en probeer opnieuw. {length} getallen ingevuld."
});
Locale.define("nl-NL").inherit("EU", "Number");
Locale.define("no-NO", "Date", {
    months: ["Januar", "Februar", "Mars", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Desember"],
    months_abbr: ["Jan", "Feb", "Mar", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Des"],
    days: ["SÃ¸ndag", "Mandag", "Tirsdag", "Onsdag", "Torsdag", "Fredag", "LÃ¸rdag"],
    days_abbr: ["SÃ¸n", "Man", "Tir", "Ons", "Tor", "Fre", "LÃ¸r"],
    dateOrder: ["date", "month", "year"],
    shortDate: "%d.%m.%Y",
    shortTime: "%H:%M",
    AM: "AM",
    PM: "PM",
    firstDayOfWeek: 1,
    lessThanMinuteAgo: "mindre enn et minutt siden",
    minuteAgo: "omtrent et minutt siden",
    minutesAgo: "{delta} minutter siden",
    hourAgo: "omtrent en time siden",
    hoursAgo: "omtrent {delta} timer siden",
    dayAgo: "{delta} dag siden",
    daysAgo: "{delta} dager siden",
    weekAgo: "en uke siden",
    weeksAgo: "{delta} uker siden",
    monthAgo: "en mÃ¥ned siden",
    monthsAgo: "{delta} mÃ¥neder siden",
    yearAgo: "ett Ã¥r siden",
    yearsAgo: "{delta} Ã¥r siden",
    lessThanMinuteUntil: "mindre enn et minutt til",
    minuteUntil: "omtrent et minutt til",
    minutesUntil: "{delta} minutter til",
    hourUntil: "omtrent en time til",
    hoursUntil: "omtrent {delta} timer til",
    dayUntil: "en dag til",
    daysUntil: "{delta} dager til",
    weekUntil: "en uke til",
    weeksUntil: "{delta} uker til",
    monthUntil: "en mÃ¥ned til",
    monthsUntil: "{delta} mÃ¥neder til",
    yearUntil: "et Ã¥r til",
    yearsUntil: "{delta} Ã¥r til"
});
Locale.define("no-NO", "FormValidator", {
    required: "Dette feltet er pÃ¥krevd.",
    length: "Skriv inn {length} tegn (du skrev {elLength} tegn)",
    minLength: "Skriv inn minst {minLength} tegn (du skrev {length} tegn).",
    maxLength: "Ikke skriv mer enn {maxLength} tegn (du skrev {length} tegn).",
    integer: "Skriv inn et tall i dette feltet. Tall med desimaler (f.eks. 1,25) er ikke tillat.",
    numeric: 'Skriv kun inn numeriske verdier i dette feltet (f.eks. "1", "1.1", "-1" eller "-1.1").',
    digits: "Skriv kun nummer og skilletegn i dette feltet.",
    alpha: "Skriv kun bokstaver (a-Ã¥) i dette feltet. Ingen mellomrom eller andre tegn er tillat.",
    alphanum: "Skriv kun bokstaver (a-Ã¥) eller nummer (0-9) i dette feltet. Ingen mellomrom eller andre tegn er tillat.",
    dateSuchAs: "Skriv inn en gyldig dato, som f.eks. {date}",
    dateInFormatMDY: 'Skriv inn en gyldig dato, f.eks. DD/MM/YYYY ("31/12/1999")',
    email: 'Skriv inn en gyldig epost-adresse. F.eks. "ola.nordmann@example.com".',
    url: "Skriv inn en gyldig URL, f.eks. http://www.example.com.",
    currencyDollar: "Skriv inn et gyldig belÃ¸p. F.eks. 100,00.",
    oneRequired: "Minst ett av disse feltene mÃ¥ fylles ut.",
    errorPrefix: "Feil: ",
    warningPrefix: "Advarsel: ",
    noSpace: "Mellomrom er ikke tillatt i dette feltet.",
    reqChkByNode: "Ingen objekter er valgt.",
    requiredChk: "Dette feltet er pÃ¥krevd.",
    reqChkByName: "Velg en {label}.",
    match: "Dette feltet mÃ¥ vÃ¦re lik {matchName}",
    startDate: "startdato",
    endDate: "sluttdato",
    currentDate: "dagens dato",
    afterDate: "Datoen mÃ¥ vÃ¦re den samme som eller etter {label}.",
    beforeDate: "Datoen mÃ¥ vÃ¦re den samme som eller fÃ¸r {label}.",
    startMonth: "Velg en startmÃ¥ned",
    sameMonth: "Datoene mÃ¥ vÃ¦re i den samme mÃ¥neden - velg den ene eller den andre.",
    creditcard: "Kortnummeret du skrev inn er ikke gyldig. PrÃ¸v igjen. Du skrev {length} siffer."
});
Locale.define("no-NO", "Number", {
    currency: {
        prefix: "NOK "
    }
}).inherit("EU", "Number");
Locale.define("pl-PL", "Date", {
    months: ["StyczeÅ„", "Luty", "Marzec", "KwiecieÅ„", "Maj", "Czerwiec", "Lipiec", "SierpieÅ„", "WrzesieÅ„", "PaÅºdziernik", "Listopad", "GrudzieÅ„"],
    months_abbr: ["sty", "lut", "mar", "kwi", "maj", "cze", "lip", "sie", "wrz", "paÅº", "lis", "gru"],
    days: ["Niedziela", "PoniedziaÅ‚ek", "Wtorek", "Åšroda", "Czwartek", "PiÄ…tek", "Sobota"],
    days_abbr: ["niedz.", "pon.", "wt.", "Å›r.", "czw.", "pt.", "sob."],
    dateOrder: ["year", "month", "date"],
    shortDate: "%Y-%m-%d",
    shortTime: "%H:%M",
    AM: "nad ranem",
    PM: "po poÅ‚udniu",
    firstDayOfWeek: 1,
    ordinal: function(a) {
        return (a > 3 && a < 21) ? "ty" : ["ty", "szy", "gi", "ci", "ty"][Math.min(a % 10, 4)]
    },
    lessThanMinuteAgo: "mniej niÅ¼ minute temu",
    minuteAgo: "okoÅ‚o minutÄ™ temu",
    minutesAgo: "{delta} minut temu",
    hourAgo: "okoÅ‚o godzinÄ™ temu",
    hoursAgo: "okoÅ‚o {delta} godzin temu",
    dayAgo: "Wczoraj",
    daysAgo: "{delta} dni temu",
    lessThanMinuteUntil: "za niecaÅ‚Ä… minutÄ™",
    minuteUntil: "za okoÅ‚o minutÄ™",
    minutesUntil: "za {delta} minut",
    hourUntil: "za okoÅ‚o godzinÄ™",
    hoursUntil: "za okoÅ‚o {delta} godzin",
    dayUntil: "za 1 dzieÅ„",
    daysUntil: "za {delta} dni"
});
Locale.define("pl-PL", "FormValidator", {
    required: "To pole jest wymagane.",
    minLength: "Wymagane jest przynajmniej {minLength} znakÃ³w (wpisanych zostaÅ‚o tylko {length}).",
    maxLength: "Dozwolone jest nie wiÄ™cej niÅ¼ {maxLength} znakÃ³w (wpisanych zostaÅ‚o {length})",
    integer: "To pole wymaga liczb caÅ‚ych. Liczby dziesiÄ™tne (np. 1.25) sÄ… niedozwolone.",
    numeric: 'Prosimy uÅ¼ywaÄ‡ tylko numerycznych wartoÅ›ci w tym polu (np. "1", "1.1", "-1" lub "-1.1").',
    digits: "Prosimy uÅ¼ywaÄ‡ liczb oraz zankow punktuacyjnych w typ polu (dla przykÅ‚adu, przy numerze telefonu myÅ›lniki i kropki sÄ… dozwolone).",
    alpha: "Prosimy uÅ¼ywaÄ‡ tylko liter (a-z) w tym polu. Spacje oraz inne znaki sÄ… niedozwolone.",
    alphanum: "Prosimy uÅ¼ywaÄ‡ tylko liter (a-z) lub liczb (0-9) w tym polu. Spacje oraz inne znaki sÄ… niedozwolone.",
    dateSuchAs: "Prosimy podaÄ‡ prawidÅ‚owÄ… datÄ™ w formacie: {date}",
    dateInFormatMDY: 'Prosimy podaÄ‡ poprawnÄ… date w formacie DD.MM.RRRR (i.e. "12.01.2009")',
    email: 'Prosimy podaÄ‡ prawidÅ‚owy adres e-mail, np. "jan@domena.pl".',
    url: "Prosimy podaÄ‡ prawidÅ‚owy adres URL, np. http://www.example.com.",
    currencyDollar: "Prosimy podaÄ‡ prawidÅ‚owÄ… sumÄ™ w PLN. Dla przykÅ‚adu: 100.00 PLN.",
    oneRequired: "Prosimy wypeÅ‚niÄ‡ chociaÅ¼ jedno z pÃ³l.",
    errorPrefix: "BÅ‚Ä…d: ",
    warningPrefix: "Uwaga: ",
    noSpace: "W tym polu nie mogÄ… znajdowaÄ‡ siÄ™ spacje.",
    reqChkByNode: "Brak zaznaczonych elementÃ³w.",
    requiredChk: "To pole jest wymagane.",
    reqChkByName: "Prosimy wybraÄ‡ z {label}.",
    match: "To pole musi byÄ‡ takie samo jak {matchName}",
    startDate: "data poczÄ…tkowa",
    endDate: "data koÅ„cowa",
    currentDate: "aktualna data",
    afterDate: "Podana data poinna byÄ‡ taka sama lub po {label}.",
    beforeDate: "Podana data poinna byÄ‡ taka sama lub przed {label}.",
    startMonth: "Prosimy wybraÄ‡ poczÄ…tkowy miesiÄ…c.",
    sameMonth: "Te dwie daty muszÄ… byÄ‡ w zakresie tego samego miesiÄ…ca - wymagana jest zmiana ktÃ³regoÅ› z pÃ³l."
});
Locale.define("pt-PT", "Date", {
    months: ["Janeiro", "Fevereiro", "MarÃ§o", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"],
    months_abbr: ["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"],
    days: ["Domingo", "Segunda-feira", "TerÃ§a-feira", "Quarta-feira", "Quinta-feira", "Sexta-feira", "SÃ¡bado"],
    days_abbr: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "SÃ¡b"],
    dateOrder: ["date", "month", "year"],
    shortDate: "%d-%m-%Y",
    shortTime: "%H:%M",
    AM: "AM",
    PM: "PM",
    firstDayOfWeek: 1,
    ordinal: "Âº",
    lessThanMinuteAgo: "hÃ¡ menos de um minuto",
    minuteAgo: "hÃ¡ cerca de um minuto",
    minutesAgo: "hÃ¡ {delta} minutos",
    hourAgo: "hÃ¡ cerca de uma hora",
    hoursAgo: "hÃ¡ cerca de {delta} horas",
    dayAgo: "hÃ¡ um dia",
    daysAgo: "hÃ¡ {delta} dias",
    weekAgo: "hÃ¡ uma semana",
    weeksAgo: "hÃ¡ {delta} semanas",
    monthAgo: "hÃ¡ um mÃªs",
    monthsAgo: "hÃ¡ {delta} meses",
    yearAgo: "hÃ¡ um ano",
    yearsAgo: "hÃ¡ {delta} anos",
    lessThanMinuteUntil: "em menos de um minuto",
    minuteUntil: "em um minuto",
    minutesUntil: "em {delta} minutos",
    hourUntil: "em uma hora",
    hoursUntil: "em {delta} horas",
    dayUntil: "em um dia",
    daysUntil: "em {delta} dias",
    weekUntil: "em uma semana",
    weeksUntil: "em {delta} semanas",
    monthUntil: "em um mÃªs",
    monthsUntil: "em {delta} meses",
    yearUntil: "em um ano",
    yearsUntil: "em {delta} anos"
});
Locale.define("pt-BR", "Date", {
    shortDate: "%d/%m/%Y"
}).inherit("pt-PT", "Date");
Locale.define("pt-BR", "FormValidator", {
    required: "Este campo Ã© obrigatÃ³rio.",
    minLength: "Digite pelo menos {minLength} caracteres (tamanho atual: {length}).",
    maxLength: "NÃ£o digite mais de {maxLength} caracteres (tamanho atual: {length}).",
    integer: "Por favor digite apenas um nÃºmero inteiro neste campo. NÃ£o sÃ£o permitidos nÃºmeros decimais (por exemplo, 1,25).",
    numeric: 'Por favor digite apenas valores numÃ©ricos neste campo (por exemplo, "1" ou "1.1" ou "-1" ou "-1,1").',
    digits: "Por favor use apenas nÃºmeros e pontuaÃ§Ã£o neste campo (por exemplo, um nÃºmero de telefone com traÃ§os ou pontos Ã© permitido).",
    alpha: "Por favor use somente letras (a-z). EspaÃ§o e outros caracteres nÃ£o sÃ£o permitidos.",
    alphanum: "Use somente letras (a-z) ou nÃºmeros (0-9) neste campo. EspaÃ§o e outros caracteres nÃ£o sÃ£o permitidos.",
    dateSuchAs: "Digite uma data vÃ¡lida, como {date}",
    dateInFormatMDY: 'Digite uma data vÃ¡lida, como DD/MM/YYYY (por exemplo, "31/12/1999")',
    email: 'Digite um endereÃ§o de email vÃ¡lido. Por exemplo "nome@dominio.com".',
    url: "Digite uma URL vÃ¡lida. Exemplo: http://www.example.com.",
    currencyDollar: "Digite um valor em dinheiro vÃ¡lido. Exemplo: R$100,00 .",
    oneRequired: "Digite algo para pelo menos um desses campos.",
    errorPrefix: "Erro: ",
    warningPrefix: "Aviso: ",
    noSpace: "NÃ£o Ã© possÃ­vel digitar espaÃ§os neste campo.",
    reqChkByNode: "NÃ£o foi selecionado nenhum item.",
    requiredChk: "Este campo Ã© obrigatÃ³rio.",
    reqChkByName: "Por favor digite um {label}.",
    match: "Este campo deve ser igual ao campo {matchName}.",
    startDate: "a data inicial",
    endDate: "a data final",
    currentDate: "a data atual",
    afterDate: "A data deve ser igual ou posterior a {label}.",
    beforeDate: "A data deve ser igual ou anterior a {label}.",
    startMonth: "Por favor selecione uma data inicial.",
    sameMonth: "Estas duas datas devem ter o mesmo mÃªs - vocÃª deve modificar uma das duas.",
    creditcard: "O nÃºmero do cartÃ£o de crÃ©dito informado Ã© invÃ¡lido. Por favor verifique o valor e tente novamente. {length} nÃºmeros informados."
});
Locale.define("pt-BR", "Number", {
    decimal: ",",
    group: ".",
    currency: {
        prefix: "R$ "
    }
});
Locale.define("pt-PT", "FormValidator", {
    required: "Este campo Ã© necessÃ¡rio.",
    minLength: "Digite pelo menos{minLength} caracteres (comprimento {length} caracteres).",
    maxLength: "NÃ£o insira mais de {maxLength} caracteres (comprimento {length} caracteres).",
    integer: "Digite um nÃºmero inteiro neste domÃ­nio. Com nÃºmeros decimais (por exemplo, 1,25), nÃ£o sÃ£o permitidas.",
    numeric: 'Digite apenas valores numÃ©ricos neste domÃ­nio (p.ex., "1" ou "1.1" ou "-1" ou "-1,1").',
    digits: "Por favor, use nÃºmeros e pontuaÃ§Ã£o apenas neste campo (p.ex., um nÃºmero de telefone com traÃ§os ou pontos Ã© permitida).",
    alpha: "Por favor use somente letras (a-z), com nesta Ã¡rea. NÃ£o utilize espaÃ§os nem outros caracteres sÃ£o permitidos.",
    alphanum: "Use somente letras (a-z) ou nÃºmeros (0-9) neste campo. NÃ£o utilize espaÃ§os nem outros caracteres sÃ£o permitidos.",
    dateSuchAs: "Digite uma data vÃ¡lida, como {date}",
    dateInFormatMDY: 'Digite uma data vÃ¡lida, como DD/MM/YYYY (p.ex. "31/12/1999")',
    email: 'Digite um endereÃ§o de email vÃ¡lido. Por exemplo "fred@domain.com".',
    url: "Digite uma URL vÃ¡lida, como http://www.example.com.",
    currencyDollar: "Digite um valor vÃ¡lido $. Por exemplo $ 100,00. ",
    oneRequired: "Digite algo para pelo menos um desses insumos.",
    errorPrefix: "Erro: ",
    warningPrefix: "Aviso: "
});
(function() {
    var a = function(h, e, d, g, b) {
        var c = h % 10,
            f = h % 100;
        if (c == 1 && f != 11) {
            return e
        } else {
            if ((c == 2 || c == 3 || c == 4) && !(f == 12 || f == 13 || f == 14)) {
                return d
            } else {
                if (c == 0 || (c == 5 || c == 6 || c == 7 || c == 8 || c == 9) || (f == 11 || f == 12 || f == 13 || f == 14)) {
                    return g
                } else {
                    return b
                }
            }
        }
    };
    Locale.define("ru-RU", "Date", {
        months: ["Ð¯Ð½Ð²Ð°Ñ€ÑŒ", "Ð¤ÐµÐ²Ñ€Ð°Ð»ÑŒ", "ÐœÐ°Ñ€Ñ‚", "ÐÐ¿Ñ€ÐµÐ»ÑŒ", "ÐœÐ°Ð¹", "Ð˜ÑŽÐ½ÑŒ", "Ð˜ÑŽÐ»ÑŒ", "ÐÐ²Ð³ÑƒÑÑ‚", "Ð¡ÐµÐ½Ñ‚ÑÐ±Ñ€ÑŒ", "ÐžÐºÑ‚ÑÐ±Ñ€ÑŒ", "ÐÐ¾ÑÐ±Ñ€ÑŒ", "Ð”ÐµÐºÐ°Ð±Ñ€ÑŒ"],
        months_abbr: ["ÑÐ½Ð²", "Ñ„ÐµÐ²Ñ€", "Ð¼Ð°Ñ€Ñ‚", "Ð°Ð¿Ñ€", "Ð¼Ð°Ð¹", "Ð¸ÑŽÐ½ÑŒ", "Ð¸ÑŽÐ»ÑŒ", "Ð°Ð²Ð³", "ÑÐµÐ½Ñ‚", "Ð¾ÐºÑ‚", "Ð½Ð¾ÑÐ±", "Ð´ÐµÐº"],
        days: ["Ð’Ð¾ÑÐºÑ€ÐµÑÐµÐ½ÑŒÐµ", "ÐŸÐ¾Ð½ÐµÐ´ÐµÐ»ÑŒÐ½Ð¸Ðº", "Ð’Ñ‚Ð¾Ñ€Ð½Ð¸Ðº", "Ð¡Ñ€ÐµÐ´Ð°", "Ð§ÐµÑ‚Ð²ÐµÑ€Ð³", "ÐŸÑÑ‚Ð½Ð¸Ñ†Ð°", "Ð¡ÑƒÐ±Ð±Ð¾Ñ‚Ð°"],
        days_abbr: ["Ð’Ñ", "ÐŸÐ½", "Ð’Ñ‚", "Ð¡Ñ€", "Ð§Ñ‚", "ÐŸÑ‚", "Ð¡Ð±"],
        dateOrder: ["date", "month", "year"],
        shortDate: "%d.%m.%Y",
        shortTime: "%H:%M",
        AM: "AM",
        PM: "PM",
        firstDayOfWeek: 1,
        ordinal: "",
        lessThanMinuteAgo: "Ð¼ÐµÐ½ÑŒÑˆÐµ Ð¼Ð¸Ð½ÑƒÑ‚Ñ‹ Ð½Ð°Ð·Ð°Ð´",
        minuteAgo: "Ð¼Ð¸Ð½ÑƒÑ‚Ñƒ Ð½Ð°Ð·Ð°Ð´",
        minutesAgo: function(b) {
            return "{delta} " + a(b, "Ð¼Ð¸Ð½ÑƒÑ‚Ñƒ", "Ð¼Ð¸Ð½ÑƒÑ‚Ñ‹", "Ð¼Ð¸Ð½ÑƒÑ‚") + " Ð½Ð°Ð·Ð°Ð´"
        },
        hourAgo: "Ñ‡Ð°Ñ Ð½Ð°Ð·Ð°Ð´",
        hoursAgo: function(b) {
            return "{delta} " + a(b, "Ñ‡Ð°Ñ", "Ñ‡Ð°ÑÐ°", "Ñ‡Ð°ÑÐ¾Ð²") + " Ð½Ð°Ð·Ð°Ð´"
        },
        dayAgo: "Ð²Ñ‡ÐµÑ€Ð°",
        daysAgo: function(b) {
            return "{delta} " + a(b, "Ð´ÐµÐ½ÑŒ", "Ð´Ð½Ñ", "Ð´Ð½ÐµÐ¹") + " Ð½Ð°Ð·Ð°Ð´"
        },
        weekAgo: "Ð½ÐµÐ´ÐµÐ»ÑŽ Ð½Ð°Ð·Ð°Ð´",
        weeksAgo: function(b) {
            return "{delta} " + a(b, "Ð½ÐµÐ´ÐµÐ»Ñ", "Ð½ÐµÐ´ÐµÐ»Ð¸", "Ð½ÐµÐ´ÐµÐ»ÑŒ") + " Ð½Ð°Ð·Ð°Ð´"
        },
        monthAgo: "Ð¼ÐµÑÑÑ† Ð½Ð°Ð·Ð°Ð´",
        monthsAgo: function(b) {
            return "{delta} " + a(b, "Ð¼ÐµÑÑÑ†", "Ð¼ÐµÑÑÑ†Ð°", "Ð¼ÐµÑÑÑ†ÐµÐ²") + " Ð½Ð°Ð·Ð°Ð´"
        },
        yearAgo: "Ð³Ð¾Ð´ Ð½Ð°Ð·Ð°Ð´",
        yearsAgo: function(b) {
            return "{delta} " + a(b, "Ð³Ð¾Ð´", "Ð³Ð¾Ð´Ð°", "Ð»ÐµÑ‚") + " Ð½Ð°Ð·Ð°Ð´"
        },
        lessThanMinuteUntil: "Ð¼ÐµÐ½ÑŒÑˆÐµ Ñ‡ÐµÐ¼ Ñ‡ÐµÑ€ÐµÐ· Ð¼Ð¸Ð½ÑƒÑ‚Ñƒ",
        minuteUntil: "Ñ‡ÐµÑ€ÐµÐ· Ð¼Ð¸Ð½ÑƒÑ‚Ñƒ",
        minutesUntil: function(b) {
            return "Ñ‡ÐµÑ€ÐµÐ· {delta} " + a(b, "Ð¼Ð¸Ð½ÑƒÑ‚Ñƒ", "Ð¼Ð¸Ð½ÑƒÑ‚Ñ‹", "Ð¼Ð¸Ð½ÑƒÑ‚") + ""
        },
        hourUntil: "Ñ‡ÐµÑ€ÐµÐ· Ñ‡Ð°Ñ",
        hoursUntil: function(b) {
            return "Ñ‡ÐµÑ€ÐµÐ· {delta} " + a(b, "Ñ‡Ð°Ñ", "Ñ‡Ð°ÑÐ°", "Ñ‡Ð°ÑÐ¾Ð²") + ""
        },
        dayUntil: "Ð·Ð°Ð²Ñ‚Ñ€Ð°",
        daysUntil: function(b) {
            return "Ñ‡ÐµÑ€ÐµÐ· {delta} " + a(b, "Ð´ÐµÐ½ÑŒ", "Ð´Ð½Ñ", "Ð´Ð½ÐµÐ¹") + ""
        },
        weekUntil: "Ñ‡ÐµÑ€ÐµÐ· Ð½ÐµÐ´ÐµÐ»ÑŽ",
        weeksUntil: function(b) {
            return "Ñ‡ÐµÑ€ÐµÐ· {delta} " + a(b, "Ð½ÐµÐ´ÐµÐ»ÑŽ", "Ð½ÐµÐ´ÐµÐ»Ð¸", "Ð½ÐµÐ´ÐµÐ»ÑŒ") + ""
        },
        monthUntil: "Ñ‡ÐµÑ€ÐµÐ· Ð¼ÐµÑÑÑ†",
        monthsUntil: function(b) {
            return "Ñ‡ÐµÑ€ÐµÐ· {delta} " + a(b, "Ð¼ÐµÑÑÑ†", "Ð¼ÐµÑÑÑ†Ð°", "Ð¼ÐµÑÑÑ†ÐµÐ²") + ""
        },
        yearUntil: "Ñ‡ÐµÑ€ÐµÐ·",
        yearsUntil: function(b) {
            return "Ñ‡ÐµÑ€ÐµÐ· {delta} " + a(b, "Ð³Ð¾Ð´", "Ð³Ð¾Ð´Ð°", "Ð»ÐµÑ‚") + ""
        }
    })
})();
Locale.define("ru-RU", "FormValidator", {
    required: "Ð­Ñ‚Ð¾ Ð¿Ð¾Ð»Ðµ Ð¾Ð±ÑÐ·Ð°Ñ‚ÐµÐ»ÑŒÐ½Ð¾ Ðº Ð·Ð°Ð¿Ð¾Ð»Ð½ÐµÐ½Ð¸ÑŽ.",
    minLength: "ÐŸÐ¾Ð¶Ð°Ð»ÑƒÐ¹ÑÑ‚Ð°, Ð²Ð²ÐµÐ´Ð¸Ñ‚Ðµ Ñ…Ð¾Ñ‚Ñ Ð±Ñ‹ {minLength} ÑÐ¸Ð¼Ð²Ð¾Ð»Ð¾Ð² (Ð’Ñ‹ Ð²Ð²ÐµÐ»Ð¸ {length}).",
    maxLength: "ÐŸÐ¾Ð¶Ð°Ð»ÑƒÐ¹ÑÑ‚Ð°, Ð²Ð²ÐµÐ´Ð¸Ñ‚Ðµ Ð½Ðµ Ð±Ð¾Ð»ÑŒÑˆÐµ {maxLength} ÑÐ¸Ð¼Ð²Ð¾Ð»Ð¾Ð² (Ð’Ñ‹ Ð²Ð²ÐµÐ»Ð¸ {length}).",
    integer: "ÐŸÐ¾Ð¶Ð°Ð»ÑƒÐ¹ÑÑ‚Ð°, Ð²Ð²ÐµÐ´Ð¸Ñ‚Ðµ Ð² ÑÑ‚Ð¾ Ð¿Ð¾Ð»Ðµ Ñ‡Ð¸ÑÐ»Ð¾. Ð”Ñ€Ð¾Ð±Ð½Ñ‹Ðµ Ñ‡Ð¸ÑÐ»Ð° (Ð½Ð°Ð¿Ñ€Ð¸Ð¼ÐµÑ€ 1.25) Ñ‚ÑƒÑ‚ Ð½Ðµ Ñ€Ð°Ð·Ñ€ÐµÑˆÐµÐ½Ñ‹.",
    numeric: 'ÐŸÐ¾Ð¶Ð°Ð»ÑƒÐ¹ÑÑ‚Ð°, Ð²Ð²ÐµÐ´Ð¸Ñ‚Ðµ Ð² ÑÑ‚Ð¾ Ð¿Ð¾Ð»Ðµ Ñ‡Ð¸ÑÐ»Ð¾ (Ð½Ð°Ð¿Ñ€Ð¸Ð¼ÐµÑ€ "1" Ð¸Ð»Ð¸ "1.1", Ð¸Ð»Ð¸ "-1", Ð¸Ð»Ð¸ "-1.1").',
    digits: "Ð’ ÑÑ‚Ð¾Ð¼ Ð¿Ð¾Ð»Ðµ Ð’Ñ‹ Ð¼Ð¾Ð¶ÐµÑ‚Ðµ Ð¸ÑÐ¿Ð¾Ð»ÑŒÐ·Ð¾Ð²Ð°Ñ‚ÑŒ Ñ‚Ð¾Ð»ÑŒÐºÐ¾ Ñ†Ð¸Ñ„Ñ€Ñ‹ Ð¸ Ð·Ð½Ð°ÐºÐ¸ Ð¿ÑƒÐ½ÐºÑ‚ÑƒÐ°Ñ†Ð¸Ð¸ (Ð½Ð°Ð¿Ñ€Ð¸Ð¼ÐµÑ€, Ñ‚ÐµÐ»ÐµÑ„Ð¾Ð½Ð½Ñ‹Ð¹ Ð½Ð¾Ð¼ÐµÑ€ ÑÐ¾ Ð·Ð½Ð°ÐºÐ°Ð¼Ð¸ Ð´ÐµÑ„Ð¸ÑÐ° Ð¸Ð»Ð¸ Ñ Ñ‚Ð¾Ñ‡ÐºÐ°Ð¼Ð¸).",
    alpha: "Ð’ ÑÑ‚Ð¾Ð¼ Ð¿Ð¾Ð»Ðµ Ð¼Ð¾Ð¶Ð½Ð¾ Ð¸ÑÐ¿Ð¾Ð»ÑŒÐ·Ð¾Ð²Ð°Ñ‚ÑŒ Ñ‚Ð¾Ð»ÑŒÐºÐ¾ Ð»Ð°Ñ‚Ð¸Ð½ÑÐºÐ¸Ðµ Ð±ÑƒÐºÐ²Ñ‹ (a-z). ÐŸÑ€Ð¾Ð±ÐµÐ»Ñ‹ Ð¸ Ð´Ñ€ÑƒÐ³Ð¸Ðµ ÑÐ¸Ð¼Ð²Ð¾Ð»Ñ‹ Ð·Ð°Ð¿Ñ€ÐµÑ‰ÐµÐ½Ñ‹.",
    alphanum: "Ð’ ÑÑ‚Ð¾Ð¼ Ð¿Ð¾Ð»Ðµ Ð¼Ð¾Ð¶Ð½Ð¾ Ð¸ÑÐ¿Ð¾Ð»ÑŒÐ·Ð¾Ð²Ð°Ñ‚ÑŒ Ñ‚Ð¾Ð»ÑŒÐºÐ¾ Ð»Ð°Ñ‚Ð¸Ð½ÑÐºÐ¸Ðµ Ð±ÑƒÐºÐ²Ñ‹ (a-z) Ð¸ Ñ†Ð¸Ñ„Ñ€Ñ‹ (0-9). ÐŸÑ€Ð¾Ð±ÐµÐ»Ñ‹ Ð¸ Ð´Ñ€ÑƒÐ³Ð¸Ðµ ÑÐ¸Ð¼Ð²Ð¾Ð»Ñ‹ Ð·Ð°Ð¿Ñ€ÐµÑ‰ÐµÐ½Ñ‹.",
    dateSuchAs: "ÐŸÐ¾Ð¶Ð°Ð»ÑƒÐ¹ÑÑ‚Ð°, Ð²Ð²ÐµÐ´Ð¸Ñ‚Ðµ ÐºÐ¾Ñ€Ñ€ÐµÐºÑ‚Ð½ÑƒÑŽ Ð´Ð°Ñ‚Ñƒ {date}",
    dateInFormatMDY: 'ÐŸÐ¾Ð¶Ð°Ð»ÑƒÐ¹ÑÑ‚Ð°, Ð²Ð²ÐµÐ´Ð¸Ñ‚Ðµ Ð´Ð°Ñ‚Ñƒ Ð² Ñ„Ð¾Ñ€Ð¼Ð°Ñ‚Ðµ ÐœÐœ/Ð”Ð”/Ð“Ð“Ð“Ð“ (Ð½Ð°Ð¿Ñ€Ð¸Ð¼ÐµÑ€ "12/31/1999")',
    email: 'ÐŸÐ¾Ð¶Ð°Ð»ÑƒÐ¹ÑÑ‚Ð°, Ð²Ð²ÐµÐ´Ð¸Ñ‚Ðµ ÐºÐ¾Ñ€Ñ€ÐµÐºÑ‚Ð½Ñ‹Ð¹ ÐµÐ¼ÐµÐ¹Ð»-Ð°Ð´Ñ€ÐµÑ. Ð”Ð»Ñ Ð¿Ñ€Ð¸Ð¼ÐµÑ€Ð° "fred@domain.com".',
    url: "ÐŸÐ¾Ð¶Ð°Ð»ÑƒÐ¹ÑÑ‚Ð°, Ð²Ð²ÐµÐ´Ð¸Ñ‚Ðµ Ð¿Ñ€Ð°Ð²Ð¸Ð»ÑŒÐ½ÑƒÑŽ ÑÑÑ‹Ð»ÐºÑƒ Ð²Ð¸Ð´Ð° http://www.example.com.",
    currencyDollar: "ÐŸÐ¾Ð¶Ð°Ð»ÑƒÐ¹ÑÑ‚Ð°, Ð²Ð²ÐµÐ´Ð¸Ñ‚Ðµ ÑÑƒÐ¼Ð¼Ñƒ Ð² Ð´Ð¾Ð»Ð»Ð°Ñ€Ð°Ñ…. ÐÐ°Ð¿Ñ€Ð¸Ð¼ÐµÑ€: $100.00 .",
    oneRequired: "ÐŸÐ¾Ð¶Ð°Ð»ÑƒÐ¹ÑÑ‚Ð°, Ð²Ñ‹Ð±ÐµÑ€Ð¸Ñ‚Ðµ Ñ…Ð¾Ñ‚ÑŒ Ñ‡Ñ‚Ð¾-Ð½Ð¸Ð±ÑƒÐ´ÑŒ Ð² Ð¾Ð´Ð½Ð¾Ð¼ Ð¸Ð· ÑÑ‚Ð¸Ñ… Ð¿Ð¾Ð»ÐµÐ¹.",
    errorPrefix: "ÐžÑˆÐ¸Ð±ÐºÐ°: ",
    warningPrefix: "Ð’Ð½Ð¸Ð¼Ð°Ð½Ð¸Ðµ: "
});
(function() {
    var a = function(e, d, c, b) {
        if (e == 1) {
            return d
        } else {
            if (e == 2 || e == 3 || e == 4) {
                return c
            } else {
                return b
            }
        }
    };
    Locale.define("sk-SK", "Date", {
        months: ["JanuÃ¡r", "FebruÃ¡r", "Marec", "AprÃ­l", "MÃ¡j", "JÃºn", "JÃºl", "August", "September", "OktÃ³ber", "November", "December"],
        months_abbr: ["januÃ¡ra", "februÃ¡ra", "marca", "aprÃ­la", "mÃ¡ja", "jÃºna", "jÃºla", "augusta", "septembra", "oktÃ³bra", "novembra", "decembra"],
        days: ["Nedele", "PondelÃ­", "ÃšterÃ½", "Streda", "ÄŒtvrtek", "PÃ¡tek", "Sobota"],
        days_abbr: ["ne", "po", "ut", "st", "Å¡t", "pi", "so"],
        dateOrder: ["date", "month", "year"],
        shortDate: "%d.%m.%Y",
        shortTime: "%H:%M",
        AM: "dop.",
        PM: "pop.",
        firstDayOfWeek: 1,
        ordinal: ".",
        lessThanMinuteAgo: "pred chvÃ­Ä¾ou",
        minuteAgo: "pribliÅ¾ne pred minÃºtou",
        minutesAgo: function(b) {
            return "pred {delta} " + a(b, "minÃºtou", "minÃºtami", "minÃºtami")
        },
        hourAgo: "pribliÅ¾ne pred hodinou",
        hoursAgo: function(b) {
            return "pred {delta} " + a(b, "hodinou", "hodinami", "hodinami")
        },
        dayAgo: "pred dÅˆom",
        daysAgo: function(b) {
            return "pred {delta} " + a(b, "dÅˆom", "dÅˆami", "dÅˆami")
        },
        weekAgo: "pred tÃ½Å¾dÅˆom",
        weeksAgo: function(b) {
            return "pred {delta} " + a(b, "tÃ½Å¾dÅˆom", "tÃ½Å¾dÅˆami", "tÃ½Å¾dÅˆami")
        },
        monthAgo: "pred mesiacom",
        monthsAgo: function(b) {
            return "pred {delta} " + a(b, "mesiacom", "mesiacmi", "mesiacmi")
        },
        yearAgo: "pred rokom",
        yearsAgo: function(b) {
            return "pred {delta} " + a(b, "rokom", "rokmi", "rokmi")
        },
        lessThanMinuteUntil: "o chvÃ­Ä¾u",
        minuteUntil: "pribliÅ¾ne o minÃºtu",
        minutesUntil: function(b) {
            return "o {delta} " + a(b, "minÃºtu", "minÃºty", "minÃºty")
        },
        hourUntil: "pribliÅ¾ne o hodinu",
        hoursUntil: function(b) {
            return "o {delta} " + a(b, "hodinu", "hodiny", "hodÃ­n")
        },
        dayUntil: "o deÅˆ",
        daysUntil: function(b) {
            return "o {delta} " + a(b, "deÅˆ", "dni", "dnÃ­")
        },
        weekUntil: "o tÃ½Å¾deÅˆ",
        weeksUntil: function(b) {
            return "o {delta} " + a(b, "tÃ½Å¾deÅˆ", "tÃ½Å¾dne", "tÃ½Å¾dÅˆov")
        },
        monthUntil: "o mesiac",
        monthsUntil: function(b) {
            return "o {delta} " + a(b, "mesiac", "mesiace", "mesiacov")
        },
        yearUntil: "o rok",
        yearsUntil: function(b) {
            return "o {delta} " + a(b, "rok", "roky", "rokov")
        }
    })
})();
Locale.define("sk-SK", "FormValidator", {
    required: "TÃ¡to poloÅ¾ka je povinnÃ¡.",
    minLength: "Zadajte prosÃ­m aspoÅˆ {minLength} znakov (momentÃ¡lne {length} znakov).",
    maxLength: "Zadajte prosÃ­m menej ako {maxLength} znakov (momentÃ¡lne {length} znakov).",
    integer: "Zadajte prosÃ­m celÃ© ÄÃ­slo. DesetinnÃ© ÄÃ­sla (napr. 1.25) nie sÃº povolenÃ©.",
    numeric: "Zadajte len ÄÃ­selnÃ© hodnoty (t.j. â€ž1â€œ alebo â€ž1.1â€œ alebo â€ž-1â€œ alebo â€ž-1.1â€œ).",
    digits: "Zadajte prosÃ­m len ÄÃ­sla a interpunkÄnÃ© znamienka (naprÃ­klad telefÃ³nne ÄÃ­slo s pomlÄkami albo bodkami je povolenÃ©).",
    alpha: "Zadajte prosÃ­m len pÃ­smenÃ¡ (a-z). Medzery alebo inÃ© znaky nie sÃº povolenÃ©.",
    alphanum: "Zadajte prosÃ­m len pÃ­smenÃ¡ (a-z) alebo ÄÃ­slice (0-9). Medzery alebo inÃ© znaky nie sÃº povolenÃ©.",
    dateSuchAs: "Zadajte prosÃ­m platnÃ½ dÃ¡tum v tvare {date}",
    dateInFormatMDY: "Zadajte prosÃ­m platnÃ½ datum v tvare MM / DD / RRRR (t.j. â€ž12/31/1999â€œ)",
    email: "Zadajte prosÃ­m platnÃº emailovÃº adresu. NaprÃ­klad â€žfred@domain.comâ€œ.",
    url: "Zadajte prosÃ­m platnoÃº adresu URL v tvare http://www.example.com.",
    currencyDollar: "Zadajte prosÃ­m platnÃº Äiastku. NaprÃ­klad $100.00.",
    oneRequired: "Zadajte prosÃ­m aspoÅˆ jednu hodnotu z tÃ½chto poloÅ¾iek.",
    errorPrefix: "Chyba: ",
    warningPrefix: "Upozornenie: ",
    noSpace: "V tejto poloÅ¾le nie sÃº povolenÃ© medzery",
    reqChkByNode: "Nie sÃº vybranÃ© Å¾iadne poloÅ¾ky.",
    requiredChk: "TÃ¡to poloÅ¾ka je povinnÃ¡.",
    reqChkByName: "ProsÃ­m vyberte {label}.",
    match: "TÃ¡to poloÅ¾ka sa musÃ­ zhodovaÅ¥ s poloÅ¾kou {matchName}",
    startDate: "dÃ¡tum zaÄiatku",
    endDate: "dÃ¡tum ukonÄenia",
    currendDate: "aktuÃ¡lny dÃ¡tum",
    afterDate: "DÃ¡tum by mal bÃ½Å¥ rovnakÃ½ alebo vÃ¤ÄÅ¡Ã­ ako {label}.",
    beforeDate: "DÃ¡tum by mal byÅ¥ rovnakÃ½ alebo menÅ¡Ã­ ako {label}.",
    startMonth: "Vyberte poÄiatoÄnÃ½ mesiac.",
    sameMonth: "Tieto dva dÃ¡tumy musia bÃ½Å¥ v rovnakom mesiaci - zmeÅˆte jeden z nich.",
    creditcard: "ZadanÃ© ÄÃ­slo kreditnej karty je neplatnÃ©. ProsÃ­m, opravte ho. Bolo zadanÃ½ch {length} ÄÃ­slic."
});
(function() {
    var a = function(f, d, c, e, b) {
        return (f >= 1 && f <= 3) ? arguments[f] : b
    };
    Locale.define("sl-SI", "Date", {
        months: ["januar", "februar", "marec", "april", "maj", "junij", "julij", "avgust", "september", "oktober", "november", "december"],
        months_abbr: ["jan", "feb", "mar", "apr", "maj", "jun", "jul", "avg", "sep", "okt", "nov", "dec"],
        days: ["nedelja", "ponedeljek", "torek", "sreda", "Äetrtek", "petek", "sobota"],
        days_abbr: ["ned", "pon", "tor", "sre", "Äet", "pet", "sob"],
        dateOrder: ["date", "month", "year"],
        shortDate: "%d.%m.%Y",
        shortTime: "%H.%M",
        AM: "AM",
        PM: "PM",
        firstDayOfWeek: 1,
        ordinal: ".",
        lessThanMinuteAgo: "manj kot minuto nazaj",
        minuteAgo: "minuto nazaj",
        minutesAgo: function(b) {
            return "{delta} " + a(b, "minuto", "minuti", "minute", "minut") + " nazaj"
        },
        hourAgo: "uro nazaj",
        hoursAgo: function(b) {
            return "{delta} " + a(b, "uro", "uri", "ure", "ur") + " nazaj"
        },
        dayAgo: "dan nazaj",
        daysAgo: function(b) {
            return "{delta} " + a(b, "dan", "dneva", "dni", "dni") + " nazaj"
        },
        weekAgo: "teden nazaj",
        weeksAgo: function(b) {
            return "{delta} " + a(b, "teden", "tedna", "tedne", "tednov") + " nazaj"
        },
        monthAgo: "mesec nazaj",
        monthsAgo: function(b) {
            return "{delta} " + a(b, "mesec", "meseca", "mesece", "mesecov") + " nazaj"
        },
        yearthAgo: "leto nazaj",
        yearsAgo: function(b) {
            return "{delta} " + a(b, "leto", "leti", "leta", "let") + " nazaj"
        },
        lessThanMinuteUntil: "Å¡e manj kot minuto",
        minuteUntil: "Å¡e minuta",
        minutesUntil: function(b) {
            return "Å¡e {delta} " + a(b, "minuta", "minuti", "minute", "minut")
        },
        hourUntil: "Å¡e ura",
        hoursUntil: function(b) {
            return "Å¡e {delta} " + a(b, "ura", "uri", "ure", "ur")
        },
        dayUntil: "Å¡e dan",
        daysUntil: function(b) {
            return "Å¡e {delta} " + a(b, "dan", "dneva", "dnevi", "dni")
        },
        weekUntil: "Å¡e tedn",
        weeksUntil: function(b) {
            return "Å¡e {delta} " + a(b, "teden", "tedna", "tedni", "tednov")
        },
        monthUntil: "Å¡e mesec",
        monthsUntil: function(b) {
            return "Å¡e {delta} " + a(b, "mesec", "meseca", "meseci", "mesecov")
        },
        yearUntil: "Å¡e leto",
        yearsUntil: function(b) {
            return "Å¡e {delta} " + a(b, "leto", "leti", "leta", "let")
        }
    })
})();
Locale.define("sl-SI", "FormValidator", {
    required: "To polje je obvezno",
    minLength: "Prosim, vnesite vsaj {minLength} znakov (vnesli ste {length} znakov).",
    maxLength: "Prosim, ne vnesite veÄ kot {maxLength} znakov (vnesli ste {length} znakov).",
    integer: "Prosim, vnesite celo Å¡tevilo. Decimalna Å¡tevila (kot 1,25) niso dovoljena.",
    numeric: 'Prosim, vnesite samo numeriÄne vrednosti (kot "1" ali "1.1" ali "-1" ali "-1.1").',
    digits: "Prosim, uporabite Å¡tevilke in loÄila le na tem polju (na primer, dovoljena je telefonska Å¡tevilka z pomiÅ¡laji ali pikami).",
    alpha: "Prosim, uporabite le Ärke v tem plju. Presledki in drugi znaki niso dovoljeni.",
    alphanum: "Prosim, uporabite samo Ärke ali Å¡tevilke v tem polju. Presledki in drugi znaki niso dovoljeni.",
    dateSuchAs: "Prosim, vnesite pravilen datum kot {date}",
    dateInFormatMDY: 'Prosim, vnesite pravilen datum kot MM.DD.YYYY (primer "12.31.1999")',
    email: 'Prosim, vnesite pravilen email naslov. Na primer "fred@domain.com".',
    url: "Prosim, vnesite pravilen URL kot http://www.example.com.",
    currencyDollar: "Prosim, vnesit epravilno vrednost â‚¬. Primer 100,00â‚¬ .",
    oneRequired: "Prosimo, vnesite nekaj za vsaj eno izmed teh polj.",
    errorPrefix: "Napaka: ",
    warningPrefix: "Opozorilo: ",
    noSpace: "To vnosno polje ne dopuÅ¡Äa presledkov.",
    reqChkByNode: "NiÄ niste izbrali.",
    requiredChk: "To polje je obvezno",
    reqChkByName: "Prosim, izberite {label}.",
    match: "To polje se mora ujemati z poljem {matchName}",
    startDate: "datum zaÄetka",
    endDate: "datum konca",
    currentDate: "trenuten datum",
    afterDate: "Datum bi moral biti isti ali po {label}.",
    beforeDate: "Datum bi moral biti isti ali pred {label}.",
    startMonth: "Prosim, vnesite zaÄetni datum",
    sameMonth: "Ta dva datuma morata biti v istem mesecu - premeniti morate eno ali drugo.",
    creditcard: "Å tevilka kreditne kartice ni pravilna. Preverite Å¡tevilko ali poskusite Å¡e enkrat. VneÅ¡enih {length} znakov."
});
Locale.define("sv-SE", "Date", {
    months: ["januari", "februari", "mars", "april", "maj", "juni", "juli", "augusti", "september", "oktober", "november", "december"],
    months_abbr: ["jan", "feb", "mar", "apr", "maj", "jun", "jul", "aug", "sep", "okt", "nov", "dec"],
    days: ["sÃ¶ndag", "mÃ¥ndag", "tisdag", "onsdag", "torsdag", "fredag", "lÃ¶rdag"],
    days_abbr: ["sÃ¶n", "mÃ¥n", "tis", "ons", "tor", "fre", "lÃ¶r"],
    dateOrder: ["year", "month", "date"],
    shortDate: "%Y-%m-%d",
    shortTime: "%H:%M",
    AM: "",
    PM: "",
    firstDayOfWeek: 1,
    ordinal: "",
    lessThanMinuteAgo: "mindre Ã¤n en minut sedan",
    minuteAgo: "ungefÃ¤r en minut sedan",
    minutesAgo: "{delta} minuter sedan",
    hourAgo: "ungefÃ¤r en timme sedan",
    hoursAgo: "ungefÃ¤r {delta} timmar sedan",
    dayAgo: "1 dag sedan",
    daysAgo: "{delta} dagar sedan",
    lessThanMinuteUntil: "mindre Ã¤n en minut sedan",
    minuteUntil: "ungefÃ¤r en minut sedan",
    minutesUntil: "{delta} minuter sedan",
    hourUntil: "ungefÃ¤r en timme sedan",
    hoursUntil: "ungefÃ¤r {delta} timmar sedan",
    dayUntil: "1 dag sedan",
    daysUntil: "{delta} dagar sedan"
});
Locale.define("sv-SE", "FormValidator", {
    required: "FÃ¤ltet Ã¤r obligatoriskt.",
    minLength: "Ange minst {minLength} tecken (du angav {length} tecken).",
    maxLength: "Ange hÃ¶gst {maxLength} tecken (du angav {length} tecken). ",
    integer: "Ange ett heltal i fÃ¤ltet. Tal med decimaler (t.ex. 1,25) Ã¤r inte tillÃ¥tna.",
    numeric: 'Ange endast numeriska vÃ¤rden i detta fÃ¤lt (t.ex. "1" eller "1.1" eller "-1" eller "-1,1").',
    digits: "AnvÃ¤nd endast siffror och skiljetecken i detta fÃ¤lt (till exempel ett telefonnummer med bindestreck tillÃ¥tet).",
    alpha: "AnvÃ¤nd endast bokstÃ¤ver (a-Ã¶) i detta fÃ¤lt. Inga mellanslag eller andra tecken Ã¤r tillÃ¥tna.",
    alphanum: "AnvÃ¤nd endast bokstÃ¤ver (a-Ã¶) och siffror (0-9) i detta fÃ¤lt. Inga mellanslag eller andra tecken Ã¤r tillÃ¥tna.",
    dateSuchAs: "Ange ett giltigt datum som t.ex. {date}",
    dateInFormatMDY: 'Ange ett giltigt datum som t.ex. YYYY-MM-DD (i.e. "1999-12-31")',
    email: 'Ange en giltig e-postadress. Till exempel "erik@domain.com".',
    url: "Ange en giltig webbadress som http://www.example.com.",
    currencyDollar: "Ange en giltig belopp. Exempelvis 100,00.",
    oneRequired: "VÃ¤nligen ange minst ett av dessa alternativ.",
    errorPrefix: "Fel: ",
    warningPrefix: "Varning: ",
    noSpace: "Det fÃ¥r inte finnas nÃ¥gra mellanslag i detta fÃ¤lt.",
    reqChkByNode: "Inga objekt Ã¤r valda.",
    requiredChk: "Detta Ã¤r ett obligatoriskt fÃ¤lt.",
    reqChkByName: "VÃ¤lj en {label}.",
    match: "Detta fÃ¤lt mÃ¥ste matcha {matchName}",
    startDate: "startdatumet",
    endDate: "slutdatum",
    currentDate: "dagens datum",
    afterDate: "Datumet bÃ¶r vara samma eller senare Ã¤n {label}.",
    beforeDate: "Datumet bÃ¶r vara samma eller tidigare Ã¤n {label}.",
    startMonth: "VÃ¤lj en start mÃ¥nad",
    sameMonth: "Dessa tvÃ¥ datum mÃ¥ste vara i samma mÃ¥nad - du mÃ¥ste Ã¤ndra det ena eller det andra."
});
Locale.define("sv-SE", "Number", {
    currency: {
        prefix: "SEK "
    }
}).inherit("EU", "Number");
Locale.define("tr-TR", "Date", {
    months: ["Ocak", "Åžubat", "Mart", "Nisan", "MayÄ±s", "Haziran", "Temmuz", "AÄŸustos", "EylÃ¼l", "Ekim", "KasÄ±m", "AralÄ±k"],
    months_abbr: ["Oca", "Åžub", "Mar", "Nis", "May", "Haz", "Tem", "AÄŸu", "Eyl", "Eki", "Kas", "Ara"],
    days: ["Pazar", "Pazartesi", "SalÄ±", "Ã‡arÅŸamba", "PerÅŸembe", "Cuma", "Cumartesi"],
    days_abbr: ["Pa", "Pzt", "Sa", "Ã‡a", "Pe", "Cu", "Cmt"],
    dateOrder: ["date", "month", "year"],
    shortDate: "%d/%m/%Y",
    shortTime: "%H.%M",
    AM: "AM",
    PM: "PM",
    firstDayOfWeek: 1,
    ordinal: "",
    lessThanMinuteAgo: "bir dakikadan Ã¶nce",
    minuteAgo: "yaklaÅŸÄ±k bir dakika Ã¶nce",
    minutesAgo: "{delta} dakika Ã¶nce",
    hourAgo: "bir saat kadar Ã¶nce",
    hoursAgo: "{delta} saat kadar Ã¶nce",
    dayAgo: "bir gÃ¼n Ã¶nce",
    daysAgo: "{delta} gÃ¼n Ã¶nce",
    weekAgo: "bir hafta Ã¶nce",
    weeksAgo: "{delta} hafta Ã¶nce",
    monthAgo: "bir ay Ã¶nce",
    monthsAgo: "{delta} ay Ã¶nce",
    yearAgo: "bir yÄ±l Ã¶nce",
    yearsAgo: "{delta} yÄ±l Ã¶nce",
    lessThanMinuteUntil: "bir dakikadan az sonra",
    minuteUntil: "bir dakika kadar sonra",
    minutesUntil: "{delta} dakika sonra",
    hourUntil: "bir saat kadar sonra",
    hoursUntil: "{delta} saat kadar sonra",
    dayUntil: "bir gÃ¼n sonra",
    daysUntil: "{delta} gÃ¼n sonra",
    weekUntil: "bir hafta sonra",
    weeksUntil: "{delta} hafta sonra",
    monthUntil: "bir ay sonra",
    monthsUntil: "{delta} ay sonra",
    yearUntil: "bir yÄ±l sonra",
    yearsUntil: "{delta} yÄ±l sonra"
});
Locale.define("tr-TR", "FormValidator", {
    required: "Bu alan zorunlu.",
    minLength: "LÃ¼tfen en az {minLength} karakter girin (siz {length} karakter girdiniz).",
    maxLength: "LÃ¼tfen en fazla {maxLength} karakter girin (siz {length} karakter girdiniz).",
    integer: "LÃ¼tfen bu alana sadece tamsayÄ± girin. OndalÄ±klÄ± sayÄ±lar (Ã¶r: 1.25) kullanÄ±lamaz.",
    numeric: 'LÃ¼tfen bu alana sadece sayÄ±sal deÄŸer girin (Ã¶r: "1", "1.1", "-1" ya da "-1.1").',
    digits: "LÃ¼tfen bu alana sadece sayÄ±sal deÄŸer ve noktalama iÅŸareti girin (Ã¶rneÄŸin, nokta ve tire iÃ§eren bir telefon numarasÄ± kullanÄ±labilir).",
    alpha: "LÃ¼tfen bu alanda yalnÄ±zca harf kullanÄ±n. BoÅŸluk ve diÄŸer karakterler kullanÄ±lamaz.",
    alphanum: "LÃ¼tfen bu alanda sadece harf ve rakam kullanÄ±n. BoÅŸluk ve diÄŸer karakterler kullanÄ±lamaz.",
    dateSuchAs: "LÃ¼tfen geÃ§erli bir tarih girin (Ã–r: {date})",
    dateInFormatMDY: 'LÃ¼tfen geÃ§erli bir tarih girin (GG/AA/YYYY, Ã¶r: "31/12/1999")',
    email: 'LÃ¼tfen geÃ§erli bir email adresi girin. Ã–r: "kemal@etikan.com".',
    url: "LÃ¼tfen geÃ§erli bir URL girin. Ã–r: http://www.example.com.",
    currencyDollar: "LÃ¼tfen geÃ§erli bir TL miktarÄ± girin. Ã–r: 100,00 TL .",
    oneRequired: "LÃ¼tfen en az bir tanesini doldurun.",
    errorPrefix: "Hata: ",
    warningPrefix: "UyarÄ±: ",
    noSpace: "Bu alanda boÅŸluk kullanÄ±lamaz.",
    reqChkByNode: "HiÃ§bir Ã¶ÄŸe seÃ§ilmemiÅŸ.",
    requiredChk: "Bu alan zorunlu.",
    reqChkByName: "LÃ¼tfen bir {label} girin.",
    match: "Bu alan, {matchName} alanÄ±yla uyuÅŸmalÄ±",
    startDate: "baÅŸlangÄ±Ã§ tarihi",
    endDate: "bitiÅŸ tarihi",
    currentDate: "bugÃ¼nÃ¼n tarihi",
    afterDate: "Tarih, {label} tarihiyle aynÄ± gÃ¼n ya da ondan sonra olmalÄ±dÄ±r.",
    beforeDate: "Tarih, {label} tarihiyle aynÄ± gÃ¼n ya da ondan Ã¶nce olmalÄ±dÄ±r.",
    startMonth: "LÃ¼tfen bir baÅŸlangÄ±Ã§ ayÄ± seÃ§in",
    sameMonth: "Bu iki tarih aynÄ± ayda olmalÄ± - bir tanesini deÄŸiÅŸtirmeniz gerekiyor.",
    creditcard: "GirdiÄŸiniz kredi kartÄ± numarasÄ± geÃ§ersiz. LÃ¼tfen kontrol edip tekrar deneyin. {length} hane girildi."
});
Locale.define("tr-TR", "Number", {
    currency: {
        decimals: 0,
        suffix: " TL"
    }
}).inherit("EU", "Number");
(function() {
    var a = function(m, e, c, k, b) {
        var h = (m / 10).toInt(),
            g = m % 10,
            f = (m / 100).toInt();
        if (h == 1 && m > 10) {
            return k
        }
        if (g == 1) {
            return e
        }
        if (g > 0 && g < 5) {
            return c
        }
        return k
    };
    Locale.define("uk-UA", "Date", {
        months: ["Ð¡Ñ–Ñ‡ÐµÐ½ÑŒ", "Ð›ÑŽÑ‚Ð¸Ð¹", "Ð‘ÐµÑ€ÐµÐ·ÐµÐ½ÑŒ", "ÐšÐ²Ñ–Ñ‚ÐµÐ½ÑŒ", "Ð¢Ñ€Ð°Ð²ÐµÐ½ÑŒ", "Ð§ÐµÑ€Ð²ÐµÐ½ÑŒ", "Ð›Ð¸Ð¿ÐµÐ½ÑŒ", "Ð¡ÐµÑ€Ð¿ÐµÐ½ÑŒ", "Ð’ÐµÑ€ÐµÑÐµÐ½ÑŒ", "Ð–Ð¾Ð²Ñ‚ÐµÐ½ÑŒ", "Ð›Ð¸ÑÑ‚Ð¾Ð¿Ð°Ð´", "Ð“Ñ€ÑƒÐ´ÐµÐ½ÑŒ"],
        months_abbr: ["Ð¡Ñ–Ñ‡", "Ð›ÑŽÑ‚", "Ð‘ÐµÑ€", "ÐšÐ²Ñ–Ñ‚", "Ð¢Ñ€Ð°Ð²", "Ð§ÐµÑ€Ð²", "Ð›Ð¸Ð¿", "Ð¡ÐµÑ€Ð¿", "Ð’ÐµÑ€", "Ð–Ð¾Ð²Ñ‚", "Ð›Ð¸ÑÑ‚", "Ð“Ñ€ÑƒÐ´"],
        days: ["ÐÐµÐ´Ñ–Ð»Ñ", "ÐŸÐ¾Ð½ÐµÐ´Ñ–Ð»Ð¾Ðº", "Ð’Ñ–Ð²Ñ‚Ð¾Ñ€Ð¾Ðº", "Ð¡ÐµÑ€ÐµÐ´Ð°", "Ð§ÐµÑ‚Ð²ÐµÑ€", "ÐŸ'ÑÑ‚Ð½Ð¸Ñ†Ñ", "Ð¡ÑƒÐ±Ð¾Ñ‚Ð°"],
        days_abbr: ["ÐÐ´", "ÐŸÐ½", "Ð’Ñ‚", "Ð¡Ñ€", "Ð§Ñ‚", "ÐŸÑ‚", "Ð¡Ð±"],
        dateOrder: ["date", "month", "year"],
        shortDate: "%d/%m/%Y",
        shortTime: "%H:%M",
        AM: "Ð´Ð¾ Ð¿Ð¾Ð»ÑƒÐ´Ð½Ñ",
        PM: "Ð¿Ð¾ Ð¿Ð¾Ð»ÑƒÐ´Ð½ÑŽ",
        firstDayOfWeek: 1,
        ordinal: "",
        lessThanMinuteAgo: "Ð¼ÐµÐ½ÑŒÑˆÐµ Ñ…Ð²Ð¸Ð»Ð¸Ð½Ð¸ Ñ‚Ð¾Ð¼Ñƒ",
        minuteAgo: "Ñ…Ð²Ð¸Ð»Ð¸Ð½Ñƒ Ñ‚Ð¾Ð¼Ñƒ",
        minutesAgo: function(b) {
            return "{delta} " + a(b, "Ñ…Ð²Ð¸Ð»Ð¸Ð½Ñƒ", "Ñ…Ð²Ð¸Ð»Ð¸Ð½Ð¸", "Ñ…Ð²Ð¸Ð»Ð¸Ð½") + " Ñ‚Ð¾Ð¼Ñƒ"
        },
        hourAgo: "Ð³Ð¾Ð´Ð¸Ð½Ñƒ Ñ‚Ð¾Ð¼Ñƒ",
        hoursAgo: function(b) {
            return "{delta} " + a(b, "Ð³Ð¾Ð´Ð¸Ð½Ñƒ", "Ð³Ð¾Ð´Ð¸Ð½Ð¸", "Ð³Ð¾Ð´Ð¸Ð½") + " Ñ‚Ð¾Ð¼Ñƒ"
        },
        dayAgo: "Ð²Ñ‡Ð¾Ñ€Ð°",
        daysAgo: function(b) {
            return "{delta} " + a(b, "Ð´ÐµÐ½ÑŒ", "Ð´Ð½Ñ", "Ð´Ð½Ñ–Ð²") + " Ñ‚Ð¾Ð¼Ñƒ"
        },
        weekAgo: "Ñ‚Ð¸Ð¶Ð´ÐµÐ½ÑŒ Ñ‚Ð¾Ð¼Ñƒ",
        weeksAgo: function(b) {
            return "{delta} " + a(b, "Ñ‚Ð¸Ð¶Ð´ÐµÐ½ÑŒ", "Ñ‚Ð¸Ð¶Ð½Ñ–", "Ñ‚Ð¸Ð¶Ð½Ñ–Ð²") + " Ñ‚Ð¾Ð¼Ñƒ"
        },
        monthAgo: "Ð¼Ñ–ÑÑÑ†ÑŒ Ñ‚Ð¾Ð¼Ñƒ",
        monthsAgo: function(b) {
            return "{delta} " + a(b, "Ð¼Ñ–ÑÑÑ†ÑŒ", "Ð¼Ñ–ÑÑÑ†Ñ–", "Ð¼Ñ–ÑÑÑ†Ñ–Ð²") + " Ñ‚Ð¾Ð¼Ñƒ"
        },
        yearAgo: "Ñ€Ñ–Ðº Ñ‚Ð¾Ð¼Ñƒ",
        yearsAgo: function(b) {
            return "{delta} " + a(b, "Ñ€Ñ–Ðº", "Ñ€Ð¾ÐºÐ¸", "Ñ€Ð¾ÐºÑ–Ð²") + " Ñ‚Ð¾Ð¼Ñƒ"
        },
        lessThanMinuteUntil: "Ð·Ð° Ð¼Ð¸Ñ‚ÑŒ",
        minuteUntil: "Ñ‡ÐµÑ€ÐµÐ· Ñ…Ð²Ð¸Ð»Ð¸Ð½Ñƒ",
        minutesUntil: function(b) {
            return "Ñ‡ÐµÑ€ÐµÐ· {delta} " + a(b, "Ñ…Ð²Ð¸Ð»Ð¸Ð½Ñƒ", "Ñ…Ð²Ð¸Ð»Ð¸Ð½Ð¸", "Ñ…Ð²Ð¸Ð»Ð¸Ð½")
        },
        hourUntil: "Ñ‡ÐµÑ€ÐµÐ· Ð³Ð¾Ð´Ð¸Ð½Ñƒ",
        hoursUntil: function(b) {
            return "Ñ‡ÐµÑ€ÐµÐ· {delta} " + a(b, "Ð³Ð¾Ð´Ð¸Ð½Ñƒ", "Ð³Ð¾Ð´Ð¸Ð½Ð¸", "Ð³Ð¾Ð´Ð¸Ð½")
        },
        dayUntil: "Ð·Ð°Ð²Ñ‚Ñ€Ð°",
        daysUntil: function(b) {
            return "Ñ‡ÐµÑ€ÐµÐ· {delta} " + a(b, "Ð´ÐµÐ½ÑŒ", "Ð´Ð½Ñ", "Ð´Ð½Ñ–Ð²")
        },
        weekUntil: "Ñ‡ÐµÑ€ÐµÐ· Ñ‚Ð¸Ð¶Ð´ÐµÐ½ÑŒ",
        weeksUntil: function(b) {
            return "Ñ‡ÐµÑ€ÐµÐ· {delta} " + a(b, "Ñ‚Ð¸Ð¶Ð´ÐµÐ½ÑŒ", "Ñ‚Ð¸Ð¶Ð½Ñ–", "Ñ‚Ð¸Ð¶Ð½Ñ–Ð²")
        },
        monthUntil: "Ñ‡ÐµÑ€ÐµÐ· Ð¼Ñ–ÑÑÑ†ÑŒ",
        monthesUntil: function(b) {
            return "Ñ‡ÐµÑ€ÐµÐ· {delta} " + a(b, "Ð¼Ñ–ÑÑÑ†ÑŒ", "Ð¼Ñ–ÑÑÑ†Ñ–", "Ð¼Ñ–ÑÑÑ†Ñ–Ð²")
        },
        yearUntil: "Ñ‡ÐµÑ€ÐµÐ· Ñ€Ñ–Ðº",
        yearsUntil: function(b) {
            return "Ñ‡ÐµÑ€ÐµÐ· {delta} " + a(b, "Ñ€Ñ–Ðº", "Ñ€Ð¾ÐºÐ¸", "Ñ€Ð¾ÐºÑ–Ð²")
        }
    })
})();
Locale.define("uk-UA", "FormValidator", {
    required: "Ð¦Ðµ Ð¿Ð¾Ð»Ðµ Ð¿Ð¾Ð²Ð¸Ð½Ð½Ðµ Ð±ÑƒÑ‚Ð¸ Ð·Ð°Ð¿Ð¾Ð²Ð½ÐµÐ½Ð¸Ð¼.",
    minLength: "Ð’Ð²ÐµÐ´Ñ–Ñ‚ÑŒ Ñ…Ð¾Ñ‡Ð° Ð± {minLength} ÑÐ¸Ð¼Ð²Ð¾Ð»Ñ–Ð² (Ð’Ð¸ Ð²Ð²ÐµÐ»Ð¸ {length}).",
    maxLength: "ÐšÑ–Ð»ÑŒÐºÑ–ÑÑ‚ÑŒ ÑÐ¸Ð¼Ð²Ð¾Ð»Ñ–Ð² Ð½Ðµ Ð¼Ð¾Ð¶Ðµ Ð±ÑƒÑ‚Ð¸ Ð±Ñ–Ð»ÑŒÑˆÐµ {maxLength} (Ð’Ð¸ Ð²Ð²ÐµÐ»Ð¸ {length}).",
    integer: "Ð’Ð²ÐµÐ´Ñ–Ñ‚ÑŒ Ð² Ñ†Ðµ Ð¿Ð¾Ð»Ðµ Ñ‡Ð¸ÑÐ»Ð¾. Ð”Ñ€Ð¾Ð±Ð¾Ð²Ñ– Ñ‡Ð¸ÑÐ»Ð° (Ð½Ð°Ð¿Ñ€Ð¸ÐºÐ»Ð°Ð´ 1.25) Ð½Ðµ Ð´Ð¾Ð·Ð²Ð¾Ð»ÐµÐ½Ñ–.",
    numeric: 'Ð’Ð²ÐµÐ´Ñ–Ñ‚ÑŒ Ð² Ñ†Ðµ Ð¿Ð¾Ð»Ðµ Ñ‡Ð¸ÑÐ»Ð¾ (Ð½Ð°Ð¿Ñ€Ð¸ÐºÐ»Ð°Ð´ "1" Ð°Ð±Ð¾ "1.1", Ð°Ð±Ð¾ "-1", Ð°Ð±Ð¾ "-1.1").',
    digits: "Ð’ Ñ†ÑŒÐ¾Ð¼Ñƒ Ð¿Ð¾Ð»Ñ– Ð²Ð¸ Ð¼Ð¾Ð¶ÐµÑ‚Ðµ Ð²Ð¸ÐºÐ¾Ñ€Ð¸ÑÑ‚Ð¾Ð²ÑƒÐ²Ð°Ñ‚Ð¸ Ð»Ð¸ÑˆÐµ Ñ†Ð¸Ñ„Ñ€Ð¸ Ñ– Ð·Ð½Ð°ÐºÐ¸ Ð¿ÑƒÐ½ÐºÑ‚Ñ–Ð°Ñ†Ñ–Ñ— (Ð½Ð°Ð¿Ñ€Ð¸ÐºÐ»Ð°Ð´, Ñ‚ÐµÐ»ÐµÑ„Ð¾Ð½Ð½Ð¸Ð¹ Ð½Ð¾Ð¼ÐµÑ€ Ð· Ð·Ð½Ð°ÐºÐ°Ð¼Ð¸ Ð´ÐµÑ„Ñ–Ð·Ñƒ Ð°Ð±Ð¾ Ð· ÐºÑ€Ð°Ð¿ÐºÐ°Ð¼Ð¸).",
    alpha: "Ð’ Ñ†ÑŒÐ¾Ð¼Ñƒ Ð¿Ð¾Ð»Ñ– Ð¼Ð¾Ð¶Ð½Ð° Ð²Ð¸ÐºÐ¾Ñ€Ð¸ÑÑ‚Ð¾Ð²ÑƒÐ²Ð°Ñ‚Ð¸ Ð»Ð¸ÑˆÐµ Ð»Ð°Ñ‚Ð¸Ð½ÑÑŒÐºÑ– Ð»Ñ–Ñ‚ÐµÑ€Ð¸ (a-z). ÐŸÑ€Ð¾Ð±Ñ–Ð»Ð¸ Ñ– Ñ–Ð½ÑˆÑ– ÑÐ¸Ð¼Ð²Ð¾Ð»Ð¸ Ð·Ð°Ð±Ð¾Ñ€Ð¾Ð½ÐµÐ½Ñ–.",
    alphanum: "Ð’ Ñ†ÑŒÐ¾Ð¼Ñƒ Ð¿Ð¾Ð»Ñ– Ð¼Ð¾Ð¶Ð½Ð° Ð²Ð¸ÐºÐ¾Ñ€Ð¸ÑÑ‚Ð¾Ð²ÑƒÐ²Ð°Ñ‚Ð¸ Ð»Ð¸ÑˆÐµ Ð»Ð°Ñ‚Ð¸Ð½ÑÑŒÐºÑ– Ð»Ñ–Ñ‚ÐµÑ€Ð¸ (a-z) Ñ– Ñ†Ð¸Ñ„Ñ€Ð¸ (0-9). ÐŸÑ€Ð¾Ð±Ñ–Ð»Ð¸ Ñ– Ñ–Ð½ÑˆÑ– ÑÐ¸Ð¼Ð²Ð¾Ð»Ð¸ Ð·Ð°Ð±Ð¾Ñ€Ð¾Ð½ÐµÐ½Ñ–.",
    dateSuchAs: "Ð’Ð²ÐµÐ´Ñ–Ñ‚ÑŒ ÐºÐ¾Ñ€ÐµÐºÑ‚Ð½Ñƒ Ð´Ð°Ñ‚Ñƒ {date}.",
    dateInFormatMDY: 'Ð’Ð²ÐµÐ´Ñ–Ñ‚ÑŒ Ð´Ð°Ñ‚Ñƒ Ð² Ñ„Ð¾Ñ€Ð¼Ð°Ñ‚Ñ– ÐœÐœ/Ð”Ð”/Ð Ð Ð Ð  (Ð½Ð°Ð¿Ñ€Ð¸ÐºÐ»Ð°Ð´ "12/31/2009").',
    email: 'Ð’Ð²ÐµÐ´Ñ–Ñ‚ÑŒ ÐºÐ¾Ñ€ÐµÐºÑ‚Ð½Ñƒ Ð°Ð´Ñ€ÐµÑÑƒ ÐµÐ»ÐµÐºÑ‚Ñ€Ð¾Ð½Ð½Ð¾Ñ— Ð¿Ð¾ÑˆÑ‚Ð¸ (Ð½Ð°Ð¿Ñ€Ð¸ÐºÐ»Ð°Ð´ "name@domain.com").',
    url: "Ð’Ð²ÐµÐ´Ñ–Ñ‚ÑŒ ÐºÐ¾Ñ€ÐµÐºÑ‚Ð½Ðµ Ñ–Ð½Ñ‚ÐµÑ€Ð½ÐµÑ‚-Ð¿Ð¾ÑÐ¸Ð»Ð°Ð½Ð½Ñ (Ð½Ð°Ð¿Ñ€Ð¸ÐºÐ»Ð°Ð´ http://www.example.com).",
    currencyDollar: 'Ð’Ð²ÐµÐ´Ñ–Ñ‚ÑŒ ÑÑƒÐ¼Ñƒ Ð² Ð´Ð¾Ð»Ð°Ñ€Ð°Ñ… (Ð½Ð°Ð¿Ñ€Ð¸ÐºÐ»Ð°Ð´ "$100.00").',
    oneRequired: "Ð—Ð°Ð¿Ð¾Ð²Ð½Ñ–Ñ‚ÑŒ Ð¾Ð´Ð½Ðµ Ð· Ð¿Ð¾Ð»Ñ–Ð².",
    errorPrefix: "ÐŸÐ¾Ð¼Ð¸Ð»ÐºÐ°: ",
    warningPrefix: "Ð£Ð²Ð°Ð³Ð°: ",
    noSpace: "ÐŸÑ€Ð¾Ð±Ñ–Ð»Ð¸ Ð·Ð°Ð±Ð¾Ñ€Ð¾Ð½ÐµÐ½Ñ–.",
    reqChkByNode: "ÐÐµ Ð²Ñ–Ð´Ð¼Ñ–Ñ‡ÐµÐ½Ð¾ Ð¶Ð¾Ð´Ð½Ð¾Ð³Ð¾ Ð²Ð°Ñ€Ñ–Ð°Ð½Ñ‚Ñƒ.",
    requiredChk: "Ð¦Ðµ Ð¿Ð¾Ð»Ðµ Ð¿Ð¾Ð²Ð¸Ð½Ð½Ðµ Ð±ÑƒÑ‚Ð¸ Ð²Ñ–Ð¼Ñ–Ñ‡ÐµÐ½Ð¸Ð¼.",
    reqChkByName: "Ð‘ÑƒÐ´ÑŒ Ð»Ð°ÑÐºÐ°, Ð²Ñ–Ð´Ð¼Ñ–Ñ‚ÑŒÑ‚Ðµ {label}.",
    match: "Ð¦Ðµ Ð¿Ð¾Ð»Ðµ Ð¿Ð¾Ð²Ð¸Ð½Ð½Ð¾ Ð²Ñ–Ð´Ð¿Ð¾Ð²Ñ–Ð´Ð°Ñ‚Ð¸ {matchName}",
    startDate: "Ð¿Ð¾Ñ‡Ð°Ñ‚ÐºÐ¾Ð²Ð° Ð´Ð°Ñ‚Ð°",
    endDate: "ÐºÑ–Ð½Ñ†ÐµÐ²Ð° Ð´Ð°Ñ‚Ð°",
    currentDate: "ÑÑŒÐ¾Ð³Ð¾Ð´Ð½Ñ–ÑˆÐ½Ñ Ð´Ð°Ñ‚Ð°",
    afterDate: "Ð¦Ñ Ð´Ð°Ñ‚Ð° Ð¿Ð¾Ð²Ð¸Ð½Ð½Ð° Ð±ÑƒÑ‚Ð¸ Ñ‚Ð°ÐºÐ¾ÑŽ Ð¶, Ð°Ð±Ð¾ Ð¿Ñ–Ð·Ð½Ñ–ÑˆÐ¾ÑŽ Ð·Ð° {label}.",
    beforeDate: "Ð¦Ñ Ð´Ð°Ñ‚Ð° Ð¿Ð¾Ð²Ð¸Ð½Ð½Ð° Ð±ÑƒÑ‚Ð¸ Ñ‚Ð°ÐºÐ¾ÑŽ Ð¶, Ð°Ð±Ð¾ Ñ€Ð°Ð½Ñ–ÑˆÐ¾ÑŽ Ð·Ð° {label}.",
    startMonth: "Ð‘ÑƒÐ´ÑŒ Ð»Ð°ÑÐºÐ°, Ð²Ð¸Ð±ÐµÑ€Ñ–Ñ‚ÑŒ Ð¿Ð¾Ñ‡Ð°Ñ‚ÐºÐ¾Ð²Ð¸Ð¹ Ð¼Ñ–ÑÑÑ†ÑŒ",
    sameMonth: "Ð¦Ñ– Ð´Ð°Ñ‚Ð¸ Ð¿Ð¾Ð²Ð¸Ð½Ð½Ñ– Ð²Ñ–Ð´Ð½Ð¾ÑÐ¸Ñ‚Ð¸ÑÑŒ Ð¾Ð´Ð½Ð¾Ð³Ð¾ Ñ– Ñ‚Ð¾Ð³Ð¾ Ð¶ Ð¼Ñ–ÑÑÑ†Ñ. Ð‘ÑƒÐ´ÑŒ Ð»Ð°ÑÐºÐ°, Ð·Ð¼Ñ–Ð½Ñ–Ñ‚ÑŒ Ð¾Ð´Ð½Ñƒ Ð· Ð½Ð¸Ñ….",
    creditcard: "ÐÐ¾Ð¼ÐµÑ€ ÐºÑ€ÐµÐ´Ð¸Ñ‚Ð½Ð¾Ñ— ÐºÐ°Ñ€Ñ‚Ð¸ Ð²Ð²ÐµÐ´ÐµÐ½Ð¸Ð¹ Ð½ÐµÐ¿Ñ€Ð°Ð²Ð¸Ð»ÑŒÐ½Ð¾. Ð‘ÑƒÐ´ÑŒ Ð»Ð°ÑÐºÐ°, Ð¿ÐµÑ€ÐµÐ²Ñ–Ñ€Ñ‚Ðµ Ð¹Ð¾Ð³Ð¾. Ð’Ð²ÐµÐ´ÐµÐ½Ð¾ {length} ÑÐ¸Ð¼Ð²Ð¾Ð»Ñ–Ð²."
});
Locale.define("zh-CHS", "Date", {
    months: ["ä¸€æœˆ", "äºŒæœˆ", "ä¸‰æœˆ", "å››æœˆ", "äº”æœˆ", "å…­æœˆ", "ä¸ƒæœˆ", "å…«æœˆ", "ä¹æœˆ", "åæœˆ", "åä¸€æœˆ", "åäºŒæœˆ"],
    months_abbr: ["ä¸€", "äºŒ", "ä¸‰", "å››", "äº”", "å…­", "ä¸ƒ", "å…«", "ä¹", "å", "åä¸€", "åäºŒ"],
    days: ["æ˜ŸæœŸæ—¥", "æ˜ŸæœŸä¸€", "æ˜ŸæœŸäºŒ", "æ˜ŸæœŸä¸‰", "æ˜ŸæœŸå››", "æ˜ŸæœŸäº”", "æ˜ŸæœŸå…­"],
    days_abbr: ["æ—¥", "ä¸€", "äºŒ", "ä¸‰", "å››", "äº”", "å…­"],
    dateOrder: ["year", "month", "date"],
    shortDate: "%Y-%m-%d",
    shortTime: "%I:%M%p",
    AM: "AM",
    PM: "PM",
    firstDayOfWeek: 1,
    ordinal: "",
    lessThanMinuteAgo: "ä¸åˆ°1åˆ†é’Ÿå‰",
    minuteAgo: "å¤§çº¦1åˆ†é’Ÿå‰",
    minutesAgo: "{delta}åˆ†é’Ÿä¹‹å‰",
    hourAgo: "å¤§çº¦1å°æ—¶å‰",
    hoursAgo: "å¤§çº¦{delta}å°æ—¶å‰",
    dayAgo: "1å¤©å‰",
    daysAgo: "{delta}å¤©å‰",
    weekAgo: "1æ˜ŸæœŸå‰",
    weeksAgo: "{delta}æ˜ŸæœŸå‰",
    monthAgo: "1ä¸ªæœˆå‰",
    monthsAgo: "{delta}ä¸ªæœˆå‰",
    yearAgo: "1å¹´å‰",
    yearsAgo: "{delta}å¹´å‰",
    lessThanMinuteUntil: "ä»ŽçŽ°åœ¨å¼€å§‹ä¸åˆ°1åˆ†é’Ÿ",
    minuteUntil: "ä»ŽçŽ°åœ¨å¼€å§‹ç´„1åˆ†é’Ÿ",
    minutesUntil: "ä»ŽçŽ°åœ¨å¼€å§‹çº¦{delta}åˆ†é’Ÿ",
    hourUntil: "ä»ŽçŽ°åœ¨å¼€å§‹1å°æ—¶",
    hoursUntil: "ä»ŽçŽ°åœ¨å¼€å§‹çº¦{delta}å°æ—¶",
    dayUntil: "ä»ŽçŽ°åœ¨å¼€å§‹1å¤©",
    daysUntil: "ä»ŽçŽ°åœ¨å¼€å§‹{delta}å¤©",
    weekUntil: "ä»ŽçŽ°åœ¨å¼€å§‹1æ˜ŸæœŸ",
    weeksUntil: "ä»ŽçŽ°åœ¨å¼€å§‹{delta}æ˜ŸæœŸ",
    monthUntil: "ä»ŽçŽ°åœ¨å¼€å§‹ä¸€ä¸ªæœˆ",
    monthsUntil: "ä»ŽçŽ°åœ¨å¼€å§‹{delta}ä¸ªæœˆ",
    yearUntil: "ä»ŽçŽ°åœ¨å¼€å§‹1å¹´",
    yearsUntil: "ä»ŽçŽ°åœ¨å¼€å§‹{delta}å¹´"
});
Locale.define("zh-CHT", "Date", {
    months: ["ä¸€æœˆ", "äºŒæœˆ", "ä¸‰æœˆ", "å››æœˆ", "äº”æœˆ", "å…­æœˆ", "ä¸ƒæœˆ", "å…«æœˆ", "ä¹æœˆ", "åæœˆ", "åä¸€æœˆ", "åäºŒæœˆ"],
    months_abbr: ["ä¸€", "äºŒ", "ä¸‰", "å››", "äº”", "å…­", "ä¸ƒ", "å…«", "ä¹", "å", "åä¸€", "åäºŒ"],
    days: ["æ˜ŸæœŸæ—¥", "æ˜ŸæœŸä¸€", "æ˜ŸæœŸäºŒ", "æ˜ŸæœŸä¸‰", "æ˜ŸæœŸå››", "æ˜ŸæœŸäº”", "æ˜ŸæœŸå…­"],
    days_abbr: ["æ—¥", "ä¸€", "äºŒ", "ä¸‰", "å››", "äº”", "å…­"],
    dateOrder: ["year", "month", "date"],
    shortDate: "%Y-%m-%d",
    shortTime: "%I:%M%p",
    AM: "AM",
    PM: "PM",
    firstDayOfWeek: 1,
    ordinal: "",
    lessThanMinuteAgo: "ä¸åˆ°1åˆ†é˜å‰",
    minuteAgo: "å¤§ç´„1åˆ†é˜å‰",
    minutesAgo: "{delta}åˆ†é˜ä¹‹å‰",
    hourAgo: "å¤§ç´„1å°æ™‚å‰",
    hoursAgo: "å¤§ç´„{delta}å°æ™‚å‰",
    dayAgo: "1å¤©å‰",
    daysAgo: "{delta}å¤©å‰",
    weekAgo: "1æ˜ŸæœŸå‰",
    weeksAgo: "{delta}æ˜ŸæœŸå‰",
    monthAgo: "1ä¸ªæœˆå‰",
    monthsAgo: "{delta}ä¸ªæœˆå‰",
    yearAgo: "1å¹´å‰",
    yearsAgo: "{delta}å¹´å‰",
    lessThanMinuteUntil: "å¾žç¾åœ¨é–‹å§‹ä¸åˆ°1åˆ†é˜",
    minuteUntil: "å¾žç¾åœ¨é–‹å§‹ç´„1åˆ†é˜",
    minutesUntil: "å¾žç¾åœ¨é–‹å§‹ç´„{delta}åˆ†é˜",
    hourUntil: "å¾žç¾åœ¨é–‹å§‹1å°æ™‚",
    hoursUntil: "å¾žç¾åœ¨é–‹å§‹ç´„{delta}å°æ™‚",
    dayUntil: "å¾žç¾åœ¨é–‹å§‹1å¤©",
    daysUntil: "å¾žç¾åœ¨é–‹å§‹{delta}å¤©",
    weekUntil: "å¾žç¾åœ¨é–‹å§‹1æ˜ŸæœŸ",
    weeksUntil: "å¾žç¾åœ¨é–‹å§‹{delta}æ˜ŸæœŸ",
    monthUntil: "å¾žç¾åœ¨é–‹å§‹ä¸€å€‹æœˆ",
    monthsUntil: "å¾žç¾åœ¨é–‹å§‹{delta}å€‹æœˆ",
    yearUntil: "å¾žç¾åœ¨é–‹å§‹1å¹´",
    yearsUntil: "å¾žç¾åœ¨é–‹å§‹{delta}å¹´"
});
Locale.define("zh-CHS", "FormValidator", {
    required: "æ­¤é¡¹å¿…å¡«ã€‚",
    minLength: "è¯·è‡³å°‘è¾“å…¥ {minLength} ä¸ªå­—ç¬¦ (å·²è¾“å…¥ {length} ä¸ª)ã€‚",
    maxLength: "æœ€å¤šåªèƒ½è¾“å…¥ {maxLength} ä¸ªå­—ç¬¦ (å·²è¾“å…¥ {length} ä¸ª)ã€‚",
    integer: 'è¯·è¾“å…¥ä¸€ä¸ªæ•´æ•°ï¼Œä¸èƒ½åŒ…å«å°æ•°ç‚¹ã€‚ä¾‹å¦‚ï¼š"1", "200"ã€‚',
    numeric: 'è¯·è¾“å…¥ä¸€ä¸ªæ•°å­—ï¼Œä¾‹å¦‚ï¼š"1", "1.1", "-1", "-1.1"ã€‚',
    digits: "è¯·è¾“å…¥ç”±æ•°å­—å’Œæ ‡ç‚¹ç¬¦å·ç»„æˆçš„å†…å®¹ã€‚ä¾‹å¦‚ç”µè¯å·ç ã€‚",
    alpha: "è¯·è¾“å…¥ A-Z çš„ 26 ä¸ªå­—æ¯ï¼Œä¸èƒ½åŒ…å«ç©ºæ ¼æˆ–ä»»ä½•å…¶ä»–å­—ç¬¦ã€‚",
    alphanum: "è¯·è¾“å…¥ A-Z çš„ 26 ä¸ªå­—æ¯æˆ– 0-9 çš„ 10 ä¸ªæ•°å­—ï¼Œä¸èƒ½åŒ…å«ç©ºæ ¼æˆ–ä»»ä½•å…¶ä»–å­—ç¬¦ã€‚",
    dateSuchAs: "è¯·è¾“å…¥åˆæ³•çš„æ—¥æœŸæ ¼å¼ï¼Œå¦‚ï¼š{date}ã€‚",
    dateInFormatMDY: 'è¯·è¾“å…¥åˆæ³•çš„æ—¥æœŸæ ¼å¼ï¼Œä¾‹å¦‚ï¼šYYYY-MM-DD ("2010-12-31")ã€‚',
    email: 'è¯·è¾“å…¥åˆæ³•çš„ç”µå­ä¿¡ç®±åœ°å€ï¼Œä¾‹å¦‚ï¼š"fred@domain.com"ã€‚',
    url: "è¯·è¾“å…¥åˆæ³•çš„ Url åœ°å€ï¼Œä¾‹å¦‚ï¼šhttp://www.example.comã€‚",
    currencyDollar: "è¯·è¾“å…¥åˆæ³•çš„è´§å¸ç¬¦å·ï¼Œä¾‹å¦‚ï¼šï¿¥100.0",
    oneRequired: "è¯·è‡³å°‘é€‰æ‹©ä¸€é¡¹ã€‚",
    errorPrefix: "é”™è¯¯ï¼š",
    warningPrefix: "è­¦å‘Šï¼š",
    noSpace: "ä¸èƒ½åŒ…å«ç©ºæ ¼ã€‚",
    reqChkByNode: "æœªé€‰æ‹©ä»»ä½•å†…å®¹ã€‚",
    requiredChk: "æ­¤é¡¹å¿…å¡«ã€‚",
    reqChkByName: "è¯·é€‰æ‹© {label}.",
    match: "å¿…é¡»ä¸Ž{matchName}ç›¸åŒ¹é…",
    startDate: "èµ·å§‹æ—¥æœŸ",
    endDate: "ç»“æŸæ—¥æœŸ",
    currentDate: "å½“å‰æ—¥æœŸ",
    afterDate: "æ—¥æœŸå¿…é¡»ç­‰äºŽæˆ–æ™šäºŽ {label}.",
    beforeDate: "æ—¥æœŸå¿…é¡»æ—©äºŽæˆ–ç­‰äºŽ {label}.",
    startMonth: "è¯·é€‰æ‹©èµ·å§‹æœˆä»½",
    sameMonth: "æ‚¨å¿…é¡»ä¿®æ”¹ä¸¤ä¸ªæ—¥æœŸä¸­çš„ä¸€ä¸ªï¼Œä»¥ç¡®ä¿å®ƒä»¬åœ¨åŒä¸€æœˆä»½ã€‚",
    creditcard: "æ‚¨è¾“å…¥çš„ä¿¡ç”¨å¡å·ç ä¸æ­£ç¡®ã€‚å½“å‰å·²è¾“å…¥{length}ä¸ªå­—ç¬¦ã€‚"
});
Locale.define("zh-CHT", "FormValidator", {
    required: "æ­¤é …å¿…å¡«ã€‚ ",
    minLength: "è«‹è‡³å°‘è¼¸å…¥{minLength} å€‹å­—ç¬¦(å·²è¼¸å…¥{length} å€‹)ã€‚ ",
    maxLength: "æœ€å¤šåªèƒ½è¼¸å…¥{maxLength} å€‹å­—ç¬¦(å·²è¼¸å…¥{length} å€‹)ã€‚ ",
    integer: 'è«‹è¼¸å…¥ä¸€å€‹æ•´æ•¸ï¼Œä¸èƒ½åŒ…å«å°æ•¸é»žã€‚ä¾‹å¦‚ï¼š"1", "200"ã€‚ ',
    numeric: 'è«‹è¼¸å…¥ä¸€å€‹æ•¸å­—ï¼Œä¾‹å¦‚ï¼š"1", "1.1", "-1", "-1.1"ã€‚ ',
    digits: "è«‹è¼¸å…¥ç”±æ•¸å­—å’Œæ¨™é»žç¬¦è™Ÿçµ„æˆçš„å…§å®¹ã€‚ä¾‹å¦‚é›»è©±è™Ÿç¢¼ã€‚ ",
    alpha: "è«‹è¼¸å…¥AZ çš„26 å€‹å­—æ¯ï¼Œä¸èƒ½åŒ…å«ç©ºæ ¼æˆ–ä»»ä½•å…¶ä»–å­—ç¬¦ã€‚ ",
    alphanum: "è«‹è¼¸å…¥AZ çš„26 å€‹å­—æ¯æˆ–0-9 çš„10 å€‹æ•¸å­—ï¼Œä¸èƒ½åŒ…å«ç©ºæ ¼æˆ–ä»»ä½•å…¶ä»–å­—ç¬¦ã€‚ ",
    dateSuchAs: "è«‹è¼¸å…¥åˆæ³•çš„æ—¥æœŸæ ¼å¼ï¼Œå¦‚ï¼š{date}ã€‚ ",
    dateInFormatMDY: 'è«‹è¼¸å…¥åˆæ³•çš„æ—¥æœŸæ ¼å¼ï¼Œä¾‹å¦‚ï¼šYYYY-MM-DD ("2010-12-31")ã€‚ ',
    email: 'è«‹è¼¸å…¥åˆæ³•çš„é›»å­ä¿¡ç®±åœ°å€ï¼Œä¾‹å¦‚ï¼š"fred@domain.com"ã€‚ ',
    url: "è«‹è¼¸å…¥åˆæ³•çš„Url åœ°å€ï¼Œä¾‹å¦‚ï¼šhttp://www.example.comã€‚ ",
    currencyDollar: "è«‹è¼¸å…¥åˆæ³•çš„è²¨å¹£ç¬¦è™Ÿï¼Œä¾‹å¦‚ï¼šï¿¥100.0",
    oneRequired: "è«‹è‡³å°‘é¸æ“‡ä¸€é …ã€‚ ",
    errorPrefix: "éŒ¯èª¤ï¼š",
    warningPrefix: "è­¦å‘Šï¼š",
    noSpace: "ä¸èƒ½åŒ…å«ç©ºæ ¼ã€‚ ",
    reqChkByNode: "æœªé¸æ“‡ä»»ä½•å…§å®¹ã€‚ ",
    requiredChk: "æ­¤é …å¿…å¡«ã€‚ ",
    reqChkByName: "è«‹é¸æ“‡ {label}.",
    match: "å¿…é ˆèˆ‡{matchName}ç›¸åŒ¹é…",
    startDate: "èµ·å§‹æ—¥æœŸ",
    endDate: "çµæŸæ—¥æœŸ",
    currentDate: "ç•¶å‰æ—¥æœŸ",
    afterDate: "æ—¥æœŸå¿…é ˆç­‰æ–¼æˆ–æ™šæ–¼{label}.",
    beforeDate: "æ—¥æœŸå¿…é ˆæ—©æ–¼æˆ–ç­‰æ–¼{label}.",
    startMonth: "è«‹é¸æ“‡èµ·å§‹æœˆä»½",
    sameMonth: "æ‚¨å¿…é ˆä¿®æ”¹å…©å€‹æ—¥æœŸä¸­çš„ä¸€å€‹ï¼Œä»¥ç¢ºä¿å®ƒå€‘åœ¨åŒä¸€æœˆä»½ã€‚ ",
    creditcard: "æ‚¨è¼¸å…¥çš„ä¿¡ç”¨å¡è™Ÿç¢¼ä¸æ­£ç¢ºã€‚ç•¶å‰å·²è¼¸å…¥{length}å€‹å­—ç¬¦ã€‚ "
});
Form.Validator.add("validate-currency-yuan", {
    errorMsg: function() {
        return Form.Validator.getMsg("currencyYuan")
    },
    test: function(a) {
        return Form.Validator.getValidator("IsEmpty").test(a) || (/^ï¿¥?\-?([1-9]{1}[0-9]{0,2}(\,[0-9]{3})*(\.[0-9]{0,2})?|[1-9]{1}\d*(\.[0-9]{0,2})?|0(\.[0-9]{0,2})?|(\.[0-9]{1,2})?)$/).test(a.get("value"))
    }
});
Locale.define("zh-CHS", "Number", {
    currency: {
        prefix: "ï¿¥ "
    }
}).inherit("en-US", "Number");
Locale.define("zh-CHT").inherit("zh-CHS", "Number");
Request.JSONP = new Class({
    Implements: [Chain, Events, Options],
    options: {
        onRequest: function(a) {
            if (this.options.log && window.console && console.log) {
                console.log("JSONP retrieving script with url:" + a)
            }
        },
        onError: function(a) {
            if (this.options.log && window.console && console.warn) {
                console.warn("JSONP " + a + " will fail in Internet Explorer, which enforces a 2083 bytes length limit on URIs")
            }
        },
        url: "",
        callbackKey: "callback",
        injectScript: document.head,
        data: "",
        link: "ignore",
        timeout: 0,
        log: false
    },
    initialize: function(a) {
        this.setOptions(a)
    },
    send: function(c) {
        if (!Request.prototype.check.call(this, c)) {
            return this
        }
        this.running = true;
        var e = typeOf(c);
        if (e == "string" || e == "element") {
            c = {
                data: c
            }
        }
        c = Object.merge(this.options, c || {});
        var f = c.data;
        switch (typeOf(f)) {
            case "element":
                f = document.id(f).toQueryString();
                break;
            case "object":
            case "hash":
                f = Object.toQueryString(f)
        }
        var b = this.index = Request.JSONP.counter++,
            d = "request_" + b;
        var g = c.url + (c.url.test("\\?") ? "&" : "?") + (c.callbackKey) + "=Request.JSONP.request_map.request_" + b + (f ? "&" + f : "");
        if (g.length > 2083) {
            this.fireEvent("error", g)
        }
        Request.JSONP.request_map[d] = function() {
            delete Request.JSONP.request_map[d];
            this.success(arguments, b)
        }.bind(this);
        var a = this.getScript(g).inject(c.injectScript);
        this.fireEvent("request", [g, a]);
        if (c.timeout) {
            this.timeout.delay(c.timeout, this)
        }
        return this
    },
    getScript: function(a) {
        if (!this.script) {
            this.script = new Element("script", {
                type: "text/javascript",
                async: true,
                src: a
            })
        }
        return this.script
    },
    success: function(a) {
        if (!this.running) {
            return
        }
        this.clear().fireEvent("complete", a).fireEvent("success", a).callChain()
    },
    cancel: function() {
        if (this.running) {
            this.clear().fireEvent("cancel")
        }
        return this
    },
    isRunning: function() {
        return !!this.running
    },
    clear: function() {
        this.running = false;
        if (this.script) {
            this.script.destroy();
            this.script = null
        }
        return this
    },
    timeout: function() {
        if (this.running) {
            this.running = false;
            this.fireEvent("timeout", [this.script.get("src"), this.script]).fireEvent("failure").cancel()
        }
        return this
    }
});
Request.JSONP.counter = 0;
Request.JSONP.request_map = {};
Request.implement({
    options: {
        initialDelay: 5000,
        delay: 5000,
        limit: 60000
    },
    startTimer: function(b) {
        var a = function() {
            if (!this.running) {
                this.send({
                    data: b
                })
            }
        };
        this.lastDelay = this.options.initialDelay;
        this.timer = a.delay(this.lastDelay, this);
        this.completeCheck = function(c) {
            clearTimeout(this.timer);
            this.lastDelay = (c) ? this.options.delay : (this.lastDelay + this.options.delay).min(this.options.limit);
            this.timer = a.delay(this.lastDelay, this)
        };
        return this.addEvent("complete", this.completeCheck)
    },
    stopTimer: function() {
        clearTimeout(this.timer);
        return this.removeEvent("complete", this.completeCheck)
    }
});
Request.Queue = new Class({
    Implements: [Options, Events],
    Binds: ["attach", "request", "complete", "cancel", "success", "failure", "exception"],
    options: {
        stopOnFailure: true,
        autoAdvance: true,
        concurrent: 1,
        requests: {}
    },
    initialize: function(a) {
        var b;
        if (a) {
            b = a.requests;
            delete a.requests
        }
        this.setOptions(a);
        this.requests = {};
        this.queue = [];
        this.reqBinders = {};
        if (b) {
            this.addRequests(b)
        }
    },
    addRequest: function(a, b) {
        this.requests[a] = b;
        this.attach(a, b);
        return this
    },
    addRequests: function(a) {
        Object.each(a, function(c, b) {
            this.addRequest(b, c)
        }, this);
        return this
    },
    getName: function(a) {
        return Object.keyOf(this.requests, a)
    },
    attach: function(a, b) {
        if (b._groupSend) {
            return this
        }["request", "complete", "cancel", "success", "failure", "exception"].each(function(c) {
            if (!this.reqBinders[a]) {
                this.reqBinders[a] = {}
            }
            this.reqBinders[a][c] = function() {
                this["on" + c.capitalize()].apply(this, [a, b].append(arguments))
            }.bind(this);
            b.addEvent(c, this.reqBinders[a][c])
        }, this);
        b._groupSend = b.send;
        b.send = function(c) {
            this.send(a, c);
            return b
        }.bind(this);
        return this
    },
    removeRequest: function(b) {
        var a = typeOf(b) == "object" ? this.getName(b) : b;
        if (!a && typeOf(a) != "string") {
            return this
        }
        b = this.requests[a];
        if (!b) {
            return this
        }["request", "complete", "cancel", "success", "failure", "exception"].each(function(c) {
            b.removeEvent(c, this.reqBinders[a][c])
        }, this);
        b.send = b._groupSend;
        delete b._groupSend;
        return this
    },
    getRunning: function() {
        return Object.filter(this.requests, function(a) {
            return a.running
        })
    },
    isRunning: function() {
        return !!(Object.keys(this.getRunning()).length)
    },
    send: function(b, a) {
        var c = function() {
            this.requests[b]._groupSend(a);
            this.queue.erase(c)
        }.bind(this);
        c.name = b;
        if (Object.keys(this.getRunning()).length >= this.options.concurrent || (this.error && this.options.stopOnFailure)) {
            this.queue.push(c)
        } else {
            c()
        }
        return this
    },
    hasNext: function(a) {
        return (!a) ? !!this.queue.length : !!this.queue.filter(function(b) {
            return b.name == a
        }).length
    },
    resume: function() {
        this.error = false;
        (this.options.concurrent - Object.keys(this.getRunning()).length).times(this.runNext, this);
        return this
    },
    runNext: function(a) {
        if (!this.queue.length) {
            return this
        }
        if (!a) {
            this.queue[0]()
        } else {
            var b;
            this.queue.each(function(c) {
                if (!b && c.name == a) {
                    b = true;
                    c()
                }
            })
        }
        return this
    },
    runAll: function() {
        this.queue.each(function(a) {
            a()
        });
        return this
    },
    clear: function(a) {
        if (!a) {
            this.queue.empty()
        } else {
            this.queue = this.queue.map(function(b) {
                if (b.name != a) {
                    return b
                } else {
                    return false
                }
            }).filter(function(b) {
                return b
            })
        }
        return this
    },
    cancel: function(a) {
        this.requests[a].cancel();
        return this
    },
    onRequest: function() {
        this.fireEvent("request", arguments)
    },
    onComplete: function() {
        this.fireEvent("complete", arguments);
        if (!this.queue.length) {
            this.fireEvent("end")
        }
    },
    onCancel: function() {
        if (this.options.autoAdvance && !this.error) {
            this.runNext()
        }
        this.fireEvent("cancel", arguments)
    },
    onSuccess: function() {
        if (this.options.autoAdvance && !this.error) {
            this.runNext()
        }
        this.fireEvent("success", arguments)
    },
    onFailure: function() {
        this.error = true;
        if (!this.options.stopOnFailure && this.options.autoAdvance) {
            this.runNext()
        }
        this.fireEvent("failure", arguments)
    },
    onException: function() {
        this.error = true;
        if (!this.options.stopOnFailure && this.options.autoAdvance) {
            this.runNext()
        }
        this.fireEvent("exception", arguments)
    }
});
(function(a) {
    Array.implement({
        min: function() {
            return Math.min.apply(null, this)
        },
        max: function() {
            return Math.max.apply(null, this)
        },
        average: function() {
            return this.length ? this.sum() / this.length : 0
        },
        sum: function() {
            var b = 0,
                c = this.length;
            if (c) {
                while (c--) {
                    if (this[c] != null) {
                        b += parseFloat(this[c])
                    }
                }
            }
            return b
        },
        unique: function() {
            return [].combine(this)
        },
        shuffle: function() {
            for (var c = this.length; c && --c;) {
                var b = this[c],
                    d = Math.floor(Math.random() * (c + 1));
                this[c] = this[d];
                this[d] = b
            }
            return this
        },
        reduce: function(d, e) {
            for (var c = 0, b = this.length; c < b; c++) {
                if (c in this) {
                    e = e === a ? this[c] : d.call(null, e, this[c], c, this)
                }
            }
            return e
        },
        reduceRight: function(c, d) {
            var b = this.length;
            while (b--) {
                if (b in this) {
                    d = d === a ? this[b] : c.call(null, d, this[b], b, this)
                }
            }
            return d
        },
        pluck: function(b) {
            return this.map(function(c) {
                return c[b]
            })
        }
    })
})();
Date.implement({
    timeDiffInWords: function(a) {
        return Date.distanceOfTimeInWords(this, a || new Date)
    },
    timeDiff: function(f, c) {
        if (f == null) {
            f = new Date
        }
        var h = ((f - this) / 1000).floor().abs();
        var e = [],
            a = [60, 60, 24, 365, 0],
            d = ["s", "m", "h", "d", "y"],
            g, b;
        for (var k = 0; k < a.length; k++) {
            if (k && !h) {
                break
            }
            g = h;
            if ((b = a[k])) {
                g = (h % b);
                h = (h / b).floor()
            }
            e.unshift(g + (d[k] || ""))
        }
        return e.join(c || ":")
    }
}).extend({
    distanceOfTimeInWords: function(b, a) {
        return Date.getTimePhrase(((a - b) / 1000).toInt())
    },
    getTimePhrase: function(f) {
        var d = (f < 0) ? "Until" : "Ago";
        if (f < 0) {
            f *= -1
        }
        var b = {
            minute: 60,
            hour: 60,
            day: 24,
            week: 7,
            month: 52 / 12,
            year: 12,
            eon: Infinity
        };
        var e = "lessThanMinute";
        for (var c in b) {
            var a = b[c];
            if (f < 1.5 * a) {
                if (f > 0.75 * a) {
                    e = c
                }
                break
            }
            f /= a;
            e = c + "s"
        }
        f = f.round();
        return Date.getMsg(e + d, f).substitute({
            delta: f
        })
    }
}).defineParsers({
    re: /^(?:tod|tom|yes)/i,
    handler: function(a) {
        var b = new Date().clearTime();
        switch (a[0]) {
            case "tom":
                return b.increment();
            case "yes":
                return b.decrement();
            default:
                return b
        }
    }
}, {
    re: /^(next|last) ([a-z]+)$/i,
    handler: function(e) {
        var f = new Date().clearTime();
        var b = f.getDay();
        var c = Date.parseDay(e[2], true);
        var a = c - b;
        if (c <= b) {
            a += 7
        }
        if (e[1] == "last") {
            a -= 7
        }
        return f.set("date", f.getDate() + a)
    }
}).alias("timeAgoInWords", "timeDiffInWords");
(function() {
    if (this.Hash) {
        return
    }
    var a = this.Hash = new Type("Hash", function(b) {
        if (typeOf(b) == "hash") {
            b = Object.clone(b.getClean())
        }
        for (var c in b) {
            this[c] = b[c]
        }
        return this
    });
    this.$H = function(b) {
        return new a(b)
    };
    a.implement({
        forEach: function(b, c) {
            Object.forEach(this, b, c)
        },
        getClean: function() {
            var c = {};
            for (var b in this) {
                if (this.hasOwnProperty(b)) {
                    c[b] = this[b]
                }
            }
            return c
        },
        getLength: function() {
            var c = 0;
            for (var b in this) {
                if (this.hasOwnProperty(b)) {
                    c++
                }
            }
            return c
        }
    });
    a.alias("each", "forEach");
    a.implement({
        has: Object.prototype.hasOwnProperty,
        keyOf: function(b) {
            return Object.keyOf(this, b)
        },
        hasValue: function(b) {
            return Object.contains(this, b)
        },
        extend: function(b) {
            a.each(b || {}, function(d, c) {
                a.set(this, c, d)
            }, this);
            return this
        },
        combine: function(b) {
            a.each(b || {}, function(d, c) {
                a.include(this, c, d)
            }, this);
            return this
        },
        erase: function(b) {
            if (this.hasOwnProperty(b)) {
                delete this[b]
            }
            return this
        },
        get: function(b) {
            return (this.hasOwnProperty(b)) ? this[b] : null
        },
        set: function(b, c) {
            if (!this[b] || this.hasOwnProperty(b)) {
                this[b] = c
            }
            return this
        },
        empty: function() {
            a.each(this, function(c, b) {
                delete this[b]
            }, this);
            return this
        },
        include: function(b, c) {
            if (this[b] == undefined) {
                this[b] = c
            }
            return this
        },
        map: function(b, c) {
            return new a(Object.map(this, b, c))
        },
        filter: function(b, c) {
            return new a(Object.filter(this, b, c))
        },
        every: function(b, c) {
            return Object.every(this, b, c)
        },
        some: function(b, c) {
            return Object.some(this, b, c)
        },
        getKeys: function() {
            return Object.keys(this)
        },
        getValues: function() {
            return Object.values(this)
        },
        toQueryString: function(b) {
            return Object.toQueryString(this, b)
        }
    });
    a.alias({
        indexOf: "keyOf",
        contains: "hasValue"
    })
})();
Hash.implement({
    getFromPath: function(a) {
        return Object.getFromPath(this, a)
    },
    cleanValues: function(a) {
        return new Hash(Object.cleanValues(this, a))
    },
    run: function() {
        Object.run(arguments)
    }
});
Number.implement({
    format: function(s) {
        var p = this;
        s = s ? Object.clone(s) : {};
        var a = function(t) {
            if (s[t] != null) {
                return s[t]
            }
            return Locale.get("Number." + t)
        };
        var f = p < 0,
            h = a("decimal"),
            m = a("precision"),
            q = a("group"),
            c = a("decimals");
        if (f) {
            var e = a("negative") || {};
            if (e.prefix == null && e.suffix == null) {
                e.prefix = "-"
            }["prefix", "suffix"].each(function(t) {
                if (e[t]) {
                    s[t] = a(t) + e[t]
                }
            });
            p = -p
        }
        var n = a("prefix"),
            r = a("suffix");
        if (c !== "" && c >= 0 && c <= 20) {
            p = p.toFixed(c)
        }
        if (m >= 1 && m <= 21) {
            p = (+p).toPrecision(m)
        }
        p += "";
        var o;
        if (a("scientific") === false && p.indexOf("e") > -1) {
            var k = p.split("e"),
                b = +k[1];
            p = k[0].replace(".", "");
            if (b < 0) {
                b = -b - 1;
                o = k[0].indexOf(".");
                if (o > -1) {
                    b -= o - 1
                }
                while (b--) {
                    p = "0" + p
                }
                p = "0." + p
            } else {
                o = k[0].lastIndexOf(".");
                if (o > -1) {
                    b -= k[0].length - o - 1
                }
                while (b--) {
                    p += "0"
                }
            }
        }
        if (h != ".") {
            p = p.replace(".", h)
        }
        if (q) {
            o = p.lastIndexOf(h);
            o = (o > -1) ? o : p.length;
            var d = p.substring(o),
                g = o;
            while (g--) {
                if ((o - g - 1) % 3 == 0 && g != (o - 1)) {
                    d = q + d
                }
                d = p.charAt(g) + d
            }
            p = d
        }
        if (n) {
            p = n + p
        }
        if (r) {
            p += r
        }
        return p
    },
    formatCurrency: function(b) {
        var a = Locale.get("Number.currency") || {};
        if (a.scientific == null) {
            a.scientific = false
        }
        a.decimals = b != null ? b : (a.decimals == null ? 2 : a.decimals);
        return this.format(a)
    },
    formatPercentage: function(b) {
        var a = Locale.get("Number.percentage") || {};
        if (a.suffix == null) {
            a.suffix = "%"
        }
        a.decimals = b != null ? b : (a.decimals == null ? 2 : a.decimals);
        return this.format(a)
    }
});
(function() {
    var b = function() {
        return this.get("value")
    };
    var a = this.URI = new Class({
        Implements: Options,
        options: {},
        regex: /^(?:(\w+):)?(?:\/\/(?:(?:([^:@\/]*):?([^:@\/]*))?@)?(\[[A-Fa-f0-9:]+\]|[^:\/?#]*)(?::(\d*))?)?(\.\.?$|(?:[^?#\/]*\/)*)([^?#]*)(?:\?([^#]*))?(?:#(.*))?/,
        parts: ["scheme", "user", "password", "host", "port", "directory", "file", "query", "fragment"],
        schemes: {
            http: 80,
            https: 443,
            ftp: 21,
            rtsp: 554,
            mms: 1755,
            file: 0
        },
        initialize: function(d, c) {
            this.setOptions(c);
            var e = this.options.base || a.base;
            if (!d) {
                d = e
            }
            if (d && d.parsed) {
                this.parsed = Object.clone(d.parsed)
            } else {
                this.set("value", d.href || d.toString(), e ? new a(e) : false)
            }
        },
        parse: function(e, d) {
            var c = e.match(this.regex);
            if (!c) {
                return false
            }
            c.shift();
            return this.merge(c.associate(this.parts), d)
        },
        merge: function(d, c) {
            if ((!d || !d.scheme) && (!c || !c.scheme)) {
                return false
            }
            if (c) {
                this.parts.every(function(e) {
                    if (d[e]) {
                        return false
                    }
                    d[e] = c[e] || "";
                    return true
                })
            }
            d.port = d.port || this.schemes[d.scheme.toLowerCase()];
            d.directory = d.directory ? this.parseDirectory(d.directory, c ? c.directory : "") : "/";
            return d
        },
        parseDirectory: function(d, e) {
            d = (d.substr(0, 1) == "/" ? "" : (e || "/")) + d;
            if (!d.test(a.regs.directoryDot)) {
                return d
            }
            var c = [];
            d.replace(a.regs.endSlash, "").split("/").each(function(f) {
                if (f == ".." && c.length > 0) {
                    c.pop()
                } else {
                    if (f != ".") {
                        c.push(f)
                    }
                }
            });
            return c.join("/") + "/"
        },
        combine: function(c) {
            return c.value || c.scheme + "://" + (c.user ? c.user + (c.password ? ":" + c.password : "") + "@" : "") + (c.host || "") + (c.port && c.port != this.schemes[c.scheme] ? ":" + c.port : "") + (c.directory || "/") + (c.file || "") + (c.query ? "?" + c.query : "") + (c.fragment ? "#" + c.fragment : "")
        },
        set: function(d, f, e) {
            if (d == "value") {
                var c = f.match(a.regs.scheme);
                if (c) {
                    c = c[1]
                }
                if (c && this.schemes[c.toLowerCase()] == null) {
                    this.parsed = {
                        scheme: c,
                        value: f
                    }
                } else {
                    this.parsed = this.parse(f, (e || this).parsed) || (c ? {
                        scheme: c,
                        value: f
                    } : {
                        value: f
                    })
                }
            } else {
                if (d == "data") {
                    this.setData(f)
                } else {
                    this.parsed[d] = f
                }
            }
            return this
        },
        get: function(c, d) {
            switch (c) {
                case "value":
                    return this.combine(this.parsed, d ? d.parsed : false);
                case "data":
                    return this.getData()
            }
            return this.parsed[c] || ""
        },
        go: function() {
            document.location.href = this.toString()
        },
        toURI: function() {
            return this
        },
        getData: function(e, d) {
            var c = this.get(d || "query");
            if (!(c || c === 0)) {
                return e ? null : {}
            }
            var f = c.parseQueryString();
            return e ? f[e] : f
        },
        setData: function(c, f, d) {
            if (typeof c == "string") {
                var e = this.getData();
                e[arguments[0]] = arguments[1];
                c = e
            } else {
                if (f) {
                    c = Object.merge(this.getData(null, d), c)
                }
            }
            return this.set(d || "query", Object.toQueryString(c))
        },
        clearData: function(c) {
            return this.set(c || "query", "")
        },
        toString: b,
        valueOf: b
    });
    a.regs = {
        endSlash: /\/$/,
        scheme: /^(\w+):/,
        directoryDot: /\.\/|\.$/
    };
    a.base = new a(Array.convert(document.getElements("base[href]", true)).getLast(), {
        base: document.location
    });
    String.implement({
        toURI: function(c) {
            return new a(this, c)
        }
    })
})();
URI = Class.refactor(URI, {
    combine: function(f, e) {
        if (!e || f.scheme != e.scheme || f.host != e.host || f.port != e.port) {
            return this.previous.apply(this, arguments)
        }
        var a = f.file + (f.query ? "?" + f.query : "") + (f.fragment ? "#" + f.fragment : "");
        if (!e.directory) {
            return (f.directory || (f.file ? "" : "./")) + a
        }
        var d = e.directory.split("/"),
            c = f.directory.split("/"),
            g = "",
            h;
        var b = 0;
        for (h = 0; h < d.length && h < c.length && d[h] == c[h]; h++) {}
        for (b = 0; b < d.length - h - 1; b++) {
            g += "../"
        }
        for (b = h; b < c.length - 1; b++) {
            g += c[b] + "/"
        }
        return (g || (f.file ? "" : "./")) + a
    },
    toAbsolute: function(a) {
        a = new URI(a);
        if (a) {
            a.set("directory", "").set("file", "")
        }
        return this.toRelative(a)
    },
    toRelative: function(a) {
        return this.get("value", new URI(a))
    }
});
(function() {
    var a = this.Asset = {
        javascript: function(e, c) {
            if (!c) {
                c = {}
            }
            var b = new Element("script", {
                    src: e,
                    type: "text/javascript"
                }),
                f = c.document || document,
                d = c.onload || c.onLoad;
            delete c.onload;
            delete c.onLoad;
            delete c.document;
            if (d) {
                if (!b.addEventListener) {
                    b.addEvent("readystatechange", function() {
                        if (["loaded", "complete"].contains(this.readyState)) {
                            d.call(this)
                        }
                    })
                } else {
                    b.addEvent("load", d)
                }
            }
            return b.set(c).inject(f.head)
        },
        css: function(b, e) {
            if (!e) {
                e = {}
            }
            var m = e.onload || e.onLoad,
                k = e.document || document,
                g = e.timeout || 3000;
            ["onload", "onLoad", "document"].each(function(n) {
                delete e[n]
            });
            var h = new Element("link", {
                type: "text/css",
                rel: "stylesheet",
                media: "screen",
                href: b
            }).setProperties(e).inject(k.head);
            if (m) {
                var d = false,
                    f = 0;
                var c = function() {
                    var q = document.styleSheets;
                    for (var p = 0; p < q.length; p++) {
                        var o = q[p];
                        var n = o.ownerNode ? o.ownerNode : o.owningElement;
                        if (n && n == h) {
                            d = true;
                            return m.call(h)
                        }
                    }
                    f++;
                    if (!d && f < g / 50) {
                        return setTimeout(c, 50)
                    }
                };
                setTimeout(c, 0)
            }
            return h
        },
        image: function(d, c) {
            if (!c) {
                c = {}
            }
            var e = new Image(),
                b = document.id(e) || new Element("img");
            ["load", "abort", "error"].each(function(f) {
                var h = "on" + f,
                    g = "on" + f.capitalize(),
                    k = c[h] || c[g] || function() {};
                delete c[g];
                delete c[h];
                e[h] = function() {
                    if (!e) {
                        return
                    }
                    if (!b.parentNode) {
                        b.width = e.width;
                        b.height = e.height
                    }
                    e = e.onload = e.onabort = e.onerror = null;
                    k.delay(1, b, b);
                    b.fireEvent(f, b, 1)
                }
            });
            e.src = b.src = d;
            if (e && e.complete) {
                e.onload.delay(1)
            }
            return b.set(c)
        },
        images: function(d, c) {
            d = Array.convert(d);
            var e = function() {},
                b = 0;
            c = Object.merge({
                onComplete: e,
                onProgress: e,
                onError: e,
                properties: {}
            }, c);
            return new Elements(d.map(function(g, f) {
                return a.image(g, Object.append(c.properties, {
                    onload: function() {
                        b++;
                        c.onProgress.call(this, b, f, g);
                        if (b == d.length) {
                            c.onComplete()
                        }
                    },
                    onerror: function() {
                        b++;
                        c.onError.call(this, b, f, g);
                        if (b == d.length) {
                            c.onComplete()
                        }
                    }
                }))
            }))
        }
    }
})();
(function() {
    var a = this.Color = new Type("Color", function(c, d) {
        if (arguments.length >= 3) {
            d = "rgb";
            c = Array.slice(arguments, 0, 3)
        } else {
            if (typeof c == "string") {
                if (c.match(/rgb/)) {
                    c = c.rgbToHex().hexToRgb(true)
                } else {
                    if (c.match(/hsb/)) {
                        c = c.hsbToRgb()
                    } else {
                        c = c.hexToRgb(true)
                    }
                }
            }
        }
        d = d || "rgb";
        switch (d) {
            case "hsb":
                var b = c;
                c = c.hsbToRgb();
                c.hsb = b;
                break;
            case "hex":
                c = c.hexToRgb(true);
                break
        }
        c.rgb = c.slice(0, 3);
        c.hsb = c.hsb || c.rgbToHsb();
        c.hex = c.rgbToHex();
        return Object.append(c, this)
    });
    a.implement({
        mix: function() {
            var b = Array.slice(arguments);
            var d = (typeOf(b.getLast()) == "number") ? b.pop() : 50;
            var c = this.slice();
            b.each(function(e) {
                e = new a(e);
                for (var f = 0; f < 3; f++) {
                    c[f] = Math.round((c[f] / 100 * (100 - d)) + (e[f] / 100 * d))
                }
            });
            return new a(c, "rgb")
        },
        invert: function() {
            return new a(this.map(function(b) {
                return 255 - b
            }))
        },
        setHue: function(b) {
            return new a([b, this.hsb[1], this.hsb[2]], "hsb")
        },
        setSaturation: function(b) {
            return new a([this.hsb[0], b, this.hsb[2]], "hsb")
        },
        setBrightness: function(b) {
            return new a([this.hsb[0], this.hsb[1], b], "hsb")
        }
    });
    this.$RGB = function(e, d, c) {
        return new a([e, d, c], "rgb")
    };
    this.$HSB = function(e, d, c) {
        return new a([e, d, c], "hsb")
    };
    this.$HEX = function(b) {
        return new a(b, "hex")
    };
    Array.implement({
        rgbToHsb: function() {
            var c = this[0],
                d = this[1],
                n = this[2],
                h = 0,
                m = Math.max(c, d, n),
                f = Math.min(c, d, n),
                o = m - f,
                k = m / 255,
                g = (m != 0) ? o / m : 0;
            if (g != 0) {
                var e = (m - c) / o;
                var b = (m - d) / o;
                var p = (m - n) / o;
                if (c == m) {
                    h = p - b
                } else {
                    if (d == m) {
                        h = 2 + e - p
                    } else {
                        h = 4 + b - e
                    }
                }
                h /= 6;
                if (h < 0) {
                    h++
                }
            }
            return [Math.round(h * 360), Math.round(g * 100), Math.round(k * 100)]
        },
        hsbToRgb: function() {
            var d = Math.round(this[2] / 100 * 255);
            if (this[1] == 0) {
                return [d, d, d]
            } else {
                var b = this[0] % 360;
                var g = b % 60;
                var h = Math.round((this[2] * (100 - this[1])) / 10000 * 255);
                var e = Math.round((this[2] * (6000 - this[1] * g)) / 600000 * 255);
                var c = Math.round((this[2] * (6000 - this[1] * (60 - g))) / 600000 * 255);
                switch (Math.floor(b / 60)) {
                    case 0:
                        return [d, c, h];
                    case 1:
                        return [e, d, h];
                    case 2:
                        return [h, d, c];
                    case 3:
                        return [h, e, d];
                    case 4:
                        return [c, h, d];
                    case 5:
                        return [d, h, e]
                }
            }
            return false
        }
    });
    String.implement({
        rgbToHsb: function() {
            var b = this.match(/\d{1,3}/g);
            return (b) ? b.rgbToHsb() : null
        },
        hsbToRgb: function() {
            var b = this.match(/\d{1,3}/g);
            return (b) ? b.hsbToRgb() : null
        }
    })
})();
(function() {
    var a = this.Group = new Class({
        initialize: function() {
            this.instances = Array.flatten(arguments)
        },
        addEvent: function(f, e) {
            var h = this.instances,
                b = h.length,
                g = b,
                d = new Array(b),
                c = this;
            h.each(function(k, m) {
                k.addEvent(f, function() {
                    if (!d[m]) {
                        g--
                    }
                    d[m] = arguments;
                    if (!g) {
                        e.call(c, h, k, d);
                        g = b;
                        d = new Array(b)
                    }
                })
            })
        }
    })
})();
Hash.Cookie = new Class({
    Extends: Cookie,
    options: {
        autoSave: true
    },
    initialize: function(b, a) {
        this.parent(b, a);
        this.load()
    },
    save: function() {
        var a = JSON.encode(this.hash);
        if (!a || a.length > 4096) {
            return false
        }
        if (a == "{}") {
            this.dispose()
        } else {
            this.write(a)
        }
        return true
    },
    load: function() {
        this.hash = new Hash(JSON.decode(this.read(), true));
        return this
    }
});
Hash.each(Hash.prototype, function(b, a) {
    if (typeof b == "function") {
        Hash.Cookie.implement(a, function() {
            var c = b.apply(this.hash, arguments);
            if (this.options.autoSave) {
                this.save()
            }
            return c
        })
    }
});
(function() {
    var Swiff = this.Swiff = new Class({
        Implements: Options,
        options: {
            id: null,
            height: 1,
            width: 1,
            container: null,
            properties: {},
            params: {
                quality: "high",
                allowScriptAccess: "always",
                wMode: "window",
                swLiveConnect: true
            },
            callBacks: {},
            vars: {}
        },
        toElement: function() {
            return this.object
        },
        initialize: function(path, options) {
            this.instance = "Swiff_" + String.uniqueID();
            this.setOptions(options);
            options = this.options;
            var id = this.id = options.id || this.instance;
            var container = document.id(options.container);
            Swiff.CallBacks[this.instance] = {};
            var params = options.params,
                vars = options.vars,
                callBacks = options.callBacks;
            var properties = Object.append({
                height: options.height,
                width: options.width
            }, options.properties);
            var self = this;
            for (var callBack in callBacks) {
                Swiff.CallBacks[this.instance][callBack] = (function(option) {
                    return function() {
                        return option.apply(self.object, arguments)
                    }
                })(callBacks[callBack]);
                vars[callBack] = "Swiff.CallBacks." + this.instance + "." + callBack
            }
            params.flashVars = Object.toQueryString(vars);
            if ("ActiveXObject" in window) {
                properties.classid = "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000";
                params.movie = path
            } else {
                properties.type = "application/x-shockwave-flash"
            }
            properties.data = path;
            var build = '<object id="' + id + '"';
            for (var property in properties) {
                build += " " + property + '="' + properties[property] + '"'
            }
            build += ">";
            for (var param in params) {
                if (params[param]) {
                    build += '<param name="' + param + '" value="' + params[param] + '" />'
                }
            }
            build += "</object>";
            this.object = ((container) ? container.empty() : new Element("div")).set("html", build).firstChild
        },
        replaces: function(element) {
            element = document.id(element, true);
            element.parentNode.replaceChild(this.toElement(), element);
            return this
        },
        inject: function(element) {
            document.id(element, true).appendChild(this.toElement());
            return this
        },
        remote: function() {
            return Swiff.remote.apply(Swiff, [this.toElement()].append(arguments))
        }
    });
    Swiff.CallBacks = {};
    Swiff.remote = function(obj, fn) {
        var rs = obj.CallFunction('<invoke name="' + fn + '" returntype="javascript">' + __flash__argumentsToXML(arguments, 2) + "</invoke>");
        return eval(rs)
    }
})();
(function() {
    var a = this.Table = function() {
        this.length = 0;
        var c = [],
            b = [];
        this.set = function(e, g) {
            var d = c.indexOf(e);
            if (d == -1) {
                var f = c.length;
                c[f] = e;
                b[f] = g;
                this.length++
            } else {
                b[d] = g
            }
            return this
        };
        this.get = function(e) {
            var d = c.indexOf(e);
            return (d == -1) ? null : b[d]
        };
        this.erase = function(e) {
            var d = c.indexOf(e);
            if (d != -1) {
                this.length--;
                c.splice(d, 1);
                return b.splice(d, 1)[0]
            }
            return null
        };
        this.each = this.forEach = function(f, g) {
            for (var e = 0, d = this.length; e < d; e++) {
                f.call(g, c[e], b[e], this)
            }
        }
    };
    if (this.Type) {
        new Type("Table", a)
    }
})();
var Observer = new Class({
    Implements: [Options, Events],
    options: {
        periodical: false,
        delay: 1000
    },
    initialize: function(c, a, b) {
        this.element = $(c) || $$(c);
        this.addEvent("onFired", a);
        this.setOptions(b);
        this.bound = this.changed.bind(this);
        this.resume()
    },
    changed: function() {
        var a = this.element.get("value");
        if ($equals(this.value, a)) {
            return
        }
        this.clear();
        this.value = a;
        this.timeout = this.onFired.delay(this.options.delay, this)
    },
    setValue: function(a) {
        this.value = a;
        this.element.set("value", a);
        return this.clear()
    },
    onFired: function() {
        this.fireEvent("onFired", [this.value, this.element])
    },
    clear: function() {
        clearTimeout(this.timeout || null);
        return this
    },
    pause: function() {
        if (this.timer) {
            clearInterval(this.timer)
        } else {
            this.element.removeEvent("keyup", this.bound)
        }
        return this.clear()
    },
    resume: function() {
        this.value = this.element.get("value");
        if (this.options.periodical) {
            this.timer = this.changed.periodical(this.options.periodical, this)
        } else {
            this.element.addEvent("keyup", this.bound)
        }
        return this
    }
});
var $equals = function(b, a) {
    return (b == a || JSON.encode(b) == JSON.encode(a))
};
var Overlay = new Class({
    Implements: [Options, Events],
    options: {
        color: "#000",
        duration: 500,
        opacity: 0.5,
        zIndex: 5000
    },
    initialize: function(a, b) {
        this.setOptions(b);
        this.container = document.id(a);
        this.overlay = new Element("div", {
            id: this.options.id,
            styles: {
                position: "fixed",
                background: this.options.color,
                left: 0,
                top: 0,
                opacity: 0,
                "z-index": this.options.zIndex
            },
            events: {
                click: function() {
                    this.fireEvent("click")
                }.bind(this)
            }
        }).inject(this.container);
        this.tween = new Fx.Tween(this.overlay, {
            duration: this.options.duration,
            link: "cancel",
            property: "opacity",
            onStart: function() {
                this.overlay.setStyles({
                    width: "100%",
                    height: this.container.getScrollSize().y
                })
            }.bind(this),
            onComplete: function() {
                this.fireEvent(this.overlay.get("opacity") == this.options.opacity ? "show" : "hide")
            }.bind(this)
        });
        window.addEvents({
            resize: function() {
                this.resize()
            }.bind(this),
            scroll: function() {
                this.scroll()
            }.bind(this)
        })
    },
    open: function() {
        this.fireEvent("open");
        this.tween.start(this.options.opacity);
        return this
    },
    close: function() {
        this.fireEvent("close");
        this.tween.start(0);
        return this
    },
    resize: function() {
        this.fireEvent("resize");
        this.overlay.setStyle("height", this.container.getScrollSize().y);
        return this
    },
    scroll: function() {
        this.fireEvent("scroll");
        return this
    },
    dispose: function() {
        this.overlay.hide();
        this.overlay.destroy()
    }
});
var Autocompleter = new Class({
    Implements: [Options, Events],
    options: {
        minLength: 1,
        markQuery: true,
        width: "inherit",
        maxChoices: 10,
        injectChoice: null,
        customChoices: null,
        emptyChoices: null,
        visibleChoices: true,
        className: "autocompleter-choices",
        zIndex: 42,
        delay: 400,
        observerOptions: {},
        fxOptions: {},
        autoSubmit: false,
        overflow: false,
        overflowMargin: 25,
        selectFirst: false,
        filter: null,
        filterCase: false,
        filterSubset: false,
        forceSelect: false,
        selectMode: true,
        choicesMatch: null,
        multiple: false,
        separator: ", ",
        separatorSplit: /\s*[,;]\s*/,
        autoTrim: false,
        allowDupes: false,
        relative: false
    },
    initialize: function(b, a) {
        this.element = $(b);
        this.setOptions(a);
        this.build();
        this.observer = new Observer(this.element, this.prefetch.bind(this), Object.merge({
            delay: this.options.delay
        }, this.options.observerOptions));
        this.searchFor = null;
        this.queryValue = null;
        if (this.options.filter) {
            this.filter = this.options.filter.bind(this)
        }
        var c = this.options.selectMode;
        this.typeAhead = (c == "type-ahead");
        this.selectMode = (c === true) ? "selection" : c
    },
    build: function() {
        if ($(this.options.customChoices)) {
            this.choices = this.options.customChoices
        } else {
            this.choices = new Element("ul", {
                "class": this.options.className,
                styles: {
                    zIndex: this.options.zIndex
                }
            }).inject(document.body);
            this.relative = false;
            if (this.options.relative) {
                this.choices.inject(this.element, "after");
                this.relative = this.element.getOffsetParent()
            }
            this.fix = new OverlayFix(this.choices)
        }
        if (!this.options.separator.test(this.options.separatorSplit)) {
            this.options.separatorSplit = this.options.separator
        }
        this.fx = (!this.options.fxOptions) ? null : new Fx.Tween(this.choices, Object.merge({
            property: "opacity",
            link: "cancel",
            duration: 200
        }, this.options.fxOptions)).addEvent("onStart", Chain.prototype.clearChain).set(0);
        this.element.setProperty("autocomplete", "off").addEvent((Browser.name == "ie" || Browser.name == "chrome" || Browser.name == "safari") ? "keydown" : "keypress", this.onCommand.bind(this)).addEvent("click", this.onCommand.bind(this, false)).addEvent("focus", (function() {
            this.toggleFocus.delay(100, this, true)
        }).bind(this)).addEvent("blur", (function() {
            this.toggleFocus.delay(100, this, false)
        }).bind(this))
    },
    destroy: function() {
        if (this.fix) {
            this.fix.destroy()
        }
        this.choices = this.selected = this.choices.destroy()
    },
    toggleFocus: function(a) {
        this.focussed = a;
        if (!a) {
            this.hideChoices(true)
        }
        this.fireEvent((a) ? "onFocus" : "onBlur", [this.element])
    },
    onCommand: function(b) {
        if (!b && this.focussed) {
            return this.prefetch()
        }
        if (b && b.key && !b.shift) {
            switch (b.key) {
                case "enter":
                    if (this.element.value != this.opted) {
                        return true
                    }
                    if (this.selected && this.visible) {
                        this.choiceSelect(this.selected);
                        return !!(this.options.autoSubmit)
                    }
                    break;
                case "up":
                case "down":
                    if (!this.prefetch() && this.queryValue !== null) {
                        var a = (b.key == "up");
                        this.choiceOver((this.selected || this.choices)[(this.selected) ? ((a) ? "getPrevious" : "getNext") : ((a) ? "getLast" : "getFirst")](this.options.choicesMatch), true)
                    }
                    return false;
                case "esc":
                case "tab":
                    this.hideChoices(true);
                    break
            }
        }
        return true
    },
    setSelection: function(f) {
        var g = this.selected.inputValue,
            h = g;
        var a = this.searchFor.length,
            c = g.length;
        if (g.substr(0, a).toLowerCase() != this.searchFor.toLowerCase()) {
            a = 0
        }
        if (this.options.multiple) {
            var e = this.options.separatorSplit;
            h = this.element.value;
            a += this.queryIndex;
            c += this.queryIndex;
            var b = h.substr(this.queryIndex).split(e, 1)[0];
            h = h.substr(0, this.queryIndex) + g + h.substr(this.queryIndex + b.length);
            if (f) {
                var d = h.split(this.options.separatorSplit).filter(function(m) {
                    return this.test(m)
                }, /[^\s,]+/);
                if (!this.options.allowDupes) {
                    d = [].combine(d)
                }
                var k = this.options.separator;
                h = d.join(k) + k;
                c = h.length
            }
        }
        this.observer.setValue(h);
        this.opted = h;
        if (f || this.selectMode == "pick") {
            a = c
        }
        this.element.selectRange(a, c);
        this.fireEvent("onSelection", [this.element, this.selected, h, g])
    },
    showChoices: function() {
        var c = this.options.choicesMatch,
            b = this.choices.getFirst(c);
        this.selected = this.selectedValue = null;
        if (this.fix) {
            var e = this.element.getCoordinates(this.relative),
                a = this.options.width || "auto";
            this.choices.setStyles({
                left: e.left,
                top: e.bottom,
                width: (a === true || a == "inherit") ? e.width : a
            })
        }
        if (!b) {
            return
        }
        if (!this.visible) {
            this.visible = true;
            this.choices.setStyle("display", "");
            if (this.fx) {
                this.fx.start(1)
            }
            this.fireEvent("onShow", [this.element, this.choices])
        }
        if (this.options.selectFirst || this.typeAhead || b.inputValue == this.searchFor) {
            this.choiceOver(b, this.typeAhead)
        }
        var d = this.choices.getChildren(c),
            f = this.options.maxChoices;
        var k = {
            overflowY: "hidden",
            height: ""
        };
        this.overflown = false;
        if (d.length > f) {
            var m = d[f - 1];
            k.overflowY = "scroll";
            k.height = m.getCoordinates(this.choices).bottom;
            this.overflown = true
        }
        this.choices.setStyles(k);
        this.fix.show();
        if (this.options.visibleChoices) {
            var h = document.getScroll(),
                n = document.getSize(),
                g = this.choices.getCoordinates();
            if (g.right > h.x + n.x) {
                h.x = g.right - n.x
            }
            if (g.bottom > h.y + n.y) {
                h.y = g.bottom - n.y
            }
            window.scrollTo(Math.min(h.x, g.left), Math.min(h.y, g.top))
        }
    },
    hideChoices: function(a) {
        if (a) {
            var c = this.element.value;
            if (this.options.forceSelect) {
                c = this.opted
            }
            if (this.options.autoTrim) {
                c = c.split(this.options.separatorSplit).filter(function(d) {
                    return d
                }).join(this.options.separator)
            }
            this.observer.setValue(c)
        }
        if (!this.visible) {
            return
        }
        this.visible = false;
        if (this.selected) {
            this.selected.removeClass("autocompleter-selected")
        }
        this.observer.clear();
        var b = function() {
            this.choices.setStyle("display", "none");
            this.fix.hide()
        }.bind(this);
        if (this.fx) {
            this.fx.start(0).chain(b)
        } else {
            b()
        }
        this.fireEvent("onHide", [this.element, this.choices])
    },
    prefetch: function() {
        var f = this.element.value,
            e = f,
            d = f;
        if (this.options.multiple) {
            var b = this.options.separatorSplit;
            var a = this.element.getSelectedRange().start;
            var g = f.substr(0, a).split(b);
            var c = g.length - 1;
            a -= g[c].length;
            e = g;
            d = g[c].toLowerCase()
        }
        if (d.length < this.options.minLength) {
            this.hideChoices()
        } else {
            if (d === this.searchFor || (this.visible && e == this.selectedValue)) {
                if (this.visible) {
                    return false
                }
                this.showChoices()
            } else {
                this.searchFor = d;
                this.queryValue = e;
                this.queryIndex = a;
                this.query()
            }
        }
        return true
    },
    update: function(b) {
        this.choices.empty();
        var a = b && typeOf(b);
        if (a == "null" || (a == "array" && !b.length) || (a == "hash" && !b.getLength())) {
            (this.options.emptyChoices || this.hideChoices).call(this)
        } else {
            if (this.options.maxChoices < b.length && !this.options.overflow) {
                b.length = this.options.maxChoices
            }
            b.each(this.options.injectChoice || function(d) {
                var c = new Element("li", {
                    html: this.markQueryValue(d)
                });
                c.inputValue = d;
                this.addChoiceEvents(c).inject(this.choices)
            }, this);
            this.showChoices()
        }
    },
    choiceOver: function(c, d) {
        if (!c || c == this.selected) {
            return
        }
        if (this.selected) {
            this.selected.removeClass("autocompleter-selected")
        }
        this.selected = c.addClass("autocompleter-selected");
        this.fireEvent("onSelect", [this.element, this.selected, d]);
        if (!this.selectMode) {
            this.opted = this.element.value
        }
        if (!d) {
            return
        }
        this.selectedValue = this.selected.inputValue;
        if (this.overflown) {
            var f = this.selected.getCoordinates(this.choices),
                e = this.options.overflowMargin,
                g = this.choices.scrollTop,
                a = this.choices.offsetHeight,
                b = g + a;
            if (f.top - e < g && g) {
                this.choices.scrollTop = Math.max(f.top - e, 0)
            } else {
                if (f.bottom + e > b) {
                    this.choices.scrollTop = Math.min(f.bottom - a + e, b)
                }
            }
        }
        if (this.selectMode) {
            this.setSelection()
        }
    },
    choiceSelect: function(a) {
        if (a) {
            this.choiceOver(a)
        }
        this.setSelection(true);
        this.searchFor = false;
        this.hideChoices()
    },
    filter: function(a) {
        return (a || this.tokens).filter(function(b) {
            return this.test(b)
        }, new RegExp(((this.options.filterSubset) ? "" : "^") + this.searchFor.escapeRegExp(), (this.options.filterCase) ? "" : "i"))
    },
    markQueryValue: function(a) {
        return (!this.options.markQuery || !this.searchFor) ? a : a.replace(new RegExp("(" + ((this.options.filterSubset) ? "" : "^") + this.searchFor.escapeRegExp() + ")", (this.options.filterCase) ? "" : "i"), '<span class="autocompleter-queried">$1</span>')
    },
    addChoiceEvents: function(a) {
        return a.addEvents({
            mouseover: this.choiceOver.bind(this, a),
            click: this.choiceSelect.bind(this, a)
        })
    }
});
var OverlayFix = new Class({
    initialize: function(a) {
        if (Browser.name == "ie") {
            this.element = $(a);
            this.relative = this.element.getOffsetParent();
            this.fix = new Element("iframe", {
                frameborder: "0",
                scrolling: "no",
                src: "javascript:false;",
                styles: {
                    position: "absolute",
                    border: "none",
                    display: "none",
                    filter: "progid:DXImageTransform.Microsoft.Alpha(opacity=0)"
                }
            }).inject(this.element, "after")
        }
    },
    show: function() {
        if (this.fix) {
            var a = this.element.getCoordinates(this.relative);
            delete a.right;
            delete a.bottom;
            this.fix.setStyles(Object.append(a, {
                display: "",
                zIndex: (this.element.getStyle("zIndex") || 1) - 1
            }))
        }
        return this
    },
    hide: function() {
        if (this.fix) {
            this.fix.setStyle("display", "none")
        }
        return this
    },
    destroy: function() {
        if (this.fix) {
            this.fix = this.fix.destroy()
        }
    }
});
Element.implement({
    getSelectedRange: function() {
        if (Browser.name == "ie" && Browser.version < 11) {
            var e = {
                start: 0,
                end: 0
            };
            var a = this.getDocument().selection.createRange();
            if (!a || a.parentElement() != this) {
                return e
            }
            var c = a.duplicate();
            if (this.type == "text") {
                e.start = 0 - c.moveStart("character", -100000);
                e.end = e.start + a.text.length
            } else {
                var b = this.value;
                var d = b.length - b.match(/[\n\r]*$/)[0].length;
                c.moveToElementText(this);
                c.setEndPoint("StartToEnd", a);
                e.end = d - c.text.length;
                c.setEndPoint("StartToStart", a);
                e.start = d - c.text.length
            }
            return e
        } else {
            return {
                start: this.selectionStart,
                end: this.selectionEnd
            }
        }
    },
    selectRange: function(d, a) {
        if (Browser.name == "ie") {
            var c = this.value.substr(d, a - d).replace(/\r/g, "").length;
            d = this.value.substr(0, d).replace(/\r/g, "").length;
            var b = this.createTextRange();
            b.collapse(true);
            b.moveEnd("character", d + c);
            b.moveStart("character", d);
            b.select()
        } else {
            this.focus();
            this.setSelectionRange(d, a)
        }
        return this
    }
});
Autocompleter.Base = Autocompleter;
Autocompleter.Local = new Class({
    Extends: Autocompleter,
    options: {
        minLength: 0,
        delay: 200
    },
    initialize: function(b, c, a) {
        this.parent(b, a);
        this.tokens = c
    },
    query: function() {
        this.update(this.filter())
    }
});
Autocompleter.Request = new Class({
    Extends: Autocompleter,
    options: {
        postData: {},
        ajaxOptions: {},
        postVar: "value"
    },
    query: function() {
        var c = Object.clone(this.options.postData) || {};
        c[this.options.postVar] = this.queryValue;
        var b = $(this.options.indicator);
        if (b) {
            b.setStyle("display", "")
        }
        var a = this.options.indicatorClass;
        if (a) {
            this.element.addClass(a)
        }
        this.fireEvent("onRequest", [this.element, this.request, c, this.queryValue]);
        this.request.send({
            data: c
        })
    },
    queryResponse: function() {
        var b = $(this.options.indicator);
        if (b) {
            b.setStyle("display", "none")
        }
        var a = this.options.indicatorClass;
        if (a) {
            this.element.removeClass(a)
        }
        return this.fireEvent("onComplete", [this.element, this.request])
    }
});
Autocompleter.Request.JSON = new Class({
    Extends: Autocompleter.Request,
    initialize: function(c, b, a) {
        this.parent(c, a);
        var d = this;
        this.request = new Request(Object.merge({
            url: b,
            link: "cancel",
            onSuccess: function(g) {
                try {
                    var f = JSON.decode(g)
                } catch (h) {
                    return
                }
                d.queryResponse(f.response)
            }
        }, this.options.ajaxOptions))
    },
    queryResponse: function(a) {
        this.parent();
        this.update(a)
    }
});
Autocompleter.Request.HTML = new Class({
    Extends: Autocompleter.Request,
    initialize: function(c, b, a) {
        this.parent(c, a);
        this.request = new Request.HTML(Object.merge({
            url: b,
            link: "cancel",
            update: this.choices
        }, this.options.ajaxOptions)).addEvent("onComplete", this.queryResponse.bind(this))
    },
    queryResponse: function(a, b) {
        this.parent();
        if (!b || !b.length) {
            this.hideChoices()
        } else {
            this.choices.getChildren(this.options.choicesMatch).each(this.options.injectChoice || function(c) {
                var d = c.innerHTML;
                c.inputValue = d;
                this.addChoiceEvents(c.set("html", this.markQueryValue(d)))
            }, this);
            this.showChoices()
        }
    }
});
Autocompleter.Ajax = {
    Base: Autocompleter.Request,
    Json: Autocompleter.Request.JSON,
    Xhtml: Autocompleter.Request.HTML
};
window.$w = function(a) {
    return Array.convert(String(a).split(" "))
};
Function.implement({
    curry: function() {
        if (!arguments.length) {
            return this
        }
        var a = this;
        var b = Array.prototype.slice.call(Array.convert(arguments), 0);
        return function() {
            return a.apply(this, b.concat(Array.convert(arguments)))
        }
    },
    wrap: function(b) {
        var a = this;
        return function() {
            return b.apply(this, [a.bind(this)].concat(Array.convert(arguments)))
        }
    }
});
Object.append(Object, {
    toHTML: function(a) {
        return a && a.toHTML ? a.toHTML() : (a == null ? "" : String(a))
    }
});
Array.implement({
    find: function(d, c) {
        var a = undefined;
        var b = d;
        if (c) {
            b = b.bind(c)
        }
        this.some(function(f, e, g) {
            if (b(f, e, g)) {
                a = f;
                return true
            }
            return false
        });
        return a
    },
    inject: function(b, a) {
        this.each(function(d, c, e) {
            b = a(b, d, c, e)
        });
        return b
    },
    invoke: function(a) {
        this.each(function(b) {
            if (b && b[a]) {
                b[a]()
            }
        });
        return this
    }
});
(function() {
    var a = Element.prototype;
    if (Browser.name == "ie" && Browser.version < 9) {
        a = Element.Prototype
    }
    Element.addClass = Element.addClass.wrap(function(d, c, b) {
        if (typeOf(b) != "array") {
            b = $w(b)
        }
        if (typeOf(b) == "array") {
            b.each(function(e) {
                d(e)
            })
        } else {
            d(b)
        }
        return c
    });
    a.addClass = a.addClass.wrap(function(c, b) {
        if (typeOf(b) != "array") {
            b = $w(b)
        }
        if (typeOf(b) == "array") {
            b.each(function(d) {
                c(d)
            })
        } else {
            c(b)
        }
        return this
    });
    Element.removeClass = Element.removeClass.wrap(function(d, c, b) {
        if (typeOf(b) != "array") {
            b = $w(b)
        }
        if (typeOf(b) == "array") {
            b.each(function(e) {
                d(e)
            })
        } else {
            d(b)
        }
        return c
    });
    a.removeClass = a.removeClass.wrap(function(c, b) {
        if (typeOf(b) != "array") {
            b = $w(b)
        }
        if (typeOf(b) == "array") {
            b.each(function(d) {
                c(d)
            })
        } else {
            c(b)
        }
        return this
    })
})();
Element.implement({
    disableSelection: function() {
        return this.setStyles({
            MozUserSelect: "none",
            KhtmlUserSelect: "none"
        }).setProperty("unselectable", "on")
    },
    down: function(a) {
        return this.getElement(a)
    },
    getSelectionEnd: function() {
        if (this.createTextRange) {
            var a;
            if (document.selection) {
                a = document.selection.createRange().duplicate();
                a.moveEnd("character", -this.value.length);
                return a.text.length
            } else {
                if (document.getSelection) {
                    a = document.getSelection();
                    return a.length
                }
            }
        }
        return this.selectionEnd
    },
    getSelectionStart: function() {
        if (this.createTextRange) {
            var a;
            if (document.selection) {
                a = document.selection.createRange().duplicate();
                a.moveEnd("character", this.value.length)
            } else {
                if (document.getSelection) {
                    a = document.getSelection()
                }
            }
            if (a.text == "") {
                return this.value.length
            }
            return this.value.lastIndexOf(a.text)
        }
        return this.selectionStart
    },
    insert: function(b) {
        var d = $(this);
        var c = {
            before: function(m, n) {
                m.parentNode.insertBefore(n, m)
            },
            top: function(m, n) {
                m.insertBefore(n, m.firstChild)
            },
            bottom: function(m, n) {
                m.appendChild(n)
            },
            after: function(m, n) {
                m.parentNode.insertBefore(n, m.nextSibling)
            },
            tags: {
                TABLE: ["<table>", "</table>", 1],
                TBODY: ["<table><tbody>", "</tbody></table>", 2],
                TR: ["<table><tbody><tr>", "</tr></tbody></table>", 3],
                TD: ["<table><tbody><tr><td>", "</td></tr></tbody></table>", 4],
                SELECT: ["<select>", "</select>", 1]
            }
        };
        var g = function(o, n) {
            var p = new Element("div"),
                m = c.tags[o];
            if (m) {
                p.innerHTML = m[0] + n + m[1];
                m[2].times(function() {
                    p = p.firstChild
                })
            } else {
                p.innerHTML = n
            }
            return Array.convert(p.childNodes)
        };
        if (typeof b == "string" || typeof b == "number" || (b.nodeName && b.nodeType == 1) || (b && (b.toElement || b.toHTML))) {
            b = {
                bottom: b
            }
        }
        var f, k, a, h;
        for (var e in b) {
            f = b[e];
            e = e.toLowerCase();
            k = c[e];
            if (f && f.toElement) {
                f = f.toElement()
            }
            if (f.nodeName && f.nodeType == 1) {
                k(d, f);
                continue
            }
            f = Object.toHTML(f);
            a = ((e == "before" || e == "after") ? d.parentNode : d).tagName.toUpperCase();
            h = g(a, f);
            if (e == "top" || e == "after") {
                h.reverse()
            }
            h.each(function(m) {
                k(d, m)
            });
            d.select("script").each(function(m) {
                Browser.exec(m.text)
            })
        }
        return d
    },
    next: function(a) {
        return this.getNext(a)
    },
    prev: function(a) {
        return this.getPrevious(a)
    },
    select: function(b) {
        var c = this;
        var a = [];
        Array.convert(arguments).each(function(d) {
            var e = c.getElements(d);
            if (typeOf(e) == "elements") {
                a = a.concat(Array.convert(e))
            }
        });
        return a
    },
    setSize: function(b, a) {
        if (b && b.$family && b.$family.name == "array") {
            a = b[1];
            b = b[0]
        } else {
            if (typeof b == "object") {
                if (typeof b.x == "number") {
                    a = b.y;
                    b = b.x
                } else {
                    a = b.height;
                    b = b.width
                }
            }
        }
        return this.setStyles({
            width: b,
            height: a
        })
    },
    serializeForm: function(a) {
        return Form.serialize(this, a)
    },
    up: function(a) {
        return this.getParent(a)
    },
    filterInput: function(a) {
        var b = a.regex;
        var d = this;

        function c(m) {
            var p = 0,
                h = 0,
                o, k, g, f, n;
            if (typeof m.selectionStart == "number" && typeof m.selectionEnd == "number") {
                p = m.selectionStart;
                h = m.selectionEnd
            } else {
                m.focus();
                k = document.selection.createRange();
                if (k && k.parentElement() == m) {
                    f = m.value.length;
                    o = m.value.replace(/\r\n/g, "\n");
                    g = m.createTextRange();
                    g.moveToBookmark(k.getBookmark());
                    n = m.createTextRange();
                    n.collapse(false);
                    if (g.compareEndPoints("StartToEnd", n) > -1) {
                        p = h = f
                    } else {
                        p = -g.moveStart("character", -f);
                        p += o.slice(0, p).split("\n").length - 1;
                        if (g.compareEndPoints("EndToEnd", n) > -1) {
                            h = f
                        } else {
                            h = -g.moveEnd("character", -f);
                            h += o.slice(0, h).split("\n").length - 1
                        }
                    }
                }
            }
            return {
                start: p,
                end: h
            }
        }

        function e(o) {
            o = o || event;
            var m = d.get("value");
            var h = 0;
            var n = 0;
            if (o.type == "keypress") {
                h = o.event.charCode | h
            } else {
                n = o.event.keyCode | n
            }
            var g = c(o.target);
            if (h == 0 && n != 8 && n != 46) {
                return true
            }
            if (h == 0 && (n == 8 || n == 46)) {
                if (typeof(a.success) === "function") {
                    var k = "";
                    if (g.start == 0 && (g.end - g.start) > 0) {
                        k = m.substr(0, g.start - 1) + m.substr(g.end)
                    } else {
                        if (g.end == m.length && (g.end - g.start) > 0) {
                            k = m.substr(0, g.start) + m.substr(g.end + 1)
                        } else {
                            if ((g.end - g.start) > 0) {
                                k = m.substr(0, g.start) + m.substr(g.end)
                            } else {
                                if ((g.end - g.start) == 0) {
                                    if (n == 8) {
                                        k = m.substr(0, g.start - 1) + m.substr(g.end)
                                    }
                                    if (n == 46) {
                                        k = m.substr(0, g.start) + m.substr(g.end + 1)
                                    }
                                }
                            }
                        }
                    }
                    return a.success.call(this, k)
                }
            }
            var p = m.substr(0, g.start);
            var f = m.substr(g.end);
            m = p + String.fromCharCode(h) + f;
            if (h > 0 && b.test(m)) {
                if (typeof(a.success) === "function") {
                    return a.success.call(this, m)
                }
                return true
            } else {
                if (typeof(a.failure) === "function") {
                    return a.failure.call(this, m)
                }
            }
            return false
        }
        return (this.addEvent("keydown", e) && this.addEvent("keypress", e))
    }
});
var Form = (function() {
    function h(o) {
        switch (o.type.toLowerCase()) {
            case "checkbox":
            case "radio":
                return g(o);
            default:
                return e(o)
        }
    }

    function g(o) {
        return o.checked ? o.value : null
    }

    function e(o) {
        return o.value
    }

    function k(o) {
        return (o.type === "select-one" ? m : b)(o)
    }

    function m(p) {
        var o = p.selectedIndex;
        return o >= 0 ? f(p.options[o]) : null
    }

    function b(r) {
        var s = r.length;
        if (!s) {
            return null
        }
        for (var q = 0, o = []; q < s; q++) {
            var p = r.options[q];
            if (p.selected) {
                o.push(f(p))
            }
        }
        return o
    }

    function a(o, p) {
        return !!o.getAttribute(p)
    }

    function f(o) {
        return a(o, "value") ? o.value : o.text
    }
    var n = {
        input: h,
        inputSelector: g,
        textarea: e,
        select: k,
        selectOne: m,
        selectMany: b,
        optionValue: f,
        button: e
    };

    function c(o) {
        o = $(o);
        var p = o.tagName.toLowerCase();
        return n[p](o)
    }

    function d(r) {
        var s = $(r).getElementsByTagName("*"),
            q, o = [];
        for (var p = 0; q = s[p]; p++) {
            o.push(q)
        }
        return o.inject([], function(t, u) {
            if (n[u.tagName.toLowerCase()]) {
                t.push($(u))
            }
            return t
        })
    }
    return {
        serialize: function(p, w) {
            var o = d(p);
            if (typeof w != "object") {
                w = {}
            }
            var v, u, t = false,
                s = w.submit,
                q, r;
            r = {};
            q = function(x, y, z) {
                if (y in x) {
                    if (typeOf(x[y]) == "array") {
                        x[y] = [x[y]]
                    }
                    x[y].push(z)
                } else {
                    x[y] = z
                }
                return x
            };
            return o.inject(r, function(x, y) {
                if (!y.disabled && y.name) {
                    v = y.name;
                    u = c(y);
                    if (u != null && y.type != "file" && (y.type != "submit" || (!t && s !== false && (!s || v == s) && (t = true)))) {
                        x = q(x, v, u)
                    }
                }
                return x
            })
        }
    }
})();
Hash.implement({
    find: function(d, c) {
        var a = undefined;
        var b = d;
        if (c) {
            b = b.bind(c)
        }
        this.some(function(f, e, g) {
            if (b(f, e, g)) {
                a = f;
                return true
            }
            return false
        });
        return a
    },
    inject: function(b, a) {
        this.each(function(d, c, e) {
            b = a(b, d, c, e)
        });
        return b
    },
    invoke: function(a) {
        this.each(function(b) {
            if (b[a]) {
                b[a]()
            }
        });
        return this
    },
    ksort: function(c) {
        var b = this;
        var a = $H({});
        this.getKeys().sort(c).each(function(d) {
            a[d] = b[d]
        });
        return a
    },
    merge: function(a) {
        return $H(Object.merge({}, this.toObject(), a || {}))
    },
    sort: function(a) {
        return this.toArray().sort(a)
    },
    toArray: function() {
        var a = [];
        this.each(function(b) {
            a.push(b)
        });
        return a
    },
    toObject: function() {
        var a = {};
        this.each(function(c, b) {
            a[b] = c
        });
        return a
    }
});
Number.implement({
    isNaN: function() {
        return isNaN(this)
    },
    sgn: function() {
        if (this < 0) {
            return -1
        } else {
            if (this > 0) {
                return 1
            }
        }
        return 0
    }
});
String.implement({
    fromQueryString: function(b) {
        var c = this;
        var a;
        if (c.indexOf("?") != -1) {
            c = c.substr(c.indexOf("?") + 1)
        }
        a = $H(Array.convert(c.split("&")).inject({}, function(d, e) {
            e = e.split("=");
            if (e.length == 2) {
                d[e[0]] = e[1]
            }
            return d
        }));
        if (a && a.toObject && b) {
            a = a.toObject()
        }
        return a
    },
    leftPad: function(b, c) {
        var a = new String(this);
        if (!c) {
            c = " "
        }
        while (a.length < b) {
            a = c + a
        }
        return a.toString()
    },
    stripTags: function() {
        return this.replace(/<\/?[^>]+>/gi, "")
    },
    substituteWithoutReplacingUndefinedKeys: function(a, b) {
        return this.replace(b || (/\\?\{([^{}]+)\}/g), function(d, c) {
            if (d.charAt(0) == "\\") {
                return d.slice(1)
            }
            return (a[c] != undefined) ? a[c] : "{" + c + "}"
        })
    },
    unescapeHtml: function() {
        var b = new Element("div");
        b.innerHTML = this.stripTags();
        if (!b.childNodes[0]) {
            return ""
        }
        if (b.childNodes.length > 1) {
            var a = "";
            Array.convert(b.childNodes).each(function(c) {
                return a + c.nodeValue
            });
            return a
        } else {
            return b.childNodes[0].nodeValue
        }
    }
});
Element.NativeEvents = Object.append(Element.NativeEvents, {
    touchstart: 2,
    touchend: 2,
    touchmove: 2,
    touchcancel: 2,
    gesturechange: 2,
    gestureend: 2
});
Element.inject = Element.inject.wrap(function(f, b, d, c) {
    var a = f(b, d, c);
    var e;
    if (typeof a != "undefined" && (typeOf(e = a.select("script")) == "array")) {
        e.each(function(g) {
            Browser.exec(g.text)
        })
    }
    return a
});
Element.prototype.inject = Element.prototype.inject.wrap(function(f, b, d, c) {
    var a = f(b, d, c);
    var e;
    if (typeof a != "undefined" && (typeOf(e = a.select("script")) == "array")) {
        e.each(function(g) {
            Browser.exec(g.text)
        })
    }
    return a
});
Element.grab = Element.grab.wrap(function(e, c, b, f) {
    if (typeof f === "undefined") {
        f = true
    }
    var a = e(c, b, f);
    var d;
    if (f && typeof a != "undefined" && (typeOf(d = a.select("script")) == "array")) {
        d.each(function(g) {
            Browser.exec(g.text)
        })
    }
    return a
});
Element.prototype.grab = Element.prototype.grab.wrap(function(e, c, b, f) {
    if (typeof f === "undefined") {
        f = true
    }
    var a = e(c, b, f);
    var d;
    if (f && typeof a != "undefined" && (typeOf(d = a.select("script")) == "array")) {
        d.each(function(g) {
            Browser.exec(g.text)
        })
    }
    return a
});
(function() {
    function a(f) {
        var e, d, c = "",
            g = String.fromCharCode;
        f = f.replace(/\r\n/g, "\n");
        for (e = 0; d = f.charCodeAt(e); e++) {
            if (d < 128) {
                c += g(d)
            } else {
                if ((d > 127) && (d < 2048)) {
                    c += g((d >> 6) | 192);
                    c += g((d & 63) | 128)
                } else {
                    c += g((d >> 12) | 224);
                    c += g(((d >> 6) & 63) | 128);
                    c += g((d & 63) | 128)
                }
            }
        }
        return c
    }

    function b(f) {
        var d = 0,
            c = "",
            h = 0,
            g = 0,
            e = 0;
        while (d < f.length) {
            h = f.charCodeAt(d);
            if (h < 128) {
                c += String.fromCharCode(h);
                d++
            } else {
                if ((h > 191) && (h < 224)) {
                    g = f.charCodeAt(d + 1);
                    c += String.fromCharCode(((h & 31) << 6) | (g & 63));
                    d += 2
                } else {
                    g = f.charCodeAt(d + 1);
                    e = f.charCodeAt(d + 2);
                    c += String.fromCharCode(((h & 15) << 12) | ((g & 63) << 6) | (e & 63));
                    d += 3
                }
            }
        }
        return c
    }
    String.implement({
        toUTF8: function() {
            return a(this)
        },
        fromUTF8: function() {
            return b(this)
        }
    })
})();
(function() {
    var b = {
        f: function(f, e, g) {
            return (f & e) | ((~f) & g)
        },
        g: function(f, e, g) {
            return (f & g) | (e & (~g))
        },
        h: function(f, e, g) {
            return (f ^ e ^ g)
        },
        i: function(f, e, g) {
            return (e ^ (f | (~g)))
        },
        rotateLeft: function(f, e) {
            return (f << e) | (f >>> (32 - e))
        },
        addUnsigned: function(h, g) {
            var k = (h & 2147483648),
                m = (g & 2147483648),
                n = (h & 1073741824),
                f = (g & 1073741824),
                e = (h & 1073741823) + (g & 1073741823);
            if (n & f) {
                return (e ^ 2147483648 ^ k ^ m)
            }
            if (n | f) {
                if (e & 1073741824) {
                    return (e ^ 3221225472 ^ k ^ m)
                } else {
                    return (e ^ 1073741824 ^ k ^ m)
                }
            } else {
                return (e ^ k ^ m)
            }
        },
        compound: function(s, r, q, p, o, n, m, k) {
            var v = b,
                u = v.addUnsigned,
                t = u(r, u(u(v[s](q, p, o), m), n));
            return u(v.rotateLeft(t, k), q)
        }
    };

    function a(f) {
        var h = f.length,
            n = (((h + 8) - ((h + 8) % 64)) / 64 + 1) * 16,
            g = new Array(),
            e, m, k = 0;
        while (k < h) {
            e = (k - (k % 4)) / 4;
            m = (k % 4) * 8;
            g[e] = (g[e] | (f.charCodeAt(k) << m));
            k++
        }
        e = (k - (k % 4)) / 4;
        m = (k % 4) * 8;
        g[e] = g[e] | (128 << m);
        g[n - 2] = h << 3;
        g[n - 1] = h >>> 29;
        return g
    }

    function d(g) {
        var e = "",
            f, k, h;
        for (h = 0; h <= 3; h++) {
            k = (g >>> (h * 8)) & 255;
            f = "0" + k.toString(16);
            e = e + f.substr(f.length - 2, 2)
        }
        return e
    }

    function c(f) {
        var A, y, w, v, z = a(f.toUTF8()),
            G = 1732584193,
            E = 4023233417,
            D = 2562383102,
            C = 271733878,
            n = 7,
            m = 12,
            h = 17,
            g = 22,
            e = 5,
            J = 9,
            I = 14,
            H = 20,
            F = 4,
            u = 11,
            t = 16,
            s = 23,
            r = 6,
            q = 10,
            p = 15,
            o = 21;
        for (var B = 0; B < z.length; B += 16) {
            A = G;
            y = E;
            w = D;
            v = C;
            G = b.compound("f", G, E, D, C, 3614090360, z[B + 0], n);
            C = b.compound("f", C, G, E, D, 3905402710, z[B + 1], m);
            D = b.compound("f", D, C, G, E, 606105819, z[B + 2], h);
            E = b.compound("f", E, D, C, G, 3250441966, z[B + 3], g);
            G = b.compound("f", G, E, D, C, 4118548399, z[B + 4], n);
            C = b.compound("f", C, G, E, D, 1200080426, z[B + 5], m);
            D = b.compound("f", D, C, G, E, 2821735955, z[B + 6], h);
            E = b.compound("f", E, D, C, G, 4249261313, z[B + 7], g);
            G = b.compound("f", G, E, D, C, 1770035416, z[B + 8], n);
            C = b.compound("f", C, G, E, D, 2336552879, z[B + 9], m);
            D = b.compound("f", D, C, G, E, 4294925233, z[B + 10], h);
            E = b.compound("f", E, D, C, G, 2304563134, z[B + 11], g);
            G = b.compound("f", G, E, D, C, 1804603682, z[B + 12], n);
            C = b.compound("f", C, G, E, D, 4254626195, z[B + 13], m);
            D = b.compound("f", D, C, G, E, 2792965006, z[B + 14], h);
            E = b.compound("f", E, D, C, G, 1236535329, z[B + 15], g);
            G = b.compound("g", G, E, D, C, 4129170786, z[B + 1], e);
            C = b.compound("g", C, G, E, D, 3225465664, z[B + 6], J);
            D = b.compound("g", D, C, G, E, 643717713, z[B + 11], I);
            E = b.compound("g", E, D, C, G, 3921069994, z[B + 0], H);
            G = b.compound("g", G, E, D, C, 3593408605, z[B + 5], e);
            C = b.compound("g", C, G, E, D, 38016083, z[B + 10], J);
            D = b.compound("g", D, C, G, E, 3634488961, z[B + 15], I);
            E = b.compound("g", E, D, C, G, 3889429448, z[B + 4], H);
            G = b.compound("g", G, E, D, C, 568446438, z[B + 9], e);
            C = b.compound("g", C, G, E, D, 3275163606, z[B + 14], J);
            D = b.compound("g", D, C, G, E, 4107603335, z[B + 3], I);
            E = b.compound("g", E, D, C, G, 1163531501, z[B + 8], H);
            G = b.compound("g", G, E, D, C, 2850285829, z[B + 13], e);
            C = b.compound("g", C, G, E, D, 4243563512, z[B + 2], J);
            D = b.compound("g", D, C, G, E, 1735328473, z[B + 7], I);
            E = b.compound("g", E, D, C, G, 2368359562, z[B + 12], H);
            G = b.compound("h", G, E, D, C, 4294588738, z[B + 5], F);
            C = b.compound("h", C, G, E, D, 2272392833, z[B + 8], u);
            D = b.compound("h", D, C, G, E, 1839030562, z[B + 11], t);
            E = b.compound("h", E, D, C, G, 4259657740, z[B + 14], s);
            G = b.compound("h", G, E, D, C, 2763975236, z[B + 1], F);
            C = b.compound("h", C, G, E, D, 1272893353, z[B + 4], u);
            D = b.compound("h", D, C, G, E, 4139469664, z[B + 7], t);
            E = b.compound("h", E, D, C, G, 3200236656, z[B + 10], s);
            G = b.compound("h", G, E, D, C, 681279174, z[B + 13], F);
            C = b.compound("h", C, G, E, D, 3936430074, z[B + 0], u);
            D = b.compound("h", D, C, G, E, 3572445317, z[B + 3], t);
            E = b.compound("h", E, D, C, G, 76029189, z[B + 6], s);
            G = b.compound("h", G, E, D, C, 3654602809, z[B + 9], F);
            C = b.compound("h", C, G, E, D, 3873151461, z[B + 12], u);
            D = b.compound("h", D, C, G, E, 530742520, z[B + 15], t);
            E = b.compound("h", E, D, C, G, 3299628645, z[B + 2], s);
            G = b.compound("i", G, E, D, C, 4096336452, z[B + 0], r);
            C = b.compound("i", C, G, E, D, 1126891415, z[B + 7], q);
            D = b.compound("i", D, C, G, E, 2878612391, z[B + 14], p);
            E = b.compound("i", E, D, C, G, 4237533241, z[B + 5], o);
            G = b.compound("i", G, E, D, C, 1700485571, z[B + 12], r);
            C = b.compound("i", C, G, E, D, 2399980690, z[B + 3], q);
            D = b.compound("i", D, C, G, E, 4293915773, z[B + 10], p);
            E = b.compound("i", E, D, C, G, 2240044497, z[B + 1], o);
            G = b.compound("i", G, E, D, C, 1873313359, z[B + 8], r);
            C = b.compound("i", C, G, E, D, 4264355552, z[B + 15], q);
            D = b.compound("i", D, C, G, E, 2734768916, z[B + 6], p);
            E = b.compound("i", E, D, C, G, 1309151649, z[B + 13], o);
            G = b.compound("i", G, E, D, C, 4149444226, z[B + 4], r);
            C = b.compound("i", C, G, E, D, 3174756917, z[B + 11], q);
            D = b.compound("i", D, C, G, E, 718787259, z[B + 2], p);
            E = b.compound("i", E, D, C, G, 3951481745, z[B + 9], o);
            G = b.addUnsigned(G, A);
            E = b.addUnsigned(E, y);
            D = b.addUnsigned(D, w);
            C = b.addUnsigned(C, v)
        }
        return (d(G) + d(E) + d(D) + d(C)).toLowerCase()
    }
    String.implement({
        toMD5: function() {
            return c(this)
        }
    })
})();
if (Browser.name == "ie" && Browser.version < 11) {
    Element.implement({
        insertAtCursor: function(b, a) {
            var d = this.getSelectedRange();
            if (d.start == 0 && d.end == 0) {
                this.focus();
                sel = document.selection.createRange();
                sel.text = b;
                this.focus();
                return this
            }
            var c = this.get("value");
            this.set("value", c.substring(0, d.start) + b + c.substring(d.end, c.length));
            if (Array.pick(a, true)) {
                this.selectRange(d.start, d.start + b.length)
            } else {
                this.setCaretPosition(d.start + b.length)
            }
            return this
        },
        insertAroundCursor: function(b, a) {
            b = Object.append({
                before: "",
                defaultMiddle: "",
                after: ""
            }, b);
            var c = this.getSelectedText() || b.defaultMiddle;
            var g = this.getSelectedRange();
            if (g.start == 0 && g.end == 0) {
                this.focus();
                sel = document.selection.createRange();
                sel.text = b.before + b.after;
                this.focus();
                return this
            }
            var f = this.get("value");
            if (g.start == g.end) {
                this.set("value", f.substring(0, g.start) + b.before + c + b.after + f.substring(g.end, f.length));
                this.selectRange(g.start + b.before.length, g.end + b.before.length + c.length)
            } else {
                var d = f.substring(g.start, g.end);
                this.set("value", f.substring(0, g.start) + b.before + d + b.after + f.substring(g.end, f.length));
                var e = g.start + b.before.length;
                if (Array.pick(a, true)) {
                    this.selectRange(e, e + d.length)
                } else {
                    this.setCaretPosition(e + f.length)
                }
            }
            return this
        }
    })
}(function() {
    var e = "1.2.4";
    var s = false;
    var m = [];
    var w = function(B) {
        var C = B.split(".");
        return parseInt(C[0]) * 100000 + parseInt(C[1]) * 1000 + parseInt(C[2])
    };
    if (typeof MooTools == "undefined" || w(MooTools.version) < w(e)) {
        throw ("jScroll requires the MooTools JavaScript framework >= " + e);
        return
    }
    var p = /jScroll\.js(\?.*)?$/;
    var c = null;
    var u = $$("head script[src]").find(function(B) {
        if (c == null) {
            c = B
        }
        return B.src.match(p)
    });
    if (u) {
        u = u.src.replace(p, "")
    } else {
        u = c.src.replace(p, "")
    }
    var a = function(B) {
        if (!s) {
            window.addEvent("domready", function() {
                s = true;
                B()
            })
        } else {
            B.bind(window)()
        }
    };
    var x = function(B) {
        if (B < 0) {
            B = 0
        } else {
            if (B > 100) {
                B = 100
            }
        }
        return B
    };
    var f = function(D) {
        var B = function() {
            var E = /^[\s\n\r]+|[\s\n\r]+$/g;
            return function(F) {
                return F.replace(E, "")
            }
        }();
        var C = function(E, I) {
            if (E.indexOf(",") != -1) {
                E.split(",").each(function(J) {
                    C(B(J), I)
                });
                return
            }
            var H = $("jScroll.css");
            if (!H) {
                var H = document.createElement("style");
                H.setAttribute("type", "text/css");
                H.setAttribute("media", "screen");
                H.setAttribute("id", "jScroll.css");
                Element.insert(document.getElementsByTagName("head")[0], {
                    top: H
                })
            }
            if (typeof I != "string") {
                var F = "";
                Object.each(I, function(K, J) {
                    F + J.hyphenate() + ":" + K, J
                });
                I = F
            }
            if (Browser.name != "ie" || (Browser.name == "ie" && Browser.version >= 9)) {
                H.appendChild(document.createTextNode(E + " {" + I + "}\n"))
            }
            if (Browser.name == "ie" && Browser.version < 9 && document.styleSheets && document.styleSheets.length > 0) {
                var G = document.styleSheets[0];
                if (typeof(G.addRule) == "object") {
                    G.addRule(E, I)
                }
            }
        };
        D.replace(/[\n\r]/gi, "").split("}").each(function(E) {
            E = E.split("{");
            if (E.length < 2 || B(E[0]) == 0 || B(E[1]) == 0) {
                return
            }
            C(B(E[0]), B(E[1]))
        })
    };
    var d = function(B) {
        B.container = $(B.container);
        if (!B.container || !B.container.nodeName || B.container.nodeType != 1) {
            throw ("Missing scroll container for jScroll!")
        }
        if (B.container.tagName != "DIV") {
            throw ("invalid scroll container for jScroll! Can only be a div")
        }
        B.container._jScroll = B;
        b(B.container);
        if (z(B, "onRenderBefore") === false) {
            return
        }
        if (B.rendered) {
            return
        }
        B.rendered = true;
        B.container.setStyles({
            overflow: "hidden"
        });
        var D = B.container.getChildren();
        D.each(function(E) {
            E.dispose()
        });
        B.container.innerHTML = "";
        Element.insert(B.container, {
            bottom: '<div class="jScroll"><div class="jScroll-content"></div><div class="jScroll-scroll ' + B.options.clsScroll + '"><div class="jScroll-scroll-up"><div class="' + B.options.clsUp + '"></div></div><div class="jScroll-scroll-between ' + B.options.clsBetween + '"></div><div class="jScroll-scroll-slider ' + B.options.clsSlider + '"><div class="' + B.options.clsSlider + ' top"></div><div class="' + B.options.clsSlider + ' center"></div><div class="' + B.options.clsSlider + ' bottom"></div></div><div class="jScroll-scroll-between ' + B.options.clsBetween + '"></div><div class="jScroll-scroll-down"><div class="' + B.options.clsDown + '"></div></div></div></div>'
        });
        B.element = B.container.down(".jScroll");
        B.elementContent = B.container.down(".jScroll-content");
        B.elementScroll = B.container.down(".jScroll-scroll");
        B.elementUp = B.container.down(".jScroll-scroll-up");
        B.elementUpBetween = B.container.down(".jScroll-scroll-between", 0);
        B.elementSlider = B.container.down(".jScroll-scroll-slider");
        B.elementSliderTop = B.elementSlider.down(".top");
        B.elementSliderCenter = B.elementSlider.down(".center");
        B.elementSliderBottom = B.elementSlider.down(".bottom");
        B.elementDownBetween = B.container.down(".jScroll-scroll-between", 1);
        B.elementDown = B.container.down(".jScroll-scroll-down");
        D.each(function(E) {
            Element.insert(B.elementContent, {
                bottom: E
            })
        });
        var C = 0;
        B.elementScroll.addEvent("mousedown", function(E) {
            B._sliderScroll = true;
            E.stop();
            n(function() {
                if (y(B.elementSlider) <= C && C <= y(B.elementSlider) + B.elementSlider.getSize().y) {
                    return
                }
                var F = C - y(B.elementSlider);
                if (F < 0) {
                    B.elementUpBetween.addClass(B.options.clsBetweenClicked);
                    B.elementDownBetween.removeClass(B.options.clsBetweenClicked)
                } else {
                    B.elementUpBetween.removeClass(B.options.clsBetweenClicked);
                    B.elementDownBetween.addClass(B.options.clsBetweenClicked)
                }
                B.scroll((F < 0 ? -1 : 1) * B.stepLarge)
            }, B)
        });
        B.elementUp.addEvent("mousedown", function(E) {
            B._sliderScroll = true;
            E.stop();
            n(B.up.pass([B.stepSmall, B], B), B)
        });
        B.elementDown.addEvent("mousedown", function(E) {
            B._sliderScroll = true;
            E.stop();
            n(B.down.pass([B.stepSmall], B), B)
        });
        B.elementSlider.addEvent("mousedown", function(E) {
            E.stop();
            B._sliderMove = true;
            B._sliderY = E.page.y - parseFloat(B.elementSlider.getStyle("top")) + B.elementUp.getSize().y
        });
        document.addEvent("mousemove", function(F) {
            C = F.page.y;
            if (!B._sliderMove) {
                return
            }
            F.stop();
            var E = (F.page.y - B._sliderY) * 100 / B.sliderHeight;
            if (z(B, "onScrollSlideBefore", E) === false) {
                return
            }
            B.update(E);
            z(B, "onScrollSlideAfter")
        });
        document.addEvent("mouseup", function(E) {
            if (B._sliderMove || B._sliderScroll) {
                E.stop();
                B._sliderMove = false;
                B._sliderScroll = false;
                A(B);
                B.elementUpBetween.removeClass(B.options.clsBetweenClicked);
                B.elementDownBetween.removeClass(B.options.clsBetweenClicked);
                B.elementDownBetween.removeClass(B.options.clsBetweenClicked)
            }
        });
        B.element.addEvent("mousewheel", function(E) {
            E.stop();
            B.scroll(-E.wheel * (E.alt ? B.stepSmall : B.stepLarge))
        });
        B.refresh();
        z(B, "onRenderAfter")
    };
    var z = function(C, B, E) {
        if (typeof C.options[B] != "function") {
            return true
        }
        if (typeof E != "undefined") {
            E = x(E);
            if (C.current == E) {
                return false
            }
            var G = C.options[B].pass([C, C.current, E])
        } else {
            var G = C.options[B].pass([C])
        }
        try {
            return G()
        } catch (D) {
            if (Browser.name == "firefox") {
                var F = D.name + " in " + D.fileName + " #" + D.lineNumber + " : " + D.message
            } else {
                if (Browser.name == "ie") {
                    var F = D.name + " " + D.number + " : " + D.message
                } else {
                    if (Browser.name == "chrome" || Browser.name == "safari") {
                        var F = D.name + " in " + D.sourceURL + " #" + D.line + " : " + D.message
                    } else {
                        var F = JSON.encode(D)
                    }
                }
            }
            return
        }
    };
    var n = function(C, B) {
        A(B);
        C.bind(B)();
        B._pe = C.periodical(50, B)
    };
    var A = function(B) {
        if (B._pe) {
            clearInterval(B._pe)
        }
    };
    var b = function(B) {
        m.push(B);
        return m
    };
    window.jScroll = new Class({
        current: 0,
        container: null,
        element: null,
        elementContent: null,
        elementDown: null,
        elementScroll: null,
        elementSlider: null,
        elementUp: null,
        enabled: false,
        options: null,
        rendered: false,
        stepLarge: 10,
        stepSmall: 1,
        applyContent: function(B) {
            this.elementContent.innerHTML = "";
            Element.insert(this.elementContent, B);
            this.refresh();
            this.update();
            return this
        },
        down: function(B) {
            if (typeof B == "undefined") {
                B = this.options.scrollSmall
            }
            if (z(this, "onScrollDownBefore", this.current + B) === false) {
                return this
            }
            this.scroll(B);
            z(this, "onScrollDownAfter");
            return this
        },
        initialize: function(B) {
            if (typeof B.container == "undefined") {
                throw ("Missing container in options for jScroll!")
            }
            this.container = B.container;
            this.options = B;
            this.options.clsBetween = this.options.clsBetween || "jScroll-element-between";
            this.options.clsBetweenClicked = this.options.clsBetweenClicked || "clicked";
            this.options.clsDown = this.options.clsDown || "jScroll-element-down";
            this.options.clsScroll = this.options.clsScroll || "jScroll-element-scroll";
            this.options.clsSlider = this.options.clsSlider || "jScroll-element-slider";
            this.options.clsUp = this.options.clsUp || "jScroll-element-up";
            this.options.lines = this.options.lines || 10;
            this.options.alignRight = typeof this.options.alignRight != "undefined" ? this.options.alignRight : "auto";
            if (!s) {
                a(d.pass([this]))
            } else {
                d(this)
            }
        },
        insertContent: function(B) {
            Element.insert(this.elementContent, B);
            this.refresh();
            this.update();
            return this
        },
        refresh: function() {
            var G = true;
            var E = null;
            var D = null;
            if (!this.rendered) {
                return this
            }
            if (this.container.isDisplayed() === false) {
                G = false;
                this.container.setStyles({
                    display: "block"
                })
            }
            E = this.elementContent.getSize().y;
            D = parseInt(this.container.getStyle("max-height"));
            if (D > 0) {
                this.container.setStyles({
                    height: E <= D ? E : D
                })
            }
            this.elementContent.setStyles({
                height: "auto"
            });
            E = this.elementContent.getSize().y;
            if (E <= this.element.getSize().y) {
                this.enabled = false;
                this.container.setStyles({
                    overflow: ""
                });
                this.elementScroll.hide();
                this.elementContent.setStyles({
                    marginTop: 0,
                    right: ""
                });
                if (G === false) {
                    this.container.setStyles({
                        display: ""
                    })
                }
                return this
            }
            this.enabled = true;
            this.elementScroll.show();
            this.container.setStyles({
                overflow: "hidden"
            });
            if ($(document.body).getStyle("direction").toLowerCase() == "ltr") {
                this.elementContent.setStyles({
                    marginTop: 0,
                    right: this.options.alignRight == "auto" ? this.elementScroll.getSize().x + "px" : this.options.alignRight
                })
            } else {
                this.elementContent.setStyles({
                    marginTop: 0,
                    left: this.options.alignRight == "auto" ? this.elementScroll.getSize().x + "px" : this.options.alignRight
                })
            }
            this.sliderTop = this.elementUp.getSize().y - q(this.elementUp, "tb");
            this.sliderHeight = this.elementScroll.getSize().y - this.elementUp.getSize().y - q(this.elementUp, "tb") - this.elementDown.getSize().y - q(this.elementDown, "tb");
            var C = this.element.getSize().y;
            var F = this.elementContent.getSize().y;
            this.contentHeight = F - C;
            this.stepSmall = C * 100 / (this.options.lines * F);
            this.stepLarge = this.stepSmall * this.options.lines;
            var B = (this.sliderHeight * C / F);
            if (B < this.elementSliderTop.getSize().y + this.elementSliderBottom.getSize().y) {
                B = this.elementSliderTop.getSize().y + this.elementSliderBottom.getSize().y
            }
            this.elementSlider.setStyles({
                height: B,
                top: this.sliderTop
            });
            this.elementSliderCenter.setStyles({
                height: (B - this.elementSliderTop.getSize().y - this.elementSliderBottom.getSize().y)
            });
            this.elementContent.setStyles({
                height: "100%"
            });
            this.elementUpBetween.setStyles({
                top: this.sliderTop,
                height: 0
            });
            this.elementDownBetween.setStyles({
                top: (this.sliderTop + this.sliderHeight * this.current / 100 + this.elementSlider.getSize().y),
                bottom: this.elementDown.getSize().y
            });
            this.sliderHeight -= B;
            if (G === false) {
                this.container.setStyles({
                    display: ""
                })
            }
            return this
        },
        scroll: function(B) {
            if (typeof B == "undefined" || B == 0 || (B < 0 && this.current <= 0) || (B > 0 && this.current >= 100)) {
                return this
            }
            if (z(this, "onScrollBefore", this.current + B) === false) {
                return this
            }
            this.current += B;
            this.update();
            z(this, "onScrollAfter");
            return this
        },
        scrollTo: function(K) {
            var I = this;
            var E = null;
            var B = false;
            var F = "view";
            var H = 0;
            if (typeOf(K) == "element") {
                E = K
            } else {
                E = K.element;
                B = K.animate;
                F = K.position
            }
            E = $(E);
            if (!E || !E.getParents().find(function(L) {
                    return L == I.elementContent
                })) {
                return this
            }
            var D = y(this.elementContent);
            var J = this.elementContent.getSize().y;
            var C = y(E);
            var G = E.getSize().y;
            switch (F) {
                case "top":
                    H = (C - D) * 100 / this.contentHeight;
                    break;
                case "view":
                default:
                    H = (C - D - this.sliderHeight / 2) * 100 / this.contentHeight;
                    break
            }
            if (z(this, "onScrollBefore", H) === false) {
                return this
            }
            this.update(H, B);
            z(this, "onScrollAfter");
            return this
        },
        up: function(B) {
            if (typeof B == "undefined") {
                B = this.options.scrollSmall
            }
            if (z(this, "onScrollUpBefore", this.current - B) === false) {
                return this
            }
            this.scroll(-1 * B);
            z(this, "onScrollUpAfter");
            return this
        },
        update: function(C, B) {
            B = typeof B == "undefined" ? false : B;
            if (!this.rendered || !this.enabled) {
                return this
            }
            if (typeof C != "undefined") {
                this.current = C
            }
            this.current = x(this.current);
            z(this, "onUpdateBefore");
            this.elementSlider.setStyles({
                top: (this.sliderTop + this.sliderHeight * this.current / 100)
            });
            if (B) {
                new Fx.Morph(this.elementContent).start({
                    marginTop: (-1 * this.contentHeight * this.current / 100)
                })
            } else {
                this.elementContent.setStyles({
                    marginTop: (-1 * this.contentHeight * this.current / 100)
                })
            }
            this.elementUpBetween.setStyles({
                height: (this.sliderTop + this.sliderHeight * this.current / 100 - this.elementUp.getSize().y)
            });
            this.elementDownBetween.setStyles({
                top: (this.sliderTop + this.sliderHeight * this.current / 100 + this.elementSlider.getSize().y)
            });
            z(this, "onUpdateAfter");
            return this
        }
    });
    jScroll.$ = function(C) {
        var B = $(C);
        if (!B && typeof C == "string") {
            B = m.find(function(D) {
                return D.id == C
            })
        } else {
            if (B && typeof B._jScroll != "undefined") {
                B = B._jScroll
            } else {
                if (B && typeof B._jScroll == "undefined") {
                    B = null
                }
            }
        }
        return (B ? B : null)
    };
    var k = document.compatMode == "CSS1Compat";
    var r = function(F, H, G) {
        var I = 0,
            D, C;
        F = $(F);
        for (var E = 0, B = H.length; E < B; E++) {
            D = F.getStyle(G[H.charAt(E)]);
            if (D) {
                C = parseInt(D, 10);
                if (C) {
                    I += (C >= 0 ? C : -1 * C)
                }
            }
        }
        return I
    };
    var g = function(C, B) {
        C = $(C);
        return r(C, B, {
            l: "border-left-width",
            r: "border-right-width",
            t: "border-top-width",
            b: "border-bottom-width"
        })
    };
    var t = function(C) {
        var D = null;
        C = $(C);
        var B = 0;
        C.getChildren().each(function(F, E) {
            if (F.nodeType != 1) {
                if (E == 0) {
                    D = F
                }
                return
            }
            F = $(F);
            if (D) {
                B += F.offsetTop - C.offsetTop;
                D = null
            }
            return B + F.getSize().y + h(F, "tb")
        });
        return B
    };
    var q = function(C, D, B) {
        C = $(C);
        return B && Browser.name == "ie" && !k ? 0 : (v(C, D) + g(C, D))
    };
    var h = function(C, B) {
        C = $(C);
        if (!B) {
            return {
                top: parseInt(C.getStyle("margin-top"), 10) || 0,
                left: parseInt(C.getStyle("margin-left"), 10) || 0,
                bottom: parseInt(C.getStyle("margin-bottom"), 10) || 0,
                right: parseInt(C.getStyle("margin-right"), 10) || 0
            }
        } else {
            return r(C, B, {
                l: "margin-left",
                r: "margin-right",
                t: "margin-top",
                b: "margin-bottom"
            })
        }
    };
    var v = function(C, B) {
        C = $(C);
        return r(C, B, {
            l: "padding-left",
            r: "padding-right",
            t: "padding-top",
            b: "padding-bottom"
        })
    };
    var o = function(D) {
        D = $(D);
        var F = D,
            E = document;
        if (F == E || F == E.body) {
            var B, C;
            if (Browser.name == "ie" && k) {
                B = E.documentElement.scrollLeft || (E.body.scrollLeft || 0);
                C = E.documentElement.scrollTop || (E.body.scrollTop || 0)
            } else {
                B = window.pageXOffset || (E.body.scrollLeft || 0);
                C = window.pageYOffset || (E.body.scrollTop || 0)
            }
            return {
                left: B,
                top: C
            }
        } else {
            return {
                left: F.scrollLeft,
                top: F.scrollTop
            }
        }
    };
    var y = function(B) {
        B = $(B);
        var W, S, Q, G, T = (document.body || document.documentElement);
        if (B == T) {
            return 0
        }
        if (B.getBoundingClientRect) {
            Q = B.getBoundingClientRect();
            G = o($(document.body));
            return Q.top + G.top
        }
        var D = 0,
            R = 0;
        W = B;
        var X = B.getStyle("position") == "absolute";
        while (W) {
            $(W);
            D += W.offsetLeft;
            R += W.offsetTop;
            if (!X && W.getStyle("position") == "absolute") {
                X = true
            }
            if (Browser.name == "firefox") {
                S = W;
                var C = parseInt(S.getStyle("borderTopWidth"), 10) || 0;
                var V = parseInt(S.getStyle("borderLeftWidth"), 10) || 0;
                D += V;
                R += C;
                if (W != B && S.getStyle("overflow") != "visible") {
                    D += V;
                    R += C
                }
            }
            W = W.offsetParent
        }
        if ((Browser.name == "chrome" || Browser.name == "safari") && X) {
            D -= T.offsetLeft;
            R -= T.offsetTop
        }
        if (Browser.name == "firefox" && !X) {
            var U = $(T);
            D += parseInt(U.getStyle("borderLeftWidth"), 10) || 0;
            R += parseInt(U.getStyle("borderTopWidth"), 10) || 0
        }
        W = B.parentNode;
        while (W && W != T) {
            if (Prototype.Browser.name != "opera" || (W.tagName != "TR" && $(W).getStyle("display") != "inline")) {
                D -= W.scrollLeft;
                R -= W.scrollTop
            }
            W = W.parentNode
        }
        return R
    };
    a(function() {});
    window.addEvent("domready", function() {
        f(".jScroll {overflow: hidden; width: 100%; height: 100%;position:relative;}.jScroll .jScroll-content {position: absolute; top: 0px; left: 0px;}.jScroll .jScroll-scroll {cursor:pointer; position: absolute; height: 100%; right: 0px; top: 0px;}.jScroll .jScroll-scroll-up, .jScroll .jScroll-scroll-slider, .jScroll .jScroll-scroll-down, .jScroll .jScroll-scroll-between {position: absolute; width: 100%;}.jScroll .jScroll-scroll-slider {top: 10px; height: 50px;}.jScroll .jScroll-scroll-slider .top, .jScroll .jScroll-scroll-slider .center, .jScroll .jScroll-scroll-slider .bottom {width: 100%;}.jScroll .jScroll-scroll-between {}.jScroll .jScroll-scroll-down {bottom: 0px;}.jScroll .jScroll-element-scroll {width: 15px;}.jScroll .jScroll-element-down {background: transparent url(" + u + "images/down.gif) no-repeat center bottom; height: 6px;}.jScroll .jScroll-element-down:hover {background-image: url(" + u + "images/down-hover.gif);}.jScroll .jScroll-element-up {background: transparent url(" + u + "images/up.gif) no-repeat center top; height: 6px;}.jScroll .jScroll-element-up:hover {background-image: url(" + u + "images/up-hover.gif);}.jScroll .jScroll-element-between {margin-left: 4px; width: 7px; opacity: 0; background-color: #000000; filter: alpha(opacity=0);}.jScroll .jScroll-element-between:hover {opacity: 0.25; filter: alpha(opacity=25);}.jScroll .jScroll-element-between.clicked {opacity: 0.5; filter: alpha(opacity=50);}.jScroll .jScroll-element-slider .top {background: transparent url(" + u + "images/slider-top.gif) no-repeat center top; height: 1px;}.jScroll .jScroll-element-slider:hover .top {background-image: url(" + u + "images/slider-top-hover.gif);}.jScroll .jScroll-element-slider .center {background: transparent url(" + u + "images/slider-center.gif) repeat-y center top;}.jScroll .jScroll-element-slider:hover .center {background-image: url(" + u + "images/slider-center-hover.gif);}.jScroll .jScroll-element-slider .bottom {background: transparent url(" + u + "images/slider-bottom.gif) no-repeat center bottom; height: 1px;}.jScroll .jScroll-element-slider:hover .bottom {background-image: url(" + u + "images/slider-bottom-hover.gif);}")
    })
})();
/*!
 * VERSION: 1.19.1
 * DATE: 2017-01-17
 * UPDATES AND DOCS AT: http://greensock.com
 * 
 * Includes all of the following: TweenLite, TweenMax, TimelineLite, TimelineMax, EasePack, CSSPlugin, RoundPropsPlugin, BezierPlugin, AttrPlugin, DirectionalRotationPlugin
 *
 * @license Copyright (c) 2008-2017, GreenSock. All rights reserved.
 * This work is subject to the terms at http://greensock.com/standard-license or for
 * Club GreenSock members, the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 **/
;
var _gsScope = "undefined" != typeof module && module.exports && "undefined" != typeof global ? global : this || window;
(_gsScope._gsQueue || (_gsScope._gsQueue = [])).push(function() {
        _gsScope._gsDefine("TweenMax", ["core.Animation", "core.SimpleTimeline", "TweenLite"], function(D, C, B) {
                var A = function(f) {
                        var e, h = [],
                            g = f.length;
                        for (e = 0; e !== g; h.push(f[e++])) {}
                        return h
                    },
                    z = function(h, g, o) {
                        var n, m, k = h.cycle;
                        for (n in k) {
                            m = k[n], h[n] = "function" == typeof m ? m(o, g[o]) : m[o % m.length]
                        }
                        delete h.cycle
                    },
                    y = function(e, c, f) {
                        B.call(this, e, c, f), this._cycle = 0, this._yoyo = this.vars.yoyo === !0, this._repeat = this.vars.repeat || 0, this._repeatDelay = this.vars.repeatDelay || 0, this._dirty = !0, this.render = y.prototype.render
                    },
                    x = 1e-10,
                    w = B._internals,
                    v = w.isSelector,
                    u = w.isArray,
                    t = y.prototype = B.to({}, 0.1, {}),
                    s = [];
                y.version = "1.19.1", t.constructor = y, t.kill()._gc = !1, y.killTweensOf = y.killDelayedCallsTo = B.killTweensOf, y.getTweensOf = B.getTweensOf, y.lagSmoothing = B.lagSmoothing, y.ticker = B.ticker, y.render = B.render, t.invalidate = function() {
                    return this._yoyo = this.vars.yoyo === !0, this._repeat = this.vars.repeat || 0, this._repeatDelay = this.vars.repeatDelay || 0, this._uncache(!0), B.prototype.invalidate.call(this)
                }, t.updateTo = function(H, G) {
                    var F, E = this.ratio,
                        o = this.vars.immediateRender || H.immediateRender;
                    G && this._startTime < this._timeline._time && (this._startTime = this._timeline._time, this._uncache(!1), this._gc ? this._enabled(!0, !1) : this._timeline.insert(this, this._startTime - this._delay));
                    for (F in H) {
                        this.vars[F] = H[F]
                    }
                    if (this._initted || o) {
                        if (G) {
                            this._initted = !1, o && this.render(0, !0, !0)
                        } else {
                            if (this._gc && this._enabled(!0, !1), this._notifyPluginsOfEnabled && this._firstPT && B._onPluginEvent("_onDisable", this), this._time / this._duration > 0.998) {
                                var n = this._totalTime;
                                this.render(0, !0, !1), this._initted = !1, this.render(n, !0, !1)
                            } else {
                                if (this._initted = !1, this._init(), this._time > 0 || o) {
                                    for (var m, k = 1 / (1 - E), c = this._firstPT; c;) {
                                        m = c.s + c.c, c.c *= k, c.s = m - c.c, c = c._next
                                    }
                                }
                            }
                        }
                    }
                    return this
                }, t.render = function(R, Q, P) {
                    this._initted || 0 === this._duration && this.vars.repeat && this.invalidate();
                    var O, N, M, L, K, J, I, H, G = this._dirty ? this.totalDuration() : this._totalDuration,
                        F = this._time,
                        E = this._totalTime,
                        h = this._cycle,
                        g = this._duration,
                        S = this._rawPrevTime;
                    if (R >= G - 1e-7 && R >= 0 ? (this._totalTime = G, this._cycle = this._repeat, this._yoyo && 0 !== (1 & this._cycle) ? (this._time = 0, this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0) : (this._time = g, this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1), this._reversed || (O = !0, N = "onComplete", P = P || this._timeline.autoRemoveChildren), 0 === g && (this._initted || !this.vars.lazy || P) && (this._startTime === this._timeline._duration && (R = 0), (0 > S || 0 >= R && R >= -1e-7 || S === x && "isPause" !== this.data) && S !== R && (P = !0, S > x && (N = "onReverseComplete")), this._rawPrevTime = H = !Q || R || S === R ? R : x)) : 1e-7 > R ? (this._totalTime = this._time = this._cycle = 0, this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0, (0 !== E || 0 === g && S > 0) && (N = "onReverseComplete", O = this._reversed), 0 > R && (this._active = !1, 0 === g && (this._initted || !this.vars.lazy || P) && (S >= 0 && (P = !0), this._rawPrevTime = H = !Q || R || S === R ? R : x)), this._initted || (P = !0)) : (this._totalTime = this._time = R, 0 !== this._repeat && (L = g + this._repeatDelay, this._cycle = this._totalTime / L >> 0, 0 !== this._cycle && this._cycle === this._totalTime / L && R >= E && this._cycle--, this._time = this._totalTime - this._cycle * L, this._yoyo && 0 !== (1 & this._cycle) && (this._time = g - this._time), this._time > g ? this._time = g : this._time < 0 && (this._time = 0)), this._easeType ? (K = this._time / g, J = this._easeType, I = this._easePower, (1 === J || 3 === J && K >= 0.5) && (K = 1 - K), 3 === J && (K *= 2), 1 === I ? K *= K : 2 === I ? K *= K * K : 3 === I ? K *= K * K * K : 4 === I && (K *= K * K * K * K), 1 === J ? this.ratio = 1 - K : 2 === J ? this.ratio = K : this._time / g < 0.5 ? this.ratio = K / 2 : this.ratio = 1 - K / 2) : this.ratio = this._ease.getRatio(this._time / g)), F === this._time && !P && h === this._cycle) {
                        return void(E !== this._totalTime && this._onUpdate && (Q || this._callback("onUpdate")))
                    }
                    if (!this._initted) {
                        if (this._init(), !this._initted || this._gc) {
                            return
                        }
                        if (!P && this._firstPT && (this.vars.lazy !== !1 && this._duration || this.vars.lazy && !this._duration)) {
                            return this._time = F, this._totalTime = E, this._rawPrevTime = S, this._cycle = h, w.lazyTweens.push(this), void(this._lazy = [R, Q])
                        }
                        this._time && !O ? this.ratio = this._ease.getRatio(this._time / g) : O && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1))
                    }
                    for (this._lazy !== !1 && (this._lazy = !1), this._active || !this._paused && this._time !== F && R >= 0 && (this._active = !0), 0 === E && (2 === this._initted && R > 0 && this._init(), this._startAt && (R >= 0 ? this._startAt.render(R, Q, P) : N || (N = "_dummyGS")), this.vars.onStart && (0 !== this._totalTime || 0 === g) && (Q || this._callback("onStart"))), M = this._firstPT; M;) {
                        M.f ? M.t[M.p](M.c * this.ratio + M.s) : M.t[M.p] = M.c * this.ratio + M.s, M = M._next
                    }
                    this._onUpdate && (0 > R && this._startAt && this._startTime && this._startAt.render(R, Q, P), Q || (this._totalTime !== E || N) && this._callback("onUpdate")), this._cycle !== h && (Q || this._gc || this.vars.onRepeat && this._callback("onRepeat")), N && (!this._gc || P) && (0 > R && this._startAt && !this._onUpdate && this._startTime && this._startAt.render(R, Q, P), O && (this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !Q && this.vars[N] && this._callback(N), 0 === g && this._rawPrevTime === x && H !== x && (this._rawPrevTime = 0))
                }, y.to = function(e, d, f) {
                    return new y(e, d, f)
                }, y.from = function(e, d, f) {
                    return f.runBackwards = !0, f.immediateRender = 0 != f.immediateRender, new y(e, d, f)
                }, y.fromTo = function(f, e, h, g) {
                    return g.startAt = h, g.immediateRender = 0 != g.immediateRender && 0 != h.immediateRender, new y(f, e, g)
                }, y.staggerTo = y.allTo = function(K, J, I, H, G, F, E) {
                    H = H || 0;
                    var f, e, d, c, P = 0,
                        O = [],
                        N = function() {
                            I.onComplete && I.onComplete.apply(I.onCompleteScope || this, arguments), G.apply(E || I.callbackScope || this, F || s)
                        },
                        M = I.cycle,
                        L = I.startAt && I.startAt.cycle;
                    for (u(K) || ("string" == typeof K && (K = B.selector(K) || K), v(K) && (K = A(K))), K = K || [], 0 > H && (K = A(K), K.reverse(), H *= -1), f = K.length - 1, d = 0; f >= d; d++) {
                        e = {};
                        for (c in I) {
                            e[c] = I[c]
                        }
                        if (M && (z(e, K, d), null != e.duration && (J = e.duration, delete e.duration)), L) {
                            L = e.startAt = {};
                            for (c in I.startAt) {
                                L[c] = I.startAt[c]
                            }
                            z(e.startAt, K, d)
                        }
                        e.delay = P + (e.delay || 0), d === f && G && (e.onComplete = N), O[d] = new y(K[d], J, e), P += H
                    }
                    return O
                }, y.staggerFrom = y.allFrom = function(k, f, F, E, o, n, m) {
                    return F.runBackwards = !0, F.immediateRender = 0 != F.immediateRender, y.staggerTo(k, f, F, E, o, n, m)
                }, y.staggerFromTo = y.allFromTo = function(k, f, G, F, E, o, n, m) {
                    return F.startAt = G, F.immediateRender = 0 != F.immediateRender && 0 != G.immediateRender, y.staggerTo(k, f, F, E, o, n, m)
                }, y.delayedCall = function(g, f, m, k, h) {
                    return new y(f, 0, {
                        delay: g,
                        onComplete: f,
                        onCompleteParams: m,
                        callbackScope: k,
                        onReverseComplete: f,
                        onReverseCompleteParams: m,
                        immediateRender: !1,
                        useFrames: h,
                        overwrite: 0
                    })
                }, y.set = function(d, c) {
                    return new y(d, 0, c)
                }, y.isTweening = function(b) {
                    return B.getTweensOf(b, !0).length > 0
                };
                var r = function(g, c) {
                        for (var m = [], k = 0, h = g._first; h;) {
                            h instanceof B ? m[k++] = h : (c && (m[k++] = h), m = m.concat(r(h, c)), k = m.length), h = h._next
                        }
                        return m
                    },
                    q = y.getAllTweens = function(a) {
                        return r(D._rootTimeline, a).concat(r(D._rootFramesTimeline, a))
                    };
                y.killAll = function(J, I, H, G) {
                    null == I && (I = !0), null == H && (H = !0);
                    var F, E, o, n = q(0 != G),
                        m = n.length,
                        b = I && H && G;
                    for (o = 0; m > o; o++) {
                        E = n[o], (b || E instanceof C || (F = E.target === E.vars.onComplete) && H || I && !F) && (J ? E.totalTime(E._reversed ? 0 : E.totalDuration()) : E._enabled(!1, !1))
                    }
                }, y.killChildTweensOf = function(h, d) {
                    if (null != h) {
                        var F, E, o, f, c, G = w.tweenLookup;
                        if ("string" == typeof h && (h = B.selector(h) || h), v(h) && (h = A(h)), u(h)) {
                            for (f = h.length; --f > -1;) {
                                y.killChildTweensOf(h[f], d)
                            }
                        } else {
                            F = [];
                            for (o in G) {
                                for (E = G[o].target.parentNode; E;) {
                                    E === h && (F = F.concat(G[o].tweens)), E = E.parentNode
                                }
                            }
                            for (c = F.length, f = 0; c > f; f++) {
                                d && F[f].totalTime(F[f].totalDuration()), F[f]._enabled(!1, !1)
                            }
                        }
                    }
                };
                var p = function(H, G, F, E) {
                    G = G !== !1, F = F !== !1, E = E !== !1;
                    for (var o, n, m = q(E), k = G && F && E, b = m.length; --b > -1;) {
                        n = m[b], (k || n instanceof C || (o = n.target === n.vars.onComplete) && F || G && !o) && n.paused(H)
                    }
                };
                return y.pauseAll = function(e, d, f) {
                    p(!0, e, d, f)
                }, y.resumeAll = function(e, d, f) {
                    p(!1, e, d, f)
                }, y.globalTimeScale = function(a) {
                    var f = D._rootTimeline,
                        c = B.ticker.time;
                    return arguments.length ? (a = a || x, f._startTime = c - (c - f._startTime) * f._timeScale / a, f = D._rootFramesTimeline, c = B.ticker.frame, f._startTime = c - (c - f._startTime) * f._timeScale / a, f._timeScale = D._rootTimeline._timeScale = a, a) : f._timeScale
                }, t.progress = function(d, c) {
                    return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 !== (1 & this._cycle) ? 1 - d : d) + this._cycle * (this._duration + this._repeatDelay), c) : this._time / this.duration()
                }, t.totalProgress = function(d, c) {
                    return arguments.length ? this.totalTime(this.totalDuration() * d, c) : this._totalTime / this.totalDuration()
                }, t.time = function(d, c) {
                    return arguments.length ? (this._dirty && this.totalDuration(), d > this._duration && (d = this._duration), this._yoyo && 0 !== (1 & this._cycle) ? d = this._duration - d + this._cycle * (this._duration + this._repeatDelay) : 0 !== this._repeat && (d += this._cycle * (this._duration + this._repeatDelay)), this.totalTime(d, c)) : this._time
                }, t.duration = function(a) {
                    return arguments.length ? D.prototype.duration.call(this, a) : this._duration
                }, t.totalDuration = function(b) {
                    return arguments.length ? -1 === this._repeat ? this : this.duration((b - this._repeat * this._repeatDelay) / (this._repeat + 1)) : (this._dirty && (this._totalDuration = -1 === this._repeat ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat, this._dirty = !1), this._totalDuration)
                }, t.repeat = function(b) {
                    return arguments.length ? (this._repeat = b, this._uncache(!0)) : this._repeat
                }, t.repeatDelay = function(b) {
                    return arguments.length ? (this._repeatDelay = b, this._uncache(!0)) : this._repeatDelay
                }, t.yoyo = function(b) {
                    return arguments.length ? (this._yoyo = b, this) : this._yoyo
                }, y
            }, !0), _gsScope._gsDefine("TimelineLite", ["core.Animation", "core.SimpleTimeline", "TweenLite"], function(H, G, F) {
                var E = function(b) {
                        G.call(this, b), this._labels = {}, this.autoRemoveChildren = this.vars.autoRemoveChildren === !0, this.smoothChildTiming = this.vars.smoothChildTiming === !0, this._sortChildren = !0, this._onUpdate = this.vars.onUpdate;
                        var h, g, f = this.vars;
                        for (g in f) {
                            h = f[g], z(h) && -1 !== h.join("").indexOf("{self}") && (f[g] = this._swapSelfInParams(h))
                        }
                        z(f.tweens) && this.add(f.tweens, 0, f.align, f.stagger)
                    },
                    D = 1e-10,
                    C = F._internals,
                    B = E._internals = {},
                    A = C.isSelector,
                    z = C.isArray,
                    y = C.lazyTweens,
                    x = C.lazyRender,
                    w = _gsScope._gsDefine.globals,
                    v = function(e) {
                        var d, f = {};
                        for (d in e) {
                            f[d] = e[d]
                        }
                        return f
                    },
                    u = function(h, g, o) {
                        var n, m, k = h.cycle;
                        for (n in k) {
                            m = k[n], h[n] = "function" == typeof m ? m(o, g[o]) : m[o % m.length]
                        }
                        delete h.cycle
                    },
                    t = B.pauseCallback = function() {},
                    s = function(f) {
                        var e, h = [],
                            g = f.length;
                        for (e = 0; e !== g; h.push(f[e++])) {}
                        return h
                    },
                    r = E.prototype = new G;
                return E.version = "1.19.1", r.constructor = E, r.kill()._gc = r._forcingPlayhead = r._hasPause = !1, r.to = function(g, c, m, k) {
                    var h = m.repeat && w.TweenMax || F;
                    return c ? this.add(new h(g, c, m), k) : this.set(g, m, k)
                }, r.from = function(f, c, h, g) {
                    return this.add((h.repeat && w.TweenMax || F).from(f, c, h), g)
                }, r.fromTo = function(h, c, o, n, m) {
                    var k = n.repeat && w.TweenMax || F;
                    return c ? this.add(k.fromTo(h, c, o, n), m) : this.set(h, n, m)
                }, r.staggerTo = function(N, M, L, K, J, I, p, n) {
                    var m, h, d = new E({
                            onComplete: I,
                            onCompleteParams: p,
                            callbackScope: n,
                            smoothChildTiming: this.smoothChildTiming
                        }),
                        c = L.cycle;
                    for ("string" == typeof N && (N = F.selector(N) || N), N = N || [], A(N) && (N = s(N)), K = K || 0, 0 > K && (N = s(N), N.reverse(), K *= -1), h = 0; h < N.length; h++) {
                        m = v(L), m.startAt && (m.startAt = v(m.startAt), m.startAt.cycle && u(m.startAt, N, h)), c && (u(m, N, h), null != m.duration && (M = m.duration, delete m.duration)), d.to(N[h], M, m, h * K)
                    }
                    return this.add(d, J)
                }, r.staggerFrom = function(m, k, J, I, q, p, o, n) {
                    return J.immediateRender = 0 != J.immediateRender, J.runBackwards = !0, this.staggerTo(m, k, J, I, q, p, o, n)
                }, r.staggerFromTo = function(K, J, I, q, p, o, n, m, k) {
                    return q.startAt = I, q.immediateRender = 0 != q.immediateRender && 0 != I.immediateRender, this.staggerTo(K, J, q, p, o, n, m, k)
                }, r.call = function(f, c, h, g) {
                    return this.add(F.delayedCall(0, f, c, h), g)
                }, r.set = function(e, c, f) {
                    return f = this._parseTimeOrLabel(f, 0, !0), null == c.immediateRender && (c.immediateRender = f === this._time && !this._paused), this.add(new F(e, 0, c), f)
                }, E.exportRoot = function(d, c) {
                    d = d || {}, null == d.smoothChildTiming && (d.smoothChildTiming = !0);
                    var o, n, m = new E(d),
                        k = m._timeline;
                    for (null == c && (c = !0), k._remove(m, !0), m._startTime = 0, m._rawPrevTime = m._time = m._totalTime = k._time, o = k._first; o;) {
                        n = o._next, c && o instanceof F && o.target === o.vars.onComplete || m.add(o, o._startTime - o._delay), o = n
                    }
                    return k.add(m, 0), m
                }, r.add = function(L, K, J, I) {
                    var q, p, d, c, b, a;
                    if ("number" != typeof K && (K = this._parseTimeOrLabel(K, 0, !0, L)), !(L instanceof H)) {
                        if (L instanceof Array || L && L.push && z(L)) {
                            for (J = J || "normal", I = I || 0, q = K, p = L.length, d = 0; p > d; d++) {
                                z(c = L[d]) && (c = new E({
                                    tweens: c
                                })), this.add(c, q), "string" != typeof c && "function" != typeof c && ("sequence" === J ? q = c._startTime + c.totalDuration() / c._timeScale : "start" === J && (c._startTime -= c.delay())), q += I
                            }
                            return this._uncache(!0)
                        }
                        if ("string" == typeof L) {
                            return this.addLabel(L, K)
                        }
                        if ("function" != typeof L) {
                            throw "Cannot add " + L + " into the timeline; it is not a tween, timeline, function, or string."
                        }
                        L = F.delayedCall(0, L)
                    }
                    if (G.prototype.add.call(this, L, K), (this._gc || this._time === this._duration) && !this._paused && this._duration < this.duration()) {
                        for (b = this, a = b.rawTime() > L._startTime; b._timeline;) {
                            a && b._timeline.smoothChildTiming ? b.totalTime(b._totalTime, !0) : b._gc && b._enabled(!0, !1), b = b._timeline
                        }
                    }
                    return this
                }, r.remove = function(a) {
                    if (a instanceof H) {
                        this._remove(a, !1);
                        var f = a._timeline = a.vars.useFrames ? H._rootFramesTimeline : H._rootTimeline;
                        return a._startTime = (a._paused ? a._pauseTime : f._time) - (a._reversed ? a.totalDuration() - a._totalTime : a._totalTime) / a._timeScale, this
                    }
                    if (a instanceof Array || a && a.push && z(a)) {
                        for (var e = a.length; --e > -1;) {
                            this.remove(a[e])
                        }
                        return this
                    }
                    return "string" == typeof a ? this.removeLabel(a) : this.kill(null, a)
                }, r._remove = function(b, f) {
                    G.prototype._remove.call(this, b, f);
                    var e = this._last;
                    return e ? this._time > this.duration() && (this._time = this._duration, this._totalTime = this._totalDuration) : this._time = this._totalTime = this._duration = this._totalDuration = 0, this
                }, r.append = function(d, c) {
                    return this.add(d, this._parseTimeOrLabel(null, c, !0, d))
                }, r.insert = r.insertMultiple = function(f, e, h, g) {
                    return this.add(f, e || 0, h, g)
                }, r.appendMultiple = function(f, e, h, g) {
                    return this.add(f, this._parseTimeOrLabel(null, e, !0, f), h, g)
                }, r.addLabel = function(d, c) {
                    return this._labels[d] = this._parseTimeOrLabel(c), this
                }, r.addPause = function(g, c, m, k) {
                    var h = F.delayedCall(0, t, m, k || this);
                    return h.vars.onComplete = h.vars.onReverseComplete = c, h.data = "isPause", this._hasPause = !0, this.add(h, g)
                }, r.removeLabel = function(b) {
                    return delete this._labels[b], this
                }, r.getLabelTime = function(b) {
                    return null != this._labels[b] ? this._labels[b] : -1
                }, r._parseTimeOrLabel = function(a, m, k, h) {
                    var g;
                    if (h instanceof H && h.timeline === this) {
                        this.remove(h)
                    } else {
                        if (h && (h instanceof Array || h.push && z(h))) {
                            for (g = h.length; --g > -1;) {
                                h[g] instanceof H && h[g].timeline === this && this.remove(h[g])
                            }
                        }
                    }
                    if ("string" == typeof m) {
                        return this._parseTimeOrLabel(m, k && "number" == typeof a && null == this._labels[m] ? a - this.duration() : 0, k)
                    }
                    if (m = m || 0, "string" != typeof a || !isNaN(a) && null == this._labels[a]) {
                        null == a && (a = this.duration())
                    } else {
                        if (g = a.indexOf("="), -1 === g) {
                            return null == this._labels[a] ? k ? this._labels[a] = this.duration() + m : m : this._labels[a] + m
                        }
                        m = parseInt(a.charAt(g - 1) + "1", 10) * Number(a.substr(g + 1)), a = g > 1 ? this._parseTimeOrLabel(a.substr(0, g - 1), 0, k) : this.duration()
                    }
                    return Number(a) + m
                }, r.seek = function(d, c) {
                    return this.totalTime("number" == typeof d ? d : this._parseTimeOrLabel(d), c !== !1)
                }, r.stop = function() {
                    return this.paused(!0)
                }, r.gotoAndPlay = function(d, c) {
                    return this.play(d, c)
                }, r.gotoAndStop = function(d, c) {
                    return this.pause(d, c)
                }, r.render = function(U, T, S) {
                    this._gc && this._enabled(!0, !1);
                    var R, Q, P, O, N, M, L, K = this._dirty ? this.totalDuration() : this._totalDuration,
                        J = this._time,
                        I = this._startTime,
                        k = this._timeScale,
                        e = this._paused;
                    if (U >= K - 1e-7 && U >= 0) {
                        this._totalTime = this._time = K, this._reversed || this._hasPausedChild() || (Q = !0, O = "onComplete", N = !!this._timeline.autoRemoveChildren, 0 === this._duration && (0 >= U && U >= -1e-7 || this._rawPrevTime < 0 || this._rawPrevTime === D) && this._rawPrevTime !== U && this._first && (N = !0, this._rawPrevTime > D && (O = "onReverseComplete"))), this._rawPrevTime = this._duration || !T || U || this._rawPrevTime === U ? U : D, U = K + 0.0001
                    } else {
                        if (1e-7 > U) {
                            if (this._totalTime = this._time = 0, (0 !== J || 0 === this._duration && this._rawPrevTime !== D && (this._rawPrevTime > 0 || 0 > U && this._rawPrevTime >= 0)) && (O = "onReverseComplete", Q = this._reversed), 0 > U) {
                                this._active = !1, this._timeline.autoRemoveChildren && this._reversed ? (N = Q = !0, O = "onReverseComplete") : this._rawPrevTime >= 0 && this._first && (N = !0), this._rawPrevTime = U
                            } else {
                                if (this._rawPrevTime = this._duration || !T || U || this._rawPrevTime === U ? U : D, 0 === U && Q) {
                                    for (R = this._first; R && 0 === R._startTime;) {
                                        R._duration || (Q = !1), R = R._next
                                    }
                                }
                                U = 0, this._initted || (N = !0)
                            }
                        } else {
                            if (this._hasPause && !this._forcingPlayhead && !T) {
                                if (U >= J) {
                                    for (R = this._first; R && R._startTime <= U && !M;) {
                                        R._duration || "isPause" !== R.data || R.ratio || 0 === R._startTime && 0 === this._rawPrevTime || (M = R), R = R._next
                                    }
                                } else {
                                    for (R = this._last; R && R._startTime >= U && !M;) {
                                        R._duration || "isPause" === R.data && R._rawPrevTime > 0 && (M = R), R = R._prev
                                    }
                                }
                                M && (this._time = U = M._startTime, this._totalTime = U + this._cycle * (this._totalDuration + this._repeatDelay))
                            }
                            this._totalTime = this._time = this._rawPrevTime = U
                        }
                    }
                    if (this._time !== J && this._first || S || N || M) {
                        if (this._initted || (this._initted = !0), this._active || !this._paused && this._time !== J && U > 0 && (this._active = !0), 0 === J && this.vars.onStart && (0 === this._time && this._duration || T || this._callback("onStart")), L = this._time, L >= J) {
                            for (R = this._first; R && (P = R._next, L === this._time && (!this._paused || e));) {
                                (R._active || R._startTime <= L && !R._paused && !R._gc) && (M === R && this.pause(), R._reversed ? R.render((R._dirty ? R.totalDuration() : R._totalDuration) - (U - R._startTime) * R._timeScale, T, S) : R.render((U - R._startTime) * R._timeScale, T, S)), R = P
                            }
                        } else {
                            for (R = this._last; R && (P = R._prev, L === this._time && (!this._paused || e));) {
                                if (R._active || R._startTime <= J && !R._paused && !R._gc) {
                                    if (M === R) {
                                        for (M = R._prev; M && M.endTime() > this._time;) {
                                            M.render(M._reversed ? M.totalDuration() - (U - M._startTime) * M._timeScale : (U - M._startTime) * M._timeScale, T, S), M = M._prev
                                        }
                                        M = null, this.pause()
                                    }
                                    R._reversed ? R.render((R._dirty ? R.totalDuration() : R._totalDuration) - (U - R._startTime) * R._timeScale, T, S) : R.render((U - R._startTime) * R._timeScale, T, S)
                                }
                                R = P
                            }
                        }
                        this._onUpdate && (T || (y.length && x(), this._callback("onUpdate"))), O && (this._gc || (I === this._startTime || k !== this._timeScale) && (0 === this._time || K >= this.totalDuration()) && (Q && (y.length && x(), this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !T && this.vars[O] && this._callback(O)))
                    }
                }, r._hasPausedChild = function() {
                    for (var b = this._first; b;) {
                        if (b._paused || b instanceof E && b._hasPausedChild()) {
                            return !0
                        }
                        b = b._next
                    }
                    return !1
                }, r.getChildren = function(k, c, q, p) {
                    p = p || -9999999999;
                    for (var o = [], n = this._first, m = 0; n;) {
                        n._startTime < p || (n instanceof F ? c !== !1 && (o[m++] = n) : (q !== !1 && (o[m++] = n), k !== !1 && (o = o.concat(n.getChildren(!0, c, q)), m = o.length))), n = n._next
                    }
                    return o
                }, r.getTweensOf = function(k, c) {
                    var q, p, o = this._gc,
                        n = [],
                        m = 0;
                    for (o && this._enabled(!0, !0), q = F.getTweensOf(k), p = q.length; --p > -1;) {
                        (q[p].timeline === this || c && this._contains(q[p])) && (n[m++] = q[p])
                    }
                    return o && this._enabled(!1, !0), n
                }, r.recent = function() {
                    return this._recent
                }, r._contains = function(d) {
                    for (var c = d.timeline; c;) {
                        if (c === this) {
                            return !0
                        }
                        c = c.timeline
                    }
                    return !1
                }, r.shiftChildren = function(h, g, o) {
                    o = o || 0;
                    for (var n, m = this._first, k = this._labels; m;) {
                        m._startTime >= o && (m._startTime += h), m = m._next
                    }
                    if (g) {
                        for (n in k) {
                            k[n] >= o && (k[n] += h)
                        }
                    }
                    return this._uncache(!0)
                }, r._kill = function(g, f) {
                    if (!g && !f) {
                        return this._enabled(!1, !1)
                    }
                    for (var m = f ? this.getTweensOf(f) : this.getChildren(!0, !0, !1), k = m.length, h = !1; --k > -1;) {
                        m[k]._kill(g, f) && (h = !0)
                    }
                    return h
                }, r.clear = function(e) {
                    var d = this.getChildren(!1, !0, !0),
                        f = d.length;
                    for (this._time = this._totalTime = 0; --f > -1;) {
                        d[f]._enabled(!1, !1)
                    }
                    return e !== !1 && (this._labels = {}), this._uncache(!0)
                }, r.invalidate = function() {
                    for (var a = this._first; a;) {
                        a.invalidate(), a = a._next
                    }
                    return H.prototype.invalidate.call(this)
                }, r._enabled = function(b, f) {
                    if (b === this._gc) {
                        for (var e = this._first; e;) {
                            e._enabled(b, !0), e = e._next
                        }
                    }
                    return G.prototype._enabled.call(this, b, f)
                }, r.totalTime = function(a, h, g) {
                    this._forcingPlayhead = !0;
                    var f = H.prototype.totalTime.apply(this, arguments);
                    return this._forcingPlayhead = !1, f
                }, r.duration = function(b) {
                    return arguments.length ? (0 !== this.duration() && 0 !== b && this.timeScale(this._duration / b), this) : (this._dirty && this.totalDuration(), this._duration)
                }, r.totalDuration = function(h) {
                    if (!arguments.length) {
                        if (this._dirty) {
                            for (var g, o, n = 0, m = this._last, k = 999999999999; m;) {
                                g = m._prev, m._dirty && m.totalDuration(), m._startTime > k && this._sortChildren && !m._paused ? this.add(m, m._startTime - m._delay) : k = m._startTime, m._startTime < 0 && !m._paused && (n -= m._startTime, this._timeline.smoothChildTiming && (this._startTime += m._startTime / this._timeScale), this.shiftChildren(-m._startTime, !1, -9999999999), k = 0), o = m._startTime + m._totalDuration / m._timeScale, o > n && (n = o), m = g
                            }
                            this._duration = this._totalDuration = n, this._dirty = !1
                        }
                        return this._totalDuration
                    }
                    return h && this.totalDuration() ? this.timeScale(this._totalDuration / h) : this
                }, r.paused = function(a) {
                    if (!a) {
                        for (var f = this._first, e = this._time; f;) {
                            f._startTime === e && "isPause" === f.data && (f._rawPrevTime = 0), f = f._next
                        }
                    }
                    return H.prototype.paused.apply(this, arguments)
                }, r.usesFrames = function() {
                    for (var a = this._timeline; a._timeline;) {
                        a = a._timeline
                    }
                    return a === H._rootFramesTimeline
                }, r.rawTime = function(b) {
                    return b && (this._paused || this._repeat && this.time() > 0 && this.totalProgress() < 1) ? this._totalTime % (this._duration + this._repeatDelay) : this._paused ? this._totalTime : (this._timeline.rawTime(b) - this._startTime) * this._timeScale
                }, E
            }, !0), _gsScope._gsDefine("TimelineMax", ["TimelineLite", "TweenLite", "easing.Ease"], function(w, v, u) {
                var t = function(a) {
                        w.call(this, a), this._repeat = this.vars.repeat || 0, this._repeatDelay = this.vars.repeatDelay || 0, this._cycle = 0, this._yoyo = this.vars.yoyo === !0, this._dirty = !0
                    },
                    s = 1e-10,
                    r = v._internals,
                    q = r.lazyTweens,
                    p = r.lazyRender,
                    o = _gsScope._gsDefine.globals,
                    n = new u(null, null, 1, 0),
                    m = t.prototype = new w;
                return m.constructor = t, m.kill()._gc = !1, t.version = "1.19.1", m.invalidate = function() {
                    return this._yoyo = this.vars.yoyo === !0, this._repeat = this.vars.repeat || 0, this._repeatDelay = this.vars.repeatDelay || 0, this._uncache(!0), w.prototype.invalidate.call(this)
                }, m.addCallback = function(b, h, g, f) {
                    return this.add(v.delayedCall(0, b, g, f), h)
                }, m.removeCallback = function(g, f) {
                    if (g) {
                        if (null == f) {
                            this._kill(null, g)
                        } else {
                            for (var x = this.getTweensOf(g, !1), k = x.length, h = this._parseTimeOrLabel(f); --k > -1;) {
                                x[k]._startTime === h && x[k]._enabled(!1, !1)
                            }
                        }
                    }
                    return this
                }, m.removePause = function(a) {
                    return this.removeCallback(w._internals.pauseCallback, a)
                }, m.tweenTo = function(b, B) {
                    B = B || {};
                    var A, z, y, x = {
                            ease: n,
                            useFrames: this.usesFrames(),
                            immediateRender: !1
                        },
                        k = B.repeat && o.TweenMax || v;
                    for (z in B) {
                        x[z] = B[z]
                    }
                    return x.time = this._parseTimeOrLabel(b), A = Math.abs(Number(x.time) - this._time) / this._timeScale || 0.001, y = new k(this, A, x), x.onStart = function() {
                        y.target.paused(!0), y.vars.time !== y.target.time() && A === y.duration() && y.duration(Math.abs(y.vars.time - y.target.time()) / y.target._timeScale), B.onStart && B.onStart.apply(B.onStartScope || B.callbackScope || y, B.onStartParams || [])
                    }, y
                }, m.tweenFromTo = function(f, e, h) {
                    h = h || {}, f = this._parseTimeOrLabel(f), h.startAt = {
                        onComplete: this.seek,
                        onCompleteParams: [f],
                        callbackScope: this
                    }, h.immediateRender = h.immediateRender !== !1;
                    var g = this.tweenTo(e, h);
                    return g.duration(Math.abs(g.vars.time - f) / this._timeScale || 0.001)
                }, m.render = function(Z, Y, X) {
                    this._gc && this._enabled(!0, !1);
                    var W, V, U, T, S, R, Q, P, O = this._dirty ? this.totalDuration() : this._totalDuration,
                        N = this._duration,
                        L = this._time,
                        J = this._totalTime,
                        H = this._startTime,
                        G = this._timeScale,
                        F = this._rawPrevTime,
                        E = this._paused,
                        D = this._cycle;
                    if (Z >= O - 1e-7 && Z >= 0) {
                        this._locked || (this._totalTime = O, this._cycle = this._repeat), this._reversed || this._hasPausedChild() || (V = !0, T = "onComplete", S = !!this._timeline.autoRemoveChildren, 0 === this._duration && (0 >= Z && Z >= -1e-7 || 0 > F || F === s) && F !== Z && this._first && (S = !0, F > s && (T = "onReverseComplete"))), this._rawPrevTime = this._duration || !Y || Z || this._rawPrevTime === Z ? Z : s, this._yoyo && 0 !== (1 & this._cycle) ? this._time = Z = 0 : (this._time = N, Z = N + 0.0001)
                    } else {
                        if (1e-7 > Z) {
                            if (this._locked || (this._totalTime = this._cycle = 0), this._time = 0, (0 !== L || 0 === N && F !== s && (F > 0 || 0 > Z && F >= 0) && !this._locked) && (T = "onReverseComplete", V = this._reversed), 0 > Z) {
                                this._active = !1, this._timeline.autoRemoveChildren && this._reversed ? (S = V = !0, T = "onReverseComplete") : F >= 0 && this._first && (S = !0), this._rawPrevTime = Z
                            } else {
                                if (this._rawPrevTime = N || !Y || Z || this._rawPrevTime === Z ? Z : s, 0 === Z && V) {
                                    for (W = this._first; W && 0 === W._startTime;) {
                                        W._duration || (V = !1), W = W._next
                                    }
                                }
                                Z = 0, this._initted || (S = !0)
                            }
                        } else {
                            if (0 === N && 0 > F && (S = !0), this._time = this._rawPrevTime = Z, this._locked || (this._totalTime = Z, 0 !== this._repeat && (R = N + this._repeatDelay, this._cycle = this._totalTime / R >> 0, 0 !== this._cycle && this._cycle === this._totalTime / R && Z >= J && this._cycle--, this._time = this._totalTime - this._cycle * R, this._yoyo && 0 !== (1 & this._cycle) && (this._time = N - this._time), this._time > N ? (this._time = N, Z = N + 0.0001) : this._time < 0 ? this._time = Z = 0 : Z = this._time)), this._hasPause && !this._forcingPlayhead && !Y && N > Z) {
                                if (Z = this._time, Z >= L || this._repeat && D !== this._cycle) {
                                    for (W = this._first; W && W._startTime <= Z && !Q;) {
                                        W._duration || "isPause" !== W.data || W.ratio || 0 === W._startTime && 0 === this._rawPrevTime || (Q = W), W = W._next
                                    }
                                } else {
                                    for (W = this._last; W && W._startTime >= Z && !Q;) {
                                        W._duration || "isPause" === W.data && W._rawPrevTime > 0 && (Q = W), W = W._prev
                                    }
                                }
                                Q && (this._time = Z = Q._startTime, this._totalTime = Z + this._cycle * (this._totalDuration + this._repeatDelay))
                            }
                        }
                    }
                    if (this._cycle !== D && !this._locked) {
                        var h = this._yoyo && 0 !== (1 & D),
                            g = h === (this._yoyo && 0 !== (1 & this._cycle)),
                            e = this._totalTime,
                            M = this._cycle,
                            K = this._rawPrevTime,
                            I = this._time;
                        if (this._totalTime = D * N, this._cycle < D ? h = !h : this._totalTime += N, this._time = L, this._rawPrevTime = 0 === N ? F - 0.0001 : F, this._cycle = D, this._locked = !0, L = h ? 0 : N, this.render(L, Y, 0 === N), Y || this._gc || this.vars.onRepeat && (this._cycle = M, this._locked = !1, this._callback("onRepeat")), L !== this._time) {
                            return
                        }
                        if (g && (this._cycle = D, this._locked = !0, L = h ? N + 0.0001 : -0.0001, this.render(L, !0, !1)), this._locked = !1, this._paused && !E) {
                            return
                        }
                        this._time = I, this._totalTime = e, this._cycle = M, this._rawPrevTime = K
                    }
                    if (!(this._time !== L && this._first || X || S || Q)) {
                        return void(J !== this._totalTime && this._onUpdate && (Y || this._callback("onUpdate")))
                    }
                    if (this._initted || (this._initted = !0), this._active || !this._paused && this._totalTime !== J && Z > 0 && (this._active = !0), 0 === J && this.vars.onStart && (0 === this._totalTime && this._totalDuration || Y || this._callback("onStart")), P = this._time, P >= L) {
                        for (W = this._first; W && (U = W._next, P === this._time && (!this._paused || E));) {
                            (W._active || W._startTime <= this._time && !W._paused && !W._gc) && (Q === W && this.pause(), W._reversed ? W.render((W._dirty ? W.totalDuration() : W._totalDuration) - (Z - W._startTime) * W._timeScale, Y, X) : W.render((Z - W._startTime) * W._timeScale, Y, X)), W = U
                        }
                    } else {
                        for (W = this._last; W && (U = W._prev, P === this._time && (!this._paused || E));) {
                            if (W._active || W._startTime <= L && !W._paused && !W._gc) {
                                if (Q === W) {
                                    for (Q = W._prev; Q && Q.endTime() > this._time;) {
                                        Q.render(Q._reversed ? Q.totalDuration() - (Z - Q._startTime) * Q._timeScale : (Z - Q._startTime) * Q._timeScale, Y, X), Q = Q._prev
                                    }
                                    Q = null, this.pause()
                                }
                                W._reversed ? W.render((W._dirty ? W.totalDuration() : W._totalDuration) - (Z - W._startTime) * W._timeScale, Y, X) : W.render((Z - W._startTime) * W._timeScale, Y, X)
                            }
                            W = U
                        }
                    }
                    this._onUpdate && (Y || (q.length && p(), this._callback("onUpdate"))), T && (this._locked || this._gc || (H === this._startTime || G !== this._timeScale) && (0 === this._time || O >= this.totalDuration()) && (V && (q.length && p(), this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !Y && this.vars[T] && this._callback(T)))
                }, m.getActive = function(E, D, C) {
                    null == E && (E = !0), null == D && (D = !0), null == C && (C = !1);
                    var B, A, z = [],
                        y = this.getChildren(E, D, C),
                        x = 0,
                        k = y.length;
                    for (B = 0; k > B; B++) {
                        A = y[B], A.isActive() && (z[x++] = A)
                    }
                    return z
                }, m.getLabelAfter = function(f) {
                    f || 0 !== f && (f = this._time);
                    var e, h = this.getLabelsArray(),
                        g = h.length;
                    for (e = 0; g > e; e++) {
                        if (h[e].time > f) {
                            return h[e].name
                        }
                    }
                    return null
                }, m.getLabelBefore = function(e) {
                    null == e && (e = this._time);
                    for (var d = this.getLabelsArray(), f = d.length; --f > -1;) {
                        if (d[f].time < e) {
                            return d[f].name
                        }
                    }
                    return null
                }, m.getLabelsArray = function() {
                    var e, d = [],
                        f = 0;
                    for (e in this._labels) {
                        d[f++] = {
                            time: this._labels[e],
                            name: e
                        }
                    }
                    return d.sort(function(g, c) {
                        return g.time - c.time
                    }), d
                }, m.invalidate = function() {
                    return this._locked = !1, w.prototype.invalidate.call(this)
                }, m.progress = function(d, c) {
                    return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 !== (1 & this._cycle) ? 1 - d : d) + this._cycle * (this._duration + this._repeatDelay), c) : this._time / this.duration()
                }, m.totalProgress = function(d, c) {
                    return arguments.length ? this.totalTime(this.totalDuration() * d, c) : this._totalTime / this.totalDuration()
                }, m.totalDuration = function(a) {
                    return arguments.length ? -1 !== this._repeat && a ? this.timeScale(this.totalDuration() / a) : this : (this._dirty && (w.prototype.totalDuration.call(this), this._totalDuration = -1 === this._repeat ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat), this._totalDuration)
                }, m.time = function(d, c) {
                    return arguments.length ? (this._dirty && this.totalDuration(), d > this._duration && (d = this._duration), this._yoyo && 0 !== (1 & this._cycle) ? d = this._duration - d + this._cycle * (this._duration + this._repeatDelay) : 0 !== this._repeat && (d += this._cycle * (this._duration + this._repeatDelay)), this.totalTime(d, c)) : this._time
                }, m.repeat = function(b) {
                    return arguments.length ? (this._repeat = b, this._uncache(!0)) : this._repeat
                }, m.repeatDelay = function(b) {
                    return arguments.length ? (this._repeatDelay = b, this._uncache(!0)) : this._repeatDelay
                }, m.yoyo = function(b) {
                    return arguments.length ? (this._yoyo = b, this) : this._yoyo
                }, m.currentLabel = function(b) {
                    return arguments.length ? this.seek(b, !0) : this.getLabelBefore(this._time + 1e-8)
                }, t
            }, !0),
            function() {
                var H = 180 / Math.PI,
                    G = [],
                    F = [],
                    E = [],
                    D = {},
                    C = _gsScope._gsDefine.globals,
                    B = function(f, e, h, g) {
                        h === g && (h = g - (g - e) / 1000000), f === e && (e = f + (h - f) / 1000000), this.a = f, this.b = e, this.c = h, this.d = g, this.da = g - f, this.ca = h - f, this.ba = e - f
                    },
                    A = ",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,",
                    z = function(S, R, Q, P) {
                        var O = {
                                a: S
                            },
                            N = {},
                            M = {},
                            L = {
                                c: P
                            },
                            K = (S + R) / 2,
                            J = (R + Q) / 2,
                            I = (Q + P) / 2,
                            q = (K + J) / 2,
                            p = (J + I) / 2,
                            o = (p - q) / 8;
                        return O.b = K + (S - K) / 4, N.b = q + o, O.c = N.a = (O.b + N.b) / 2, N.c = M.a = (q + p) / 2, M.b = p - o, L.b = I + (P - I) / 4, M.c = L.a = (M.b + L.b) / 2, [O, N, M, L]
                    },
                    y = function(Z, Y, X, W, V) {
                        var U, T, S, R, Q, P, O, N, M, L, K, J, I, d = Z.length - 1,
                            c = 0,
                            b = Z[0].a;
                        for (U = 0; d > U; U++) {
                            Q = Z[c], T = Q.a, S = Q.d, R = Z[c + 1].d, V ? (K = G[U], J = F[U], I = (J + K) * Y * 0.25 / (W ? 0.5 : E[U] || 0.5), P = S - (S - T) * (W ? 0.5 * Y : 0 !== K ? I / K : 0), O = S + (R - S) * (W ? 0.5 * Y : 0 !== J ? I / J : 0), N = S - (P + ((O - P) * (3 * K / (K + J) + 0.5) / 4 || 0))) : (P = S - (S - T) * Y * 0.5, O = S + (R - S) * Y * 0.5, N = S - (P + O) / 2), P += N, O += N, Q.c = M = P, 0 !== U ? Q.b = b : Q.b = b = Q.a + 0.6 * (Q.c - Q.a), Q.da = S - T, Q.ca = M - T, Q.ba = b - T, X ? (L = z(T, b, M, S), Z.splice(c, 1, L[0], L[1], L[2], L[3]), c += 4) : c++, b = O
                        }
                        Q = Z[c], Q.b = b, Q.c = b + 0.4 * (Q.d - b), Q.da = Q.d - Q.a, Q.ca = Q.c - Q.a, Q.ba = b - Q.a, X && (L = z(Q.a, b, Q.c, Q.d), Z.splice(c, 1, L[0], L[1], L[2], L[3]))
                    },
                    x = function(M, L, K, J) {
                        var I, q, p, o, g, c, b = [];
                        if (J) {
                            for (M = [J].concat(M), q = M.length; --q > -1;) {
                                "string" == typeof(c = M[q][L]) && "=" === c.charAt(1) && (M[q][L] = J[L] + Number(c.charAt(0) + c.substr(2)))
                            }
                        }
                        if (I = M.length - 2, 0 > I) {
                            return b[0] = new B(M[0][L], 0, 0, M[-1 > I ? 0 : 1][L]), b
                        }
                        for (q = 0; I > q; q++) {
                            p = M[q][L], o = M[q + 1][L], b[q] = new B(p, 0, 0, o), K && (g = M[q + 2][L], G[q] = (G[q] || 0) + (o - p) * (o - p), F[q] = (F[q] || 0) + (g - o) * (g - o))
                        }
                        return b[q] = new B(M[q][L], 0, 0, M[q + 1][L]), b
                    },
                    w = function(N, L, K, J, I, k) {
                        var h, e, d, c, b, S, R, Q, P = {},
                            O = [],
                            M = k || N[0];
                        I = "string" == typeof I ? "," + I + "," : A, null == L && (L = 1);
                        for (e in N[0]) {
                            O.push(e)
                        }
                        if (N.length > 1) {
                            for (Q = N[N.length - 1], R = !0, h = O.length; --h > -1;) {
                                if (e = O[h], Math.abs(M[e] - Q[e]) > 0.05) {
                                    R = !1;
                                    break
                                }
                            }
                            R && (N = N.concat(), k && N.unshift(k), N.push(N[1]), k = N[N.length - 3])
                        }
                        for (G.length = F.length = E.length = 0, h = O.length; --h > -1;) {
                            e = O[h], D[e] = -1 !== I.indexOf("," + e + ","), P[e] = x(N, e, D[e], k)
                        }
                        for (h = G.length; --h > -1;) {
                            G[h] = Math.sqrt(G[h]), F[h] = Math.sqrt(F[h])
                        }
                        if (!J) {
                            for (h = O.length; --h > -1;) {
                                if (D[e]) {
                                    for (d = P[O[h]], S = d.length - 1, c = 0; S > c; c++) {
                                        b = d[c + 1].da / F[c] + d[c].da / G[c] || 0, E[c] = (E[c] || 0) + b * b
                                    }
                                }
                            }
                            for (h = E.length; --h > -1;) {
                                E[h] = Math.sqrt(E[h])
                            }
                        }
                        for (h = O.length, c = K ? 4 : 1; --h > -1;) {
                            e = O[h], d = P[e], y(d, L, K, J, D[e]), R && (d.splice(0, c), d.splice(d.length - c, c))
                        }
                        return P
                    },
                    v = function(Y, X, W) {
                        X = X || "soft";
                        var V, U, T, S, R, Q, P, O, N, M, L, K = {},
                            J = "cubic" === X ? 3 : 2,
                            I = "soft" === X,
                            g = [];
                        if (I && W && (Y = [W].concat(Y)), null == Y || Y.length < J + 1) {
                            throw "invalid Bezier data"
                        }
                        for (N in Y[0]) {
                            g.push(N)
                        }
                        for (Q = g.length; --Q > -1;) {
                            for (N = g[Q], K[N] = R = [], M = 0, O = Y.length, P = 0; O > P; P++) {
                                V = null == W ? Y[P][N] : "string" == typeof(L = Y[P][N]) && "=" === L.charAt(1) ? W[N] + Number(L.charAt(0) + L.substr(2)) : Number(L), I && P > 1 && O - 1 > P && (R[M++] = (V + R[M - 2]) / 2), R[M++] = V
                            }
                            for (O = M - J + 1, M = 0, P = 0; O > P; P += J) {
                                V = R[P], U = R[P + 1], T = R[P + 2], S = 2 === J ? 0 : R[P + 3], R[M++] = L = 3 === J ? new B(V, U, T, S) : new B(V, (2 * U + V) / 3, (2 * U + T) / 3, T)
                            }
                            R.length = M
                        }
                        return K
                    },
                    u = function(W, V, U) {
                        for (var T, S, R, Q, P, O, N, M, L, K, J, I = 1 / U, q = W.length; --q > -1;) {
                            for (K = W[q], R = K.a, Q = K.d - R, P = K.c - R, O = K.b - R, T = S = 0, M = 1; U >= M; M++) {
                                N = I * M, L = 1 - N, T = S - (S = (N * N * Q + 3 * L * (N * P + L * O)) * N), J = q * U + M - 1, V[J] = (V[J] || 0) + T * T
                            }
                        }
                    },
                    t = function(Q, P) {
                        P = P >> 0 || 6;
                        var O, N, M, L, K = [],
                            J = [],
                            I = 0,
                            q = 0,
                            p = P - 1,
                            o = [],
                            n = [];
                        for (O in Q) {
                            u(Q[O], K, P)
                        }
                        for (M = K.length, N = 0; M > N; N++) {
                            I += Math.sqrt(K[N]), L = N % P, n[L] = I, L === p && (q += I, L = N / P >> 0, o[L] = n, J[L] = q, I = 0, n = [])
                        }
                        return {
                            length: q,
                            lengths: J,
                            segments: o
                        }
                    },
                    s = _gsScope._gsDefine.plugin({
                        propName: "bezier",
                        priority: -1,
                        version: "1.3.7",
                        API: 2,
                        global: !0,
                        init: function(R, Q, P) {
                            this._target = R, Q instanceof Array && (Q = {
                                values: Q
                            }), this._func = {}, this._mod = {}, this._props = [], this._timeRes = null == Q.timeResolution ? 6 : parseInt(Q.timeResolution, 10);
                            var O, N, M, L, K, J = Q.values || [],
                                I = {},
                                q = J[0],
                                o = Q.autoRotate || P.vars.orientToBezier;
                            this._autoRotate = o ? o instanceof Array ? o : [
                                ["x", "y", "rotation", o === !0 ? 0 : Number(o) || 0]
                            ] : null;
                            for (O in q) {
                                this._props.push(O)
                            }
                            for (M = this._props.length; --M > -1;) {
                                O = this._props[M], this._overwriteProps.push(O), N = this._func[O] = "function" == typeof R[O], I[O] = N ? R[O.indexOf("set") || "function" != typeof R["get" + O.substr(3)] ? O : "get" + O.substr(3)]() : parseFloat(R[O]), K || I[O] !== J[0][O] && (K = I)
                            }
                            if (this._beziers = "cubic" !== Q.type && "quadratic" !== Q.type && "soft" !== Q.type ? w(J, isNaN(Q.curviness) ? 1 : Q.curviness, !1, "thruBasic" === Q.type, Q.correlate, K) : v(J, Q.type, I), this._segCount = this._beziers[O].length, this._timeRes) {
                                var m = t(this._beziers, this._timeRes);
                                this._length = m.length, this._lengths = m.lengths, this._segments = m.segments, this._l1 = this._li = this._s1 = this._si = 0, this._l2 = this._lengths[0], this._curSeg = this._segments[0], this._s2 = this._curSeg[0], this._prec = 1 / this._curSeg.length
                            }
                            if (o = this._autoRotate) {
                                for (this._initialRotations = [], o[0] instanceof Array || (this._autoRotate = o = [o]), M = o.length; --M > -1;) {
                                    for (L = 0; 3 > L; L++) {
                                        O = o[M][L], this._func[O] = "function" == typeof R[O] ? R[O.indexOf("set") || "function" != typeof R["get" + O.substr(3)] ? O : "get" + O.substr(3)] : !1
                                    }
                                    O = o[M][2], this._initialRotations[M] = (this._func[O] ? this._func[O].call(this._target) : this._target[O]) || 0, this._overwriteProps.push(O)
                                }
                            }
                            return this._startRatio = P.vars.runBackwards ? 1 : 0, !0
                        },
                        set: function(ad) {
                            var ac, ab, aa, Z, Y, X, W, V, U, T, S = this._segCount,
                                R = this._func,
                                Q = this._target,
                                P = ad !== this._startRatio;
                            if (this._timeRes) {
                                if (U = this._lengths, T = this._curSeg, ad *= this._length, aa = this._li, ad > this._l2 && S - 1 > aa) {
                                    for (V = S - 1; V > aa && (this._l2 = U[++aa]) <= ad;) {}
                                    this._l1 = U[aa - 1], this._li = aa, this._curSeg = T = this._segments[aa], this._s2 = T[this._s1 = this._si = 0]
                                } else {
                                    if (ad < this._l1 && aa > 0) {
                                        for (; aa > 0 && (this._l1 = U[--aa]) >= ad;) {}
                                        0 === aa && ad < this._l1 ? this._l1 = 0 : aa++, this._l2 = U[aa], this._li = aa, this._curSeg = T = this._segments[aa], this._s1 = T[(this._si = T.length - 1) - 1] || 0, this._s2 = T[this._si]
                                    }
                                }
                                if (ac = aa, ad -= this._l1, aa = this._si, ad > this._s2 && aa < T.length - 1) {
                                    for (V = T.length - 1; V > aa && (this._s2 = T[++aa]) <= ad;) {}
                                    this._s1 = T[aa - 1], this._si = aa
                                } else {
                                    if (ad < this._s1 && aa > 0) {
                                        for (; aa > 0 && (this._s1 = T[--aa]) >= ad;) {}
                                        0 === aa && ad < this._s1 ? this._s1 = 0 : aa++, this._s2 = T[aa], this._si = aa
                                    }
                                }
                                X = (aa + (ad - this._s1) / (this._s2 - this._s1)) * this._prec || 0
                            } else {
                                ac = 0 > ad ? 0 : ad >= 1 ? S - 1 : S * ad >> 0, X = (ad - ac * (1 / S)) * S
                            }
                            for (ab = 1 - X, aa = this._props.length; --aa > -1;) {
                                Z = this._props[aa], Y = this._beziers[Z][ac], W = (X * X * Y.da + 3 * ab * (X * Y.ca + ab * Y.ba)) * X + Y.a, this._mod[Z] && (W = this._mod[Z](W, Q)), R[Z] ? Q[Z](W) : Q[Z] = W
                            }
                            if (this._autoRotate) {
                                var O, N, M, L, K, J, I, a = this._autoRotate;
                                for (aa = a.length; --aa > -1;) {
                                    Z = a[aa][2], J = a[aa][3] || 0, I = a[aa][4] === !0 ? 1 : H, Y = this._beziers[a[aa][0]], O = this._beziers[a[aa][1]], Y && O && (Y = Y[ac], O = O[ac], N = Y.a + (Y.b - Y.a) * X, L = Y.b + (Y.c - Y.b) * X, N += (L - N) * X, L += (Y.c + (Y.d - Y.c) * X - L) * X, M = O.a + (O.b - O.a) * X, K = O.b + (O.c - O.b) * X, M += (K - M) * X, K += (O.c + (O.d - O.c) * X - K) * X, W = P ? Math.atan2(K - M, L - N) * I + J : this._initialRotations[aa], this._mod[Z] && (W = this._mod[Z](W, Q)), R[Z] ? Q[Z](W) : Q[Z] = W)
                                }
                            }
                        }
                    }),
                    r = s.prototype;
                s.bezierThrough = w, s.cubicToQuadratic = z, s._autoCSS = !0, s.quadraticToCubic = function(e, d, f) {
                    return new B(e, (2 * d + e) / 3, (2 * d + f) / 3, f)
                }, s._cssRegister = function() {
                    var g = C.CSSPlugin;
                    if (g) {
                        var f = g._internals,
                            m = f._parseToProxy,
                            k = f._setPluginRatio,
                            h = f.CSSPropTween;
                        f._registerComplexSpecialProp("bezier", {
                            parser: function(Q, P, O, N, M, L) {
                                P instanceof Array && (P = {
                                    values: P
                                }), L = new s;
                                var K, J, I, p = P.values,
                                    e = p.length - 1,
                                    d = [],
                                    c = {};
                                if (0 > e) {
                                    return M
                                }
                                for (K = 0; e >= K; K++) {
                                    I = m(Q, p[K], N, M, L, e !== K), d[K] = I.end
                                }
                                for (J in P) {
                                    c[J] = P[J]
                                }
                                return c.values = d, M = new h(Q, "bezier", 0, 0, I.pt, 2), M.data = I, M.plugin = L, M.setRatio = k, 0 === c.autoRotate && (c.autoRotate = !0), !c.autoRotate || c.autoRotate instanceof Array || (K = c.autoRotate === !0 ? 0 : Number(c.autoRotate), c.autoRotate = null != I.end.left ? [
                                    ["left", "top", "rotation", K, !1]
                                ] : null != I.end.x ? [
                                    ["x", "y", "rotation", K, !1]
                                ] : !1), c.autoRotate && (N._transform || N._enableTransforms(!1), I.autoRotate = N._target._gsTransform, I.proxy.rotation = I.autoRotate.rotation || 0, N._overwriteProps.push("rotation")), L._onInitTween(I.proxy, c, N._tween), M
                            }
                        })
                    }
                }, r._mod = function(f) {
                    for (var e, h = this._overwriteProps, g = h.length; --g > -1;) {
                        e = f[h[g]], e && "function" == typeof e && (this._mod[h[g]] = e)
                    }
                }, r._kill = function(f) {
                    var e, h, g = this._props;
                    for (e in this._beziers) {
                        if (e in f) {
                            for (delete this._beziers[e], delete this._func[e], h = g.length; --h > -1;) {
                                g[h] === e && g.splice(h, 1)
                            }
                        }
                    }
                    if (g = this._autoRotate) {
                        for (h = g.length; --h > -1;) {
                            f[g[h][2]] && g.splice(h, 1)
                        }
                    }
                    return this._super._kill.call(this, f)
                }
            }(), _gsScope._gsDefine("plugins.CSSPlugin", ["plugins.TweenPlugin", "TweenLite"], function(aZ, aY) {
                var aX, aU, aT, aS, aR = function() {
                        aZ.call(this, "css"), this._overwriteProps.length = 0, this.setRatio = aR.prototype.setRatio
                    },
                    aQ = _gsScope._gsDefine.globals,
                    aN = {},
                    aM = aR.prototype = new aZ("css");
                aM.constructor = aR, aR.version = "1.19.1", aR.API = 2, aR.defaultTransformPerspective = 0, aR.defaultSkewType = "compensated", aR.defaultSmoothOrigin = !0, aM = "px", aR.suffixMap = {
                    top: aM,
                    right: aM,
                    bottom: aM,
                    left: aM,
                    width: aM,
                    height: aM,
                    fontSize: aM,
                    padding: aM,
                    margin: aM,
                    perspective: aM,
                    lineHeight: ""
                };
                var aL, aK, aJ, aH, aG, aF, aE, aD, aC = /(?:\-|\.|\b)(\d|\.|e\-)+/g,
                    aB = /(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g,
                    aA = /(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi,
                    az = /(?![+-]?\d*\.?\d+|[+-]|e[+-]\d+)[^0-9]/g,
                    ay = /(?:\d|\-|\+|=|#|\.)*/g,
                    ax = /opacity *= *([^)]*)/i,
                    av = /opacity:([^;]*)/i,
                    au = /alpha\(opacity *=.+?\)/i,
                    bz = /^(rgb|hsl)/,
                    by = /([A-Z])/g,
                    bx = /-([a-z])/gi,
                    bw = /(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi,
                    bt = function(d, c) {
                        return c.toUpperCase()
                    },
                    bs = /(?:Left|Right|Width)/i,
                    br = /(M11|M12|M21|M22)=[\d\-\.e]+/gi,
                    bq = /progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i,
                    bp = /,(?=[^\)]*(?:\(|$))/gi,
                    bm = /[\s,\(]/i,
                    bl = Math.PI / 180,
                    bk = 180 / Math.PI,
                    bj = {},
                    bi = {
                        style: {}
                    },
                    bh = _gsScope.document || {
                        createElement: function() {
                            return bi
                        }
                    },
                    bf = function(d, c) {
                        return bh.createElementNS ? bh.createElementNS(c || "http://www.w3.org/1999/xhtml", d) : bh.createElement(d)
                    },
                    be = bf("div"),
                    bd = bf("img"),
                    bc = aR._internals = {
                        _specialProps: aN
                    },
                    bb = (_gsScope.navigator || {}).userAgent || "",
                    a9 = function() {
                        var d = bb.indexOf("Android"),
                            c = bf("a");
                        return aJ = -1 !== bb.indexOf("Safari") && -1 === bb.indexOf("Chrome") && (-1 === d || parseFloat(bb.substr(d + 8, 2)) > 3), aG = aJ && parseFloat(bb.substr(bb.indexOf("Version/") + 8, 2)) < 6, aH = -1 !== bb.indexOf("Firefox"), (/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(bb) || /Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(bb)) && (aF = parseFloat(RegExp.$1)), c ? (c.style.cssText = "top:1px;opacity:.55;", /^0.55/.test(c.style.opacity)) : !1
                    }(),
                    a8 = function(b) {
                        return ax.test("string" == typeof b ? b : (b.currentStyle ? b.currentStyle.filter : b.style.filter) || "") ? parseFloat(RegExp.$1) / 100 : 1
                    },
                    a7 = function(b) {
                        _gsScope.console && console.log(b)
                    },
                    a6 = "",
                    a5 = "",
                    a3 = function(g, f) {
                        f = f || be;
                        var m, k, h = f.style;
                        if (void 0 !== h[g]) {
                            return g
                        }
                        for (g = g.charAt(0).toUpperCase() + g.substr(1), m = ["O", "Moz", "ms", "Ms", "Webkit"], k = 5; --k > -1 && void 0 === h[m[k] + g];) {}
                        return k >= 0 ? (a5 = 3 === k ? "ms" : m[k], a6 = "-" + a5.toLowerCase() + "-", a5 + g) : null
                    },
                    bJ = bh.defaultView ? bh.defaultView.getComputedStyle : function() {},
                    a1 = aR.getStyle = function(h, g, o, n, m) {
                        var k;
                        return a9 || "opacity" !== g ? (!n && h.style[g] ? k = h.style[g] : (o = o || bJ(h)) ? k = o[g] || o.getPropertyValue(g) || o.getPropertyValue(g.replace(by, "-$1").toLowerCase()) : h.currentStyle && (k = h.currentStyle[g]), null == m || k && "none" !== k && "auto" !== k && "auto auto" !== k ? k : m) : a8(h)
                    },
                    bE = bc.convertToPixels = function(z, y, x, w, v) {
                        if ("px" === w || !w) {
                            return x
                        }
                        if ("auto" === w || !x) {
                            return 0
                        }
                        var u, t, s, r = bs.test(y),
                            q = z,
                            p = be.style,
                            g = 0 > x,
                            b = 1 === x;
                        if (g && (x = -x), b && (x *= 100), "%" === w && -1 !== y.indexOf("border")) {
                            u = x / 100 * (r ? z.clientWidth : z.clientHeight)
                        } else {
                            if (p.cssText = "border:0 solid red;position:" + a1(z, "position") + ";line-height:0;", "%" !== w && q.appendChild && "v" !== w.charAt(0) && "rem" !== w) {
                                p[r ? "borderLeftWidth" : "borderTopWidth"] = x + w
                            } else {
                                if (q = z.parentNode || bh.body, t = q._gsCache, s = aY.ticker.frame, t && r && t.time === s) {
                                    return t.width * x / 100
                                }
                                p[r ? "width" : "height"] = x + w
                            }
                            q.appendChild(be), u = parseFloat(be[r ? "offsetWidth" : "offsetHeight"]), q.removeChild(be), r && "%" === w && aR.cacheWidths !== !1 && (t = q._gsCache = q._gsCache || {}, t.time = s, t.width = u / x * 100), 0 !== u || v || (u = bE(z, y, x, w, !0))
                        }
                        return b && (u /= 100), g ? -u : u
                    },
                    bg = bc.calculateOffset = function(g, f, m) {
                        if ("absolute" !== a1(g, "position", m)) {
                            return 0
                        }
                        var k = "left" === f ? "Left" : "Top",
                            h = a1(g, "margin" + k, m);
                        return g["offset" + k] - (bE(g, f, parseFloat(h), h.replace(ay, "")) || 0)
                    },
                    aI = function(h, g) {
                        var o, n, m, k = {};
                        if (g = g || bJ(h, null)) {
                            if (o = g.length) {
                                for (; --o > -1;) {
                                    m = g[o], (-1 === m.indexOf("-transform") || aP === m) && (k[m.replace(bx, bt)] = g.getPropertyValue(m))
                                }
                            } else {
                                for (o in g) {
                                    (-1 === o.indexOf("Transform") || bo === o) && (k[o] = g[o])
                                }
                            }
                        } else {
                            if (g = h.currentStyle || h.style) {
                                for (o in g) {
                                    "string" == typeof o && void 0 === k[o] && (k[o.replace(bx, bt)] = g[o])
                                }
                            }
                        }
                        return a9 || (k.opacity = a8(h)), n = ak(h, g, !1), k.rotation = n.rotation, k.skewX = n.skewX, k.scaleX = n.scaleX, k.scaleY = n.scaleY, k.x = n.x, k.y = n.y, ag && (k.z = n.z, k.rotationX = n.rotationX, k.rotationY = n.rotationY, k.scaleZ = n.scaleZ), k.filters && delete k.filters, k
                    },
                    am = function(u, t, s, r, q) {
                        var p, o, n, m = {},
                            k = u.style;
                        for (o in s) {
                            "cssText" !== o && "length" !== o && isNaN(o) && (t[o] !== (p = s[o]) || q && q[o]) && -1 === o.indexOf("Origin") && ("number" == typeof p || "string" == typeof p) && (m[o] = "auto" !== p || "left" !== o && "top" !== o ? "" !== p && "auto" !== p && "none" !== p || "string" != typeof t[o] || "" === t[o].replace(az, "") ? p : 0 : bg(u, o), void 0 !== k[o] && (n = new bK(k, o, k[o], n)))
                        }
                        if (r) {
                            for (o in r) {
                                "className" !== o && (m[o] = r[o])
                            }
                        }
                        return {
                            difs: m,
                            firstMPT: n
                        }
                    },
                    ae = {
                        width: ["Left", "Right"],
                        height: ["Top", "Bottom"]
                    },
                    bP = ["marginLeft", "marginRight", "marginTop", "marginBottom"],
                    bF = function(h, g, o) {
                        if ("svg" === (h.nodeName + "").toLowerCase()) {
                            return (o || bJ(h))[g] || 0
                        }
                        if (h.getCTM && bB(h)) {
                            return h.getBBox()[g] || 0
                        }
                        var n = parseFloat("width" === g ? h.offsetWidth : h.offsetHeight),
                            m = ae[g],
                            k = m.length;
                        for (o = o || bJ(h, null); --k > -1;) {
                            n -= parseFloat(a1(h, "padding" + m[k], o, !0)) || 0, n -= parseFloat(a1(h, "border" + m[k] + "Width", o, !0)) || 0
                        }
                        return n
                    },
                    bn = function(h, g) {
                        if ("contain" === h || "auto" === h || "auto auto" === h) {
                            return h + " "
                        }(null == h || "" === h) && (h = "0 0");
                        var o, n = h.split(" "),
                            m = -1 !== h.indexOf("left") ? "0%" : -1 !== h.indexOf("right") ? "100%" : n[0],
                            k = -1 !== h.indexOf("top") ? "0%" : -1 !== h.indexOf("bottom") ? "100%" : n[1];
                        if (n.length > 3 && !g) {
                            for (n = h.split(", ").join(",").split(","), h = [], o = 0; o < n.length; o++) {
                                h.push(bn(n[o]))
                            }
                            return h.join(",")
                        }
                        return null == k ? k = "center" === m ? "50%" : "0" : "center" === k && (k = "50%"), ("center" === m || isNaN(parseFloat(m)) && -1 === (m + "").indexOf("=")) && (m = "50%"), h = m + " " + k + (n.length > 2 ? " " + n[2] : ""), g && (g.oxp = -1 !== m.indexOf("%"), g.oyp = -1 !== k.indexOf("%"), g.oxr = "=" === m.charAt(1), g.oyr = "=" === k.charAt(1), g.ox = parseFloat(m.replace(az, "")), g.oy = parseFloat(k.replace(az, "")), g.v = h), g || h
                    },
                    aO = function(d, c) {
                        return "function" == typeof d && (d = d(aD, aE)), "string" == typeof d && "=" === d.charAt(1) ? parseInt(d.charAt(0) + "1", 10) * parseFloat(d.substr(2)) : parseFloat(d) - parseFloat(c) || 0
                    },
                    an = function(d, c) {
                        return "function" == typeof d && (d = d(aD, aE)), null == d ? c : "string" == typeof d && "=" === d.charAt(1) ? parseInt(d.charAt(0) + "1", 10) * parseFloat(d.substr(2)) + c : parseFloat(d) || 0
                    },
                    af = function(u, t, s, r) {
                        var q, p, o, n, m, k = 0.000001;
                        return "function" == typeof u && (u = u(aD, aE)), null == u ? n = t : "number" == typeof u ? n = u : (q = 360, p = u.split("_"), m = "=" === u.charAt(1), o = (m ? parseInt(u.charAt(0) + "1", 10) * parseFloat(p[0].substr(2)) : parseFloat(p[0])) * (-1 === u.indexOf("rad") ? 1 : bk) - (m ? 0 : t), p.length && (r && (r[s] = t + o), -1 !== u.indexOf("short") && (o %= q, o !== o % (q / 2) && (o = 0 > o ? o + q : o - q)), -1 !== u.indexOf("_cw") && 0 > o ? o = (o + 9999999999 * q) % q - (o / q | 0) * q : -1 !== u.indexOf("ccw") && o > 0 && (o = (o - 9999999999 * q) % q - (o / q | 0) * q)), n = t + o), k > n && n > -k && (n = 0), n
                    },
                    bR = {
                        aqua: [0, 255, 255],
                        lime: [0, 255, 0],
                        silver: [192, 192, 192],
                        black: [0, 0, 0],
                        maroon: [128, 0, 0],
                        teal: [0, 128, 128],
                        blue: [0, 0, 255],
                        navy: [0, 0, 128],
                        white: [255, 255, 255],
                        fuchsia: [255, 0, 255],
                        olive: [128, 128, 0],
                        yellow: [255, 255, 0],
                        orange: [255, 165, 0],
                        gray: [128, 128, 128],
                        purple: [128, 0, 128],
                        green: [0, 128, 0],
                        red: [255, 0, 0],
                        pink: [255, 192, 203],
                        cyan: [0, 255, 255],
                        transparent: [255, 255, 255, 0]
                    },
                    bH = function(e, d, f) {
                        return e = 0 > e ? e + 1 : e > 1 ? e - 1 : e, 255 * (1 > 6 * e ? d + (f - d) * e * 6 : 0.5 > e ? f : 2 > 3 * e ? d + (f - d) * (2 / 3 - e) * 6 : d) + 0.5 | 0
                    },
                    bu = aR.parseColor = function(z, y) {
                        var x, w, v, u, t, s, r, q, p, o, n;
                        if (z) {
                            if ("number" == typeof z) {
                                x = [z >> 16, z >> 8 & 255, 255 & z]
                            } else {
                                if ("," === z.charAt(z.length - 1) && (z = z.substr(0, z.length - 1)), bR[z]) {
                                    x = bR[z]
                                } else {
                                    if ("#" === z.charAt(0)) {
                                        4 === z.length && (w = z.charAt(1), v = z.charAt(2), u = z.charAt(3), z = "#" + w + w + v + v + u + u), z = parseInt(z.substr(1), 16), x = [z >> 16, z >> 8 & 255, 255 & z]
                                    } else {
                                        if ("hsl" === z.substr(0, 3)) {
                                            if (x = n = z.match(aC), y) {
                                                if (-1 !== z.indexOf("=")) {
                                                    return z.match(aB)
                                                }
                                            } else {
                                                t = Number(x[0]) % 360 / 360, s = Number(x[1]) / 100, r = Number(x[2]) / 100, v = 0.5 >= r ? r * (s + 1) : r + s - r * s, w = 2 * r - v, x.length > 3 && (x[3] = Number(z[3])), x[0] = bH(t + 1 / 3, w, v), x[1] = bH(t, w, v), x[2] = bH(t - 1 / 3, w, v)
                                            }
                                        } else {
                                            x = z.match(aC) || bR.transparent
                                        }
                                    }
                                }
                                x[0] = Number(x[0]), x[1] = Number(x[1]), x[2] = Number(x[2]), x.length > 3 && (x[3] = Number(x[3]))
                            }
                        } else {
                            x = bR.black
                        }
                        return y && !n && (w = x[0] / 255, v = x[1] / 255, u = x[2] / 255, q = Math.max(w, v, u), p = Math.min(w, v, u), r = (q + p) / 2, q === p ? t = s = 0 : (o = q - p, s = r > 0.5 ? o / (2 - q - p) : o / (q + p), t = q === w ? (v - u) / o + (u > v ? 6 : 0) : q === v ? (u - w) / o + 2 : (w - v) / o + 4, t *= 60), x[0] = t + 0.5 | 0, x[1] = 100 * s + 0.5 | 0, x[2] = 100 * r + 0.5 | 0), x
                    },
                    aV = function(m, k) {
                        var s, r, q, p = m.match(ap) || [],
                            o = 0,
                            n = p.length ? "" : m;
                        for (s = 0; s < p.length; s++) {
                            r = p[s], q = m.substr(o, m.indexOf(r, o) - o), o += q.length + r.length, r = bu(r, k), 3 === r.length && r.push(1), n += q + (k ? "hsla(" + r[0] + "," + r[1] + "%," + r[2] + "%," + r[3] : "rgba(" + r.join(",")) + ")"
                        }
                        return n + m.substr(o)
                    },
                    ap = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3}){1,2}\\b";
                for (aM in bR) {
                    ap += "|" + aM + "\\b"
                }
                ap = new RegExp(ap + ")", "gi"), aR.colorStringFilter = function(e) {
                    var d, f = e[0] + e[1];
                    ap.test(f) && (d = -1 !== f.indexOf("hsl(") || -1 !== f.indexOf("hsla("), e[0] = aV(e[0], d), e[1] = aV(e[1], d)), ap.lastIndex = 0
                }, aY.defaultStringFilter || (aY.defaultStringFilter = aR.colorStringFilter);
                var ah = function(x, w, v, u) {
                        if (null == x) {
                            return function(b) {
                                return b
                            }
                        }
                        var t, s = w ? (x.match(ap) || [""])[0] : "",
                            r = x.split(s).join("").match(aA) || [],
                            q = x.substr(0, x.indexOf(r[0])),
                            p = ")" === x.charAt(x.length - 1) ? ")" : "",
                            o = -1 !== x.indexOf(" ") ? " " : ",",
                            n = r.length,
                            m = n > 0 ? r[0].replace(aC, "") : "";
                        return n ? t = w ? function(e) {
                            var d, c, g, f;
                            if ("number" == typeof e) {
                                e += m
                            } else {
                                if (u && bp.test(e)) {
                                    for (f = e.replace(bp, "|").split("|"), g = 0; g < f.length; g++) {
                                        f[g] = t(f[g])
                                    }
                                    return f.join(",")
                                }
                            }
                            if (d = (e.match(ap) || [s])[0], c = e.split(d).join("").match(aA) || [], g = c.length, n > g--) {
                                for (; ++g < n;) {
                                    c[g] = v ? c[(g - 1) / 2 | 0] : r[g]
                                }
                            }
                            return q + c.join(o) + o + d + p + (-1 !== e.indexOf("inset") ? " inset" : "")
                        } : function(e) {
                            var d, g, c;
                            if ("number" == typeof e) {
                                e += m
                            } else {
                                if (u && bp.test(e)) {
                                    for (g = e.replace(bp, "|").split("|"), c = 0; c < g.length; c++) {
                                        g[c] = t(g[c])
                                    }
                                    return g.join(",")
                                }
                            }
                            if (d = e.match(aA) || [], c = d.length, n > c--) {
                                for (; ++c < n;) {
                                    d[c] = v ? d[(c - 1) / 2 | 0] : r[c]
                                }
                            }
                            return q + d.join(o) + p
                        } : function(b) {
                            return b
                        }
                    },
                    bT = function(b) {
                        return b = b.split(","),
                            function(s, r, q, p, o, n, m) {
                                var k, a = (r + "").split(" ");
                                for (m = {}, k = 0; 4 > k; k++) {
                                    m[b[k]] = a[k] = a[k] || a[(k - 1) / 2 >> 0]
                                }
                                return p.parse(s, m, o, n)
                            }
                    },
                    bK = (bc._setPluginRatio = function(u) {
                        this.plugin.setRatio(u);
                        for (var t, s, r, q, p, o = this.data, n = o.proxy, m = o.firstMPT, k = 0.000001; m;) {
                            t = n[m.v], m.r ? t = Math.round(t) : k > t && t > -k && (t = 0), m.t[m.p] = t, m = m._next
                        }
                        if (o.autoRotate && (o.autoRotate.rotation = o.mod ? o.mod(n.rotation, this.t) : n.rotation), 1 === u || 0 === u) {
                            for (m = o.firstMPT, p = 1 === u ? "e" : "b"; m;) {
                                if (s = m.t, s.type) {
                                    if (1 === s.type) {
                                        for (q = s.xs0 + s.s + s.xs1, r = 1; r < s.l; r++) {
                                            q += s["xn" + r] + s["xs" + (r + 1)]
                                        }
                                        s[p] = q
                                    }
                                } else {
                                    s[p] = s.s + s.xs0
                                }
                                m = m._next
                            }
                        }
                    }, function(g, f, m, k, h) {
                        this.t = g, this.p = f, this.v = m, this.r = h, k && (k._prev = this, this._next = k)
                    }),
                    bA = (bc._parseToProxy = function(F, E, D, C, B, A) {
                        var z, y, x, w, v, u = C,
                            t = {},
                            s = {},
                            r = D._transform,
                            q = bj;
                        for (D._transform = null, bj = E, C = v = D.parse(F, E, C, B), bj = q, A && (D._transform = r, u && (u._prev = null, u._prev && (u._prev._next = null))); C && C !== u;) {
                            if (C.type <= 1 && (y = C.p, s[y] = C.s + C.c, t[y] = C.s, A || (w = new bK(C, "s", y, w, C.r), C.c = 0), 1 === C.type)) {
                                for (z = C.l; --z > 0;) {
                                    x = "xn" + z, y = C.p + "_" + x, s[y] = C.data[x], t[y] = C[x], A || (w = new bK(C, x, y, w, C.rxp[x]))
                                }
                            }
                            C = C._next
                        }
                        return {
                            proxy: t,
                            end: s,
                            firstMPT: w,
                            pt: v
                        }
                    }, bc.CSSPropTween = function(v, u, t, s, r, q, p, o, n, f, c) {
                        this.t = v, this.p = u, this.s = t, this.c = s, this.n = p || u, v instanceof bA || aS.push(this.n), this.r = o, this.type = q || 0, n && (this.pr = n, aX = !0), this.b = void 0 === f ? t : f, this.e = void 0 === c ? t + s : c, r && (this._next = r, r._prev = this)
                    }),
                    a0 = function(k, h, q, p, o, n) {
                        var m = new bA(k, h, q, p - q, o, -1, n);
                        return m.b = q, m.e = m.xs0 = p, m
                    },
                    ar = aR.parseComplex = function(ba, aa, Z, Y, X, W, V, U, T, S) {
                        Z = Z || W || "", "function" == typeof Y && (Y = Y(aD, aE)), V = new bA(ba, aa, 0, 0, V, S ? 2 : 1, null, !1, U, Z, Y), Y += "", X && ap.test(Y + Z) && (Y = [Z, Y], aR.colorStringFilter(Y), Z = Y[0], Y = Y[1]);
                        var R, Q, P, O, I, t, r, q, k, g, N, M, L, K = Z.split(", ").join(",").split(" "),
                            J = Y.split(", ").join(",").split(" "),
                            H = K.length,
                            s = aL !== !1;
                        for ((-1 !== Y.indexOf(",") || -1 !== Z.indexOf(",")) && (K = K.join(" ").replace(bp, ", ").split(" "), J = J.join(" ").replace(bp, ", ").split(" "), H = K.length), H !== J.length && (K = (W || "").split(" "), H = K.length), V.plugin = T, V.setRatio = S, ap.lastIndex = 0, R = 0; H > R; R++) {
                            if (O = K[R], I = J[R], q = parseFloat(O), q || 0 === q) {
                                V.appendXtra("", q, aO(I, q), I.replace(aB, ""), s && -1 !== I.indexOf("px"), !0)
                            } else {
                                if (X && ap.test(O)) {
                                    M = I.indexOf(")") + 1, M = ")" + (M ? I.substr(M) : ""), L = -1 !== I.indexOf("hsl") && a9, O = bu(O, L), I = bu(I, L), k = O.length + I.length > 6, k && !a9 && 0 === I[3] ? (V["xs" + V.l] += V.l ? " transparent" : "transparent", V.e = V.e.split(J[R]).join("transparent")) : (a9 || (k = !1), L ? V.appendXtra(k ? "hsla(" : "hsl(", O[0], aO(I[0], O[0]), ",", !1, !0).appendXtra("", O[1], aO(I[1], O[1]), "%,", !1).appendXtra("", O[2], aO(I[2], O[2]), k ? "%," : "%" + M, !1) : V.appendXtra(k ? "rgba(" : "rgb(", O[0], I[0] - O[0], ",", !0, !0).appendXtra("", O[1], I[1] - O[1], ",", !0).appendXtra("", O[2], I[2] - O[2], k ? "," : M, !0), k && (O = O.length < 4 ? 1 : O[3], V.appendXtra("", O, (I.length < 4 ? 1 : I[3]) - O, M, !1))), ap.lastIndex = 0
                                } else {
                                    if (t = O.match(aC)) {
                                        if (r = I.match(aB), !r || r.length !== t.length) {
                                            return V
                                        }
                                        for (P = 0, Q = 0; Q < t.length; Q++) {
                                            N = t[Q], g = O.indexOf(N, P), V.appendXtra(O.substr(P, g - P), Number(N), aO(r[Q], N), "", s && "px" === O.substr(g + N.length, 2), 0 === Q), P = g + N.length
                                        }
                                        V["xs" + V.l] += O.substr(P)
                                    } else {
                                        V["xs" + V.l] += V.l || V["xs" + V.l] ? " " + I : I
                                    }
                                }
                            }
                        }
                        if (-1 !== Y.indexOf("=") && V.data) {
                            for (M = V.xs0 + V.data.s, R = 1; R < V.l; R++) {
                                M += V["xs" + R] + V.data["xn" + R]
                            }
                            V.e = M + V["xs" + R]
                        }
                        return V.l || (V.type = -1, V.xs0 = V.e), V.xfirst || V
                    },
                    aj = 9;
                for (aM = bA.prototype, aM.l = aM.pr = 0; --aj > 0;) {
                    aM["xn" + aj] = 0, aM["xs" + aj] = ""
                }
                aM.xs0 = "", aM._next = aM._prev = aM.xfirst = aM.data = aM.plugin = aM.setRatio = aM.rxp = null, aM.appendXtra = function(m, k, s, r, q, p) {
                    var o = this,
                        n = o.l;
                    return o["xs" + n] += p && (n || o["xs" + n]) ? " " + m : m || "", s || 0 === n || o.plugin ? (o.l++, o.type = o.setRatio ? 2 : 1, o["xs" + o.l] = r || "", n > 0 ? (o.data["xn" + n] = k + s, o.rxp["xn" + n] = q, o["xn" + n] = k, o.plugin || (o.xfirst = new bA(o, "xn" + n, k, s, o.xfirst || o, 0, o.n, q, o.pr), o.xfirst.xs0 = 0), o) : (o.data = {
                        s: k + s
                    }, o.rxp = {}, o.s = k, o.c = s, o.r = q, o)) : (o["xs" + n] += k + (r || ""), o)
                };
                var ab = function(d, c) {
                        c = c || {}, this.p = c.prefix ? a3(d) || d : d, aN[d] = aN[this.p] = this, this.format = c.formatter || ah(c.defaultValue, c.color, c.collapsible, c.multi), c.parser && (this.parse = c.parser), this.clrs = c.color, this.multi = c.multi, this.keyword = c.keyword, this.dflt = c.defaultValue, this.pr = c.priority || 0
                    },
                    bM = bc._registerComplexSpecialProp = function(k, h, q) {
                        "object" != typeof h && (h = {
                            parser: q
                        });
                        var p, o, n = k.split(","),
                            m = h.defaultValue;
                        for (q = q || [m], p = 0; p < n.length; p++) {
                            h.prefix = 0 === p && h.prefix, h.defaultValue = q[p] || m, o = new ab(n[p], h)
                        }
                    },
                    bC = bc._registerPluginProp = function(d) {
                        if (!aN[d]) {
                            var c = d.charAt(0).toUpperCase() + d.substr(1) + "Plugin";
                            bM(d, {
                                parser: function(b, r, q, p, o, n, m) {
                                    var h = aQ.com.greensock.plugins[c];
                                    return h ? (h._cssRegister(), aN[q].parse(b, r, q, p, o, n, m)) : (a7("Error: " + c + " js file not loaded."), o)
                                }
                            })
                        }
                    };
                aM = ab.prototype, aM.parseComplex = function(z, y, x, w, v, u) {
                    var t, s, r, q, p, o, n = this.keyword;
                    if (this.multi && (bp.test(x) || bp.test(y) ? (s = y.replace(bp, "|").split("|"), r = x.replace(bp, "|").split("|")) : n && (s = [y], r = [x])), r) {
                        for (q = r.length > s.length ? r.length : s.length, t = 0; q > t; t++) {
                            y = s[t] = s[t] || this.dflt, x = r[t] = r[t] || this.dflt, n && (p = y.indexOf(n), o = x.indexOf(n), p !== o && (-1 === o ? s[t] = s[t].split(n).join("") : -1 === p && (s[t] += " " + n)))
                        }
                        y = s.join(", "), x = r.join(", ")
                    }
                    return ar(z, this.p, y, x, this.clrs, this.dflt, w, this.pr, v, u)
                }, aM.parse = function(k, e, q, p, o, n, m) {
                    return this.parseComplex(k.style, this.format(a1(k, this.p, aT, !1, this.dflt)), this.format(e), o, n)
                }, aR.registerSpecialProp = function(e, d, f) {
                    bM(e, {
                        parser: function(b, q, p, o, n, m, k) {
                            var c = new bA(b, p, 0, 0, n, 2, p, !1, f);
                            return c.plugin = m, c.setRatio = d(b, q, o._tween, p), c
                        },
                        priority: f
                    })
                }, aR.useSVGTransformAttr = !0;
                var bQ, bG = "scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(","),
                    bo = a3("transform"),
                    aP = a6 + "transform",
                    ao = a3("transformOrigin"),
                    ag = null !== a3("perspective"),
                    bS = bc.Transform = function() {
                        this.perspective = parseFloat(aR.defaultTransformPerspective) || 0, this.force3D = aR.defaultForce3D !== !1 && ag ? aR.defaultForce3D || "auto" : !1
                    },
                    bI = _gsScope.SVGElement,
                    bv = function(h, g, o) {
                        var n, m = bh.createElementNS("http://www.w3.org/2000/svg", h),
                            k = /([a-z])([A-Z])/g;
                        for (n in o) {
                            m.setAttributeNS(null, n.replace(k, "$1-$2").toLowerCase(), o[n])
                        }
                        return g.appendChild(m), m
                    },
                    aW = bh.documentElement || {},
                    aq = function() {
                        var f, e, h, g = aF || /Android/i.test(bb) && !_gsScope.chrome;
                        return bh.createElementNS && !g && (f = bv("svg", aW), e = bv("rect", f, {
                            width: 100,
                            height: 50,
                            x: 100
                        }), h = e.getBoundingClientRect().width, e.style[ao] = "50% 50%", e.style[bo] = "scaleX(0.5)", g = h === e.getBoundingClientRect().width && !(aH && ag), aW.removeChild(f)), g
                    }(),
                    ai = function(R, Q, P, O, N, M) {
                        var L, K, J, I, H, G, F, E, D, C, B, A, z, y, x = R._gsTransform,
                            g = at(R, !0);
                        x && (z = x.xOrigin, y = x.yOrigin), (!O || (L = O.split(" ")).length < 2) && (F = R.getBBox(), 0 === F.x && 0 === F.y && F.width + F.height === 0 && (F = {
                            x: parseFloat(R.hasAttribute("x") ? R.getAttribute("x") : R.hasAttribute("cx") ? R.getAttribute("cx") : 0) || 0,
                            y: parseFloat(R.hasAttribute("y") ? R.getAttribute("y") : R.hasAttribute("cy") ? R.getAttribute("cy") : 0) || 0,
                            width: 0,
                            height: 0
                        }), Q = bn(Q).split(" "), L = [(-1 !== Q[0].indexOf("%") ? parseFloat(Q[0]) / 100 * F.width : parseFloat(Q[0])) + F.x, (-1 !== Q[1].indexOf("%") ? parseFloat(Q[1]) / 100 * F.height : parseFloat(Q[1])) + F.y]), P.xOrigin = I = parseFloat(L[0]), P.yOrigin = H = parseFloat(L[1]), O && g !== a2 && (G = g[0], F = g[1], E = g[2], D = g[3], C = g[4], B = g[5], A = G * D - F * E, A && (K = I * (D / A) + H * (-E / A) + (E * B - D * C) / A, J = I * (-F / A) + H * (G / A) - (G * B - F * C) / A, I = P.xOrigin = L[0] = K, H = P.yOrigin = L[1] = J)), x && (M && (P.xOffset = x.xOffset, P.yOffset = x.yOffset, x = P), N || N !== !1 && aR.defaultSmoothOrigin !== !1 ? (K = I - z, J = H - y, x.xOffset += K * g[0] + J * g[2] - K, x.yOffset += K * g[1] + J * g[3] - J) : x.xOffset = x.yOffset = 0), M || R.setAttribute("data-svg-origin", L.join(" "))
                    },
                    bU = function(k) {
                        var h, q = bf("svg", this.ownerSVGElement.getAttribute("xmlns") || "http://www.w3.org/2000/svg"),
                            p = this.parentNode,
                            o = this.nextSibling,
                            n = this.style.cssText;
                        if (aW.appendChild(q), q.appendChild(this), this.style.display = "block", k) {
                            try {
                                h = this.getBBox(), this._originalGetBBox = this.getBBox, this.getBBox = bU
                            } catch (m) {}
                        } else {
                            this._originalGetBBox && (h = this._originalGetBBox())
                        }
                        return o ? p.insertBefore(this, o) : p.appendChild(this), aW.removeChild(q), this.style.cssText = n, h
                    },
                    bL = function(d) {
                        try {
                            return d.getBBox()
                        } catch (c) {
                            return bU.call(d, !0)
                        }
                    },
                    bB = function(b) {
                        return !(!(bI && b.getCTM && bL(b)) || b.parentNode && !b.ownerSVGElement)
                    },
                    a2 = [1, 0, 0, 1, 0, 0],
                    at = function(w, v) {
                        var u, t, s, r, q, p, o = w._gsTransform || new bS,
                            n = 100000,
                            m = w.style;
                        if (bo ? t = a1(w, aP, null, !0) : w.currentStyle && (t = w.currentStyle.filter.match(br), t = t && 4 === t.length ? [t[0].substr(4), Number(t[2].substr(4)), Number(t[1].substr(4)), t[3].substr(4), o.x || 0, o.y || 0].join(",") : ""), u = !t || "none" === t || "matrix(1, 0, 0, 1, 0, 0)" === t, u && bo && ((p = "none" === bJ(w).display) || !w.parentNode) && (p && (r = m.display, m.display = "block"), w.parentNode || (q = 1, aW.appendChild(w)), t = a1(w, aP, null, !0), u = !t || "none" === t || "matrix(1, 0, 0, 1, 0, 0)" === t, r ? m.display = r : p && a4(m, "display"), q && aW.removeChild(w)), (o.svg || w.getCTM && bB(w)) && (u && -1 !== (m[bo] + "").indexOf("matrix") && (t = m[bo], u = 0), s = w.getAttribute("transform"), u && s && (-1 !== s.indexOf("matrix") ? (t = s, u = 0) : -1 !== s.indexOf("translate") && (t = "matrix(1,0,0,1," + s.match(/(?:\-|\b)[\d\-\.e]+\b/gi).join(",") + ")", u = 0))), u) {
                            return a2
                        }
                        for (s = (t || "").match(aC) || [], aj = s.length; --aj > -1;) {
                            r = Number(s[aj]), s[aj] = (q = r - (r |= 0)) ? (q * n + (0 > q ? -0.5 : 0.5) | 0) / n + r : r
                        }
                        return v && s.length > 6 ? [s[0], s[1], s[4], s[5], s[12], s[13]] : s
                    },
                    ak = bc.getTransform = function(co, cn, cm, cl) {
                        if (co._gsTransform && cm && !cl) {
                            return co._gsTransform
                        }
                        var ck, cj, ci, ch, cg, cf, ce = cm ? co._gsTransform || new bS : new bS,
                            cd = ce.scaleX < 0,
                            cc = 0.00002,
                            cb = 100000,
                            ca = ag ? parseFloat(a1(co, ao, cn, !1, "0 0 0").split(" ")[2]) || ce.zOrigin || 0 : 0,
                            b9 = parseFloat(aR.defaultTransformPerspective) || 0;
                        if (ce.svg = !(!co.getCTM || !bB(co)), ce.svg && (ai(co, a1(co, ao, cn, !1, "50% 50%") + "", ce, co.getAttribute("data-svg-origin")), bQ = aR.useSVGTransformAttr || aq), ck = at(co), ck !== a2) {
                            if (16 === ck.length) {
                                var b8, b7, b6, b5, b4, b3 = ck[0],
                                    b2 = ck[1],
                                    b1 = ck[2],
                                    b0 = ck[3],
                                    bZ = ck[4],
                                    bY = ck[5],
                                    bX = ck[6],
                                    bW = ck[7],
                                    bV = ck[8],
                                    ba = ck[9],
                                    aa = ck[10],
                                    Z = ck[12],
                                    Y = ck[13],
                                    X = ck[14],
                                    W = ck[11],
                                    V = Math.atan2(bX, aa);
                                ce.zOrigin && (X = -ce.zOrigin, Z = bV * X - ck[12], Y = ba * X - ck[13], X = aa * X + ce.zOrigin - ck[14]), ce.rotationX = V * bk, V && (b5 = Math.cos(-V), b4 = Math.sin(-V), b8 = bZ * b5 + bV * b4, b7 = bY * b5 + ba * b4, b6 = bX * b5 + aa * b4, bV = bZ * -b4 + bV * b5, ba = bY * -b4 + ba * b5, aa = bX * -b4 + aa * b5, W = bW * -b4 + W * b5, bZ = b8, bY = b7, bX = b6), V = Math.atan2(-b1, aa), ce.rotationY = V * bk, V && (b5 = Math.cos(-V), b4 = Math.sin(-V), b8 = b3 * b5 - bV * b4, b7 = b2 * b5 - ba * b4, b6 = b1 * b5 - aa * b4, ba = b2 * b4 + ba * b5, aa = b1 * b4 + aa * b5, W = b0 * b4 + W * b5, b3 = b8, b2 = b7, b1 = b6), V = Math.atan2(b2, b3), ce.rotation = V * bk, V && (b5 = Math.cos(-V), b4 = Math.sin(-V), b3 = b3 * b5 + bZ * b4, b7 = b2 * b5 + bY * b4, bY = b2 * -b4 + bY * b5, bX = b1 * -b4 + bX * b5, b2 = b7), ce.rotationX && Math.abs(ce.rotationX) + Math.abs(ce.rotation) > 359.9 && (ce.rotationX = ce.rotation = 0, ce.rotationY = 180 - ce.rotationY), ce.scaleX = (Math.sqrt(b3 * b3 + b2 * b2) * cb + 0.5 | 0) / cb, ce.scaleY = (Math.sqrt(bY * bY + ba * ba) * cb + 0.5 | 0) / cb, ce.scaleZ = (Math.sqrt(bX * bX + aa * aa) * cb + 0.5 | 0) / cb, ce.rotationX || ce.rotationY ? ce.skewX = 0 : (ce.skewX = bZ || bY ? Math.atan2(bZ, bY) * bk + ce.rotation : ce.skewX || 0, Math.abs(ce.skewX) > 90 && Math.abs(ce.skewX) < 270 && (cd ? (ce.scaleX *= -1, ce.skewX += ce.rotation <= 0 ? 180 : -180, ce.rotation += ce.rotation <= 0 ? 180 : -180) : (ce.scaleY *= -1, ce.skewX += ce.skewX <= 0 ? 180 : -180))), ce.perspective = W ? 1 / (0 > W ? -W : W) : 0, ce.x = Z, ce.y = Y, ce.z = X, ce.svg && (ce.x -= ce.xOrigin - (ce.xOrigin * b3 - ce.yOrigin * bZ), ce.y -= ce.yOrigin - (ce.yOrigin * b2 - ce.xOrigin * bY))
                            } else {
                                if (!ag || cl || !ck.length || ce.x !== ck[4] || ce.y !== ck[5] || !ce.rotationX && !ce.rotationY) {
                                    var U = ck.length >= 6,
                                        T = U ? ck[0] : 1,
                                        L = ck[1] || 0,
                                        g = ck[2] || 0,
                                        b = U ? ck[3] : 1;
                                    ce.x = ck[4] || 0, ce.y = ck[5] || 0, ci = Math.sqrt(T * T + L * L), ch = Math.sqrt(b * b + g * g), cg = T || L ? Math.atan2(L, T) * bk : ce.rotation || 0, cf = g || b ? Math.atan2(g, b) * bk + cg : ce.skewX || 0, Math.abs(cf) > 90 && Math.abs(cf) < 270 && (cd ? (ci *= -1, cf += 0 >= cg ? 180 : -180, cg += 0 >= cg ? 180 : -180) : (ch *= -1, cf += 0 >= cf ? 180 : -180)), ce.scaleX = ci, ce.scaleY = ch, ce.rotation = cg, ce.skewX = cf, ag && (ce.rotationX = ce.rotationY = ce.z = 0, ce.perspective = b9, ce.scaleZ = 1), ce.svg && (ce.x -= ce.xOrigin - (ce.xOrigin * T + ce.yOrigin * g), ce.y -= ce.yOrigin - (ce.xOrigin * L + ce.yOrigin * b))
                                }
                            }
                            ce.zOrigin = ca;
                            for (cj in ce) {
                                ce[cj] < cc && ce[cj] > -cc && (ce[cj] = 0)
                            }
                        }
                        return cm && (co._gsTransform = ce, ce.svg && (bQ && co.style[bo] ? aY.delayedCall(0.001, function() {
                            a4(co.style, bo)
                        }) : !bQ && co.getAttribute("transform") && aY.delayedCall(0.001, function() {
                            co.removeAttribute("transform")
                        }))), ce
                    },
                    ac = function(X) {
                        var W, V, U = this.data,
                            T = -U.rotation * bl,
                            S = T + U.skewX * bl,
                            R = 100000,
                            Q = (Math.cos(T) * U.scaleX * R | 0) / R,
                            P = (Math.sin(T) * U.scaleX * R | 0) / R,
                            O = (Math.sin(S) * -U.scaleY * R | 0) / R,
                            N = (Math.cos(S) * U.scaleY * R | 0) / R,
                            M = this.t.style,
                            L = this.t.currentStyle;
                        if (L) {
                            V = P, P = -O, O = -V, W = L.filter, M.filter = "";
                            var K, J, H = this.t.offsetWidth,
                                F = this.t.offsetHeight,
                                E = "absolute" !== L.position,
                                D = "progid:DXImageTransform.Microsoft.Matrix(M11=" + Q + ", M12=" + P + ", M21=" + O + ", M22=" + N,
                                C = U.x + H * U.xPercent / 100,
                                x = U.y + F * U.yPercent / 100;
                            if (null != U.ox && (K = (U.oxp ? H * U.ox * 0.01 : U.ox) - H / 2, J = (U.oyp ? F * U.oy * 0.01 : U.oy) - F / 2, C += K - (K * Q + J * P), x += J - (K * O + J * N)), E ? (K = H / 2, J = F / 2, D += ", Dx=" + (K - (K * Q + J * P) + C) + ", Dy=" + (J - (K * O + J * N) + x) + ")") : D += ", sizingMethod='auto expand')", -1 !== W.indexOf("DXImageTransform.Microsoft.Matrix(") ? M.filter = W.replace(bq, D) : M.filter = D + " " + W, (0 === X || 1 === X) && 1 === Q && 0 === P && 0 === O && 1 === N && (E && -1 === D.indexOf("Dx=0, Dy=0") || ax.test(W) && 100 !== parseFloat(RegExp.$1) || -1 === W.indexOf(W.indexOf("Alpha")) && M.removeAttribute("filter")), !E) {
                                var w, p, I, G = 8 > aF ? 1 : -1;
                                for (K = U.ieOffsetX || 0, J = U.ieOffsetY || 0, U.ieOffsetX = Math.round((H - ((0 > Q ? -Q : Q) * H + (0 > P ? -P : P) * F)) / 2 + C), U.ieOffsetY = Math.round((F - ((0 > N ? -N : N) * F + (0 > O ? -O : O) * H)) / 2 + x), aj = 0; 4 > aj; aj++) {
                                    p = bP[aj], w = L[p], V = -1 !== w.indexOf("px") ? parseFloat(w) : bE(this.t, p, parseFloat(w), w.replace(ay, "")) || 0, I = V !== U[p] ? 2 > aj ? -U.ieOffsetX : -U.ieOffsetY : 2 > aj ? K - U.ieOffsetX : J - U.ieOffsetY, M[p] = (U[p] = Math.round(V - I * (0 === aj || 2 === aj ? 1 : G))) + "px"
                                }
                            }
                        }
                    },
                    bN = bc.set3DTransformRatio = bc.setTransformRatio = function(ck) {
                        var cj, ci, ch, cg, cf, ce, cd, cc, cb, ca, b9, b8, b7, b6, b5, b4, b3, b2, b1, b0, bZ, bY, bX, bW = this.data,
                            bV = this.t.style,
                            ba = bW.rotation,
                            aa = bW.rotationX,
                            Z = bW.rotationY,
                            Y = bW.scaleX,
                            X = bW.scaleY,
                            W = bW.scaleZ,
                            V = bW.x,
                            U = bW.y,
                            T = bW.z,
                            S = bW.svg,
                            R = bW.perspective,
                            Q = bW.force3D,
                            K = bW.skewY,
                            n = bW.skewX;
                        if (K && (n += K, ba += K), ((1 === ck || 0 === ck) && "auto" === Q && (this.tween._totalTime === this.tween._totalDuration || !this.tween._totalTime) || !Q) && !T && !R && !Z && !aa && 1 === W || bQ && S || !ag) {
                            return void(ba || n || S ? (ba *= bl, bY = n * bl, bX = 100000, ci = Math.cos(ba) * Y, cf = Math.sin(ba) * Y, ch = Math.sin(ba - bY) * -X, ce = Math.cos(ba - bY) * X, bY && "simple" === bW.skewType && (cj = Math.tan(bY - K * bl), cj = Math.sqrt(1 + cj * cj), ch *= cj, ce *= cj, K && (cj = Math.tan(K * bl), cj = Math.sqrt(1 + cj * cj), ci *= cj, cf *= cj)), S && (V += bW.xOrigin - (bW.xOrigin * ci + bW.yOrigin * ch) + bW.xOffset, U += bW.yOrigin - (bW.xOrigin * cf + bW.yOrigin * ce) + bW.yOffset, bQ && (bW.xPercent || bW.yPercent) && (b5 = this.t.getBBox(), V += 0.01 * bW.xPercent * b5.width, U += 0.01 * bW.yPercent * b5.height), b5 = 0.000001, b5 > V && V > -b5 && (V = 0), b5 > U && U > -b5 && (U = 0)), b1 = (ci * bX | 0) / bX + "," + (cf * bX | 0) / bX + "," + (ch * bX | 0) / bX + "," + (ce * bX | 0) / bX + "," + V + "," + U + ")", S && bQ ? this.t.setAttribute("transform", "matrix(" + b1) : bV[bo] = (bW.xPercent || bW.yPercent ? "translate(" + bW.xPercent + "%," + bW.yPercent + "%) matrix(" : "matrix(") + b1) : bV[bo] = (bW.xPercent || bW.yPercent ? "translate(" + bW.xPercent + "%," + bW.yPercent + "%) matrix(" : "matrix(") + Y + ",0,0," + X + "," + V + "," + U + ")")
                        }
                        if (aH && (b5 = 0.0001, b5 > Y && Y > -b5 && (Y = W = 0.00002), b5 > X && X > -b5 && (X = W = 0.00002), !R || bW.z || bW.rotationX || bW.rotationY || (R = 0)), ba || n) {
                            ba *= bl, b4 = ci = Math.cos(ba), b3 = cf = Math.sin(ba), n && (ba -= n * bl, b4 = Math.cos(ba), b3 = Math.sin(ba), "simple" === bW.skewType && (cj = Math.tan((n - K) * bl), cj = Math.sqrt(1 + cj * cj), b4 *= cj, b3 *= cj, bW.skewY && (cj = Math.tan(K * bl), cj = Math.sqrt(1 + cj * cj), ci *= cj, cf *= cj))), ch = -b3, ce = b4
                        } else {
                            if (!(Z || aa || 1 !== W || R || S)) {
                                return void(bV[bo] = (bW.xPercent || bW.yPercent ? "translate(" + bW.xPercent + "%," + bW.yPercent + "%) translate3d(" : "translate3d(") + V + "px," + U + "px," + T + "px)" + (1 !== Y || 1 !== X ? " scale(" + Y + "," + X + ")" : ""))
                            }
                            ci = ce = 1, ch = cf = 0
                        }
                        ca = 1, cg = cd = cc = cb = b9 = b8 = 0, b7 = R ? -1 / R : 0, b6 = bW.zOrigin, b5 = 0.000001, b0 = ",", bZ = "0", ba = Z * bl, ba && (b4 = Math.cos(ba), b3 = Math.sin(ba), cc = -b3, b9 = b7 * -b3, cg = ci * b3, cd = cf * b3, ca = b4, b7 *= b4, ci *= b4, cf *= b4), ba = aa * bl, ba && (b4 = Math.cos(ba), b3 = Math.sin(ba), cj = ch * b4 + cg * b3, b2 = ce * b4 + cd * b3, cb = ca * b3, b8 = b7 * b3, cg = ch * -b3 + cg * b4, cd = ce * -b3 + cd * b4, ca *= b4, b7 *= b4, ch = cj, ce = b2), 1 !== W && (cg *= W, cd *= W, ca *= W, b7 *= W), 1 !== X && (ch *= X, ce *= X, cb *= X, b8 *= X), 1 !== Y && (ci *= Y, cf *= Y, cc *= Y, b9 *= Y), (b6 || S) && (b6 && (V += cg * -b6, U += cd * -b6, T += ca * -b6 + b6), S && (V += bW.xOrigin - (bW.xOrigin * ci + bW.yOrigin * ch) + bW.xOffset, U += bW.yOrigin - (bW.xOrigin * cf + bW.yOrigin * ce) + bW.yOffset), b5 > V && V > -b5 && (V = bZ), b5 > U && U > -b5 && (U = bZ), b5 > T && T > -b5 && (T = 0)), b1 = bW.xPercent || bW.yPercent ? "translate(" + bW.xPercent + "%," + bW.yPercent + "%) matrix3d(" : "matrix3d(", b1 += (b5 > ci && ci > -b5 ? bZ : ci) + b0 + (b5 > cf && cf > -b5 ? bZ : cf) + b0 + (b5 > cc && cc > -b5 ? bZ : cc), b1 += b0 + (b5 > b9 && b9 > -b5 ? bZ : b9) + b0 + (b5 > ch && ch > -b5 ? bZ : ch) + b0 + (b5 > ce && ce > -b5 ? bZ : ce), aa || Z || 1 !== W ? (b1 += b0 + (b5 > cb && cb > -b5 ? bZ : cb) + b0 + (b5 > b8 && b8 > -b5 ? bZ : b8) + b0 + (b5 > cg && cg > -b5 ? bZ : cg), b1 += b0 + (b5 > cd && cd > -b5 ? bZ : cd) + b0 + (b5 > ca && ca > -b5 ? bZ : ca) + b0 + (b5 > b7 && b7 > -b5 ? bZ : b7) + b0) : b1 += ",0,0,0,0,1,0,", b1 += V + b0 + U + b0 + T + b0 + (R ? 1 + -T / R : 1) + ")", bV[bo] = b1
                    };
                aM = bS.prototype, aM.x = aM.y = aM.z = aM.skewX = aM.skewY = aM.rotation = aM.rotationX = aM.rotationY = aM.zOrigin = aM.xPercent = aM.yPercent = aM.xOffset = aM.yOffset = 0, aM.scaleX = aM.scaleY = aM.scaleZ = 1, bM("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin", {
                    parser: function(ba, aa, Z, Y, X, W, V) {
                        if (Y._lastParsedTransform === V) {
                            return X
                        }
                        Y._lastParsedTransform = V;
                        var U, T = V.scale && "function" == typeof V.scale ? V.scale : 0;
                        "function" == typeof V[Z] && (U = V[Z], V[Z] = aa), T && (V.scale = T(aD, ba));
                        var S, R, Q, P, O, K, I, G, F, r = ba._gsTransform,
                            q = ba.style,
                            g = 0.000001,
                            e = bG.length,
                            N = V,
                            M = {},
                            L = "transformOrigin",
                            J = ak(ba, aT, !0, N.parseTransform),
                            H = N.transform && ("function" == typeof N.transform ? N.transform(aD, aE) : N.transform);
                        if (Y._transform = J, H && "string" == typeof H && bo) {
                            R = be.style, R[bo] = H, R.display = "block", R.position = "absolute", bh.body.appendChild(be), S = ak(be, null, !1), J.svg && (K = J.xOrigin, I = J.yOrigin, S.x -= J.xOffset, S.y -= J.yOffset, (N.transformOrigin || N.svgOrigin) && (H = {}, ai(ba, bn(N.transformOrigin), H, N.svgOrigin, N.smoothOrigin, !0), K = H.xOrigin, I = H.yOrigin, S.x -= H.xOffset - J.xOffset, S.y -= H.yOffset - J.yOffset), (K || I) && (G = at(be, !0), S.x -= K - (K * G[0] + I * G[2]), S.y -= I - (K * G[1] + I * G[3]))), bh.body.removeChild(be), S.perspective || (S.perspective = J.perspective), null != N.xPercent && (S.xPercent = an(N.xPercent, J.xPercent)), null != N.yPercent && (S.yPercent = an(N.yPercent, J.yPercent))
                        } else {
                            if ("object" == typeof N) {
                                if (S = {
                                        scaleX: an(null != N.scaleX ? N.scaleX : N.scale, J.scaleX),
                                        scaleY: an(null != N.scaleY ? N.scaleY : N.scale, J.scaleY),
                                        scaleZ: an(N.scaleZ, J.scaleZ),
                                        x: an(N.x, J.x),
                                        y: an(N.y, J.y),
                                        z: an(N.z, J.z),
                                        xPercent: an(N.xPercent, J.xPercent),
                                        yPercent: an(N.yPercent, J.yPercent),
                                        perspective: an(N.transformPerspective, J.perspective)
                                    }, O = N.directionalRotation, null != O) {
                                    if ("object" == typeof O) {
                                        for (R in O) {
                                            N[R] = O[R]
                                        }
                                    } else {
                                        N.rotation = O
                                    }
                                }
                                "string" == typeof N.x && -1 !== N.x.indexOf("%") && (S.x = 0, S.xPercent = an(N.x, J.xPercent)), "string" == typeof N.y && -1 !== N.y.indexOf("%") && (S.y = 0, S.yPercent = an(N.y, J.yPercent)), S.rotation = af("rotation" in N ? N.rotation : "shortRotation" in N ? N.shortRotation + "_short" : "rotationZ" in N ? N.rotationZ : J.rotation, J.rotation, "rotation", M), ag && (S.rotationX = af("rotationX" in N ? N.rotationX : "shortRotationX" in N ? N.shortRotationX + "_short" : J.rotationX || 0, J.rotationX, "rotationX", M), S.rotationY = af("rotationY" in N ? N.rotationY : "shortRotationY" in N ? N.shortRotationY + "_short" : J.rotationY || 0, J.rotationY, "rotationY", M)), S.skewX = af(N.skewX, J.skewX), S.skewY = af(N.skewY, J.skewY)
                            }
                        }
                        for (ag && null != N.force3D && (J.force3D = N.force3D, P = !0), J.skewType = N.skewType || J.skewType || aR.defaultSkewType, Q = J.force3D || J.z || J.rotationX || J.rotationY || S.z || S.rotationX || S.rotationY || S.perspective, Q || null == N.scale || (S.scaleZ = 1); --e > -1;) {
                            F = bG[e], H = S[F] - J[F], (H > g || -g > H || null != N[F] || null != bj[F]) && (P = !0, X = new bA(J, F, J[F], H, X), F in M && (X.e = M[F]), X.xs0 = 0, X.plugin = W, Y._overwriteProps.push(X.n))
                        }
                        return H = N.transformOrigin, J.svg && (H || N.svgOrigin) && (K = J.xOffset, I = J.yOffset, ai(ba, bn(H), S, N.svgOrigin, N.smoothOrigin), X = a0(J, "xOrigin", (r ? J : S).xOrigin, S.xOrigin, X, L), X = a0(J, "yOrigin", (r ? J : S).yOrigin, S.yOrigin, X, L), (K !== J.xOffset || I !== J.yOffset) && (X = a0(J, "xOffset", r ? K : J.xOffset, J.xOffset, X, L), X = a0(J, "yOffset", r ? I : J.yOffset, J.yOffset, X, L)), H = "0px 0px"), (H || ag && Q && J.zOrigin) && (bo ? (P = !0, F = ao, H = (H || a1(ba, F, aT, !1, "50% 50%")) + "", X = new bA(q, F, 0, 0, X, -1, L), X.b = q[F], X.plugin = W, ag ? (R = J.zOrigin, H = H.split(" "), J.zOrigin = (H.length > 2 && (0 === R || "0px" !== H[2]) ? parseFloat(H[2]) : R) || 0, X.xs0 = X.e = H[0] + " " + (H[1] || "50%") + " 0px", X = new bA(J, "zOrigin", 0, 0, X, -1, X.n), X.b = R, X.xs0 = X.e = J.zOrigin) : X.xs0 = X.e = H) : bn(H + "", J)), P && (Y._transformType = J.svg && bQ || !Q && 3 !== this._transformType ? 2 : 3), U && (V[Z] = U), T && (V.scale = T), X
                    },
                    prefix: !0
                }), bM("boxShadow", {
                    defaultValue: "0px 0px 0px 0px #999",
                    prefix: !0,
                    color: !0,
                    multi: !0,
                    keyword: "inset"
                }), bM("borderRadius", {
                    defaultValue: "0px",
                    parser: function(V, U, T, S, R, Q) {
                        U = this.format(U);
                        var P, O, N, M, L, K, J, I, H, G, F, E, D, C, B, A, e = ["borderTopLeftRadius", "borderTopRightRadius", "borderBottomRightRadius", "borderBottomLeftRadius"],
                            d = V.style;
                        for (H = parseFloat(V.offsetWidth), G = parseFloat(V.offsetHeight), P = U.split(" "), O = 0; O < e.length; O++) {
                            this.p.indexOf("border") && (e[O] = a3(e[O])), L = M = a1(V, e[O], aT, !1, "0px"), -1 !== L.indexOf(" ") && (M = L.split(" "), L = M[0], M = M[1]), K = N = P[O], J = parseFloat(L), E = L.substr((J + "").length), D = "=" === K.charAt(1), D ? (I = parseInt(K.charAt(0) + "1", 10), K = K.substr(2), I *= parseFloat(K), F = K.substr((I + "").length - (0 > I ? 1 : 0)) || "") : (I = parseFloat(K), F = K.substr((I + "").length)), "" === F && (F = aU[T] || E), F !== E && (C = bE(V, "borderLeft", J, E), B = bE(V, "borderTop", J, E), "%" === F ? (L = C / H * 100 + "%", M = B / G * 100 + "%") : "em" === F ? (A = bE(V, "borderLeft", 1, "em"), L = C / A + "em", M = B / A + "em") : (L = C + "px", M = B + "px"), D && (K = parseFloat(L) + I + F, N = parseFloat(M) + I + F)), R = ar(d, e[O], L + " " + M, K + " " + N, !1, "0px", R)
                        }
                        return R
                    },
                    prefix: !0,
                    formatter: ah("0px 0px 0px 0px", !1, !0)
                }), bM("borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius", {
                    defaultValue: "0px",
                    parser: function(h, e, o, n, m, k) {
                        return ar(h.style, o, this.format(a1(h, o, aT, !1, "0px 0px")), this.format(e), !1, "0px", m)
                    },
                    prefix: !0,
                    formatter: ah("0px 0px", !1, !0)
                }), bM("backgroundPosition", {
                    defaultValue: "0 0",
                    parser: function(F, E, D, C, B, A) {
                        var z, y, x, w, v, u, t = "background-position",
                            s = aT || bJ(F, null),
                            p = this.format((s ? aF ? s.getPropertyValue(t + "-x") + " " + s.getPropertyValue(t + "-y") : s.getPropertyValue(t) : F.currentStyle.backgroundPositionX + " " + F.currentStyle.backgroundPositionY) || "0 0"),
                            e = this.format(E);
                        if (-1 !== p.indexOf("%") != (-1 !== e.indexOf("%")) && e.split(",").length < 2 && (u = a1(F, "backgroundImage").replace(bw, ""), u && "none" !== u)) {
                            for (z = p.split(" "), y = e.split(" "), bd.setAttribute("src", u), x = 2; --x > -1;) {
                                p = z[x], w = -1 !== p.indexOf("%"), w !== (-1 !== y[x].indexOf("%")) && (v = 0 === x ? F.offsetWidth - bd.width : F.offsetHeight - bd.height, z[x] = w ? parseFloat(p) / 100 * v + "px" : parseFloat(p) / v * 100 + "%")
                            }
                            p = z.join(" ")
                        }
                        return this.parseComplex(F.style, p, e, B, A)
                    },
                    formatter: bn
                }), bM("backgroundSize", {
                    defaultValue: "0 0",
                    formatter: function(b) {
                        return b += "", bn(-1 === b.indexOf(" ") ? b + " " + b : b)
                    }
                }), bM("perspective", {
                    defaultValue: "0px",
                    prefix: !0
                }), bM("perspectiveOrigin", {
                    defaultValue: "50% 50%",
                    prefix: !0
                }), bM("transformStyle", {
                    prefix: !0
                }), bM("backfaceVisibility", {
                    prefix: !0
                }), bM("userSelect", {
                    prefix: !0
                }), bM("margin", {
                    parser: bT("marginTop,marginRight,marginBottom,marginLeft")
                }), bM("padding", {
                    parser: bT("paddingTop,paddingRight,paddingBottom,paddingLeft")
                }), bM("clip", {
                    defaultValue: "rect(0px,0px,0px,0px)",
                    parser: function(s, r, q, p, o, n) {
                        var m, k, e;
                        return 9 > aF ? (k = s.currentStyle, e = 8 > aF ? " " : ",", m = "rect(" + k.clipTop + e + k.clipRight + e + k.clipBottom + e + k.clipLeft + ")", r = this.format(r).split(",").join(e)) : (m = this.format(a1(s, this.p, aT, !1, this.dflt)), r = this.format(r)), this.parseComplex(s.style, m, r, o, n)
                    }
                }), bM("textShadow", {
                    defaultValue: "0px 0px 0px #999",
                    color: !0,
                    multi: !0
                }), bM("autoRound,strictUnits", {
                    parser: function(g, f, m, k, h) {
                        return h
                    }
                }), bM("border", {
                    defaultValue: "0px solid #000",
                    parser: function(s, r, q, p, o, n) {
                        var m = a1(s, "borderTopWidth", aT, !1, "0px"),
                            k = this.format(r).split(" "),
                            e = k[0].replace(ay, "");
                        return "px" !== e && (m = parseFloat(m) / bE(s, "borderTopWidth", 1, e) + e), this.parseComplex(s.style, this.format(m + " " + a1(s, "borderTopStyle", aT, !1, "solid") + " " + a1(s, "borderTopColor", aT, !1, "#000")), k.join(" "), o, n)
                    },
                    color: !0,
                    formatter: function(d) {
                        var c = d.split(" ");
                        return c[0] + " " + (c[1] || "solid") + " " + (d.match(ap) || ["#000"])[0]
                    }
                }), bM("borderWidth", {
                    parser: bT("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth")
                }), bM("float,cssFloat,styleFloat", {
                    parser: function(m, k, s, r, q, p) {
                        var o = m.style,
                            n = "cssFloat" in o ? "cssFloat" : "styleFloat";
                        return new bA(o, n, 0, 0, q, -1, s, !1, 0, o[n], k)
                    }
                });
                var bD = function(g) {
                    var f, m = this.t,
                        k = m.filter || a1(this.data, "filter") || "",
                        h = this.s + this.c * g | 0;
                    100 === h && (-1 === k.indexOf("atrix(") && -1 === k.indexOf("radient(") && -1 === k.indexOf("oader(") ? (m.removeAttribute("filter"), f = !a1(this.data, "filter")) : (m.filter = k.replace(au, ""), f = !0)), f || (this.xn1 && (m.filter = k = k || "alpha(opacity=" + h + ")"), -1 === k.indexOf("pacity") ? 0 === h && this.xn1 || (m.filter = k + " alpha(opacity=" + h + ")") : m.filter = k.replace(ax, "opacity=" + h))
                };
                bM("opacity,alpha,autoAlpha", {
                    defaultValue: "1",
                    parser: function(s, r, q, p, o, n) {
                        var m = parseFloat(a1(s, "opacity", aT, !1, "1")),
                            k = s.style,
                            e = "autoAlpha" === q;
                        return "string" == typeof r && "=" === r.charAt(1) && (r = ("-" === r.charAt(0) ? -1 : 1) * parseFloat(r.substr(2)) + m), e && 1 === m && "hidden" === a1(s, "visibility", aT) && 0 !== r && (m = 0), a9 ? o = new bA(k, "opacity", m, r - m, o) : (o = new bA(k, "opacity", 100 * m, 100 * (r - m), o), o.xn1 = e ? 1 : 0, k.zoom = 1, o.type = 2, o.b = "alpha(opacity=" + o.s + ")", o.e = "alpha(opacity=" + (o.s + o.c) + ")", o.data = s, o.plugin = n, o.setRatio = bD), e && (o = new bA(k, "visibility", 0, 0, o, -1, null, !1, 0, 0 !== m ? "inherit" : "hidden", 0 === r ? "hidden" : "inherit"), o.xs0 = "inherit", p._overwriteProps.push(o.n), p._overwriteProps.push(q)), o
                    }
                });
                var a4 = function(d, c) {
                        c && (d.removeProperty ? (("ms" === c.substr(0, 2) || "webkit" === c.substr(0, 6)) && (c = "-" + c), d.removeProperty(c.replace(by, "-$1").toLowerCase())) : d.removeAttribute(c))
                    },
                    aw = function(e) {
                        if (this.t._gsClassPT = this, 1 === e || 0 === e) {
                            this.t.setAttribute("class", 0 === e ? this.b : this.e);
                            for (var d = this.data, f = this.t.style; d;) {
                                d.v ? f[d.p] = d.v : a4(f, d.p), d = d._next
                            }
                            1 === e && this.t._gsClassPT === this && (this.t._gsClassPT = null)
                        } else {
                            this.t.getAttribute("class") !== this.e && this.t.setAttribute("class", this.e)
                        }
                    };
                bM("className", {
                    parser: function(B, A, z, y, x, w, v) {
                        var u, t, s, r, q, e = B.getAttribute("class") || "",
                            c = B.style.cssText;
                        if (x = y._classNamePT = new bA(B, z, 0, 0, x, 2), x.setRatio = aw, x.pr = -11, aX = !0, x.b = e, t = aI(B, aT), s = B._gsClassPT) {
                            for (r = {}, q = s.data; q;) {
                                r[q.p] = 1, q = q._next
                            }
                            s.setRatio(1)
                        }
                        return B._gsClassPT = x, x.e = "=" !== A.charAt(1) ? A : e.replace(new RegExp("(?:\\s|^)" + A.substr(2) + "(?![\\w-])"), "") + ("+" === A.charAt(0) ? " " + A.substr(2) : ""), B.setAttribute("class", x.e), u = am(B, t, aI(B), v, r), B.setAttribute("class", e), x.data = u.firstMPT, B.style.cssText = c, x = x.xfirst = y.parse(B, u.difs, x, w)
                    }
                });
                var al = function(m) {
                    if ((1 === m || 0 === m) && this.data._totalTime === this.data._totalDuration && "isFromStart" !== this.data.data) {
                        var k, s, r, q, p, o = this.t.style,
                            n = aN.transform.parse;
                        if ("all" === this.e) {
                            o.cssText = "", q = !0
                        } else {
                            for (k = this.e.split(" ").join("").split(","), r = k.length;
                                --r > -1;) {
                                s = k[r], aN[s] && (aN[s].parse === n ? q = !0 : s = "transformOrigin" === s ? ao : aN[s].p), a4(o, s)
                            }
                        }
                        q && (a4(o, bo), p = this.t._gsTransform, p && (p.svg && (this.t.removeAttribute("data-svg-origin"), this.t.removeAttribute("transform")), delete this.t._gsTransform))
                    }
                };
                for (bM("clearProps", {
                        parser: function(g, c, m, k, h) {
                            return h = new bA(g, m, 0, 0, h, 2), h.setRatio = al, h.e = c, h.pr = -10, h.data = k._tween, aX = !0, h
                        }
                    }), aM = "bezier,throwProps,physicsProps,physics2D".split(","), aj = aM.length; aj--;) {
                    bC(aM[aj])
                }
                aM = aR.prototype, aM._firstPT = aM._lastParsedTransform = aM._transform = null, aM._onInitTween = function(q, m, g, f) {
                    if (!q.nodeType) {
                        return !1
                    }
                    this._target = aE = q, this._tween = g, this._vars = m, aD = f, aL = m.autoRound, aX = !1, aU = m.suffixMap || aR.suffixMap, aT = bJ(q, ""), aS = this._overwriteProps;
                    var e, c, D, C, B, y, r, o, k, d = q.style;
                    if (aK && "" === d.zIndex && (e = a1(q, "zIndex", aT), ("auto" === e || "" === e) && this._addLazySet(d, "zIndex", 0)), "string" == typeof m && (C = d.cssText, e = aI(q, aT), d.cssText = C + ";" + m, e = am(q, e, aI(q)).difs, !a9 && av.test(m) && (e.opacity = parseFloat(RegExp.$1)), m = e, d.cssText = C), m.className ? this._firstPT = c = aN.className.parse(q, m.className, "className", this, null, null, m) : this._firstPT = c = this.parse(q, m, null), this._transformType) {
                        for (k = 3 === this._transformType, bo ? aJ && (aK = !0, "" === d.zIndex && (r = a1(q, "zIndex", aT), ("auto" === r || "" === r) && this._addLazySet(d, "zIndex", 0)), aG && this._addLazySet(d, "WebkitBackfaceVisibility", this._vars.WebkitBackfaceVisibility || (k ? "visible" : "hidden"))) : d.zoom = 1, D = c; D && D._next;) {
                            D = D._next
                        }
                        o = new bA(q, "transform", 0, 0, null, 2), this._linkCSSP(o, null, D), o.setRatio = bo ? bN : ac, o.data = this._transform || ak(q, aT, !0), o.tween = g, o.pr = -1, aS.pop()
                    }
                    if (aX) {
                        for (; c;) {
                            for (y = c._next, D = C; D && D.pr > c.pr;) {
                                D = D._next
                            }(c._prev = D ? D._prev : B) ? c._prev._next = c: C = c, (c._next = D) ? D._prev = c : B = c, c = y
                        }
                        this._firstPT = C
                    }
                    return !0
                }, aM.parse = function(B, A, z, y) {
                    var x, w, v, r, q, k, e, d, E, D, C = B.style;
                    for (x in A) {
                        k = A[x], "function" == typeof k && (k = k(aD, aE)), w = aN[x], w ? z = w.parse(B, k, x, this, z, y, A) : (q = a1(B, x, aT) + "", E = "string" == typeof k, "color" === x || "fill" === x || "stroke" === x || -1 !== x.indexOf("Color") || E && bz.test(k) ? (E || (k = bu(k), k = (k.length > 3 ? "rgba(" : "rgb(") + k.join(",") + ")"), z = ar(C, x, q, k, !0, "transparent", z, 0, y)) : E && bm.test(k) ? z = ar(C, x, q, k, !0, null, z, 0, y) : (v = parseFloat(q), e = v || 0 === v ? q.substr((v + "").length) : "", ("" === q || "auto" === q) && ("width" === x || "height" === x ? (v = bF(B, x, aT), e = "px") : "left" === x || "top" === x ? (v = bg(B, x, aT), e = "px") : (v = "opacity" !== x ? 0 : 1, e = "")), D = E && "=" === k.charAt(1), D ? (r = parseInt(k.charAt(0) + "1", 10), k = k.substr(2), r *= parseFloat(k), d = k.replace(ay, "")) : (r = parseFloat(k), d = E ? k.replace(ay, "") : ""), "" === d && (d = x in aU ? aU[x] : e), k = r || 0 === r ? (D ? r + v : r) + d : A[x], e !== d && "" !== d && (r || 0 === r) && v && (v = bE(B, x, v, e), "%" === d ? (v /= bE(B, x, 100, "%") / 100, A.strictUnits !== !0 && (q = v + "%")) : "em" === d || "rem" === d || "vw" === d || "vh" === d ? v /= bE(B, x, 1, d) : "px" !== d && (r = bE(B, x, r, d), d = "px"), D && (r || 0 === r) && (k = r + v + d)), D && (r += v), !v && 0 !== v || !r && 0 !== r ? void 0 !== C[x] && (k || k + "" != "NaN" && null != k) ? (z = new bA(C, x, r || v || 0, 0, z, -1, x, !1, 0, q, k), z.xs0 = "none" !== k || "display" !== x && -1 === x.indexOf("Style") ? k : q) : a7("invalid " + x + " tween value: " + A[x]) : (z = new bA(C, x, v, r - v, z, 0, x, aL !== !1 && ("px" === d || "zIndex" === x), 0, q, k), z.xs0 = d))), y && z && !z.plugin && (z.plugin = y)
                    }
                    return z
                }, aM.setRatio = function(h) {
                    var g, o, n, m = this._firstPT,
                        k = 0.000001;
                    if (1 !== h || this._tween._time !== this._tween._duration && 0 !== this._tween._time) {
                        if (h || this._tween._time !== this._tween._duration && 0 !== this._tween._time || this._tween._rawPrevTime === -0.000001) {
                            for (; m;) {
                                if (g = m.c * h + m.s, m.r ? g = Math.round(g) : k > g && g > -k && (g = 0), m.type) {
                                    if (1 === m.type) {
                                        if (n = m.l, 2 === n) {
                                            m.t[m.p] = m.xs0 + g + m.xs1 + m.xn1 + m.xs2
                                        } else {
                                            if (3 === n) {
                                                m.t[m.p] = m.xs0 + g + m.xs1 + m.xn1 + m.xs2 + m.xn2 + m.xs3
                                            } else {
                                                if (4 === n) {
                                                    m.t[m.p] = m.xs0 + g + m.xs1 + m.xn1 + m.xs2 + m.xn2 + m.xs3 + m.xn3 + m.xs4
                                                } else {
                                                    if (5 === n) {
                                                        m.t[m.p] = m.xs0 + g + m.xs1 + m.xn1 + m.xs2 + m.xn2 + m.xs3 + m.xn3 + m.xs4 + m.xn4 + m.xs5
                                                    } else {
                                                        for (o = m.xs0 + g + m.xs1, n = 1; n < m.l; n++) {
                                                            o += m["xn" + n] + m["xs" + (n + 1)]
                                                        }
                                                        m.t[m.p] = o
                                                    }
                                                }
                                            }
                                        }
                                    } else {
                                        -1 === m.type ? m.t[m.p] = m.xs0 : m.setRatio && m.setRatio(h)
                                    }
                                } else {
                                    m.t[m.p] = g + m.xs0
                                }
                                m = m._next
                            }
                        } else {
                            for (; m;) {
                                2 !== m.type ? m.t[m.p] = m.b : m.setRatio(h), m = m._next
                            }
                        }
                    } else {
                        for (; m;) {
                            if (2 !== m.type) {
                                if (m.r && -1 !== m.type) {
                                    if (g = Math.round(m.s + m.c), m.type) {
                                        if (1 === m.type) {
                                            for (n = m.l, o = m.xs0 + g + m.xs1, n = 1; n < m.l; n++) {
                                                o += m["xn" + n] + m["xs" + (n + 1)]
                                            }
                                            m.t[m.p] = o
                                        }
                                    } else {
                                        m.t[m.p] = g + m.xs0
                                    }
                                } else {
                                    m.t[m.p] = m.e
                                }
                            } else {
                                m.setRatio(h)
                            }
                            m = m._next
                        }
                    }
                }, aM._enableTransforms = function(b) {
                    this._transform = this._transform || ak(this._target, aT, !0), this._transformType = this._transform.svg && bQ || !b && 3 !== this._transformType ? 2 : 3
                };
                var ad = function(b) {
                    this.t[this.p] = this.e, this.data._linkCSSP(this, this._next, null, !0)
                };
                aM._addLazySet = function(f, e, h) {
                    var g = this._firstPT = new bA(f, e, 0, 0, this._firstPT, 2);
                    g.e = h, g.setRatio = ad, g.data = this
                }, aM._linkCSSP = function(f, e, h, g) {
                    return f && (e && (e._prev = f), f._next && (f._next._prev = f._prev), f._prev ? f._prev._next = f._next : this._firstPT === f && (this._firstPT = f._next, g = !0), h ? h._next = f : g || null !== this._firstPT || (this._firstPT = f), f._next = e, f._prev = h), f
                }, aM._mod = function(d) {
                    for (var c = this._firstPT; c;) {
                        "function" == typeof d[c.p] && d[c.p] === Math.round && (c.r = 1), c = c._next
                    }
                }, aM._kill = function(a) {
                    var m, k, h, g = a;
                    if (a.autoAlpha || a.alpha) {
                        g = {};
                        for (k in a) {
                            g[k] = a[k]
                        }
                        g.opacity = 1, g.autoAlpha && (g.visibility = 1)
                    }
                    for (a.className && (m = this._classNamePT) && (h = m.xfirst, h && h._prev ? this._linkCSSP(h._prev, m._next, h._prev._prev) : h === this._firstPT && (this._firstPT = m._next), m._next && this._linkCSSP(m._next, m._next._next, h._prev), this._classNamePT = null), m = this._firstPT; m;) {
                        m.plugin && m.plugin !== k && m.plugin._kill && (m.plugin._kill(a), k = m.plugin), m = m._next
                    }
                    return aZ.prototype._kill.call(this, g)
                };
                var bO = function(k, h, q) {
                    var p, o, n, m;
                    if (k.slice) {
                        for (o = k.length; --o > -1;) {
                            bO(k[o], h, q)
                        }
                    } else {
                        for (p = k.childNodes, o = p.length; --o > -1;) {
                            n = p[o], m = n.type, n.style && (h.push(aI(n)), q && q.push(n)), 1 !== m && 9 !== m && 11 !== m || !n.childNodes.length || bO(n, h, q)
                        }
                    }
                };
                return aR.cascadeTo = function(z, y, x) {
                    var w, v, u, t, s = aY.to(z, y, x),
                        r = [s],
                        q = [],
                        p = [],
                        o = [],
                        b = aY._internals.reservedProps;
                    for (z = s._targets || s.target, bO(z, q, o), s.render(y, !0, !0), bO(z, p), s.render(0, !0, !0), s._enabled(!0), w = o.length; --w > -1;) {
                        if (v = am(o[w], q[w], p[w]), v.firstMPT) {
                            v = v.difs;
                            for (u in x) {
                                b[u] && (v[u] = x[u])
                            }
                            t = {};
                            for (u in v) {
                                t[u] = q[w][u]
                            }
                            r.push(aY.fromTo(o[w], y, t, v))
                        }
                    }
                    return r
                }, aZ.activate([aR]), aR
            }, !0),
            function() {
                var e = _gsScope._gsDefine.plugin({
                        propName: "roundProps",
                        version: "1.6.0",
                        priority: -1,
                        API: 2,
                        init: function(h, g, k) {
                            return this._tween = k, !0
                        }
                    }),
                    d = function(b) {
                        for (; b;) {
                            b.f || b.blob || (b.m = Math.round), b = b._next
                        }
                    },
                    f = e.prototype;
                f._onInitAllProps = function() {
                    for (var b, r, q, p = this._tween, o = p.vars.roundProps.join ? p.vars.roundProps : p.vars.roundProps.split(","), n = o.length, m = {}, k = p._propLookup.roundProps;
                        --n > -1;) {
                        m[o[n]] = Math.round
                    }
                    for (n = o.length; --n > -1;) {
                        for (b = o[n], r = p._firstPT; r;) {
                            q = r._next, r.pg ? r.t._mod(m) : r.n === b && (2 === r.f && r.t ? d(r.t._firstPT) : (this._add(r.t, b, r.s, r.c), q && (q._prev = r._prev), r._prev ? r._prev._next = q : p._firstPT === r && (p._firstPT = q), r._next = r._prev = null, p._propLookup[b] = k)), r = q
                        }
                    }
                    return !1
                }, f._add = function(h, g, m, k) {
                    this._addTween(h, g, m, m + k, g, Math.round), this._overwriteProps.push(g)
                }
            }(),
            function() {
                _gsScope._gsDefine.plugin({
                    propName: "attr",
                    API: 2,
                    version: "0.6.0",
                    init: function(h, g, o, n) {
                        var m, k;
                        if ("function" != typeof h.setAttribute) {
                            return !1
                        }
                        for (m in g) {
                            k = g[m], "function" == typeof k && (k = k(n, h)), this._addTween(h, "setAttribute", h.getAttribute(m) + "", k + "", m, !1, m), this._overwriteProps.push(m)
                        }
                        return !0
                    }
                })
            }(), _gsScope._gsDefine.plugin({
                propName: "directionalRotation",
                version: "0.3.0",
                API: 2,
                init: function(x, w, v, u) {
                    "object" != typeof w && (w = {
                        rotation: w
                    }), this.finals = {};
                    var t, s, r, q, p, o, n = w.useRadians === !0 ? 2 * Math.PI : 360,
                        m = 0.000001;
                    for (t in w) {
                        "useRadians" !== t && (q = w[t], "function" == typeof q && (q = q(u, x)), o = (q + "").split("_"), s = o[0], r = parseFloat("function" != typeof x[t] ? x[t] : x[t.indexOf("set") || "function" != typeof x["get" + t.substr(3)] ? t : "get" + t.substr(3)]()), q = this.finals[t] = "string" == typeof s && "=" === s.charAt(1) ? r + parseInt(s.charAt(0) + "1", 10) * Number(s.substr(2)) : Number(s) || 0, p = q - r, o.length && (s = o.join("_"), -1 !== s.indexOf("short") && (p %= n, p !== p % (n / 2) && (p = 0 > p ? p + n : p - n)), -1 !== s.indexOf("_cw") && 0 > p ? p = (p + 9999999999 * n) % n - (p / n | 0) * n : -1 !== s.indexOf("ccw") && p > 0 && (p = (p - 9999999999 * n) % n - (p / n | 0) * n)), (p > m || -m > p) && (this._addTween(x, t, r, r + p, t), this._overwriteProps.push(t)))
                    }
                    return !0
                },
                set: function(d) {
                    var c;
                    if (1 !== d) {
                        this._super.setRatio.call(this, d)
                    } else {
                        for (c = this._firstPT; c;) {
                            c.f ? c.t[c.p](this.finals[c.p]) : c.t[c.p] = this.finals[c.p], c = c._next
                        }
                    }
                }
            })._autoCSS = !0, _gsScope._gsDefine("easing.Back", ["easing.Ease"], function(H) {
                var G, F, E, D = _gsScope.GreenSockGlobals || _gsScope,
                    C = D.com.greensock,
                    B = 2 * Math.PI,
                    A = Math.PI / 2,
                    z = C._class,
                    y = function(a, h) {
                        var g = z("easing." + a, function() {}, !0),
                            f = g.prototype = new H;
                        return f.constructor = g, f.getRatio = h, g
                    },
                    x = H.register || function() {},
                    w = function(h, g, o, n, m) {
                        var k = z("easing." + h, {
                            easeOut: new g,
                            easeIn: new o,
                            easeInOut: new n
                        }, !0);
                        return x(k, h), k
                    },
                    v = function(e, d, f) {
                        this.t = e, this.v = d, f && (this.next = f, f.prev = this, this.c = f.v - d, this.gap = f.t - e)
                    },
                    u = function(a, h) {
                        var g = z("easing." + a, function(b) {
                                this._p1 = b || 0 === b ? b : 1.70158, this._p2 = 1.525 * this._p1
                            }, !0),
                            f = g.prototype = new H;
                        return f.constructor = g, f.getRatio = h, f.config = function(b) {
                            return new g(b)
                        }, g
                    },
                    t = w("Back", u("BackOut", function(b) {
                        return (b -= 1) * b * ((this._p1 + 1) * b + this._p1) + 1
                    }), u("BackIn", function(b) {
                        return b * b * ((this._p1 + 1) * b - this._p1)
                    }), u("BackInOut", function(b) {
                        return (b *= 2) < 1 ? 0.5 * b * b * ((this._p2 + 1) * b - this._p2) : 0.5 * ((b -= 2) * b * ((this._p2 + 1) * b + this._p2) + 2)
                    })),
                    s = z("easing.SlowMo", function(e, d, f) {
                        d = d || 0 === d ? d : 0.7, null == e ? e = 0.7 : e > 1 && (e = 1), this._p = 1 !== e ? d : 0, this._p1 = (1 - e) / 2, this._p2 = e, this._p3 = this._p1 + this._p2, this._calcEnd = f === !0
                    }, !0),
                    r = s.prototype = new H;
                return r.constructor = s, r.getRatio = function(d) {
                    var c = d + (0.5 - d) * this._p;
                    return d < this._p1 ? this._calcEnd ? 1 - (d = 1 - d / this._p1) * d : c - (d = 1 - d / this._p1) * d * d * d * c : d > this._p3 ? this._calcEnd ? 1 - (d = (d - this._p3) / this._p1) * d : c + (d - c) * (d = (d - this._p3) / this._p1) * d * d * d : this._calcEnd ? 1 : c
                }, s.ease = new s(0.7, 0.7), r.config = s.config = function(e, d, f) {
                    return new s(e, d, f)
                }, G = z("easing.SteppedEase", function(b) {
                    b = b || 1, this._p1 = 1 / b, this._p2 = b + 1
                }, !0), r = G.prototype = new H, r.constructor = G, r.getRatio = function(b) {
                    return 0 > b ? b = 0 : b >= 1 && (b = 0.999999999), (this._p2 * b >> 0) * this._p1
                }, r.config = G.config = function(b) {
                    return new G(b)
                }, F = z("easing.RoughEase", function(V) {
                    V = V || {};
                    for (var U, T, S, R, Q, P, O = V.taper || "none", N = [], M = 0, L = 0 | (V.points || 20), K = L, J = V.randomize !== !1, I = V.clamp === !0, m = V.template instanceof H ? V.template : null, a = "number" == typeof V.strength ? 0.4 * V.strength : 0.4;
                        --K > -1;) {
                        U = J ? Math.random() : 1 / L * K, T = m ? m.getRatio(U) : U, "none" === O ? S = a : "out" === O ? (R = 1 - U, S = R * R * a) : "in" === O ? S = U * U * a : 0.5 > U ? (R = 2 * U, S = R * R * 0.5 * a) : (R = 2 * (1 - U), S = R * R * 0.5 * a), J ? T += Math.random() * S - 0.5 * S : K % 2 ? T += 0.5 * S : T -= 0.5 * S, I && (T > 1 ? T = 1 : 0 > T && (T = 0)), N[M++] = {
                            x: U,
                            y: T
                        }
                    }
                    for (N.sort(function(d, c) {
                            return d.x - c.x
                        }), P = new v(1, 1, null), K = L; --K > -1;) {
                        Q = N[K], P = new v(Q.x, Q.y, P)
                    }
                    this._prev = new v(0, 0, 0 !== P.t ? P : P.next)
                }, !0), r = F.prototype = new H, r.constructor = F, r.getRatio = function(d) {
                    var c = this._prev;
                    if (d > c.t) {
                        for (; c.next && d >= c.t;) {
                            c = c.next
                        }
                        c = c.prev
                    } else {
                        for (; c.prev && d <= c.t;) {
                            c = c.prev
                        }
                    }
                    return this._prev = c, c.v + (d - c.t) / c.gap * c.c
                }, r.config = function(b) {
                    return new F(b)
                }, F.ease = new F, w("Bounce", y("BounceOut", function(b) {
                    return 1 / 2.75 > b ? 7.5625 * b * b : 2 / 2.75 > b ? 7.5625 * (b -= 1.5 / 2.75) * b + 0.75 : 2.5 / 2.75 > b ? 7.5625 * (b -= 2.25 / 2.75) * b + 0.9375 : 7.5625 * (b -= 2.625 / 2.75) * b + 0.984375
                }), y("BounceIn", function(b) {
                    return (b = 1 - b) < 1 / 2.75 ? 1 - 7.5625 * b * b : 2 / 2.75 > b ? 1 - (7.5625 * (b -= 1.5 / 2.75) * b + 0.75) : 2.5 / 2.75 > b ? 1 - (7.5625 * (b -= 2.25 / 2.75) * b + 0.9375) : 1 - (7.5625 * (b -= 2.625 / 2.75) * b + 0.984375)
                }), y("BounceInOut", function(d) {
                    var c = 0.5 > d;
                    return d = c ? 1 - 2 * d : 2 * d - 1, d = 1 / 2.75 > d ? 7.5625 * d * d : 2 / 2.75 > d ? 7.5625 * (d -= 1.5 / 2.75) * d + 0.75 : 2.5 / 2.75 > d ? 7.5625 * (d -= 2.25 / 2.75) * d + 0.9375 : 7.5625 * (d -= 2.625 / 2.75) * d + 0.984375, c ? 0.5 * (1 - d) : 0.5 * d + 0.5
                })), w("Circ", y("CircOut", function(b) {
                    return Math.sqrt(1 - (b -= 1) * b)
                }), y("CircIn", function(b) {
                    return -(Math.sqrt(1 - b * b) - 1)
                }), y("CircInOut", function(b) {
                    return (b *= 2) < 1 ? -0.5 * (Math.sqrt(1 - b * b) - 1) : 0.5 * (Math.sqrt(1 - (b -= 2) * b) + 1)
                })), E = function(a, m, k) {
                    var h = z("easing." + a, function(d, c) {
                            this._p1 = d >= 1 ? d : 1, this._p2 = (c || k) / (1 > d ? d : 1), this._p3 = this._p2 / B * (Math.asin(1 / this._p1) || 0), this._p2 = B / this._p2
                        }, !0),
                        g = h.prototype = new H;
                    return g.constructor = h, g.getRatio = m, g.config = function(d, c) {
                        return new h(d, c)
                    }, h
                }, w("Elastic", E("ElasticOut", function(b) {
                    return this._p1 * Math.pow(2, -10 * b) * Math.sin((b - this._p3) * this._p2) + 1
                }, 0.3), E("ElasticIn", function(b) {
                    return -(this._p1 * Math.pow(2, 10 * (b -= 1)) * Math.sin((b - this._p3) * this._p2))
                }, 0.3), E("ElasticInOut", function(b) {
                    return (b *= 2) < 1 ? -0.5 * (this._p1 * Math.pow(2, 10 * (b -= 1)) * Math.sin((b - this._p3) * this._p2)) : this._p1 * Math.pow(2, -10 * (b -= 1)) * Math.sin((b - this._p3) * this._p2) * 0.5 + 1
                }, 0.45)), w("Expo", y("ExpoOut", function(b) {
                    return 1 - Math.pow(2, -10 * b)
                }), y("ExpoIn", function(b) {
                    return Math.pow(2, 10 * (b - 1)) - 0.001
                }), y("ExpoInOut", function(b) {
                    return (b *= 2) < 1 ? 0.5 * Math.pow(2, 10 * (b - 1)) : 0.5 * (2 - Math.pow(2, -10 * (b - 1)))
                })), w("Sine", y("SineOut", function(b) {
                    return Math.sin(b * A)
                }), y("SineIn", function(b) {
                    return -Math.cos(b * A) + 1
                }), y("SineInOut", function(b) {
                    return -0.5 * (Math.cos(Math.PI * b) - 1)
                })), z("easing.EaseLookup", {
                    find: function(a) {
                        return H.map[a]
                    }
                }, !0), x(D.SlowMo, "SlowMo", "ease,"), x(F, "RoughEase", "ease,"), x(G, "SteppedEase", "ease,"), t
            }, !0)
    }), _gsScope._gsDefine && _gsScope._gsQueue.pop()(),
    function(a3, a2) {
        var a1 = {},
            a0 = a3.document,
            aZ = a3.GreenSockGlobals = a3.GreenSockGlobals || a3;
        if (!aZ.TweenLite) {
            var aY, aX, aW, aV, aU, aT = function(f) {
                    var e, h = f.split("."),
                        g = aZ;
                    for (e = 0; e < h.length; e++) {
                        g[h[e]] = g = g[h[e]] || {}
                    }
                    return g
                },
                aS = aT("com.greensock"),
                aR = 1e-10,
                aQ = function(f) {
                    var e, h = [],
                        g = f.length;
                    for (e = 0; e !== g; h.push(f[e++])) {}
                    return h
                },
                aP = function() {},
                aO = function() {
                    var d = Object.prototype.toString,
                        c = d.call([]);
                    return function(a) {
                        return null != a && (a instanceof Array || "object" == typeof a && !!a.push && d.call(a) === c)
                    }
                }(),
                aN = {},
                aM = function(k, e, c, b) {
                    this.sc = aN[k] ? aN[k].sc : [], aN[k] = this, this.gsClass = null, this.func = c;
                    var a = [];
                    this.check = function(g) {
                        for (var f, d, v, u, r, q = e.length, h = q; --q > -1;) {
                            (f = aN[e[q]] || new aM(e[q], [])).gsClass ? (a[q] = f.gsClass, h--) : g && f.sc.push(this)
                        }
                        if (0 === h && c) {
                            if (d = ("com.greensock." + k).split("."), v = d.pop(), u = aT(d.join("."))[v] = this.gsClass = c.apply(c, a), b) {
                                if (aZ[v] = a1[v] = u, r = "undefined" != typeof module && module.exports, !r && "function" == typeof define && define.amd) {
                                    define((a3.GreenSockAMDPath ? a3.GreenSockAMDPath + "/" : "") + k.split(".").pop(), [], function() {
                                        return u
                                    })
                                } else {
                                    if (r) {
                                        if (k === a2) {
                                            module.exports = a1[a2] = u;
                                            for (q in a1) {
                                                u[q] = a1[q]
                                            }
                                        } else {
                                            a1[a2] && (a1[a2][v] = u)
                                        }
                                    }
                                }
                            }
                            for (q = 0; q < this.sc.length; q++) {
                                this.sc[q].check()
                            }
                        }
                    }, this.check(!0)
                },
                aL = a3._gsDefine = function(f, e, h, g) {
                    return new aM(f, e, h, g)
                },
                aK = aS._class = function(e, d, f) {
                    return d = d || function() {}, aL(e, [], function() {
                        return d
                    }, f), d
                };
            aL.globals = aZ;
            var aJ = [0, 0, 1, 1],
                aI = aK("easing.Ease", function(f, e, h, g) {
                    this._func = f, this._type = h || 0, this._power = g || 0, this._params = e ? aJ.concat(e) : aJ
                }, !0),
                aH = aI.map = {},
                aG = aI.register = function(w, v, u, t) {
                    for (var s, r, q, p, o = v.split(","), n = o.length, m = (u || "easeIn,easeOut,easeInOut").split(","); --n > -1;) {
                        for (r = o[n], s = t ? aK("easing." + r, null, !0) : aS.easing[r] || {}, q = m.length; --q > -1;) {
                            p = m[q], aH[r + "." + p] = aH[p + r] = s[p] = w.getRatio ? w : w[p] || new w
                        }
                    }
                };
            for (aW = aI.prototype, aW._calcEnd = !1, aW.getRatio = function(f) {
                    if (this._func) {
                        return this._params[0] = f, this._func.apply(null, this._params)
                    }
                    var e = this._type,
                        h = this._power,
                        g = 1 === e ? 1 - f : 2 === e ? f : 0.5 > f ? 2 * f : 2 * (1 - f);
                    return 1 === h ? g *= g : 2 === h ? g *= g * g : 3 === h ? g *= g * g * g : 4 === h && (g *= g * g * g * g), 1 === e ? 1 - g : 2 === e ? g : 0.5 > f ? g / 2 : 1 - g / 2
                }, aY = ["Linear", "Quad", "Cubic", "Quart", "Quint,Strong"], aX = aY.length; --aX > -1;) {
                aW = aY[aX] + ",Power" + aX, aG(new aI(null, null, 1, aX), aW, "easeOut", !0), aG(new aI(null, null, 2, aX), aW, "easeIn" + (0 === aX ? ",easeNone" : "")), aG(new aI(null, null, 3, aX), aW, "easeInOut")
            }
            aH.linear = aS.easing.Linear.easeIn, aH.swing = aS.easing.Quad.easeInOut;
            var aF = aK("events.EventDispatcher", function(b) {
                this._listeners = {}, this._eventTarget = b || this
            });
            aW = aF.prototype, aW.addEventListener = function(u, t, s, r, q) {
                q = q || 0;
                var p, o, n = this._listeners[u],
                    m = 0;
                for (this !== aV || aU || aV.wake(), null == n && (this._listeners[u] = n = []), o = n.length; --o > -1;) {
                    p = n[o], p.c === t && p.s === s ? n.splice(o, 1) : 0 === m && p.pr < q && (m = o + 1)
                }
                n.splice(m, 0, {
                    c: t,
                    s: s,
                    up: r,
                    pr: q
                })
            }, aW.removeEventListener = function(f, e) {
                var h, g = this._listeners[f];
                if (g) {
                    for (h = g.length; --h > -1;) {
                        if (g[h].c === e) {
                            return void g.splice(h, 1)
                        }
                    }
                }
            }, aW.dispatchEvent = function(g) {
                var f, m, k, h = this._listeners[g];
                if (h) {
                    for (f = h.length, f > 1 && (h = h.slice(0)), m = this._eventTarget; --f > -1;) {
                        k = h[f], k && (k.up ? k.c.call(k.s || m, {
                            type: g,
                            target: m
                        }) : k.c.call(k.s || m))
                    }
                }
            };
            var aE = a3.requestAnimationFrame,
                aB = a3.cancelAnimationFrame,
                aA = Date.now || function() {
                    return (new Date).getTime()
                },
                az = aA();
            for (aY = ["ms", "moz", "webkit", "o"], aX = aY.length; --aX > -1 && !aE;) {
                aE = a3[aY[aX] + "RequestAnimationFrame"], aB = a3[aY[aX] + "CancelAnimationFrame"] || a3[aY[aX] + "CancelRequestAnimationFrame"]
            }
            aK("Ticker", function(C, B) {
                var A, z, y, x, w, v = this,
                    u = aA(),
                    t = B !== !1 && aE ? "auto" : !1,
                    o = 500,
                    m = 33,
                    d = "tick",
                    D = function(e) {
                        var c, g, f = aA() - az;
                        f > o && (u += f - m), az += f, v.time = (az - u) / 1000, c = v.time - w, (!A || c > 0 || e === !0) && (v.frame++, w += c + (c >= x ? 0.004 : x - c), g = !0), e !== !0 && (y = z(D)), g && v.dispatchEvent(d)
                    };
                aF.call(v), v.time = v.frame = 0, v.tick = function() {
                    D(!0)
                }, v.lagSmoothing = function(e, c) {
                    o = e || 1 / aR, m = Math.min(c, o, 0)
                }, v.sleep = function() {
                    null != y && (t && aB ? aB(y) : clearTimeout(y), z = aP, y = null, v === aV && (aU = !1))
                }, v.wake = function(b) {
                    null !== y ? v.sleep() : b ? u += -az + (az = aA()) : v.frame > 10 && (az = aA() - o + 5), z = 0 === A ? aP : t && aE ? aE : function(c) {
                        return setTimeout(c, 1000 * (w - v.time) + 1 | 0)
                    }, v === aV && (aU = !0), D(2)
                }, v.fps = function(b) {
                    return arguments.length ? (A = b, x = 1 / (A || 60), w = this.time + x, void v.wake()) : A
                }, v.useRAF = function(b) {
                    return arguments.length ? (v.sleep(), t = b, void v.fps(A)) : t
                }, v.fps(C), setTimeout(function() {
                    "auto" === t && v.frame < 5 && "hidden" !== a0.visibilityState && v.useRAF(!1)
                }, 1500)
            }), aW = aS.Ticker.prototype = new aS.events.EventDispatcher, aW.constructor = aS.Ticker;
            var ay = aK("core.Animation", function(e, d) {
                if (this.vars = d = d || {}, this._duration = this._totalDuration = e || 0, this._delay = Number(d.delay) || 0, this._timeScale = 1, this._active = d.immediateRender === !0, this.data = d.data, this._reversed = d.reversed === !0, ae) {
                    aU || aV.wake();
                    var f = this.vars.useFrames ? af : ae;
                    f.add(this, f._time), this.vars.paused && this.paused(!0)
                }
            });
            aV = ay.ticker = new aS.Ticker, aW = ay.prototype, aW._dirty = aW._gc = aW._initted = aW._paused = !1, aW._totalTime = aW._time = 0, aW._rawPrevTime = -1, aW._next = aW._last = aW._onUpdate = aW._timeline = aW.timeline = null, aW._paused = !1;
            var ax = function() {
                aU && aA() - az > 2000 && aV.wake(), setTimeout(ax, 2000)
            };
            ax(), aW.play = function(d, c) {
                return null != d && this.seek(d, c), this.reversed(!1).paused(!1)
            }, aW.pause = function(d, c) {
                return null != d && this.seek(d, c), this.paused(!0)
            }, aW.resume = function(d, c) {
                return null != d && this.seek(d, c), this.paused(!1)
            }, aW.seek = function(d, c) {
                return this.totalTime(Number(d), c !== !1)
            }, aW.restart = function(d, c) {
                return this.reversed(!1).paused(!1).totalTime(d ? -this._delay : 0, c !== !1, !0)
            }, aW.reverse = function(d, c) {
                return null != d && this.seek(d || this.totalDuration(), c), this.reversed(!0).paused(!1)
            }, aW.render = function(e, d, f) {}, aW.invalidate = function() {
                return this._time = this._totalTime = 0, this._initted = this._gc = !1, this._rawPrevTime = -1, (this._gc || !this.timeline) && this._enabled(!0), this
            }, aW.isActive = function() {
                var e, d = this._timeline,
                    f = this._startTime;
                return !d || !this._gc && !this._paused && d.isActive() && (e = d.rawTime(!0)) >= f && e < f + this.totalDuration() / this._timeScale
            }, aW._enabled = function(d, c) {
                return aU || aV.wake(), this._gc = !d, this._active = this.isActive(), c !== !0 && (d && !this.timeline ? this._timeline.add(this, this._startTime - this._delay) : !d && this.timeline && this._timeline._remove(this, !0)), !1
            }, aW._kill = function(d, c) {
                return this._enabled(!1, !1)
            }, aW.kill = function(d, c) {
                return this._kill(d, c), this
            }, aW._uncache = function(d) {
                for (var c = d ? this : this.timeline; c;) {
                    c._dirty = !0, c = c.timeline
                }
                return this
            }, aW._swapSelfInParams = function(e) {
                for (var d = e.length, f = e.concat(); --d > -1;) {
                    "{self}" === e[d] && (f[d] = this)
                }
                return f
            }, aW._callback = function(h) {
                var g = this.vars,
                    o = g[h],
                    n = g[h + "Params"],
                    m = g[h + "Scope"] || g.callbackScope || this,
                    k = n ? n.length : 0;
                switch (k) {
                    case 0:
                        o.call(m);
                        break;
                    case 1:
                        o.call(m, n[0]);
                        break;
                    case 2:
                        o.call(m, n[0], n[1]);
                        break;
                    default:
                        o.apply(m, n)
                }
            }, aW.eventCallback = function(g, f, m, k) {
                if ("on" === (g || "").substr(0, 2)) {
                    var h = this.vars;
                    if (1 === arguments.length) {
                        return h[g]
                    }
                    null == f ? delete h[g] : (h[g] = f, h[g + "Params"] = aO(m) && -1 !== m.join("").indexOf("{self}") ? this._swapSelfInParams(m) : m, h[g + "Scope"] = k), "onUpdate" === g && (this._onUpdate = f)
                }
                return this
            }, aW.delay = function(b) {
                return arguments.length ? (this._timeline.smoothChildTiming && this.startTime(this._startTime + b - this._delay), this._delay = b, this) : this._delay
            }, aW.duration = function(b) {
                return arguments.length ? (this._duration = this._totalDuration = b, this._uncache(!0), this._timeline.smoothChildTiming && this._time > 0 && this._time < this._duration && 0 !== b && this.totalTime(this._totalTime * (b / this._duration), !0), this) : (this._dirty = !1, this._duration)
            }, aW.totalDuration = function(b) {
                return this._dirty = !1, arguments.length ? this.duration(b) : this._totalDuration
            }, aW.time = function(d, c) {
                return arguments.length ? (this._dirty && this.totalDuration(), this.totalTime(d > this._duration ? this._duration : d, c)) : this._time
            }, aW.totalTime = function(g, f, m) {
                if (aU || aV.wake(), !arguments.length) {
                    return this._totalTime
                }
                if (this._timeline) {
                    if (0 > g && !m && (g += this.totalDuration()), this._timeline.smoothChildTiming) {
                        this._dirty && this.totalDuration();
                        var k = this._totalDuration,
                            h = this._timeline;
                        if (g > k && !m && (g = k), this._startTime = (this._paused ? this._pauseTime : h._time) - (this._reversed ? k - g : g) / this._timeScale, h._dirty || this._uncache(!1), h._timeline) {
                            for (; h._timeline;) {
                                h._timeline._time !== (h._startTime + h._totalTime) / h._timeScale && h.totalTime(h._totalTime, !0), h = h._timeline
                            }
                        }
                    }
                    this._gc && this._enabled(!0, !1), (this._totalTime !== g || 0 === this._duration) && (ar.length && ac(), this.render(g, f, !1), ar.length && ac())
                }
                return this
            }, aW.progress = aW.totalProgress = function(e, d) {
                var f = this.duration();
                return arguments.length ? this.totalTime(f * e, d) : f ? this._time / f : this.ratio
            }, aW.startTime = function(b) {
                return arguments.length ? (b !== this._startTime && (this._startTime = b, this.timeline && this.timeline._sortChildren && this.timeline.add(this, b - this._delay)), this) : this._startTime
            }, aW.endTime = function(b) {
                return this._startTime + (0 != b ? this.totalDuration() : this.duration()) / this._timeScale
            }, aW.timeScale = function(e) {
                if (!arguments.length) {
                    return this._timeScale
                }
                if (e = e || aR, this._timeline && this._timeline.smoothChildTiming) {
                    var d = this._pauseTime,
                        f = d || 0 === d ? d : this._timeline.totalTime();
                    this._startTime = f - (f - this._startTime) * this._timeScale / e
                }
                return this._timeScale = e, this._uncache(!1)
            }, aW.reversed = function(b) {
                return arguments.length ? (b != this._reversed && (this._reversed = b, this.totalTime(this._timeline && !this._timeline.smoothChildTiming ? this.totalDuration() - this._totalTime : this._totalTime, !0)), this) : this._reversed
            }, aW.paused = function(f) {
                if (!arguments.length) {
                    return this._paused
                }
                var e, h, g = this._timeline;
                return f != this._paused && g && (aU || f || aV.wake(), e = g.rawTime(), h = e - this._pauseTime, !f && g.smoothChildTiming && (this._startTime += h, this._uncache(!1)), this._pauseTime = f ? e : null, this._paused = f, this._active = this.isActive(), !f && 0 !== h && this._initted && this.duration() && (e = g.smoothChildTiming ? this._totalTime : (e - this._startTime) / this._timeScale, this.render(e, e === this._totalTime, !0))), this._gc && !f && this._enabled(!0, !1), this
            };
            var aw = aK("core.SimpleTimeline", function(b) {
                ay.call(this, 0, b), this.autoRemoveChildren = this.smoothChildTiming = !0
            });
            aW = aw.prototype = new ay, aW.constructor = aw, aW.kill()._gc = !1, aW._first = aW._last = aW._recent = null, aW._sortChildren = !1, aW.add = aW.insert = function(h, g, o, n) {
                var m, k;
                if (h._startTime = Number(g || 0) + h._delay, h._paused && this !== h._timeline && (h._pauseTime = h._startTime + (this.rawTime() - h._startTime) / h._timeScale), h.timeline && h.timeline._remove(h, !0), h.timeline = h._timeline = this, h._gc && h._enabled(!0, !0), m = this._last, this._sortChildren) {
                    for (k = h._startTime; m && m._startTime > k;) {
                        m = m._prev
                    }
                }
                return m ? (h._next = m._next, m._next = h) : (h._next = this._first, this._first = h), h._next ? h._next._prev = h : this._last = h, h._prev = m, this._recent = h, this._timeline && this._uncache(!0), this
            }, aW._remove = function(d, c) {
                return d.timeline === this && (c || d._enabled(!1, !0), d._prev ? d._prev._next = d._next : this._first === d && (this._first = d._next), d._next ? d._next._prev = d._prev : this._last === d && (this._last = d._prev), d._next = d._prev = d.timeline = null, d === this._recent && (this._recent = this._last), this._timeline && this._uncache(!0)), this
            }, aW.render = function(g, f, m) {
                var k, h = this._first;
                for (this._totalTime = this._time = this._rawPrevTime = g; h;) {
                    k = h._next, (h._active || g >= h._startTime && !h._paused) && (h._reversed ? h.render((h._dirty ? h.totalDuration() : h._totalDuration) - (g - h._startTime) * h._timeScale, f, m) : h.render((g - h._startTime) * h._timeScale, f, m)), h = k
                }
            }, aW.rawTime = function() {
                return aU || aV.wake(), this._totalTime
            };
            var av = aK("TweenLite", function(a, r, q) {
                    if (ay.call(this, r, q), this.render = av.prototype.render, null == a) {
                        throw "Cannot tween a null target."
                    }
                    this.target = a = "string" != typeof a ? a : av.selector(a) || a;
                    var p, o, n, m = a.jquery || a.length && a !== a3 && a[0] && (a[0] === a3 || a[0].nodeType && a[0].style && !a.nodeType),
                        k = this.vars.overwrite;
                    if (this._overwrite = k = null == k ? ag[av.defaultOverwrite] : "number" == typeof k ? k >> 0 : ag[k], (m || a instanceof Array || a.push && aO(a)) && "number" != typeof a[0]) {
                        for (this._targets = n = aQ(a), this._propLookup = [], this._siblings = [], p = 0; p < n.length; p++) {
                            o = n[p], o ? "string" != typeof o ? o.length && o !== a3 && o[0] && (o[0] === a3 || o[0].nodeType && o[0].style && !o.nodeType) ? (n.splice(p--, 1), this._targets = n = n.concat(aQ(o))) : (this._siblings[p] = ab(o, this, !1), 1 === k && this._siblings[p].length > 1 && a5(o, this, null, 1, this._siblings[p])) : (o = n[p--] = av.selector(o), "string" == typeof o && n.splice(p + 1, 1)) : n.splice(p--, 1)
                        }
                    } else {
                        this._propLookup = {}, this._siblings = ab(a, this, !1), 1 === k && this._siblings.length > 1 && a5(a, this, null, 1, this._siblings)
                    }(this.vars.immediateRender || 0 === r && 0 === this._delay && this.vars.immediateRender !== !1) && (this._time = -aR, this.render(Math.min(0, -this._delay)))
                }, !0),
                au = function(a) {
                    return a && a.length && a !== a3 && a[0] && (a[0] === a3 || a[0].nodeType && a[0].style && !a.nodeType)
                },
                at = function(f, e) {
                    var h, g = {};
                    for (h in f) {
                        ah[h] || h in e && "transform" !== h && "x" !== h && "y" !== h && "width" !== h && "height" !== h && "className" !== h && "border" !== h || !(!ak[h] || ak[h] && ak[h]._autoCSS) || (g[h] = f[h], delete f[h])
                    }
                    f.css = g
                };
            aW = av.prototype = new ay, aW.constructor = av, aW.kill()._gc = !1, aW.ratio = 0, aW._firstPT = aW._targets = aW._overwrittenProps = aW._startAt = null, aW._notifyPluginsOfEnabled = aW._lazy = !1, av.version = "1.19.1", av.defaultEase = aW._ease = new aI(null, null, 1, 1), av.defaultOverwrite = "auto", av.ticker = aV, av.autoSleep = 120, av.lagSmoothing = function(d, c) {
                aV.lagSmoothing(d, c)
            }, av.selector = a3.$ || a3.jQuery || function(a) {
                var d = a3.$ || a3.jQuery;
                return d ? (av.selector = d, d(a)) : "undefined" == typeof a0 ? a : a0.querySelectorAll ? a0.querySelectorAll(a) : a0.getElementById("#" === a.charAt(0) ? a.substr(1) : a)
            };
            var ar = [],
                aq = {},
                ap = /(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi,
                ao = function(f) {
                    for (var e, h = this._firstPT, g = 0.000001; h;) {
                        e = h.blob ? 1 === f ? this.end : f ? this.join("") : this.start : h.c * f + h.s, h.m ? e = h.m(e, this._target || h.t) : g > e && e > -g && !h.blob && (e = 0), h.f ? h.fp ? h.t[h.p](h.fp, e) : h.t[h.p](e) : h.t[h.p] = e, h = h._next
                    }
                },
                an = function(D, C, B, A) {
                    var z, y, x, w, v, u, t, s = [],
                        r = 0,
                        q = "",
                        p = 0;
                    for (s.start = D, s.end = C, D = s[0] = D + "", C = s[1] = C + "", B && (B(s), D = s[0], C = s[1]), s.length = 0, z = D.match(ap) || [], y = C.match(ap) || [], A && (A._next = null, A.blob = 1, s._firstPT = s._applyPT = A), v = y.length, w = 0; v > w; w++) {
                        t = y[w], u = C.substr(r, C.indexOf(t, r) - r), q += u || !w ? u : ",", r += u.length, p ? p = (p + 1) % 5 : "rgba(" === u.substr(-5) && (p = 1), t === z[w] || z.length <= w ? q += t : (q && (s.push(q), q = ""), x = parseFloat(z[w]), s.push(x), s._firstPT = {
                            _next: s._firstPT,
                            t: s,
                            p: s.length - 1,
                            s: x,
                            c: ("=" === t.charAt(1) ? parseInt(t.charAt(0) + "1", 10) * parseFloat(t.substr(2)) : parseFloat(t) - x) || 0,
                            f: 0,
                            m: p && 4 > p ? Math.round : 0
                        }), r += t.length
                    }
                    return q += C.substr(r), q && s.push(q), s.setRatio = ao, s
                },
                am = function(D, C, B, A, z, y, x, w, v) {
                    "function" == typeof A && (A = A(v || 0, D));
                    var u, t = typeof D[C],
                        s = "function" !== t ? "" : C.indexOf("set") || "function" != typeof D["get" + C.substr(3)] ? C : "get" + C.substr(3),
                        r = "get" !== B ? B : s ? x ? D[s](x) : D[s]() : D[C],
                        q = "string" == typeof A && "=" === A.charAt(1),
                        p = {
                            t: D,
                            p: C,
                            s: r,
                            f: "function" === t,
                            pg: 0,
                            n: z || C,
                            m: y ? "function" == typeof y ? y : Math.round : 0,
                            pr: 0,
                            c: q ? parseInt(A.charAt(0) + "1", 10) * parseFloat(A.substr(2)) : parseFloat(A) - r || 0
                        };
                    return ("number" != typeof r || "number" != typeof A && !q) && (x || isNaN(r) || !q && isNaN(A) || "boolean" == typeof r || "boolean" == typeof A ? (p.fp = x, u = an(r, q ? p.s + p.c : A, w || av.defaultStringFilter, p), p = {
                        t: u,
                        p: "setRatio",
                        s: 0,
                        c: 1,
                        f: 2,
                        pg: 0,
                        n: z || C,
                        pr: 0,
                        m: 0
                    }) : (p.s = parseFloat(r), q || (p.c = parseFloat(A) - p.s || 0))), p.c ? ((p._next = this._firstPT) && (p._next._prev = p), this._firstPT = p, p) : void 0
                },
                al = av._internals = {
                    isArray: aO,
                    isSelector: au,
                    lazyTweens: ar,
                    blobDif: an
                },
                ak = av._plugins = {},
                aj = al.tweenLookup = {},
                ai = 0,
                ah = al.reservedProps = {
                    ease: 1,
                    delay: 1,
                    overwrite: 1,
                    onComplete: 1,
                    onCompleteParams: 1,
                    onCompleteScope: 1,
                    useFrames: 1,
                    runBackwards: 1,
                    startAt: 1,
                    onUpdate: 1,
                    onUpdateParams: 1,
                    onUpdateScope: 1,
                    onStart: 1,
                    onStartParams: 1,
                    onStartScope: 1,
                    onReverseComplete: 1,
                    onReverseCompleteParams: 1,
                    onReverseCompleteScope: 1,
                    onRepeat: 1,
                    onRepeatParams: 1,
                    onRepeatScope: 1,
                    easeParams: 1,
                    yoyo: 1,
                    immediateRender: 1,
                    repeat: 1,
                    repeatDelay: 1,
                    data: 1,
                    paused: 1,
                    reversed: 1,
                    autoCSS: 1,
                    lazy: 1,
                    onOverwrite: 1,
                    callbackScope: 1,
                    stringFilter: 1,
                    id: 1
                },
                ag = {
                    none: 0,
                    all: 1,
                    auto: 2,
                    concurrent: 3,
                    allOnStart: 4,
                    preexisting: 5,
                    "true": 1,
                    "false": 0
                },
                af = ay._rootFramesTimeline = new aw,
                ae = ay._rootTimeline = new aw,
                ad = 30,
                ac = al.lazyRender = function() {
                    var d, c = ar.length;
                    for (aq = {}; --c > -1;) {
                        d = ar[c], d && d._lazy !== !1 && (d.render(d._lazy[0], d._lazy[1], !0), d._lazy = !1)
                    }
                    ar.length = 0
                };
            ae._startTime = aV.time, af._startTime = aV.frame, ae._active = af._active = !0, setTimeout(ac, 1), ay._updateRoot = av.render = function() {
                var e, d, f;
                if (ar.length && ac(), ae.render((aV.time - ae._startTime) * ae._timeScale, !1, !1), af.render((aV.frame - af._startTime) * af._timeScale, !1, !1), ar.length && ac(), aV.frame >= ad) {
                    ad = aV.frame + (parseInt(av.autoSleep, 10) || 120);
                    for (f in aj) {
                        for (d = aj[f].tweens, e = d.length; --e > -1;) {
                            d[e]._gc && d.splice(e, 1)
                        }
                        0 === d.length && delete aj[f]
                    }
                    if (f = ae._first, (!f || f._paused) && av.autoSleep && !af._first && 1 === aV._listeners.tick.length) {
                        for (; f && f._paused;) {
                            f = f._next
                        }
                        f || aV.sleep()
                    }
                }
            }, aV.addEventListener("tick", ay._updateRoot);
            var ab = function(h, g, o) {
                    var n, m, k = h._gsTweenID;
                    if (aj[k || (h._gsTweenID = k = "t" + ai++)] || (aj[k] = {
                            target: h,
                            tweens: []
                        }), g && (n = aj[k].tweens, n[m = n.length] = g, o)) {
                        for (; --m > -1;) {
                            n[m] === g && n.splice(m, 1)
                        }
                    }
                    return aj[k].tweens
                },
                aD = function(k, h, q, p) {
                    var o, n, m = k.vars.onOverwrite;
                    return m && (o = m(k, h, q, p)), m = av.onOverwrite, m && (n = m(k, h, q, p)), o !== !1 && n !== !1
                },
                a5 = function(B, A, z, y, x) {
                    var w, v, u, t;
                    if (1 === y || y >= 4) {
                        for (t = x.length, w = 0; t > w; w++) {
                            if ((u = x[w]) !== A) {
                                u._gc || u._kill(null, B, A) && (v = !0)
                            } else {
                                if (5 === y) {
                                    break
                                }
                            }
                        }
                        return v
                    }
                    var s, r = A._startTime + aR,
                        q = [],
                        p = 0,
                        m = 0 === A._duration;
                    for (w = x.length; --w > -1;) {
                        (u = x[w]) === A || u._gc || u._paused || (u._timeline !== A._timeline ? (s = s || aC(A, 0, m), 0 === aC(u, s, m) && (q[p++] = u)) : u._startTime <= r && u._startTime + u.totalDuration() / u._timeScale > r && ((m || !u._initted) && r - u._startTime <= 2e-10 || (q[p++] = u)))
                    }
                    for (w = p; --w > -1;) {
                        if (u = q[w], 2 === y && u._kill(z, B, A) && (v = !0), 2 !== y || !u._firstPT && u._initted) {
                            if (2 !== y && !aD(u, A)) {
                                continue
                            }
                            u._enabled(!1, !1) && (v = !0)
                        }
                    }
                    return v
                },
                aC = function(h, g, o) {
                    for (var n = h._timeline, m = n._timeScale, k = h._startTime; n._timeline;) {
                        if (k += n._startTime, m *= n._timeScale, n._paused) {
                            return -100
                        }
                        n = n._timeline
                    }
                    return k /= m, k > g ? k - g : o && k === g || !h._initted && 2 * aR > k - g ? aR : (k += h.totalDuration() / h._timeScale / m) > g + aR ? 0 : k - g - aR
                };
            aW._init = function() {
                var w, v, u, t, s, r, q = this.vars,
                    p = this._overwrittenProps,
                    o = this._duration,
                    n = !!q.immediateRender,
                    m = q.ease;
                if (q.startAt) {
                    this._startAt && (this._startAt.render(-1, !0), this._startAt.kill()), s = {};
                    for (t in q.startAt) {
                        s[t] = q.startAt[t]
                    }
                    if (s.overwrite = !1, s.immediateRender = !0, s.lazy = n && q.lazy !== !1, s.startAt = s.delay = null, this._startAt = av.to(this.target, 0, s), n) {
                        if (this._time > 0) {
                            this._startAt = null
                        } else {
                            if (0 !== o) {
                                return
                            }
                        }
                    }
                } else {
                    if (q.runBackwards && 0 !== o) {
                        if (this._startAt) {
                            this._startAt.render(-1, !0), this._startAt.kill(), this._startAt = null
                        } else {
                            0 !== this._time && (n = !1), u = {};
                            for (t in q) {
                                ah[t] && "autoCSS" !== t || (u[t] = q[t])
                            }
                            if (u.overwrite = 0, u.data = "isFromStart", u.lazy = n && q.lazy !== !1, u.immediateRender = n, this._startAt = av.to(this.target, 0, u), n) {
                                if (0 === this._time) {
                                    return
                                }
                            } else {
                                this._startAt._init(), this._startAt._enabled(!1), this.vars.immediateRender && (this._startAt = null)
                            }
                        }
                    }
                }
                if (this._ease = m = m ? m instanceof aI ? m : "function" == typeof m ? new aI(m, q.easeParams) : aH[m] || av.defaultEase : av.defaultEase, q.easeParams instanceof Array && m.config && (this._ease = m.config.apply(m, q.easeParams)), this._easeType = this._ease._type, this._easePower = this._ease._power, this._firstPT = null, this._targets) {
                    for (r = this._targets.length, w = 0; r > w; w++) {
                        this._initProps(this._targets[w], this._propLookup[w] = {}, this._siblings[w], p ? p[w] : null, w) && (v = !0)
                    }
                } else {
                    v = this._initProps(this.target, this._propLookup, this._siblings, p, 0)
                }
                if (v && av._onPluginEvent("_onInitAllProps", this), p && (this._firstPT || "function" != typeof this.target && this._enabled(!1, !1)), q.runBackwards) {
                    for (u = this._firstPT; u;) {
                        u.s += u.c, u.c = -u.c, u = u._next
                    }
                }
                this._onUpdate = q.onUpdate, this._initted = !0
            }, aW._initProps = function(v, u, t, s, r) {
                var q, p, o, n, m, a;
                if (null == v) {
                    return !1
                }
                aq[v._gsTweenID] && ac(), this.vars.css || v.style && v !== a3 && v.nodeType && ak.css && this.vars.autoCSS !== !1 && at(this.vars, v);
                for (q in this.vars) {
                    if (a = this.vars[q], ah[q]) {
                        a && (a instanceof Array || a.push && aO(a)) && -1 !== a.join("").indexOf("{self}") && (this.vars[q] = a = this._swapSelfInParams(a, this))
                    } else {
                        if (ak[q] && (n = new ak[q])._onInitTween(v, this.vars[q], this, r)) {
                            for (this._firstPT = m = {
                                    _next: this._firstPT,
                                    t: n,
                                    p: "setRatio",
                                    s: 0,
                                    c: 1,
                                    f: 1,
                                    n: q,
                                    pg: 1,
                                    pr: n._priority,
                                    m: 0
                                }, p = n._overwriteProps.length; --p > -1;) {
                                u[n._overwriteProps[p]] = this._firstPT
                            }(n._priority || n._onInitAllProps) && (o = !0), (n._onDisable || n._onEnable) && (this._notifyPluginsOfEnabled = !0), m._next && (m._next._prev = m)
                        } else {
                            u[q] = am.call(this, v, q, "get", a, q, 0, null, this.vars.stringFilter, r)
                        }
                    }
                }
                return s && this._kill(s, v) ? this._initProps(v, u, t, s, r) : this._overwrite > 1 && this._firstPT && t.length > 1 && a5(v, this, u, this._overwrite, t) ? (this._kill(u, v), this._initProps(v, u, t, s, r)) : (this._firstPT && (this.vars.lazy !== !1 && this._duration || this.vars.lazy && !this._duration) && (aq[v._gsTweenID] = !0), o)
            }, aW.render = function(z, y, x) {
                var w, v, u, t, s = this._time,
                    r = this._duration,
                    q = this._rawPrevTime;
                if (z >= r - 1e-7 && z >= 0) {
                    this._totalTime = this._time = r, this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1, this._reversed || (w = !0, v = "onComplete", x = x || this._timeline.autoRemoveChildren), 0 === r && (this._initted || !this.vars.lazy || x) && (this._startTime === this._timeline._duration && (z = 0), (0 > q || 0 >= z && z >= -1e-7 || q === aR && "isPause" !== this.data) && q !== z && (x = !0, q > aR && (v = "onReverseComplete")), this._rawPrevTime = t = !y || z || q === z ? z : aR)
                } else {
                    if (1e-7 > z) {
                        this._totalTime = this._time = 0, this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0, (0 !== s || 0 === r && q > 0) && (v = "onReverseComplete", w = this._reversed), 0 > z && (this._active = !1, 0 === r && (this._initted || !this.vars.lazy || x) && (q >= 0 && (q !== aR || "isPause" !== this.data) && (x = !0), this._rawPrevTime = t = !y || z || q === z ? z : aR)), this._initted || (x = !0)
                    } else {
                        if (this._totalTime = this._time = z, this._easeType) {
                            var p = z / r,
                                o = this._easeType,
                                m = this._easePower;
                            (1 === o || 3 === o && p >= 0.5) && (p = 1 - p), 3 === o && (p *= 2), 1 === m ? p *= p : 2 === m ? p *= p * p : 3 === m ? p *= p * p * p : 4 === m && (p *= p * p * p * p), 1 === o ? this.ratio = 1 - p : 2 === o ? this.ratio = p : 0.5 > z / r ? this.ratio = p / 2 : this.ratio = 1 - p / 2
                        } else {
                            this.ratio = this._ease.getRatio(z / r)
                        }
                    }
                }
                if (this._time !== s || x) {
                    if (!this._initted) {
                        if (this._init(), !this._initted || this._gc) {
                            return
                        }
                        if (!x && this._firstPT && (this.vars.lazy !== !1 && this._duration || this.vars.lazy && !this._duration)) {
                            return this._time = this._totalTime = s, this._rawPrevTime = q, ar.push(this), void(this._lazy = [z, y])
                        }
                        this._time && !w ? this.ratio = this._ease.getRatio(this._time / r) : w && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1))
                    }
                    for (this._lazy !== !1 && (this._lazy = !1), this._active || !this._paused && this._time !== s && z >= 0 && (this._active = !0), 0 === s && (this._startAt && (z >= 0 ? this._startAt.render(z, y, x) : v || (v = "_dummyGS")), this.vars.onStart && (0 !== this._time || 0 === r) && (y || this._callback("onStart"))), u = this._firstPT; u;) {
                        u.f ? u.t[u.p](u.c * this.ratio + u.s) : u.t[u.p] = u.c * this.ratio + u.s, u = u._next
                    }
                    this._onUpdate && (0 > z && this._startAt && z !== -0.0001 && this._startAt.render(z, y, x), y || (this._time !== s || w || x) && this._callback("onUpdate")), v && (!this._gc || x) && (0 > z && this._startAt && !this._onUpdate && z !== -0.0001 && this._startAt.render(z, y, x), w && (this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !y && this.vars[v] && this._callback(v), 0 === r && this._rawPrevTime === aR && t !== aR && (this._rawPrevTime = 0))
                }
            }, aW._kill = function(z, y, x) {
                if ("all" === z && (z = null), null == z && (null == y || y === this.target)) {
                    return this._lazy = !1, this._enabled(!1, !1)
                }
                y = "string" != typeof y ? y || this._targets || this.target : av.selector(y) || y;
                var w, v, u, t, s, r, q, p, o, n = x && this._time && x._startTime === this._startTime && this._timeline === x._timeline;
                if ((aO(y) || au(y)) && "number" != typeof y[0]) {
                    for (w = y.length; --w > -1;) {
                        this._kill(z, y[w], x) && (r = !0)
                    }
                } else {
                    if (this._targets) {
                        for (w = this._targets.length; --w > -1;) {
                            if (y === this._targets[w]) {
                                s = this._propLookup[w] || {}, this._overwrittenProps = this._overwrittenProps || [], v = this._overwrittenProps[w] = z ? this._overwrittenProps[w] || {} : "all";
                                break
                            }
                        }
                    } else {
                        if (y !== this.target) {
                            return !1
                        }
                        s = this._propLookup, v = this._overwrittenProps = z ? this._overwrittenProps || {} : "all"
                    }
                    if (s) {
                        if (q = z || s, p = z !== v && "all" !== v && z !== s && ("object" != typeof z || !z._tempKill), x && (av.onOverwrite || this.vars.onOverwrite)) {
                            for (u in q) {
                                s[u] && (o || (o = []), o.push(u))
                            }
                            if ((o || !z) && !aD(this, x, y, o)) {
                                return !1
                            }
                        }
                        for (u in q) {
                            (t = s[u]) && (n && (t.f ? t.t[t.p](t.s) : t.t[t.p] = t.s, r = !0), t.pg && t.t._kill(q) && (r = !0), t.pg && 0 !== t.t._overwriteProps.length || (t._prev ? t._prev._next = t._next : t === this._firstPT && (this._firstPT = t._next), t._next && (t._next._prev = t._prev), t._next = t._prev = null), delete s[u]), p && (v[u] = 1)
                        }!this._firstPT && this._initted && this._enabled(!1, !1)
                    }
                }
                return r
            }, aW.invalidate = function() {
                return this._notifyPluginsOfEnabled && av._onPluginEvent("_onDisable", this), this._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null, this._notifyPluginsOfEnabled = this._active = this._lazy = !1, this._propLookup = this._targets ? {} : [], ay.prototype.invalidate.call(this), this.vars.immediateRender && (this._time = -aR, this.render(Math.min(0, -this._delay))), this
            }, aW._enabled = function(f, e) {
                if (aU || aV.wake(), f && this._gc) {
                    var h, g = this._targets;
                    if (g) {
                        for (h = g.length; --h > -1;) {
                            this._siblings[h] = ab(g[h], this, !0)
                        }
                    } else {
                        this._siblings = ab(this.target, this, !0)
                    }
                }
                return ay.prototype._enabled.call(this, f, e), this._notifyPluginsOfEnabled && this._firstPT ? av._onPluginEvent(f ? "_onEnable" : "_onDisable", this) : !1
            }, av.to = function(e, d, f) {
                return new av(e, d, f)
            }, av.from = function(e, d, f) {
                return f.runBackwards = !0, f.immediateRender = 0 != f.immediateRender, new av(e, d, f)
            }, av.fromTo = function(f, e, h, g) {
                return g.startAt = h, g.immediateRender = 0 != g.immediateRender && 0 != h.immediateRender, new av(f, e, g)
            }, av.delayedCall = function(g, f, m, k, h) {
                return new av(f, 0, {
                    delay: g,
                    onComplete: f,
                    onCompleteParams: m,
                    callbackScope: k,
                    onReverseComplete: f,
                    onReverseCompleteParams: m,
                    immediateRender: !1,
                    lazy: !1,
                    useFrames: h,
                    overwrite: 0
                })
            }, av.set = function(d, c) {
                return new av(d, 0, c)
            }, av.getTweensOf = function(h, g) {
                if (null == h) {
                    return []
                }
                h = "string" != typeof h ? h : av.selector(h) || h;
                var o, n, m, k;
                if ((aO(h) || au(h)) && "number" != typeof h[0]) {
                    for (o = h.length, n = [];
                        --o > -1;) {
                        n = n.concat(av.getTweensOf(h[o], g))
                    }
                    for (o = n.length; --o > -1;) {
                        for (k = n[o], m = o; --m > -1;) {
                            k === n[m] && n.splice(o, 1)
                        }
                    }
                } else {
                    for (n = ab(h).concat(), o = n.length; --o > -1;) {
                        (n[o]._gc || g && !n[o].isActive()) && n.splice(o, 1)
                    }
                }
                return n
            }, av.killTweensOf = av.killDelayedCallsTo = function(g, f, m) {
                "object" == typeof f && (m = f, f = !1);
                for (var k = av.getTweensOf(g, f), h = k.length; --h > -1;) {
                    k[h]._kill(m, g)
                }
            };
            var a4 = aK("plugins.TweenPlugin", function(d, c) {
                this._overwriteProps = (d || "").split(","), this._propName = this._overwriteProps[0], this._priority = c || 0, this._super = a4.prototype
            }, !0);
            if (aW = a4.prototype, a4.version = "1.19.0", a4.API = 2, aW._firstPT = null, aW._addTween = am, aW.setRatio = ao, aW._kill = function(f) {
                    var e, h = this._overwriteProps,
                        g = this._firstPT;
                    if (null != f[this._propName]) {
                        this._overwriteProps = []
                    } else {
                        for (e = h.length; --e > -1;) {
                            null != f[h[e]] && h.splice(e, 1)
                        }
                    }
                    for (; g;) {
                        null != f[g.n] && (g._next && (g._next._prev = g._prev), g._prev ? (g._prev._next = g._next, g._prev = null) : this._firstPT === g && (this._firstPT = g._next)), g = g._next
                    }
                    return !1
                }, aW._mod = aW._roundProps = function(e) {
                    for (var d, f = this._firstPT; f;) {
                        d = e[this._propName] || null != f.n && e[f.n.split(this._propName + "_").join("")], d && "function" == typeof d && (2 === f.f ? f.t._applyPT.m = d : f.m = d), f = f._next
                    }
                }, av._onPluginEvent = function(m, k) {
                    var s, r, q, p, o, n = k._firstPT;
                    if ("_onInitAllProps" === m) {
                        for (; n;) {
                            for (o = n._next, r = q; r && r.pr > n.pr;) {
                                r = r._next
                            }(n._prev = r ? r._prev : p) ? n._prev._next = n: q = n, (n._next = r) ? r._prev = n : p = n, n = o
                        }
                        n = k._firstPT = q
                    }
                    for (; n;) {
                        n.pg && "function" == typeof n.t[m] && n.t[m]() && (s = !0), n = n._next
                    }
                    return s
                }, a4.activate = function(d) {
                    for (var c = d.length; --c > -1;) {
                        d[c].API === a4.API && (ak[(new d[c])._propName] = d[c])
                    }
                    return !0
                }, aL.plugin = function(m) {
                    if (!(m && m.propName && m.init && m.API)) {
                        throw "illegal plugin definition."
                    }
                    var k, s = m.propName,
                        r = m.priority || 0,
                        q = m.overwriteProps,
                        p = {
                            init: "_onInitTween",
                            set: "setRatio",
                            kill: "_kill",
                            round: "_mod",
                            mod: "_mod",
                            initAll: "_onInitAllProps"
                        },
                        o = aK("plugins." + s.charAt(0).toUpperCase() + s.substr(1) + "Plugin", function() {
                            a4.call(this, s, r), this._overwriteProps = q || []
                        }, m.global === !0),
                        n = o.prototype = new a4(s);
                    n.constructor = o, o.API = m.API;
                    for (k in p) {
                        "function" == typeof m[k] && (n[p[k]] = m[k])
                    }
                    return o.version = m.version, a4.activate([o]), o
                }, aY = a3._gsQueue) {
                for (aX = 0; aX < aY.length; aX++) {
                    aY[aX]()
                }
                for (aW in aN) {
                    aN[aW].func || a3.console.log("GSAP encountered missing dependency: " + aW)
                }
            }
            aU = !1
        }
    }("undefined" != typeof module && module.exports && "undefined" != typeof global ? global : this || window, "TweenMax");
/*!
 * VERSION: 0.8.10
 * DATE: 2017-04-29
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2017, GreenSock. All rights reserved.
 * MorphSVGPlugin is a Club GreenSock membership benefit; You must have a valid membership to use
 * this code without violating the terms of use. Visit http://greensock.com/club/ to sign up or get more details.
 * This work is subject to the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 */
;
var _gsScope = "undefined" != typeof module && module.exports && "undefined" != typeof global ? global : this || window;
(_gsScope._gsQueue || (_gsScope._gsQueue = [])).push(function() {
        var aw = Math.PI / 180,
            av = 180 / Math.PI,
            au = /[achlmqstvz]|(-?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi,
            at = /(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi,
            ar = /(^[#\.]|[a-y][a-z])/gi,
            aq = /[achlmqstvz]/gi,
            ap = /[\+\-]?\d*\.?\d+e[\+\-]?\d+/gi,
            ao = _gsScope._gsDefine.globals.TweenLite,
            an = function(b) {
                _gsScope.console && console.log(b)
            },
            am = function(v, u) {
                var t, s, r, q, p, o, n = Math.ceil(Math.abs(u) / 90),
                    m = 0,
                    a = [];
                for (v *= aw, u *= aw, t = u / n, s = 4 / 3 * Math.sin(t / 2) / (1 + Math.cos(t / 2)), o = 0; n > o; o++) {
                    r = v + o * t, q = Math.cos(r), p = Math.sin(r), a[m++] = q - s * p, a[m++] = p + s * q, r += t, q = Math.cos(r), p = Math.sin(r), a[m++] = q + s * p, a[m++] = p - s * q, a[m++] = q, a[m++] = p
                }
                return a
            },
            al = function(bf, be, bd, bc, bb, ba, a9, a8, a7) {
                if (bf !== a8 || be !== a7) {
                    bd = Math.abs(bd), bc = Math.abs(bc);
                    var a6 = bb % 360 * aw,
                        a5 = Math.cos(a6),
                        a4 = Math.sin(a6),
                        a3 = (bf - a8) / 2,
                        a2 = (be - a7) / 2,
                        a1 = a5 * a3 + a4 * a2,
                        a0 = -a4 * a3 + a5 * a2,
                        aZ = bd * bd,
                        aY = bc * bc,
                        aX = a1 * a1,
                        aW = a0 * a0,
                        aV = aX / aZ + aW / aY;
                    aV > 1 && (bd = Math.sqrt(aV) * bd, bc = Math.sqrt(aV) * bc, aZ = bd * bd, aY = bc * bc);
                    var aU = ba === a9 ? -1 : 1,
                        aT = (aZ * aY - aZ * aW - aY * aX) / (aZ * aW + aY * aX);
                    0 > aT && (aT = 0);
                    var aS = aU * Math.sqrt(aT),
                        aR = aS * (bd * a0 / bc),
                        aQ = aS * -(bc * a1 / bd),
                        aP = (bf + a8) / 2,
                        aO = (be + a7) / 2,
                        aN = aP + (a5 * aR - a4 * aQ),
                        aM = aO + (a4 * aR + a5 * aQ),
                        aL = (a1 - aR) / bd,
                        aK = (a0 - aQ) / bc,
                        aJ = (-a1 - aR) / bd,
                        aI = (-a0 - aQ) / bc,
                        aH = Math.sqrt(aL * aL + aK * aK),
                        aG = aL;
                    aU = 0 > aK ? -1 : 1;
                    var aF = aU * Math.acos(aG / aH) * av;
                    aH = Math.sqrt((aL * aL + aK * aK) * (aJ * aJ + aI * aI)), aG = aL * aJ + aK * aI, aU = 0 > aL * aI - aK * aJ ? -1 : 1;
                    var aE = aU * Math.acos(aG / aH) * av;
                    !a9 && aE > 0 ? aE -= 360 : a9 && 0 > aE && (aE += 360), aE %= 360, aF %= 360;
                    var aD, aC, aB, aA = am(aF, aE),
                        az = a5 * bd,
                        ay = a4 * bd,
                        ax = a4 * -bc,
                        b = a5 * bc,
                        a = aA.length - 2;
                    for (aD = 0; a > aD; aD += 2) {
                        aC = aA[aD], aB = aA[aD + 1], aA[aD] = aC * az + aB * ax + aN, aA[aD + 1] = aC * ay + aB * b + aM
                    }
                    return aA[aA.length - 2] = a8, aA[aA.length - 1] = a7, aA
                }
            },
            ak = function(aC) {
                var aB, aA, az, ay, ax, K, J, I, H, G, F, E, D, C = (aC + "").replace(ap, function(e) {
                        var d = +e;
                        return 0.0001 > d && d > -0.0001 ? 0 : d
                    }).match(au) || [],
                    B = [],
                    A = 0,
                    z = 0,
                    k = C.length,
                    g = 2,
                    c = 0;
                if (!aC || !isNaN(C[0]) || isNaN(C[1])) {
                    return an("ERROR: malformed path data: " + aC), B
                }
                for (aB = 0; k > aB; aB++) {
                    if (D = ax, isNaN(C[aB]) ? (ax = C[aB].toUpperCase(), K = ax !== C[aB]) : aB--, az = +C[aB + 1], ay = +C[aB + 2], K && (az += A, ay += z), 0 === aB && (I = az, H = ay), "M" === ax) {
                        J && J.length < 8 && (B.length -= 1, g = 0), A = I = az, z = H = ay, J = [az, ay], c += g, g = 2, B.push(J), aB += 2, ax = "L"
                    } else {
                        if ("C" === ax) {
                            J || (J = [0, 0]), J[g++] = az, J[g++] = ay, K || (A = z = 0), J[g++] = A + 1 * C[aB + 3], J[g++] = z + 1 * C[aB + 4], J[g++] = A += 1 * C[aB + 5], J[g++] = z += 1 * C[aB + 6], aB += 6
                        } else {
                            if ("S" === ax) {
                                "C" === D || "S" === D ? (G = A - J[g - 4], F = z - J[g - 3], J[g++] = A + G, J[g++] = z + F) : (J[g++] = A, J[g++] = z), J[g++] = az, J[g++] = ay, K || (A = z = 0), J[g++] = A += 1 * C[aB + 3], J[g++] = z += 1 * C[aB + 4], aB += 4
                            } else {
                                if ("Q" === ax) {
                                    G = az - A, F = ay - z, J[g++] = A + 2 * G / 3, J[g++] = z + 2 * F / 3, K || (A = z = 0), A += 1 * C[aB + 3], z += 1 * C[aB + 4], G = az - A, F = ay - z, J[g++] = A + 2 * G / 3, J[g++] = z + 2 * F / 3, J[g++] = A, J[g++] = z, aB += 4
                                } else {
                                    if ("T" === ax) {
                                        G = A - J[g - 4], F = z - J[g - 3], J[g++] = A + G, J[g++] = z + F, G = A + 1.5 * G - az, F = z + 1.5 * F - ay, J[g++] = az + 2 * G / 3, J[g++] = ay + 2 * F / 3, J[g++] = A = az, J[g++] = z = ay, aB += 2
                                    } else {
                                        if ("H" === ax) {
                                            ay = z, J[g++] = A + (az - A) / 3, J[g++] = z + (ay - z) / 3, J[g++] = A + 2 * (az - A) / 3, J[g++] = z + 2 * (ay - z) / 3, J[g++] = A = az, J[g++] = ay, aB += 1
                                        } else {
                                            if ("V" === ax) {
                                                ay = az, az = A, K && (ay += z - A), J[g++] = az, J[g++] = z + (ay - z) / 3, J[g++] = az, J[g++] = z + 2 * (ay - z) / 3, J[g++] = az, J[g++] = z = ay, aB += 1
                                            } else {
                                                if ("L" === ax || "Z" === ax) {
                                                    "Z" === ax && (az = I, ay = H, J.closed = !0), ("L" === ax || Math.abs(A - az) > 0.5 || Math.abs(z - ay) > 0.5) && (J[g++] = A + (az - A) / 3, J[g++] = z + (ay - z) / 3, J[g++] = A + 2 * (az - A) / 3, J[g++] = z + 2 * (ay - z) / 3, J[g++] = az, J[g++] = ay, "L" === ax && (aB += 2)), A = az, z = ay
                                                } else {
                                                    if ("A" === ax) {
                                                        if (E = al(A, z, 1 * C[aB + 1], 1 * C[aB + 2], 1 * C[aB + 3], 1 * C[aB + 4], 1 * C[aB + 5], (K ? A : 0) + 1 * C[aB + 6], (K ? z : 0) + 1 * C[aB + 7])) {
                                                            for (aA = 0; aA < E.length; aA++) {
                                                                J[g++] = E[aA]
                                                            }
                                                        }
                                                        A = J[g - 2], z = J[g - 1], aB += 7
                                                    } else {
                                                        an("Error: malformed path data: " + aC)
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                return B.totalPoints = c + g, B
            },
            aj = function(az, ay) {
                var ax, K, J, I, H, G, F, E, D, C, B, A, z, y, x = 0,
                    w = 0.999999,
                    v = az.length,
                    u = ay / ((v - 2) / 6);
                for (z = 2; v > z; z += 6) {
                    for (x += u; x > w;) {
                        ax = az[z - 2], K = az[z - 1], J = az[z], I = az[z + 1], H = az[z + 2], G = az[z + 3], F = az[z + 4], E = az[z + 5], y = 1 / (Math.floor(x) + 1), D = ax + (J - ax) * y, B = J + (H - J) * y, D += (B - D) * y, B += (H + (F - H) * y - B) * y, C = K + (I - K) * y, A = I + (G - I) * y, C += (A - C) * y, A += (G + (E - G) * y - A) * y, az.splice(z, 4, ax + (J - ax) * y, K + (I - K) * y, D, C, D + (B - D) * y, C + (A - C) * y, B, A, H + (F - H) * y, G + (E - G) * y), z += 6, v += 6, x--
                    }
                }
                return az
            },
            ai = function(m) {
                var k, s, r, q, p = "",
                    o = m.length,
                    n = 100;
                for (s = 0; o > s; s++) {
                    for (q = m[s], p += "M" + q[0] + "," + q[1] + " C", k = q.length, r = 2; k > r; r++) {
                        p += (q[r++] * n | 0) / n + "," + (q[r++] * n | 0) / n + " " + (q[r++] * n | 0) / n + "," + (q[r++] * n | 0) / n + " " + (q[r++] * n | 0) / n + "," + (q[r] * n | 0) / n + " "
                    }
                    q.closed && (p += "z")
                }
                return p
            },
            ah = function(f) {
                for (var e = [], h = f.length - 1, g = 0; --h > -1;) {
                    e[g++] = f[h], e[g++] = f[h + 1], h--
                }
                for (h = 0; g > h; h++) {
                    f[h] = e[h]
                }
                f.reversed = f.reversed ? !1 : !0
            },
            ag = function(g) {
                var f, m = g.length,
                    k = 0,
                    h = 0;
                for (f = 0; m > f; f++) {
                    k += g[f++], h += g[f]
                }
                return [k / (m / 2), h / (m / 2)]
            },
            af = function(t) {
                var s, r, q, p = t.length,
                    o = t[0],
                    n = o,
                    m = t[1],
                    k = m;
                for (q = 6; p > q; q += 6) {
                    s = t[q], r = t[q + 1], s > o ? o = s : n > s && (n = s), r > m ? m = r : k > r && (k = r)
                }
                return t.centerX = (o + n) / 2, t.centerY = (m + k) / 2, t.size = (o - n) * (m - k)
            },
            ae = function(w) {
                for (var v, u, t, s, r, q = w.length, p = w[0][0], o = p, n = w[0][1], m = n; --q > -1;) {
                    for (r = w[q], v = r.length, s = 6; v > s; s += 6) {
                        u = r[s], t = r[s + 1], u > p ? p = u : o > u && (o = u), t > n ? n = t : m > t && (m = t)
                    }
                }
                return w.centerX = (p + o) / 2, w.centerY = (n + m) / 2, w.size = (p - o) * (n - m)
            },
            ad = function(d, c) {
                return c.length - d.length
            },
            ac = function(f, e) {
                var h = f.size || af(f),
                    g = e.size || af(e);
                return Math.abs(g - h) < (h + g) / 20 ? e.centerX - f.centerX || e.centerY - f.centerY : g - h
            },
            ab = function(k, h) {
                var q, p, o = k.slice(0),
                    n = k.length,
                    m = n - 2;
                for (h = 0 | h, q = 0; n > q; q++) {
                    p = (q + h) % m, k[q++] = o[p], k[q] = o[p + 1]
                }
            },
            aa = function(x, w, v, u, t) {
                var s, r, q, p, o = x.length,
                    n = 0,
                    m = o - 2;
                for (v *= 6, r = 0; o > r; r += 6) {
                    s = (r + v) % m, p = x[s] - (w[r] - u), q = x[s + 1] - (w[r + 1] - t), n += Math.sqrt(q * q + p * p)
                }
                return n
            },
            Z = function(z, y, x) {
                var w, v, u, t = z.length,
                    s = ag(z),
                    r = ag(y),
                    q = r[0] - s[0],
                    p = r[1] - s[1],
                    o = aa(z, y, 0, q, p),
                    n = 0;
                for (u = 6; t > u; u += 6) {
                    v = aa(z, y, u / 6, q, p), o > v && (o = v, n = u)
                }
                if (x) {
                    for (w = z.slice(0), ah(w), u = 6; t > u; u += 6) {
                        v = aa(w, y, u / 6, q, p), o > v && (o = v, n = -u)
                    }
                }
                return n / 6
            },
            Y = function(z, y, x) {
                for (var w, v, u, t, s, r, q = z.length, p = 99999999999, o = 0, n = 0; --q > -1;) {
                    for (w = z[q], r = w.length, s = 0; r > s; s += 6) {
                        v = w[s] - y, u = w[s + 1] - x, t = Math.sqrt(v * v + u * u), p > t && (p = t, o = w[s], n = w[s + 1])
                    }
                }
                return [o, n]
            },
            X = function(H, G, F, E, D, C) {
                var B, A, z, y, x, w = G.length,
                    v = 0,
                    u = Math.min(H.size || af(H), G[F].size || af(G[F])) * E,
                    t = 999999999999,
                    s = H.centerX + D,
                    q = H.centerY + C;
                for (A = F; w > A && (B = G[A].size || af(G[A]), !(u > B)); A++) {
                    z = G[A].centerX - s, y = G[A].centerY - q, x = Math.sqrt(z * z + y * y), t > x && (v = A, t = x)
                }
                return x = G[v], G.splice(v, 1), x
            },
            W = function(aC, aB, aA, az) {
                var ay, ax, K, J, I, H, G, y = aB.length - aC.length,
                    x = y > 0 ? aB : aC,
                    o = y > 0 ? aC : aB,
                    m = 0,
                    w = "complexity" === az ? ad : ac,
                    u = "position" === az ? 0 : "number" == typeof az ? az : 0.8,
                    t = o.length,
                    s = "object" == typeof aA && aA.push ? aA.slice(0) : [aA],
                    r = "reverse" === s[0] || s[0] < 0,
                    q = "log" === aA;
                if (o[0]) {
                    if (x.length > 1 && (aC.sort(w), aB.sort(w), H = x.size || ae(x), H = o.size || ae(o), H = x.centerX - o.centerX, G = x.centerY - o.centerY, w === ac)) {
                        for (t = 0; t < o.length; t++) {
                            x.splice(t, 0, X(o[t], x, t, u, H, G))
                        }
                    }
                    if (y) {
                        for (0 > y && (y = -y), x[0].length > o[0].length && aj(o[0], (x[0].length - o[0].length) / 6 | 0), t = o.length; y > m;) {
                            J = x[t].size || af(x[t]), K = Y(o, x[t].centerX, x[t].centerY), J = K[0], I = K[1], o[t++] = [J, I, J, I, J, I, J, I], o.totalPoints += 8, m++
                        }
                    }
                    for (t = 0; t < aC.length; t++) {
                        ay = aB[t], ax = aC[t], y = ay.length - ax.length, 0 > y ? aj(ay, -y / 6 | 0) : y > 0 && aj(ax, y / 6 | 0), r && !ax.reversed && ah(ax), aA = s[t] || 0 === s[t] ? s[t] : "auto", aA && (ax.closed || Math.abs(ax[0] - ax[ax.length - 2]) < 0.5 && Math.abs(ax[1] - ax[ax.length - 1]) < 0.5 ? "auto" === aA || "log" === aA ? (s[t] = aA = Z(ax, ay, 0 === t), 0 > aA && (r = !0, ah(ax), aA = -aA), ab(ax, 6 * aA)) : "reverse" !== aA && (t && 0 > aA && ah(ax), ab(ax, 6 * (0 > aA ? -aA : aA))) : !r && ("auto" === aA && Math.abs(ay[0] - ax[0]) + Math.abs(ay[1] - ax[1]) + Math.abs(ay[ay.length - 2] - ax[ax.length - 2]) + Math.abs(ay[ay.length - 1] - ax[ax.length - 1]) > Math.abs(ay[0] - ax[ax.length - 2]) + Math.abs(ay[1] - ax[ax.length - 1]) + Math.abs(ay[ay.length - 2] - ax[0]) + Math.abs(ay[ay.length - 1] - ax[1]) || aA % 2) ? (ah(ax), s[t] = -1, r = !0) : "auto" === aA ? s[t] = 0 : "reverse" === aA && (s[t] = -1), ax.closed !== ay.closed && (ax.closed = ay.closed = !1))
                    }
                    return q && an("shapeIndex:[" + s.join(",") + "]"), s
                }
            },
            V = function(h, g, o, n) {
                var m = ak(h[0]),
                    k = ak(h[1]);
                W(m, k, g || 0 === g ? g : "auto", o) && (h[0] = ai(m), h[1] = ai(k), ("log" === n || n === !0) && an('precompile:["' + h[0] + '","' + h[1] + '"]'))
            },
            U = function(e, d, f) {
                return d || f || e || 0 === e ? function(a) {
                    V(a, e, d, f)
                } : V
            },
            T = function(k, d) {
                if (!d) {
                    return k
                }
                var r, q, p, o = k.match(at) || [],
                    n = o.length,
                    m = "";
                for ("reverse" === d ? (q = n - 1, r = -2) : (q = (2 * (parseInt(d, 10) || 0) + 1 + 100 * n) % n, r = 2), p = 0; n > p; p += 2) {
                    m += o[q - 1] + "," + o[q] + " ", q = (q + r) % n
                }
                return m
            },
            S = function(B, A) {
                var z, y, x, w, v, u, t, s = 0,
                    r = parseFloat(B[0]),
                    q = parseFloat(B[1]),
                    p = r + "," + q + " ",
                    o = 0.999999;
                for (x = B.length, z = 0.5 * A / (0.5 * x - 1), y = 0; x - 2 > y; y += 2) {
                    if (s += z, u = parseFloat(B[y + 2]), t = parseFloat(B[y + 3]), s > o) {
                        for (v = 1 / (Math.floor(s) + 1), w = 1; s > o;) {
                            p += (r + (u - r) * v * w).toFixed(2) + "," + (q + (t - q) * v * w).toFixed(2) + " ", s--, w++
                        }
                    }
                    p += u + "," + t + " ", r = u, q = t
                }
                return p
            },
            R = function(f) {
                var d = f[0].match(at) || [],
                    h = f[1].match(at) || [],
                    g = h.length - d.length;
                g > 0 ? f[0] = S(d, g) : f[1] = S(h, -g)
            },
            Q = function(b) {
                return isNaN(b) ? R : function(a) {
                    R(a), a[1] = T(a[1], parseInt(b, 10))
                }
            },
            P = function(h, g) {
                var o, n = _gsScope.document.createElementNS("http://www.w3.org/2000/svg", "path"),
                    m = Array.prototype.slice.call(h.attributes),
                    k = m.length;
                for (g = "," + g + ","; --k > -1;) {
                    o = m[k].nodeName.toLowerCase(), -1 === g.indexOf("," + o + ",") && n.setAttributeNS(null, o, m[k].nodeValue)
                }
                return n
            },
            O = function(aJ, aI) {
                var aH, aG, aF, aE, aD, aC, aB, aA, az, ay, ax, K, J, I, H, G, F, E, D, C, B, A = aJ.tagName.toLowerCase(),
                    d = 0.552284749831;
                return "path" !== A && aJ.getBBox ? (aC = P(aJ, "x,y,width,height,cx,cy,rx,ry,r,x1,x2,y1,y2,points"), "rect" === A ? (aE = +aJ.getAttribute("rx") || 0, aD = +aJ.getAttribute("ry") || 0, aG = +aJ.getAttribute("x") || 0, aF = +aJ.getAttribute("y") || 0, ay = (+aJ.getAttribute("width") || 0) - 2 * aE, ax = (+aJ.getAttribute("height") || 0) - 2 * aD, aE || aD ? (K = aG + aE * (1 - d), J = aG + aE, I = J + ay, H = I + aE * d, G = I + aE, F = aF + aD * (1 - d), E = aF + aD, D = E + ax, C = D + aD * d, B = D + aD, aH = "M" + G + "," + E + " V" + D + " C" + [G, C, H, B, I, B, I - (I - J) / 3, B, J + (I - J) / 3, B, J, B, K, B, aG, C, aG, D, aG, D - (D - E) / 3, aG, E + (D - E) / 3, aG, E, aG, F, K, aF, J, aF, J + (I - J) / 3, aF, I - (I - J) / 3, aF, I, aF, H, aF, G, F, G, E].join(",") + "z") : aH = "M" + (aG + ay) + "," + aF + " v" + ax + " h" + -ay + " v" + -ax + " h" + ay + "z") : "circle" === A || "ellipse" === A ? ("circle" === A ? (aE = aD = +aJ.getAttribute("r") || 0, aA = aE * d) : (aE = +aJ.getAttribute("rx") || 0, aD = +aJ.getAttribute("ry") || 0, aA = aD * d), aG = +aJ.getAttribute("cx") || 0, aF = +aJ.getAttribute("cy") || 0, aB = aE * d, aH = "M" + (aG + aE) + "," + aF + " C" + [aG + aE, aF + aA, aG + aB, aF + aD, aG, aF + aD, aG - aB, aF + aD, aG - aE, aF + aA, aG - aE, aF, aG - aE, aF - aA, aG - aB, aF - aD, aG, aF - aD, aG + aB, aF - aD, aG + aE, aF - aA, aG + aE, aF].join(",") + "z") : "line" === A ? aH = "M" + (aJ.getAttribute("x1") || 0) + "," + (aJ.getAttribute("y1") || 0) + " L" + (aJ.getAttribute("x2") || 0) + "," + (aJ.getAttribute("y2") || 0) : ("polyline" === A || "polygon" === A) && (az = (aJ.getAttribute("points") + "").match(at) || [], aG = az.shift(), aF = az.shift(), aH = "M" + aG + "," + aF + " L" + az.join(","), "polygon" === A && (aH += "," + aG + "," + aF + "z")), aC.setAttribute("d", aH), aI && aJ.parentNode && (aJ.parentNode.insertBefore(aC, aJ), aJ.parentNode.removeChild(aJ)), aC) : aJ
            },
            N = function(e, d, n) {
                var m, k, h = "string" == typeof e;
                return (!h || ar.test(e) || (e.match(at) || []).length < 3) && (m = h ? ao.selector(e) : e && e[0] ? e : [e], m && m[0] ? (m = m[0], k = m.nodeName.toUpperCase(), d && "PATH" !== k && (m = O(m, !1), k = "PATH"), e = m.getAttribute("PATH" === k ? "d" : "points") || "", m === n && (e = m.getAttributeNS(null, "data-original") || e)) : (an("WARNING: invalid morph to: " + e), e = !1)), e
            },
            M = "Use MorphSVGPlugin.convertToPath(elementOrSelectorText) to convert to a path before morphing.",
            L = _gsScope._gsDefine.plugin({
                propName: "morphSVG",
                API: 2,
                global: !0,
                version: "0.8.10",
                init: function(t, s, r, q) {
                    var p, o, n, m, f;
                    return "function" != typeof t.setAttribute ? !1 : ("function" == typeof s && (s = s(q, t)), p = t.nodeName.toUpperCase(), f = "POLYLINE" === p || "POLYGON" === p, "PATH" === p || f ? (o = "PATH" === p ? "d" : "points", ("string" == typeof s || s.getBBox || s[0]) && (s = {
                        shape: s
                    }), m = N(s.shape || s.d || s.points || "", "d" === o, t), f && aq.test(m) ? (an("WARNING: a <" + p + "> cannot accept path data. " + M), !1) : (m && (this._target = t, t.getAttributeNS(null, "data-original") || t.setAttributeNS(null, "data-original", t.getAttribute(o)), n = this._addTween(t, "setAttribute", t.getAttribute(o) + "", m + "", "morphSVG", !1, o, "object" == typeof s.precompile ? function(b) {
                        b[0] = s.precompile[0], b[1] = s.precompile[1]
                    } : "d" === o ? U(s.shapeIndex, s.map || L.defaultMap, s.precompile) : Q(s.shapeIndex)), n && (this._overwriteProps.push("morphSVG"), n.end = m, n.endProp = o)), !0)) : (an("WARNING: cannot morph a <" + p + "> SVG element. " + M), !1))
                },
                set: function(d) {
                    var c;
                    if (this._super.setRatio.call(this, d), 1 === d) {
                        for (c = this._firstPT; c;) {
                            c.end && this._target.setAttribute(c.endProp, c.end), c = c._next
                        }
                    }
                }
            });
        L.pathFilter = V, L.pointsFilter = R, L.subdivideRawBezier = aj, L.defaultMap = "size", L.pathDataToRawBezier = function(b) {
            return ak(N(b, !0))
        }, L.equalizeSegmentQuantity = W, L.convertToPath = function(f, e) {
            "string" == typeof f && (f = ao.selector(f));
            for (var h = f && 0 !== f.length ? f.length && f[0] && f[0].nodeType ? Array.prototype.slice.call(f, 0) : [f] : [], g = h.length; --g > -1;) {
                h[g] = O(h[g], e !== !1)
            }
            return h
        }, L.pathDataToBezier = function(y, x) {
            var w, v, u, t, s, r, q, p, o = ak(N(y, !0))[0] || [],
                h = 0;
            if (x = x || {}, p = x.align || x.relative, t = x.matrix || [1, 0, 0, 1, 0, 0], s = x.offsetX || 0, r = x.offsetY || 0, "relative" === p || p === !0 ? (s -= o[0] * t[0] + o[1] * t[2], r -= o[0] * t[1] + o[1] * t[3], h = "+=") : (s += t[4], r += t[5], p && (p = "string" == typeof p ? ao.selector(p) : p && p[0] ? p : [p], p && p[0] && (q = p[0].getBBox() || {
                    x: 0,
                    y: 0
                }, s -= q.x, r -= q.y))), w = [], u = o.length, t && "1,0,0,1,0,0" !== t.join(",")) {
                for (v = 0; u > v; v += 2) {
                    w.push({
                        x: h + (o[v] * t[0] + o[v + 1] * t[2] + s),
                        y: h + (o[v] * t[1] + o[v + 1] * t[3] + r)
                    })
                }
            } else {
                for (v = 0; u > v; v += 2) {
                    w.push({
                        x: h + (o[v] + s),
                        y: h + (o[v + 1] + r)
                    })
                }
            }
            return w
        }
    }), _gsScope._gsDefine && _gsScope._gsQueue.pop()(),
    function(d) {
        var c = function() {
            return (_gsScope.GreenSockGlobals || _gsScope)[d]
        };
        "function" == typeof define && define.amd ? define(["TweenLite"], c) : "undefined" != typeof module && module.exports && (require("../TweenLite.js"), module.exports = c())
    }("MorphSVGPlugin");
window.Travian = {
    applicationId: "travian",
    Defaults: typeof TravianDefaults !== "undefined" ? TravianDefaults : {},
    emptyFunction: function() {},
    $d: function(b) {
        if (window.console && window.console.info) {
            console.info(JSON.stringify(b))
        } else {
            if (!$("travian_console")) {
                var a = new Element("div", {
                    id: "travian_console",
                    styles: {
                        position: "absolute",
                        left: 0,
                        height: 150,
                        width: "100%",
                        bottom: 0,
                        zIndex: 10000,
                        overflow: "auto",
                        overflowX: "hidden",
                        overflowY: "auto",
                        borderTop: "1px solid #A06060",
                        backgroundColor: "#FFD0D0",
                        fontSize: "10px",
                        fontFamily: "tahoma,arial,helvetica,sans-serif"
                    }
                });
                (new Element("div", {
                    html: "Console",
                    styles: {
                        fontWeight: "bold",
                        padding: 1,
                        marginBottom: 2,
                        borderBottom: "1px solid #858484"
                    }
                })).inject(a, "bottom");
                a.inject(document.body, "bottom")
            }(new Element("span", {
                html: JSON.encode(b) + "<br />"
            })).inject($("travian_console"), "bottom")
        }
    },
    ajax: function(a) {
        if (typeof a === "undefined") {
            a = {}
        }
        if (typeof a.data === "undefined") {
            a.data = {}
        }
        if (!a.url) {
            a.url = "ajax.php"
        }
        if (a.data && a.data.cmd) {
            a.url = a.url + (a.url.indexOf("?") == -1 ? "?" : "&") + "cmd=" + a.data.cmd
        }
        a.data.ajaxToken = window.ajaxToken;
        var b = {
            onRequest: a.onRequest || Travian.emptyFunction,
            onComplete: a.onComplete || Travian.emptyFunction,
            onCancel: a.onCancel || Travian.emptyFunction,
            onSuccess: a.onSuccess || Travian.emptyFunction,
            onFailure: a.onFailure || Travian.emptyFunction,
            onException: a.onException || Travian.emptyFunction,
            errorHandler: a.errorHandler || null
        };
        return new Request(Object.merge(a, {
            method: "post",
            encoding: "utf-8",
            evalResponse: false,
            evalScripts: false,
            headers: {
                "X-Request": "JSON"
            },
            onRequest: function() {
                b.onRequest(this)
            },
            onComplete: function() {
                if (!this.response.json) {
                    this.response.json = JSON.decode(this.response.text)
                }
                var c = this.response.json.response;
                b.onComplete(c.data)
            },
            onCancel: function() {
                b.onCancel(this)
            },
            onSuccess: function() {
                if (!this.response.json) {
                    this.response.json = JSON.decode(this.response.text)
                }
                var c = this.response.json.response;
                if (typeof c.data !== "undefined" && c.data.javascript !== "undefined" && c.data.javascript) {
                    Browser.exec(c.data.javascript)
                }
                if (c.javascript) {
                    Browser.exec(c.javascript)
                }
                if (c.error) {
                    if (c.errorMsg == null) {
                        c.errorMsg = "Ajax Request error and no text. That is not so good."
                    }
                    if (typeof b.errorHandler === "function") {
                        b.errorHandler(c.errorMsg, c)
                    } else {
                        if (b.onFailure(c.data, c.errorMsg) !== false) {
                            c.errorMsg.dialog()
                        }
                        return
                    }
                } else {
                    if (c.reload) {
                        window.location.reload()
                    } else {
                        if (c.redirectTo) {
                            window.location.href = c.redirectTo
                        }
                    }
                }
                b.onSuccess(c.data, c)
            },
            onFailure: function() {
                if (!this.response.json) {
                    this.response.json = JSON.decode(this.response.text)
                }
                var c = this.response.json.response;
                if (c.error) {
                    if (c.errorMsg == null) {
                        c.errorMsg = "Ajax Request error and no text. That is not so good."
                    }
                    if (b.onFailure(c.data, c.errorMsg) !== false) {
                        c.errorMsg.dialog()
                    }
                    return
                }
                b.onFailure(c.data)
            },
            onException: function() {
                b.onException(this)
            }
        })).send()
    },
    getDirection: function() {
        if (!this.direction) {
            this.direction = $(document.body).getStyle("direction").toLowerCase()
        }
        return this.direction
    },
    insertScript: (function() {
        var a = [];
        var b = function(c) {
            if (a.length == 0) {
                $$("script[src]").each(function(d) {
                    a.push({
                        src: d.src,
                        id: d.id,
                        defer: d.defer,
                        defaultURL: false
                    })
                })
            }
            return a.find(function(d) {
                return d.src == c.src
            })
        };
        return function(c) {
            var e = this;
            if (!c) {
                return
            }
            if (c && c.$family && c.$family.name == "array") {
                return c.each(function(f) {
                    e.insertScript(f)
                })
            }
            if (typeof c == "string") {
                c = {
                    src: c
                }
            }
            c.onLoad = c.onLoad || this.emptyFunction;
            if (b(c)) {
                c.onLoad(false);
                return true
            }
            a.push(c);
            var d = new Element("script", {
                id: (c.id ? c.id : undefined),
                src: c.src,
                type: "text/javascript",
                defer: (c.defer ? true : false)
            });
            if (Browser.name == "ie") {
                d.onreadystatechange = function() {
                    if (d.readyState == "loaded" || d.readyState == "complete" || d.readyState == 4) {
                        c.onLoad(true, d)
                    }
                }
            } else {
                d.onload = c.onLoad.pass(true, d)
            }
            $(document.html).getElement("head").appendChild(d);
            return d
        }
    })(),
    popup: function(b, a) {
        a = a || {};
        return window.open(b, a.id || "_blank", $H(a).getKeys().inject([], function(d, c) {
            if (c != "id") {
                if (typeOf(a[c]) == "boolean") {
                    a[c] = a[c] ? "yes" : "no"
                }
                d.push(c + "=" + a[c])
            }
            return d
        }).join(","), true)
    },
    toggleSwitch: function(c, b) {
        c.toggleClass("hide");
        var a = (b.className.indexOf("Mirrored") >= 0);
        b.toggleClass("switchClosed");
        if (a) {
            b.toggleClass("switchClosedMirrored")
        }
        b.toggleClass("switchOpened");
        if (a) {
            b.toggleClass("switchOpenedMirrored")
        }
        return this
    },
    toggleSwitchDescription: function(c, a, b) {
        if (typeOf(c) == "element") {
            c = [c]
        }
        c.each(function(d) {
            if (d.hasClass("switchClosed")) {
                d.setTitle(a)
            } else {
                d.setTitle(b)
            }
        });
        return this
    },
    addMouseEvents: function(a, b) {
        a.addEvent("mouseenter", function() {
            b.addClass("hover");
            b.removeClass("click")
        });
        a.addEvent("mouseleave", function() {
            b.removeClass("hover");
            b.removeClass("click")
        });
        a.addEvent("mousedown", function() {
            b.removeClass("hover");
            b.addClass("click")
        });
        a.addEvent("mouseup", function() {
            b.addClass("hover");
            b.removeClass("click")
        });
        return this
    },
    findButtonsAndBindEvents: function(a) {
        if (typeof a === "undefined") {
            var b = $$("button")
        } else {
            var b = a.select("button")
        }
        b.each(function(e) {
            var d = e;
            var c = d.getElement(".addHoverClick");
            if (c == null) {
                c = d
            }
            Travian.addMouseEvents(e, c)
        })
    },
    forceDisplay: function(a) {
        if (typeof a === "undefined") {
            var b = $$(".forceDisplayElement")
        } else {
            var b = [a]
        }
        b.each(function(c) {
            c.addClass("invisible");
            c.removeClass("invisible")
        })
    },
    showComingSoonInfo: function(a) {
        a.dialog({
            buttonOk: false
        });
        return false
    },
    adjustButtonDisableState: function() {
        $$(".disableButtonHandler").each(function(a) {
            if (a.getStyle("display") == "none" || a.getStyle("visibility") == "hidden") {
                a.getElements("button").each(function(b) {
                    var c = b.get("olddisabled") == null ? b.get("disabled") : b.get("olddisabled") != "false";
                    b.set("olddisabled", c).set("disabled", true)
                })
            } else {
                a.getElements("button").each(function(b) {
                    var c = b.get("olddisabled");
                    if (c != null) {
                        b.set("disabled", c != "false")
                    } else {
                        b.set("disabled", false)
                    }
                })
            }
        })
    },
    isMobile: function() {
        var a = false;
        var b = navigator.userAgent || navigator.vendor || window.opera;
        if (/ipad|ipod|(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|windows nt.+touch|xda|xiino/i.test(b) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(b.substr(0, 4))) {
            a = true
        }
        return a
    },
    parseURL: function(b) {
        var c = document.createElement("a"),
            a = {};
        c.href = b;
        c.search.substr(1).split("&").forEach(function(f) {
            var e = f.split("=");
            var d = decodeURIComponent(e[0]);
            if (d.length > 0) {
                a[d] = e[1]
            }
        });
        return {
            protocol: c.protocol,
            host: c.host,
            hostname: c.hostname,
            port: c.port,
            pathname: c.pathname,
            searchObject: a,
            hash: c.hash
        }
    },
    composeURL: function(a) {
        var b = a.protocol + "//" + a.host;
        if (a.port != "") {
            b += ":" + port
        }
        b += this.composeURI(a);
        return b
    },
    composeURI: function(a) {
        var d = a.pathname;
        var b = "?";
        for (var c in a.searchObject) {
            if (a.searchObject.hasOwnProperty(c)) {
                d += b + c + "=" + a.searchObject[c];
                b = "&"
            }
        }
        d += a.hash;
        return d
    },
    getScript: function(e, g, c) {
        c = c || {};
        var f = (typeof c.forceCallback === "undefined" ? true : !!c.forceCallback);
        var a = jQuery("script");
        if (a) {
            for (var d = a.length - 1; d >= 0; d--) {
                if (a[d].src && a[d].src === e) {
                    return (f ? g : false)
                }
            }
        }
        var b = (typeof c.useCache === "undefined" ? true : !!c.useCache);
        if (b) {
            jQuery.ajax({
                url: e,
                dataType: "script",
                success: g,
                cache: true
            })
        } else {
            jQuery.getScript(e, g)
        }
        return true
    },
    getCss: function(c) {
        var a = jQuery("link");
        if (a) {
            for (var b = a.length - 1; b >= 0; b--) {
                if (a[b].href && a[b].href === c) {
                    return false
                }
            }
        }
        jQuery('<link rel="stylesheet" type="text/css" href="' + c + '"/>').appendTo("head");
        return true
    }
};
window.addEvent("domAltered", function(a) {
    Travian.findButtonsAndBindEvents(a)
});
window.addEvent("domready", function() {
    Travian.findButtonsAndBindEvents()
});

function addNsEvent(b, e) {
    var c = b.split("."),
        a = c[0],
        d = c[1];
    this.bindCache = this.bindCache || {};
    if (this.bindCache[b]) {
        this.bindCache[b].push(e)
    } else {
        this.bindCache[b] = [e]
    }
    this.addEvent(a, e);
    return this
}

function removeNsEvent(c) {
    if (typeof this.bindCache === "undefined" || !this.bindCache.hasOwnProperty(c)) {
        return this
    }
    var b = c.split(".")[0],
        a = 0,
        d = this.bindCache[c],
        e;
    for (; e = d[a++];) {
        this.removeEvent(b, e)
    }
    return this
}

function removeNsEvents(d) {
    var a, c, b = this;
    Object.each(this.bindCache, function(f, e) {
        if (e.contains(".") && e.split(".").getLast() == d) {
            a = 0;
            for (; c = f[a++];) {
                b.removeEvent(e.split(".")[0], c)
            }
        }
    });
    return this
}
Element.implement({
    addNamespaceEvent: addNsEvent,
    removeNsEvent: removeNsEvent,
    removeNsEvents: removeNsEvents
});
Window.implement({
    addNamespaceEvent: addNsEvent,
    removeNsEvent: removeNsEvent,
    removeNsEvents: removeNsEvents
});
Document.implement({
    addNamespaceEvent: addNsEvent,
    removeNsEvent: removeNsEvent,
    removeNsEvents: removeNsEvents
});
Travian.Storage = (function() {
    var c = null;
    var d = function(n, m) {
        var o = f(n);
        m = g(m);
        if (o === null) {} else {
            o.removeItem(m)
        }
    };
    var a = function(n, m) {
        return {
            data: n,
            time: (new Date()).getTime(),
            cachingTime: m
        }
    };
    var k = function(n, m) {
        var p = f(n);
        var o = null;
        m = g(m);
        if (p === null) {
            return null
        } else {
            o = p.getItem(m)
        }
        if (o == null || typeof o == "undefined") {
            return null
        }
        return JSON.decode(o)
    };
    var f = function(n) {
        var m = n ? "localStorage" : "sessionStorage";
        if (!window[m]) {
            return null
        }
        return window[m]
    };
    var b = function() {
        if (c === null) {
            c = new Element("input", {
                type: "hidden"
            }).setStyles({
                behavior: "url(#default#userData)"
            }).inject(document.body)
        }
        return c
    };
    var g = function(m) {
        return "Travian." + m
    };
    var e = function(n, m, o) {
        var q = f(n);
        var p = JSON.encode(o);
        m = g(m);
        if (q === null) {
            return null
        } else {
            q.setItem(m, p)
        }
    };
    var h = function(o, n) {
        var m = o.cachingTime;
        if (typeof n.cachingTime != "undefined" && n.cachingTime !== null) {
            m = n.cachingTime
        }
        return n.time !== false && (new Date()).getTime() - n.time > m
    };
    return {
        cachingTime: 365 * 24 * 60 * 60 * 1000,
        clear: function(m, n) {
            d(n, m);
            return this
        },
        get: function(m, n) {
            var o = k(n, m);
            if (o === null) {
                return null
            }
            if (h(this, o) === true) {
                return null
            }
            return o.data
        },
        set: function(n, p, o, m) {
            var q = a(this, p, m);
            e(o, n, q);
            return this
        }
    }
})();
Travian.Translation = {
    keys: {},
    add: function(b, c) {
        var a = {};
        if (typeof b != "object") {
            a[b] = c
        } else {
            a = b
        }
        this.keys = Object.merge({}, this.keys, a);
        return this
    },
    get: function(a) {
        return this.keys[a]
    },
    translate: function(c, b) {
        var a = null;
        if (typeof b == "object") {
            a = Object.append(Object.clone(this.keys), b)
        } else {
            a = this.keys
        }
        return c.substituteWithoutReplacingUndefinedKeys(a)
    }
};
String.implement({
    translate: function(a) {
        return Travian.Translation.translate(this, a)
    }
});
Travian.Tips = (function() {
    var c = function(d) {
        var e = {
            title: "",
            text: ""
        };
        if (d == undefined) {
            return false
        }
        var f = d.split("||");
        if (f.length == 1) {
            e.text = f[0]
        } else {
            if (f.length == 2) {
                e.title = f[0];
                e.text = f[1]
            } else {
                return false
            }
        }
        return e
    };
    var b = function(d) {
        d.each(function(e) {
            if (e.title != "") {
                var f = c(e.title);
                if (f === false) {
                    return
                }
                f.unescaped = true;
                e.setTip(f).removeAttribute("title")
            }
        })
    };
    var a = function(h) {
        var f = window.getSize();
        var e = window.getScroll();
        var g = {
            x: h.element.offsetWidth,
            y: h.element.offsetHeight
        };
        var d = Object.clone(h.mousePosition);
        d.x = h.mousePosition.x + h.options.offset.x;
        d.y = h.mousePosition.y + h.options.offset.y;
        if ((d.x + g.x - e.x) > f.x - h.options.windowPadding.x) {
            d.x = h.mousePosition.x - h.options.offset.x - g.x
        }
        if ((d.y + g.y - e.y) > f.y - h.options.windowPadding.y) {
            d.y = h.mousePosition.y - h.options.offset.y - g.y
        }
        if (d.x < e.x + h.options.windowPadding.x) {
            d.x = e.x + h.options.windowPadding.x
        }
        if (d.y < e.y + h.options.windowPadding.y) {
            d.y = e.y + h.options.windowPadding.y
        }
        h.element.setPosition(d)
    };
    window.addEvent("domready", function() {
        Travian.Tip = new Travian.Tips();
        b($$('[title!=""]'))
    });
    Element.inject = Element.inject.wrap(function(h, e, g, f) {
        var d = h(e, g, f);
        if (typeof Travian.Tip !== "undefined" && typeof this.select === "function") {
            b(this.select('[title!=""]'))
        }
        return d
    });
    Element.prototype.inject = Element.prototype.inject.wrap(function(h, e, g, f) {
        var d = h(e, g, f);
        if (typeof Travian.Tip !== "undefined" && typeof this.select === "function") {
            b(this.select('[title!=""]'))
        }
        return d
    });
    Element.grab = Element.grab.wrap(function(g, f, e, h) {
        var d = g(f, e, h);
        if (typeof Travian.Tip !== "undefined" && typeof this.select === "function") {
            b(this.select('[title!=""]'))
        }
        return d
    });
    Element.prototype.grab = Element.prototype.grab.wrap(function(g, f, e, h) {
        var d = g(f, e, h);
        if (typeof Travian.Tip !== "undefined" && typeof this.select === "function") {
            b(this.select('[title!=""]'))
        }
        return d
    });
    Element.insert = Element.insert.wrap(function(h, e, g, f) {
        var d = h(e, g, f);
        if (typeof Travian.Tip !== "undefined" && typeof this.select === "function") {
            b(this.select('[title!=""]'))
        }
        return d
    });
    Element.prototype.insert = Element.prototype.insert.wrap(function(e, g, f) {
        var d = e(g, f);
        if (typeof Travian.Tip !== "undefined" && typeof this.select === "function") {
            b(this.select('[title!=""]'))
        }
        return d
    });
    Element.set = Element.set.wrap(function(e, g, f) {
        if (typeof g == "string" && g == "title") {
            this.setTitle(f);
            return this
        }
        var d = e(g, f);
        if (typeof g == "string" && g == "html") {
            b(this.select('[title!=""]'))
        }
        return d
    });
    [Element.Prototype, Element.prototype].each(function(d) {
        if (!d) {
            return
        }
        d.set = d.set.wrap(function(f, h, g) {
            if (typeof h == "string" && h == "title") {
                this.setTitle(g);
                return this
            }
            var e = f(h, g);
            if (typeof h == "string" && h == "html") {
                b(this.select('[title!=""]'))
            }
            return e
        })
    });
    Element.implement({
        setTip: function(e) {
            if (typeof e == "string") {
                var d = e;
                e = c(d);
                if (e === false) {
                    e = d
                }
            }
            Travian.Tip.set(this, e);
            return this
        },
        setTipUnescaped: function(e) {
            if (typeof e == "string") {
                var d = e;
                e = c(d);
                if (e === false) {
                    e = d
                }
            }
            e.unescaped = true;
            Travian.Tip.set(this, e);
            return this
        },
        setTitle: function(d) {
            return this.setTip(d)
        }
    });
    return new Class({
        Implements: [Options],
        displayState: "hide",
        element: null,
        elementCurrent: null,
        elementTitle: null,
        elementText: null,
        lastText: "",
        lastTitle: "",
        mousePosition: {
            x: 0,
            y: 0
        },
        options: {
            html: '<div class="tip"><div class="tip-container"><div class="tl"></div><div class="tr"></div><div class="tc"></div><div class="ml"></div><div class="mr"></div><div class="mc"></div><div class="bl"></div><div class="br"></div><div class="bc"></div><div class="tip-contents"><div class="title {title}"></div><div class="text {text}"></div></div></div></div>',
            hideDelay: 250,
            maxWidthInPercent: 0.33,
            minWidthInPixels: 200,
            offset: {
                x: 16,
                y: 16
            },
            showDelay: 100,
            windowPadding: {
                x: 10,
                y: 10
            },
            zIndex: 10000
        },
        timer: null,
        hide: function() {
            if (this.displayState != "hide") {
                this.displayState = "hide";
                clearTimeout(this.timer);
                this.element.get("tween").cancel();
                this.timer = this.element.fade.delay(this.options.hideDelay, this.element, "out")
            }
            return this
        },
        initialize: function(d) {
            this.setOptions(d);
            this.render()
        },
        render: function() {
            var d = this;
            this.element = (new Element("div", {
                styles: {
                    position: "absolute",
                    top: 0,
                    left: 0,
                    opacity: 0,
                    zIndex: this.options.zIndex
                }
            })).inject(document.body, "bottom").set("html", this.options.html.substitute({
                title: "elementTitle",
                text: "elementText"
            }));
            this.elementTitle = this.element.down(".elementTitle");
            this.elementText = this.element.down(".elementText");
            this.elementContainer = this.element.down(".tip-container");
            this.elementContents = this.element.down(".tip-contents");
            $(document.body).addEvents({
                mousemove: function(f) {
                    d.mousePosition.x = f.page.x;
                    d.mousePosition.y = f.page.y;
                    if (d.displayState != "show") {
                        return
                    }
                    a(d)
                }
            });
            return this
        },
        set: function(d, e) {
            var f = this;
            d = $(d);
            d._extendedTipContent = e;
            if (!d._extendedTip) {
                d._extendedTip = true;
                d.addEvents({
                    mouseover: function(g) {
                        f.elementCurrent = d;
                        f.show(d._extendedTipContent)
                    },
                    mouseout: function(g) {
                        f.elementCurrent = null;
                        f.hide()
                    }
                })
            }
            d.setTitle = function(g) {
                d._extendedTipContent = g;
                if (f.elementCurrent == d) {
                    f.show(d._extendedTipContent)
                }
            };
            return this
        },
        show: function(d) {
            if (typeof d == "string") {
                d = {
                    title: "",
                    text: d,
                    unescaped: false
                }
            }
            if (!d.text && !d.title) {
                this.hide();
                return this
            }
            this.updateContent(d);
            if (this.displayState != "show") {
                this.displayState = "show";
                clearTimeout(this.timer);
                this.element.get("tween").cancel();
                this.timer = this.element.fade.delay(this.options.showDelay, this.element, "in")
            }
            return this
        },
        updateContent: function(g) {
            var f = Object.clone(g);
            var e = null;
            if (typeof f.title == "undefined" || !f.title) {
                f.title = ""
            }
            if (typeof f.text == "undefined" || !f.text) {
                f.text = ""
            }
            f.title = f.title.translate();
            f.text = f.text.translate();
            if (this.lastText != f.text || this.lastTitle != f.title) {
                if (typeof f.unescaped == "undefined" || f.unescaped !== true) {
                    f.title = f.title.unescapeHtml();
                    f.text = f.text.unescapeHtml()
                }
                this.elementTitle.set("html", f.title);
                if (f.title) {
                    this.elementTitle.show()
                } else {
                    this.elementTitle.hide()
                }
                this.elementText.set("html", f.text);
                if (f.text) {
                    this.elementText.show()
                } else {
                    this.elementText.hide()
                }
                this.elementContents.setStyles({
                    wordBreak: "normal",
                    wordWrap: "normal",
                    whiteSpace: "nowrap",
                    width: "auto"
                });
                var d = Math.max(Math.floor($(document.body).getSize().x * this.options.maxWidthInPercent), this.options.minWidthInPixels);
                if (this.elementContents.getSize().x > d) {
                    e = d
                } else {
                    e = (this.elementContents.getSize().x > 0) ? this.elementContents.getSize().x : this.options.minWidthInPixels
                }
                e++;
                this.elementContents.setStyles({
                    whiteSpace: "normal",
                    width: e
                });
                if (this.elementText.getSize().x > e) {
                    this.elementContents.setStyles({
                        wordWrap: "break-word",
                        wordBreak: "break-all"
                    })
                }
                a(this);
                this.lastText = f.text;
                this.lastTitle = f.title
            }
            return this
        },
        refresh: function() {
            b($$('[title!=""]'))
        }
    })
})();
Travian.Translation.add({
    "allgemein.ok": "ok",
    "allgemein.cancel": "cancel"
});
Travian.Dialog = new Class({
    Implements: [Options, Events],
    buttonTemplates: {
        button: ""
    },
    DIALOG_TYPE_MODAL: "modal",
    DIALOG_TYPE_NONMODAL: "nonmodal",
    options: {
        cssClass: "white",
        buttonOk: true,
        keepOpen: false,
        buttonTextOk: null,
        buttonCloseOnClickOk: false,
        buttonCancel: true,
        buttonTextCancel: null,
        elementFocus: "dialogButtonOk",
        maxWidthInPercent: 0.75,
        topHeaderOffset: 0,
        resizeDialogIfOverflow: true,
        relativeTo: null,
        scroll: true,
        title: null,
        useEscKey: true,
        submitMethod: null,
        submitUrl: null,
        overlayCancel: true,
        draggable: false,
        enableBackground: true,
        saveOnUnload: false,
        dragPosition: null,
        darkOverlay: false,
        savePositionForSession: {
            preferenceKey: null
        },
        type: null,
        enableBringToFront: true,
        stickToUrlOnRestore: false,
        dialogOrigin: null,
        infoIcon: null,
        buttonTextInfo: null,
        preventFormSubmit: false,
        destroyElement: true,
        fx: {
            type: "tween",
            open: 1,
            close: 0,
            options: {
                duration: 400
            }
        }
    },
    toggleFormState: function(a) {
        this.buttonOk.toggleClass("disabled", a).disabled = a;
        if (Browser.name == "ie" && (this.options.submitMethod || this.options.submitUrl)) {
            this.form.disabled = a
        }
        return this
    },
    disableForm: function() {
        return this.toggleFormState(true)
    },
    enableForm: function() {
        return this.toggleFormState(false)
    },
    initialize: function(a) {
        if (typeof this.options.savePositionForSession.position === "undefined") {
            this.options.savePositionForSession.position = null
        }
        this.options.fx.options.property = "opacity";
        if (typeof Travian.Templates.ButtonTemplate != "undefined") {
            this.buttonTemplates.button = Travian.Templates.ButtonTemplate
        }
        this.setOptions(a);
        if (this.options.type == this.DIALOG_TYPE_NONMODAL) {
            this.options.enableBringToFront = true;
            this.options.enableBackground = false;
            this.options.draggable = true
        }
        if (this.options.type == this.DIALOG_TYPE_MODAL) {
            this.options.enableBringToFront = false;
            this.options.enableBackground = true;
            this.options.draggable = false
        }
        if (!this.options.dialogOrigin) {
            this.options.dialogOrigin = location.pathname
        }
        this.options.relativeTo = this.options.relativeTo || document.body;
        this.options.relativeTo = $(this.options.relativeTo);
        if (this.options.buttonTextOk == null) {
            this.options.buttonTextOk = Travian.Translation.get("allgemein.ok")
        }
        if (this.options.buttonTextCancel == null) {
            this.options.buttonTextCancel = Travian.Translation.get("allgemein.cancel")
        }
        this.render();
        if (typeof Travian.WindowManager != "undefined") {
            Travian.WindowManager.register(this)
        }
    },
    correctDialogPosition: function(b) {
        var f = Travian.WindowManager.getWindowDimensions(),
            d = this.wrapper.clientWidth,
            c = 200,
            a = b.x,
            e = b.y;
        if (a < 0) {
            a = 0
        } else {
            if (a + d < c) {
                a = c - d
            } else {
                if (a + c > f.width) {
                    a = f.width - c
                }
            }
        }
        if (e < 0) {
            e = 0
        } else {
            if (e + c > f.height) {
                e = f.height - c
            }
        }
        return {
            x: a,
            y: e
        }
    },
    render: function() {
        var e = this;
        var f = new Element("div", {
            html: this.buttonTemplates.button
        });
        var c = f.getFirst();
        if (this.options.savePositionForSession.preferenceKey !== null) {
            var d = Travian.Game.Preferences.get(this.options.savePositionForSession.preferenceKey);
            if (d !== null) {
                d = JSON.decode(d);
                this.options.savePositionForSession.position = d.position
            }
        }
        if (typeof c == "undefined" || !c) {
            throw ("Button for Dialog must not be empty.")
        }
        c.addClass("green");
        c.addClass("ok");
        c.addClass("dialogButtonOk");
        c.setAttribute("type", "submit");
        var a = f.getElement("div[class=button-content]");
        a.insert(new Element("div").addClass("text"));
        var b = {
            position: "absolute"
        };
        b.opacity = 0;
        this.wrapper = new Element("div", {
            styles: b
        }).inject(document.body).insert({
            top: '<div class="dialog ' + this.options.cssClass + '"><div class="dialog-container"><div class="dialog-background-tl"></div><div class="dialog-background-tr"></div><div class="dialog-background-tc"></div><div class="dialog-background-ml"></div><div class="dialog-background-mr"></div><div class="dialog-background-mc"></div><div class="dialog-background-bl"></div><div class="dialog-background-br"></div><div class="dialog-background-bc"></div><div class="dialog-contents"><form action="?" method="get" accept-charset="UTF-8"><div class="dialog-dragbar"><div class="dragbar-inner-left"></div><div class="dragbar-inner-mid"></div><div class="dragbar-inner-right"></div></div><div class="iconButton small info"></div><div id="dialogCancelButton" class="iconButton small cancel"></div><div class="title"></div><div class="content" id="dialogContent"></div><div class="buttons">' + f.get("html") + "</div></form></div></div></div>"
        });
        window.addNsEvent("resize.Dialog", function() {
            if (e.wrapper.isVisible()) {
                e.updatePosition(200, true)
            }
        });
        this.content = this.wrapper.down(".content");
        this.title = this.wrapper.down(".title");
        this.setTitle(this.options.title);
        this.elementContainer = this.wrapper.down(".dialog-container");
        this.elementContents = this.wrapper.down(".dialog-contents");
        this.infoButton = this.wrapper.down(".info");
        this.dialogDragbar = this.wrapper.down(".dialog-dragbar");
        if (this.options.infoIcon) {
            this.setInfoIcon(this.options.infoIcon)
        }
        if (e.options.draggable) {
            this.wrapper.addClass("dragWrapper");
            new Drag.Move(this.wrapper, {
                droppables: this.title,
                handle: this.dialogDragbar,
                onDrop: function(g) {
                    e.options.dragPosition = e.correctDialogPosition(g.getPosition());
                    if (e.options.savePositionForSession.preferenceKey !== null) {
                        e.options.savePositionForSession.position = e.correctDialogPosition(g.getPosition())
                    }
                },
                onDrag: function(g) {
                    g.setPosition(e.correctDialogPosition(g.getPosition()))
                }
            });
            this.title.addClass("drag")
        }
        if (this.options.enableBringToFront) {
            this.wrapper.addEvent("mousedown", function(g) {
                e.bringToFront()
            })
        }
        this.form = this.wrapper.down("form").addEvent("submit", function(g) {
            if (e.form.disabled || e.options.preventFormSubmit) {
                g.stop();
                return
            }
            e.disableForm();
            e.fireEvent("okay", [e, e.content]);
            if (e.options.keepOpen == false) {
                e.close()
            }
            if (!e.options.submitMethod) {
                g.stop()
            }
        });
        this.form.disabled = false;
        if (this.options.submitMethod) {
            this.form.setAttribute("method", this.options.submitMethod);
            if (this.options.submitUrl) {
                this.form.setAttribute("action", this.options.submitUrl)
            }
        }
        this.buttonOk = this.wrapper.down("button.ok");
        if (this.options.buttonOk == false) {
            this.buttonOk.hide().up(".buttons").hide()
        }
        this.buttonOkText = this.wrapper.down("button.ok .text");
        if (this.buttonOkText) {
            this.buttonOkText.set("html", this.options.buttonTextOk)
        } else {
            this.buttonOk.setTitle(this.options.buttonTextOk)
        }
        if (this.options.buttonCloseOnClickOk) {
            this.wrapper.down("button.ok").addEvent("click", function(g) {
                e.fireEvent("cancel", [e, e.content]);
                e.close()
            })
        }
        this.buttonCancel = this.wrapper.down(".cancel").addEvent("click", function(g) {
            e.fireEvent("cancel", [e, e.content]);
            e.close()
        });
        if (this.options.buttonCancel == false) {
            this.buttonCancel.hide()
        }
        this.buttonCancelText = this.wrapper.down(".cancel .text");
        if (this.buttonCancelText) {
            this.buttonCancelText.set("html", this.options.buttonTextCancel)
        } else {
            this.buttonCancel.setTitle(this.options.buttonTextCancel)
        }
        this.fireEvent("render", [this, this.content]);
        if (!this.fx) {
            this.fx = this.options.fx.type == "morph" ? new Fx.Morph(this.wrapper, this.options.fx.options) : new Fx.Tween(this.wrapper, this.options.fx.options)
        }
        this.fx.addEvent("complete", function() {
            if (e.open && $(e.options.elementFocus)) {
                try {
                    $(e.options.elementFocus).focus()
                } catch (g) {}
            }
            e.fireEvent(e.open ? "show" : "hide", [e, e.content]);
            if (!e.open) {
                e.dispose()
            }
        });
        if (e.options.enableBackground) {
            this.overlay = new Overlay(document.body, {
                onClick: function() {
                    if (e.options.overlayCancel) {
                        e.fireEvent("cancel", [e, e.content]);
                        e.close()
                    }
                },
                opacity: (e.options.darkOverlay) ? 0.8 : 0.3,
                duration: this.options.fx.options.duration
            })
        }
        this.bringToFront()
    },
    updateInfoButton: function(a) {
        this.setOptions(a);
        if (this.options.infoIcon) {
            this.setInfoIcon(this.options.infoIcon)
        }
        return this
    },
    displayButtonOk: function(a) {
        if (typeof a === "undefined" || a == null || a == true) {
            this.buttonOk.show().up(".buttons").show()
        } else {
            this.buttonOk.hide()
        }
    },
    setContent: function(d, b) {
        var c = null;
        var a = null;
        this.content.empty();
        this.content.insert({
            bottom: d
        });
        c = $(document.body).getSize().x;
        a = this.elementContents.getSize().x;
        if (this.options.resizeDialogIfOverflow && Math.floor(c * this.options.maxWidthInPercent) < a) {
            this.elementContainer.setStyles({
                width: Math.floor(c * this.options.maxWidthInPercent)
            })
        }
        if (b) {
            this.options.elementFocus = b
        }
        if ($(this.options.elementFocus)) {
            (function() {
                try {
                    $(this.options.elementFocus).focus()
                } catch (f) {}
            }).delay(50)
        }
        this.updatePosition();
        window.fireEvent("domAltered", this.wrapper);
        return this
    },
    setTitle: function(a) {
        this.options.title = a;
        this.title.set("html", this.options.title);
        if (!this.options.title) {
            this.title.hide()
        }
        return this
    },
    calculatePosition: function() {
        var b = {
            x: 0,
            y: 0
        };
        var d = $(document.body).getSize();
        if (this.wrapper.getStyle("position") != "fixed" && document.body == this.options.relativeTo) {
            b = $(document.body).getScroll()
        }
        var c = this.wrapper.getDimensions({
            computeSize: true
        });
        var e = $(this.options.relativeTo).getSize();
        var f = $(this.options.relativeTo).getPosition();
        if (typeof window.innerWidth !== typeof undefined && f.x == 0) {
            e.x = window.innerWidth
        }
        if (typeof window.innerHeight !== typeof undefined && f.y == 0) {
            e.y = window.innerHeight
        }
        if (navigator.userAgent.match(/Windows Phone/i)) {
            f.x = 0;
            f.y = 0
        } else {
            f.x = this.checkValue(f.x);
            f.y = this.checkValue(f.y)
        }
        var a = {
            left: b.x + f.x + e.x / 2 - c.width / 2,
            top: b.y + f.y + e.y / 2 - c.height / 2
        };
        if ((c.height + this.options.topHeaderOffset) > e.y) {
            a.top = b.y + f.y + 40;
            if (this.wrapper.getStyles("position").position == "fixed") {
                this.wrapper.setStyles({
                    position: "absolute"
                })
            }
        }
        a.left = this.checkValue(a.left, 5);
        a.top = this.checkValue(a.top, 40);
        if (Travian.getDirection() == "rtl" && (a.left + c.width) > d.x) {
            a.left = d.x - c.width - 5
        }
        return a
    },
    checkValue: function(b, a) {
        return (b < 0) ? (a || 0) : b
    },
    updatePosition: function(e, d) {
        var b = this.elementContents.getWidth();
        this.dialogDragbar.setStyles({
            width: b + 20
        });
        var c = this.dialogDragbar.down(".dragbar-inner-mid");
        if (c) {
            c.setStyles({
                width: b
            })
        }
        if (this.options.savePositionForSession.preferenceKey !== null && this.options.savePositionForSession.position !== null && (typeof d == "undefined" || !d)) {
            this.setPosition(this.options.savePositionForSession.position)
        } else {
            if (this.options.dragPosition && typeof this.options.dragPosition.x != "undefined" && typeof this.options.dragPosition.y != "undefined") {
                this.setPosition(this.options.dragPosition)
            } else {
                var a = this.calculatePosition();
                this.setPosition({
                    x: a.left,
                    y: a.top
                }, e)
            }
        }
    },
    show: function() {
        var b = this;
        this.open = true;
        this.fireEvent("open", [this, this.content]);
        this.updatePosition();
        this.fx.start(this.options.fx.open);
        if (this.overlay) {
            this.overlay.open()
        }
        if (b.buttonOk && (b.options.buttonTextOk == Travian.Translation.get("allgemein.ok"))) {
            if (!Travian.isMobile()) {
                try {
                    $(b.buttonOk).focus()
                } catch (a) {}
            }
        }
        if (this.options.useEscKey) {
            document.id(document.body).addEvent("keydown", function(c) {
                if (c.key == "esc") {
                    b.close()
                }
            })
        }
        return this
    },
    hide: function() {
        this.wrapper.hide();
        this.overlay.overlay.hide()
    },
    unhide: function() {
        this.wrapper.show();
        this.overlay.overlay.show()
    },
    close: function() {
        this.open = false;
        if (typeof Travian.WindowManager != "undefined") {
            Travian.WindowManager.unregister(this)
        }
        this.fireEvent("close", [this, this.content]);
        this.fx.start(this.options.fx.close);
        if (this.overlay) {
            this.overlay.close();
            this.overlay.overlay.hide();
            this.dispose()
        }
        if (this.options.savePositionForSession.preferenceKey !== null) {
            Travian.Game.Preferences.set(this.options.savePositionForSession.preferenceKey, JSON.encode(this.options.savePositionForSession), false)
        }
        Travian.Tip.hide();
        window.removeNsEvent("resize.Dialog");
        return this
    },
    dispose: function() {
        if (typeof Travian.WindowManager != "undefined") {
            Travian.WindowManager.unregister(this)
        }
        if (this.options.destroyElement == true) {
            this.wrapper.destroy()
        }
        if (this.overlay) {
            this.overlay.overlay.destroy()
        }
    },
    toElement: function() {
        return this.wrapper
    },
    setPosition: function(a, b) {
        if (typeof b !== "undefined" && b !== null) {
            this.wrapper.set("morph", {
                duration: b,
                transition: Fx.Transitions.Sine.easeOut
            });
            this.wrapper.morph({
                left: a.x,
                top: a.y
            })
        } else {
            this.wrapper.setStyles({
                left: a.x,
                top: a.y
            })
        }
        return a
    },
    setPositionExtended: function(a) {
        this.wrapper.setStyles({
            left: a.x,
            top: a.y,
            marginLeft: a.marginLeft + "px",
            marginTop: a.marginTop + "px"
        });
        return a
    },
    isAjax: function() {
        return false
    },
    reload: function() {},
    bringToFront: function() {
        if (typeof Travian.WindowManager == "undefined") {
            return false
        }
        if (Travian.WindowManager.getCurrentZIndex() == this.wrapper.getStyle("zIndex")) {
            return false
        }
        var a = Travian.WindowManager.getZIndex();
        this.wrapper.setStyles({
            zIndex: a
        });
        if (this.options.enableBackground) {
            this.overlay.overlay.setStyles({
                zIndex: (a - 5)
            })
        }
    },
    getOrigin: function() {
        return this.dialogOrigin
    },
    setInfoIcon: function(a) {
        if (a) {
            this.options.infoIcon = a;
            var b = this;
            this.infoButton.removeEvents("click");
            this.infoButton.show();
            this.infoButton.addEvent("click", function() {
                if (typeof b.options.infoIcon == "string") {
                    return window.open(b.options.infoIcon, "_blank")
                }
                if (typeof b.options.infoIcon == "function") {
                    return b.options.infoIcon()
                }
            });
            if (this.options.buttonTextInfo) {
                this.infoButton.setTitle(this.options.buttonTextInfo)
            }
        } else {
            this.infoButton.hide()
        }
        return this
    },
    updateCssClass: function(a) {
        if (a) {
            var e = this.options.cssClass.split(" ");
            var d = this.wrapper.down(".dialog");
            if (d) {
                for (var c = 0; c < e.length; c++) {
                    d.removeClass(e[c])
                }
                this.options.cssClass = a;
                var f = (a).split(" ");
                for (var b = 0; b < f.length; b++) {
                    if (f[b] != "") {
                        d.addClass(f[b])
                    }
                }
            }
        }
        return this
    },
    makeInputAmountable: function(c, a, f) {
        var e = a || Number.MAX_VALUE;
        var d = function(m, h, o) {
            var n = h || Number.MAX_VALUE;
            var k = parseInt(m.get("value")) || 0;
            var g = Math.max(0, Math.min(k, n));
            m.set("value", g);
            if (o) {
                o(g)
            }
        };
        var b = function(g, k, h) {
            if (g == 8 || g == 46 || (g == 65 && (k === true || h === true)) || (g == 67 && (k === true || h === true)) || (g == 88 && (k === true || h === true)) || (g == 86 && (k === true || h === true)) || (g >= 35 && g <= 39)) {
                return true
            }
            return (((g >= 48 && g <= 57) || (g >= 96 && g <= 105)))
        };
        c.addEvents({
            keydown: function(g) {
                if (!b(g.event.keyCode, g.event.ctrlKey, g.event.metaKey)) {
                    g.preventDefault()
                }
            },
            keyup: function(g) {
                d(this, e, f)
            },
            paste: function(g) {
                d(this, e, f)
            },
            change: function(g) {
                d(this, e, f)
            },
            blur: function(g) {
                d(this, e, f)
            },
            input: function(g) {
                d(this, e, f)
            }
        })
    }
});
Element.implement({
    dialog: function(a) {
        this.dialog = new Travian.Dialog(a).setContent(this.get("html")).show();
        return this
    }
});
String.implement({
    dialog: function(a) {
        this.dialog = new Travian.Dialog(a).setContent(this).show();
        return this
    }
});
Travian.WindowManager = new(new Class({
    Implements: [Events],
    windows: null,
    currentZIndex: 6000,
    zIndexMaxValue: 9900,
    initialize: function() {
        this.windows = []
    },
    register: function(a) {
        if (typeof a.options.context == "undefined") {
            a.options.context = "noContext"
        }
        a.identifier = this.__createIdentifier();
        this.windows.push(a);
        this.fireEvent("register", [this, a]);
        return a
    },
    unregister: function(a) {
        delete this.windows[a.identifier];
        this.fireEvent("unregister", [this, a])
    },
    closeWindow: function(a) {
        a.close()
    },
    hideWindow: function(a) {
        a.hide()
    },
    showWindow: function(a) {
        a.unhide()
    },
    hideByContext: function(a) {
        var b = this;
        this.getWindows().each(function(c) {
            if (!b.checkContext(a, c)) {
                return false
            }
            b.hideWindow(c)
        })
    },
    showByContext: function(a) {
        var b = this;
        this.getWindows().each(function(c) {
            if (!b.checkContext(a, c)) {
                return false
            }
            b.showWindow(c)
        })
    },
    closeByContext: function(a) {
        var b = this;
        this.getWindows().each(function(c) {
            if (!b.checkContext(a, c)) {
                return false
            }
            b.closeWindow(c)
        })
    },
    getWindowsByContext: function(a) {
        var b = [];
        var c = this;
        this.getWindows().each(function(d) {
            if (!c.checkContext(a, d)) {
                return false
            }
            b.push(d)
        });
        return b
    },
    checkContext: function(a, b) {
        if (typeof b.options.context != "undefined") {
            if (b.options.context == a) {
                return true
            }
        }
        return false
    },
    getWindows: function() {
        return this.windows
    },
    reloadWindow: function(a) {
        a.reload()
    },
    reloadWindowsByContext: function(a) {
        var b = this;
        this.getWindows().each(function(c) {
            if (!b.checkContext(a, c)) {
                return false
            }
            b.reloadWindow(c)
        })
    },
    __createIdentifier: function() {
        return this.windows.length
    },
    cleanupZIndex: function() {
        var a = 0;
        this.getWindows().each(function(c) {
            var d = $(c).getStyle("zIndex");
            var b = (d - 3000);
            if (b > a) {
                a = b
            }
            $(c).setStyle("zIndex", b)
        });
        this.currentZIndex = a
    },
    getZIndex: function() {
        if (this.currentZIndex >= this.zIndexMaxValue) {
            this.cleanupZIndex()
        }
        this.currentZIndex += 10;
        return this.currentZIndex
    },
    getCurrentZIndex: function() {
        return this.currentZIndex
    },
    checkOpenWindowByContext: function(a) {
        var c = false;
        var b = this;
        this.getWindows().each(function(d) {
            if (b.checkContext(a, d)) {
                c = true
            }
        });
        if (c) {
            return true
        }
        return false
    },
    checkForModalDialogs: function() {
        var a = false;
        var b = this;
        this.getWindows().each(function(c) {
            if (c.options.type == Travian.Dialog.DIALOG_TYPE_MODAL) {
                a = true
            }
        });
        return a
    },
    getWindowDimensions: function() {
        var a = 630,
            b = 460;
        if (document.body && document.body.offsetWidth) {
            a = document.body.offsetWidth;
            b = document.body.offsetHeight
        }
        if (document.compatMode == "CSS1Compat" && document.documentElement && document.documentElement.offsetWidth) {
            a = document.documentElement.offsetWidth;
            b = document.documentElement.offsetHeight
        }
        if (window.innerWidth && window.innerHeight) {
            a = window.innerWidth;
            b = window.innerHeight
        }
        return {
            width: a,
            height: b
        }
    },
    closeAllWindows: function() {
        var a = this;
        this.getWindows().each(function(b) {
            a.closeWindow(b)
        })
    }
}));
Travian.RestoreWindowManager = new(new Class({
    preferenceKey: "WMBlueprints",
    initialize: function() {
        var a = this;
        window.addEvent("domready", function() {
            var b = Travian.Game.Preferences.get(a.preferenceKey);
            if (b === null) {
                return false
            }
            b = JSON.decode(b);
            b.each(function(c) {
                if (c.options.stickToUrlOnRestore && c.options.dialogOrigin != location.pathname) {
                    return false
                }
                if ($("sidebarBoxMenu")) {
                    return false
                }
                $dialog = new Travian.Dialog.Ajax(c.options)
            })
        });
        window.addEvent("beforeunload", function(d) {
            var b = Travian.WindowManager.getWindows();
            var c = [];
            b.each(function(f) {
                if (f.options.saveOnUnload) {
                    if (!f.isAjax()) {
                        throw ("Only Travian.Dialog.Ajax can be saved.")
                    }
                    delete f.options.relativeTo;
                    var e = {
                        options: f.options
                    };
                    c.push(e);
                    if (f.options.savePositionForSession.preferenceKey !== null) {
                        Travian.Game.Preferences.set(f.options.savePositionForSession.preferenceKey, JSON.encode(f.options.savePositionForSession), true)
                    }
                }
            });
            Travian.Game.Preferences.set(a.preferenceKey, JSON.encode(c), true)
        })
    }
}));
Travian.Dialog.Ajax = new Class({
    Extends: Travian.Dialog,
    options: {
        data: {},
        saveOnUnload: false
    },
    initialize: function(a) {
        this.parent(a);
        var c = this;
        if (typeof a.preview !== "undefined" && a.preview.enabled) {
            var b = a.preview;
            this.setContent(document.getElementById(b.contentElement).get("html")).setTitle(b.title).setInfoIcon(b.infoIcon).updateCssClass(b.dialogCSSClass);
            setTimeout(function() {
                c.show();
                b.onShow(c)
            }, 200)
        } else {
            this.request()
        }
    },
    request: function() {
        var a = this;
        Travian.ajax({
            data: this.options.data,
            onSuccess: function(b) {
                if (b.html != "") {
                    a.setContent(b.html).setTitle(b.title).setInfoIcon(b.infoIcon).updateCssClass(b.cssClass);
                    a.show()
                } else {
                    a.close()
                }
            }
        });
        return this
    },
    isAjax: function() {
        return true
    },
    reload: function() {
        this.request()
    }
});
Hash.implement({
    dialog: function(a) {
        new Travian.Dialog.Ajax(Object.merge({}, this.toObject(), a || {}));
        return this
    }
});
Travian.AutoCompleter = new Class({
    Extends: Autocompleter.Request.JSON,
    initialize: function(c, b, a) {
        var d = this;
        this.parent(c, b, Object.merge({
            minLength: 2,
            maxChoices: 10,
            width: "auto",
            postVar: "search",
            postData: {
                cmd: "autoComplete",
                ajaxToken: window.ajaxToken
            },
            emptyChoices: function() {
                var e = new Element("li", {
                    html: "{cropfinder.keine_ergebnisse}".translate()
                });
                e.inject(d.choices);
                d.showChoices()
            }
        }, a || {}))
    }
});
Travian.DoubleClickPreventer = new Class({
    prevent: false,
    timeout: 400,
    timerId: 0,
    check: function() {
        if (this.prevent) {
            return false
        }
        this.prevent = true;
        var a = this;
        this.timerId = setTimeout(function() {
            a.prevent = false
        }, this.timeout);
        return true
    },
    cancelTimer: function() {
        if (this.timerId) {
            clearTimeout(this.timerId);
            this.prevent = false
        }
    }
});
Travian.Form = new Class({
    elements: {},
    onClick: function(a) {
        return this
    },
    addElement: function(a, b) {
        b.setName(a);
        this.elements[a] = b;
        return this
    },
    addInputElementByName: function(a, c) {
        var b = Travian.Form.Element.Input.createElementByName(this, a, c);
        this.addElement(a, b);
        return this
    },
    onElementChanged: function(a) {
        var b = a.isDirty();
        if (b == false) {
            if ($H(this.elements).find(function(c) {
                    return c.isDirty()
                })) {
                b = true
            }
        }
        this.onDirty(b);
        return this
    },
    onDirty: function(a) {
        return this
    }
});
Travian.Form.UnloadHelper = new(new Class({
    formQueryString: "input, textarea, select",
    message: null,
    identifierCount: 0,
    htmlForms: {},
    formStates: {},
    initialize: function() {
        var a = this;
        window.onbeforeunload = function() {
            var b = a.isEnabled();
            if (b) {
                return a.message
            } else {
                return
            }
        }
    },
    isEnabled: function() {
        for (var b in this.formStates) {
            if (this.formStates[b]) {
                return true
            }
        }
        for (var b in this.htmlForms) {
            var c = $(b);
            if (c == null) {
                delete this.htmlForms[b];
                continue
            }
            var a = this.htmlForms[b];
            var d = this.generateFormHash(c);
            if (a !== d) {
                return true
            }
        }
        return false
    },
    enableSecurity: function(a) {
        if (a === null) {
            a = this.getIdentifier()
        }
        this.formStates[a] = true;
        return a
    },
    disableSecurity: function(a) {
        this.formStates[a] = false
    },
    getIdentifier: function() {
        this.identifierCount++;
        return this.identifierCount
    },
    generateFormHash: function(b) {
        var a = "";
        var c = b.getElements(this.formQueryString);
        c.each(function(f) {
            var e = f.get("tag");
            var h = f.get("type");
            switch (true) {
                case e === "input" && h === "radio":
                    a += f.get("checked");
                    break;
                case e === "input" && h === "checkbox":
                    a += f.get("checked");
                    break;
                case e === "input" || e === "textarea":
                    a += f.get("value");
                    break;
                case e === "select":
                    var g = f.getSelected();
                    if (g) {
                        a += g.get("value")
                    }
                    break
            }
        });
        var d = a.toMD5();
        return d
    },
    watchHtmlForm: function(a) {
        var b = this;
        a.addEvent("change:relay(" + this.formQueryString + ")", function(d, c) {
            b.updateSubmitButtons(a)
        });
        this.htmlForms[a.get("id")] = this.generateFormHash(a);
        a.addEvent("submit", function() {
            b.htmlForms[a.get("id")] = b.generateFormHash(a)
        });
        this.updateSubmitButtons(a)
    },
    unwatchHtmlForm: function(a) {
        delete this.htmlForms[a.get("id")]
    },
    updateSubmitButtons: function(b) {
        var c = this;
        var a = (c.htmlForms[b.get("id")] === c.generateFormHash(b));
        b.getElements("input[type=submit], button[type=submit]").each(function(d) {
            if (a) {
                d.addClass("disabled")
            } else {
                d.removeClass("disabled")
            }
            d.disabled = a
        })
    }
}))();
Travian.Form.Element = new Class({
    form: null,
    name: null,
    initialize: function(a) {
        this.form = a
    },
    isDirty: function() {
        return false
    },
    onChange: function() {
        this.form.onElementChanged(this);
        return this
    },
    onClick: function() {
        this.form.onClick(this);
        return this
    },
    setForm: function(a) {
        this.form = a;
        return this
    },
    setName: function(a) {
        this.name = a;
        return this
    },
    getName: function() {
        return this.name
    }
});
Travian.Form.Element.Input = new Class({
    Extends: Travian.Form.Element,
    originalValue: null,
    currentValue: null,
    type: null,
    element: null,
    initialize: function(b, a) {
        this.parent(b);
        this.element = a;
        this.originalValue = this.currentValue = this.getValue();
        this.initEvents()
    },
    getInput: function() {
        return this.element
    },
    initEvents: function() {
        var a = this;
        this.element.addEvent("change", function() {
            a.onChange()
        });
        return this
    },
    onChange: function() {
        this.currentValue = this.getValue();
        this.parent();
        return this
    },
    getValue: function() {
        return this.element.value
    },
    isDirty: function() {
        return this.originalValue != this.currentValue
    }
});
Travian.Form.Element.Input.createElementByName = function(d, a, c) {
    var f = null;
    var b = null;
    var e = null;
    if (c === undefined) {
        c = $(document)
    }
    f = $(c).getElements('[name="' + a + '"]');
    if (f.length == 0) {
        throw new Error('Element with name "' + a + '" not found.')
    }
    b = $(f[0]);
    switch (b.nodeName.toLowerCase()) {
        case "input":
            e = b.get("type");
            if (e == "radio" || e == "checkbox") {
                b = f
            }
            break;
        default:
            e = b.nodeName.toLowerCase();
            break
    }
    e = e.capitalize();
    if (!Travian.Form.Element.Input[e]) {
        throw new Error('Element type "' + e + '" not yet implemented!')
    }
    return new Travian.Form.Element.Input[e](d, b)
};
Travian.Form.Element.Input.Button = new Class({
    Extends: Travian.Form.Element.Input,
    initEvents: function() {
        var a = this;
        this.element.addEvent("click", function() {
            a.onClick()
        });
        return this
    },
    getValue: function() {
        return null
    }
});
Travian.Form.Element.Input.Checkbox = new Class({
    Extends: Travian.Form.Element.Input,
    valueBefore: null,
    initEvents: function() {
        var a = this;
        this.valueBefore = this.getValue();
        this.element.addEvent("click", function() {
            if (a.getValue() != a.valueBefore) {
                a.valueBefore = a.getValue();
                a.onChange()
            }
        });
        return this
    },
    getValue: function() {
        var a = this.element.find(function(b) {
            return b.checked
        });
        if (a) {
            return a.value
        }
        return null
    }
});
Travian.Form.Element.Input.Radio = new Class({
    Extends: Travian.Form.Element.Input,
    valueBefore: null,
    initEvents: function() {
        var a = this;
        this.valueBefore = this.getValue();
        this.element.addEvent("click", function() {
            if (a.getValue() != a.valueBefore) {
                a.valueBefore = a.getValue();
                a.onChange()
            }
        });
        return this
    },
    getValue: function() {
        var a = this.element.find(function(b) {
            return b.checked
        });
        if (a) {
            return a.value
        }
        return null
    }
});
Travian.Form.Element.Input.Text = new Class({
    Extends: Travian.Form.Element.Input
});
Travian.Form.Element.Input.Textarea = new Class({
    Extends: Travian.Form.Element.Input
});
Travian.Formatter = new Class({
    Implements: [Options],
    options: {
        languageKey: "de",
        formatType: "type3",
        decimalSeperator: ",",
        forceDecimal: true
    },
    initialize: function(b) {
        this.setOptions(b);
        if (b == undefined || b.languageKey == undefined) {
            var a = $$("meta[name=content-language]")[0];
            this.options.languageKey = a.content
        }
        if (this.options.languageKey !== undefined) {
            var c = this.getDefinitionByLanguage(this.options.languageKey);
            if (c !== false) {
                this.options.formatType = c.type;
                this.options.decimalSeperator = c.decimalSeperator
            }
        }
        return this
    },
    getFormattedNumber: function(b) {
        if (b == undefined || b == null || b == "") {
            return 0
        }
        if (!isNaN(b)) {
            if (parseInt(b) != b) {
                b = String(parseFloat(b))
            } else {
                b = String(parseFloat(b)) + ".0"
            }
        }
        var d = b.match(/([\d.,\s-]*?)[.]?(\d*)?$/);
        var e = {
            left: d[1],
            right: d[2]
        };
        e.left = e.left.replace(/[\s,.'"]*/g, "");
        var a = false;
        if (e.left < 0) {
            a = true
        }
        e.left = e.left.replace(/[-]*/g, "");
        var c = 0;
        if (this.typeFunctions[this.options.formatType] == undefined) {
            throw "Der Zahlenformattyp" + this.options.formatType + "ist unbekannt!"
        }
        c = this.typeFunctions[this.options.formatType].createNumberFunction(e, this.options);
        if (a == true) {
            c = "-" + c
        }
        return c
    },
    setOptionLanguageKey: function(a) {
        var b = this.getDefinitionByLanguage(a);
        if (b != false) {
            this.options.formatType = b.type;
            this.options.decimalSeperator = b.decimalSeperator;
            return true
        }
        return false
    },
    getAvailableTypes: function() {
        var a = [];
        Object.each(this.typeFunctions, function(c, b) {
            a.push(b)
        });
        return a
    },
    removeNonDigits: function(a) {
        var b = a.match(/\d/g);
        b = parseInt(b.join(""));
        return b
    },
    getDefinitionByLanguage: function(c) {
        var b = this;
        var a = false;
        Object.each(this.languageDefinitions, function(e, d) {
            if (e.languages.contains(c) === true) {
                a = b.languageDefinitions[d]
            }
        });
        return a
    },
    languageDefinitions: {
        1: {
            decimalSeperator: ",",
            type: "type1",
            languages: ["ae", "eg", "fi", "fr", "lv", "ma", "no", "pl", "sa", "se", "sk", "sy", "ua"]
        },
        2: {
            decimalSeperator: ".",
            type: "type2",
            languages: ["au", "cn", "en", "hk", "il", "ir", "jp", "kr", "lt", "my", "ph", "pk", "th", "tw", "uk", "us", "za"]
        },
        3: {
            decimalSeperator: ",",
            type: "type3",
            languages: ["ba", "bg", "br", "cl", "cz", "de", "dk", "ee", "es", "gr", "hr", "hu", "id", "it", "nl", "pt", "ro", "rs", "ru", "si", "tr", "vn"]
        },
        4: {
            decimalSeperator: ".",
            type: "type4",
            languages: ["in"]
        }
    },
    typeFunctions: {
        type1: {
            createNumberFunction: function(e, b) {
                var a = "";
                var d = e.left.split("").reverse().join("");
                for (var c = 0; c <= (d.length - 1); c++) {
                    if (c % 3 == 0 && c != 0) {
                        a += " "
                    }
                    a += d.charAt(c)
                }
                a = a.split("").reverse().join("");
                if (e.right !== undefined && b.forceDecimal == true) {
                    a += "," + e.right
                }
                return a
            }
        },
        type2: {
            createNumberFunction: function(e, b) {
                var a = "";
                var d = e.left.split("").reverse().join("");
                for (var c = 0; c <= (d.length - 1); c++) {
                    if (c % 3 == 0 && c != 0) {
                        a += ","
                    }
                    a += d.charAt(c)
                }
                a = a.split("").reverse().join("");
                if (e.right !== undefined && b.forceDecimal == true) {
                    a += "." + e.right
                }
                return a
            }
        },
        type3: {
            createNumberFunction: function(e, b) {
                var a = "";
                var d = e.left.split("").reverse().join("");
                for (var c = 0; c <= (d.length - 1); c++) {
                    if (c % 3 == 0 && c != 0) {
                        a += "."
                    }
                    a += d.charAt(c)
                }
                a = a.split("").reverse().join("");
                if (e.right !== undefined && b.forceDecimal == true) {
                    a += "," + e.right
                }
                return a
            }
        },
        type4: {
            createNumberFunction: function(g, c) {
                var b = "";
                var f = 3;
                var e = g.left.split("").reverse().join("");
                var a = 0;
                for (var d = 0; d <= (e.length - 1); d++) {
                    if (a % f == 0 && a != 0) {
                        b += ",";
                        f = 2;
                        a = 0
                    }
                    b += e.charAt(d);
                    a++
                }
                b = b.split("").reverse().join("");
                if (g.right !== undefined && c.forceDecimal == true) {
                    b += "." + g.right
                }
                return b
            }
        },
        seperatorless: {
            createNumberFunction: function(c, b) {
                var a = c.left;
                if (c.right !== undefined && b.forceDecimal == false) {
                    a += b.decimalSeperator + c.right
                }
                return a
            }
        },
        toInt: {
            createNumberFunction: function(b, a) {
                return b.left
            }
        },
        toIntRounded: {
            createNumberFunction: function(c, b) {
                if (c.right == undefined) {
                    return c.left
                }
                var a = c.left + "." + c.right;
                return (Number.convert(a)).round()
            }
        }
    }
});
! function() {
    function h6(a) {
        return a && (a.ownerDocument || a.document || a).documentElement
    }

    function hY(a) {
        return a && (a.ownerDocument && a.ownerDocument.defaultView || a.document && a || a.defaultView)
    }

    function iA(b, a) {
        return a > b ? -1 : b > a ? 1 : b >= a ? 0 : 0 / 0
    }

    function h1(a) {
        return null === a ? 0 / 0 : +a
    }

    function hW(a) {
        return !isNaN(a)
    }

    function ip(a) {
        return {
            left: function(d, g, f, b) {
                for (arguments.length < 3 && (f = 0), arguments.length < 4 && (b = d.length); b > f;) {
                    var c = f + b >>> 1;
                    a(d[c], g) < 0 ? f = c + 1 : b = c
                }
                return f
            },
            right: function(d, g, f, b) {
                for (arguments.length < 3 && (f = 0), arguments.length < 4 && (b = d.length); b > f;) {
                    var c = f + b >>> 1;
                    a(d[c], g) > 0 ? b = c : f = c + 1
                }
                return f
            }
        }
    }

    function h5(a) {
        return a.length
    }

    function iH(b) {
        for (var a = 1; b * a % 1;) {
            a *= 10
        }
        return a
    }

    function iD(c, a) {
        for (var b in a) {
            Object.defineProperty(c.prototype, b, {
                value: a[b],
                enumerable: !1
            })
        }
    }

    function ig() {
        this._ = Object.create(null)
    }

    function hZ(a) {
        return (a += "") === dA || a[0] === bh ? bh + a : a
    }

    function ix(a) {
        return (a += "")[0] === bh ? a.slice(1) : a
    }

    function iv(a) {
        return hZ(a) in this._
    }

    function iw(a) {
        return (a = hZ(a)) in this._ && delete this._[a]
    }

    function h4() {
        var b = [];
        for (var a in this._) {
            b.push(ix(a))
        }
        return b
    }

    function hU() {
        var b = 0;
        for (var a in this._) {
            ++b
        }
        return b
    }

    function iC() {
        for (var a in this._) {
            return !1
        }
        return !0
    }

    function h9() {
        this._ = Object.create(null)
    }

    function hR(a) {
        return a
    }

    function i6(c, a, b) {
        return function() {
            var d = b.apply(a, arguments);
            return d === a ? c : d
        }
    }

    function hS(f, b) {
        if (b in f) {
            return b
        }
        b = b.charAt(0).toUpperCase() + b.slice(1);
        for (var d = 0, c = hL.length; c > d; ++d) {
            var a = hL[d] + b;
            if (a in f) {
                return a
            }
        }
    }

    function iG() {}

    function iI() {}

    function hT(d) {
        function a() {
            for (var g, h = c, e = -1, f = h.length; ++e < f;) {
                (g = h[e].on) && g.apply(this, arguments)
            }
            return d
        }
        var c = [],
            b = new ig;
        return a.on = function(g, e) {
            var f, h = b.get(g);
            return arguments.length < 2 ? h && h.on : (h && (h.on = null, c = c.slice(0, f = c.indexOf(h)).concat(c.slice(f + 1)), b.remove(g)), e && c.push(b.set(g, {
                on: e
            })), d)
        }, a
    }

    function iW() {
        bX.event.preventDefault()
    }

    function ih() {
        for (var b, a = bX.event; b = a.sourceEvent;) {
            a = b
        }
        return a
    }

    function jq(d) {
        for (var a = new iI, c = 0, b = arguments.length; ++c < b;) {
            a[arguments[c]] = hT(a)
        }
        return a.of = function(g, f) {
            return function(e) {
                try {
                    var h = e.sourceEvent = bX.event;
                    e.target = d, bX.event = e, a[e.type].apply(g, f)
                } finally {
                    bX.event = h
                }
            }
        }, a
    }

    function jz(a) {
        return kk(a, aG), a
    }

    function i4(a) {
        return "function" == typeof a ? a : function() {
            return g8(a, this)
        }
    }

    function jx(a) {
        return "function" == typeof a ? a : function() {
            return aA(a, this)
        }
    }

    function hP(m, f) {
        function h() {
            this.removeAttribute(m)
        }

        function g() {
            this.removeAttributeNS(m.space, m.local)
        }

        function c() {
            this.setAttribute(m, f)
        }

        function d() {
            this.setAttributeNS(m.space, m.local, f)
        }

        function k() {
            var a = f.apply(this, arguments);
            null == a ? this.removeAttribute(m) : this.setAttribute(m, a)
        }

        function b() {
            var a = f.apply(this, arguments);
            null == a ? this.removeAttributeNS(m.space, m.local) : this.setAttributeNS(m.space, m.local, a)
        }
        return m = bX.ns.qualify(m), null == f ? m.local ? g : h : "function" == typeof f ? m.local ? b : k : m.local ? d : c
    }

    function h2(a) {
        return a.trim().replace(/\s+/g, " ")
    }

    function i7(a) {
        return new RegExp("(?:^|\\s+)" + bX.requote(a) + "(?:\\s+|$)", "g")
    }

    function iU(a) {
        return (a + "").trim().split(/^|\s+/)
    }

    function iX(f, b) {
        function d() {
            for (var g = -1; ++g < a;) {
                f[g](this, b)
            }
        }

        function c() {
            for (var h = -1, g = b.apply(this, arguments); ++h < a;) {
                f[h](this, g)
            }
        }
        f = iU(f).map(js);
        var a = f.length;
        return "function" == typeof b ? c : d
    }

    function js(b) {
        var a = i7(b);
        return function(f, d) {
            if (c = f.classList) {
                return d ? c.add(b) : c.remove(b)
            }
            var c = f.getAttribute("class") || "";
            d ? (a.lastIndex = 0, a.test(c) || f.setAttribute("class", h2(c + " " + b))) : f.setAttribute("class", h2(c.replace(a, " ")))
        }
    }

    function i0(g, c, f) {
        function d() {
            this.style.removeProperty(g)
        }

        function a() {
            this.style.setProperty(g, c, f)
        }

        function b() {
            var e = c.apply(this, arguments);
            null == e ? this.style.removeProperty(g) : this.style.setProperty(g, e, f)
        }
        return null == c ? d : "function" == typeof c ? b : a
    }

    function iT(f, b) {
        function d() {
            delete this[f]
        }

        function c() {
            this[f] = b
        }

        function a() {
            var g = b.apply(this, arguments);
            null == g ? delete this[f] : this[f] = g
        }
        return null == b ? d : "function" == typeof b ? a : c
    }

    function ik(c) {
        function a() {
            var d = this.ownerDocument,
                f = this.namespaceURI;
            return f ? d.createElementNS(f, c) : d.createElement(c)
        }

        function b() {
            return this.ownerDocument.createElementNS(c.space, c.local)
        }
        return "function" == typeof c ? c : (c = bX.ns.qualify(c)).local ? b : a
    }

    function jn() {
        var a = this.parentNode;
        a && a.removeChild(this)
    }

    function jh(a) {
        return {
            __data__: a
        }
    }

    function i1(a) {
        return function() {
            return jv(this, a)
        }
    }

    function jg(a) {
        return arguments.length || (a = iA),
            function(b, c) {
                return b && c ? a(b.__data__, c.__data__) : !b - !c
            }
    }

    function iN(m, f) {
        for (var h = 0, g = m.length; g > h; h++) {
            for (var c, d = m[h], k = 0, b = d.length; b > k; k++) {
                (c = d[k]) && f(c, k, h)
            }
        }
        return m
    }

    function iM(a) {
        return kk(a, e7), a
    }

    function iR(c) {
        var a, b;
        return function(g, e, f) {
            var h, d = c[f].update,
                k = d.length;
            for (f != b && (b = f, a = 0), e >= a && (a = e + 1); !(h = d[a]) && ++a < k;) {}
            return h
        }
    }

    function iO(f, s, k) {
        function b() {
            var a = this[d];
            a && (this.removeEventListener(f, a, a.$), delete this[d])
        }

        function q() {
            var a = m(s, cR(arguments));
            b.call(this), this.addEventListener(f, this[d] = a, a.$ = k), a._ = s
        }

        function h() {
            var c, o = new RegExp("^__on([^.]+)" + bX.requote(f) + "$");
            for (var n in this) {
                if (c = n.match(o)) {
                    var a = this[n];
                    this.removeEventListener(c[1], a, a.$), delete this[n]
                }
            }
        }
        var d = "__on" + f,
            p = f.indexOf("."),
            m = j1;
        p > 0 && (f = f.slice(0, p));
        var g = fs.get(f);
        return g && (f = g, m = jy), p ? s ? q : b : s ? iG : h
    }

    function j1(b, a) {
        return function(d) {
            var c = bX.event;
            bX.event = d, a[0] = this.__data__;
            try {
                b.apply(this, a)
            } finally {
                bX.event = c
            }
        }
    }

    function jy(c, a) {
        var b = j1(c, a);
        return function(f) {
            var d = this,
                e = f.relatedTarget;
            e && (e === d || 8 & e.compareDocumentPosition(d)) || b.call(d, f)
        }
    }

    function iP(g) {
        var f = ".dragsuppress-" + ++cG,
            c = "click" + f,
            d = bX.select(hY(g)).on("touchmove" + f, iW).on("dragstart" + f, iW).on("selectstart" + f, iW);
        if (null == a5 && (a5 = "onselectstart" in g ? !1 : hS(g.style, "userSelect")), a5) {
            var h = h6(g).style,
                b = h[a5];
            h[a5] = "none"
        }
        return function(e) {
            if (d.on(f, null), a5 && (h[a5] = b), e) {
                var a = function() {
                    d.on(c, null)
                };
                d.on(c, function() {
                    iW(), a()
                }, !0), setTimeout(a, 0)
            }
        }
    }

    function jd(k, g) {
        g.changedTouches && (g = g.changedTouches[0]);
        var f = k.ownerSVGElement || k;
        if (f.createSVGPoint) {
            var c = f.createSVGPoint();
            if (0 > gQ) {
                var d = hY(k);
                if (d.scrollX || d.scrollY) {
                    f = bX.select("body").append("svg").style({
                        position: "absolute",
                        top: 0,
                        left: 0,
                        margin: 0,
                        padding: 0,
                        border: "none"
                    }, "important");
                    var h = f[0][0].getScreenCTM();
                    gQ = !(h.f || h.e), f.remove()
                }
            }
            return gQ ? (c.x = g.pageX, c.y = g.pageY) : (c.x = g.clientX, c.y = g.clientY), c = c.matrixTransform(k.getScreenCTM().inverse()), [c.x, c.y]
        }
        var b = k.getBoundingClientRect();
        return [g.clientX - b.left - k.clientLeft, g.clientY - b.top - k.clientTop]
    }

    function jj() {
        return bX.event.changedTouches[0].identifier
    }

    function jb(a) {
        return a > 0 ? 1 : 0 > a ? -1 : 0
    }

    function iZ(c, a, b) {
        return (a[0] - c[0]) * (b[1] - c[1]) - (a[1] - c[1]) * (b[0] - c[0])
    }

    function d2(a) {
        return a > 1 ? 0 : -1 > a ? c9 : Math.acos(a)
    }

    function bL(a) {
        return a > 1 ? fy : -1 > a ? -fy : Math.asin(a)
    }

    function hb(a) {
        return ((a = Math.exp(a)) - 1 / a) / 2
    }

    function cD(a) {
        return ((a = Math.exp(a)) + 1 / a) / 2
    }

    function bq(a) {
        return ((a = Math.exp(2 * a)) - 1) / (a + 1)
    }

    function fR(a) {
        return (a = Math.sin(a / 2)) * a
    }

    function dG() {}

    function jJ(c, a, b) {
        return this instanceof jJ ? (this.h = +c, this.s = +a, void(this.l = +b)) : arguments.length < 2 ? c instanceof jJ ? new jJ(c.h, c.s, c.l) : iS("" + c, ak, jJ) : new jJ(c, a, b)
    }

    function hX(h, c, f) {
        function d(e) {
            return e > 360 ? e -= 360 : 0 > e && (e += 360), 60 > e ? b + (g - b) * e / 60 : 180 > e ? g : 240 > e ? b + (g - b) * (240 - e) / 60 : b
        }

        function a(e) {
            return Math.round(255 * d(e))
        }
        var b, g;
        return h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h, c = isNaN(c) ? 0 : 0 > c ? 0 : c > 1 ? 1 : c, f = 0 > f ? 0 : f > 1 ? 1 : f, g = 0.5 >= f ? f * (1 + c) : f + c - f * c, b = 2 * f - g, new ez(a(h + 120), a(h), a(h - 120))
    }

    function eR(c, a, b) {
        return this instanceof eR ? (this.h = +c, this.c = +a, void(this.l = +b)) : arguments.length < 2 ? c instanceof eR ? new eR(c.h, c.c, c.l) : c instanceof gS ? gA(c.l, c.a, c.b) : gA((c = aK((c = bX.rgb(c)).r, c.g, c.b)).l, c.a, c.b) : new eR(c, a, b)
    }

    function b3(c, a, b) {
        return isNaN(c) && (c = 0), isNaN(a) && (a = 0), new gS(b, Math.cos(c *= bw) * a, Math.sin(c) * a)
    }

    function gS(c, a, b) {
        return this instanceof gS ? (this.l = +c, this.a = +a, void(this.b = +b)) : arguments.length < 2 ? c instanceof gS ? new gS(c.l, c.a, c.b) : c instanceof eR ? b3(c.h, c.c, c.l) : aK((c = ez(c)).r, c.g, c.b) : new gS(c, a, b)
    }

    function f9(g, c, f) {
        var d = (g + 16) / 116,
            a = d + c / 500,
            b = d - f / 200;
        return a = dj(a) * dg, d = dj(d) * ej, b = dj(b) * b6, new ez(hB(3.2404542 * a - 1.5371385 * d - 0.4985314 * b), hB(-0.969266 * a + 1.8760108 * d + 0.041556 * b), hB(0.0556434 * a - 0.2040259 * d + 1.0572252 * b))
    }

    function gA(c, a, b) {
        return c > 0 ? new eR(Math.atan2(b, a) * f7, Math.sqrt(a * a + b * b), c) : new eR(0 / 0, 0 / 0, c)
    }

    function dj(a) {
        return a > 0.206893034 ? a * a * a : (a - 4 / 29) / 7.787037
    }

    function a2(a) {
        return a > 0.008856 ? Math.pow(a, 1 / 3) : 7.787037 * a + 4 / 29
    }

    function hB(a) {
        return Math.round(255 * (0.00304 >= a ? 12.92 * a : 1.055 * Math.pow(a, 1 / 2.4) - 0.055))
    }

    function ez(c, a, b) {
        return this instanceof ez ? (this.r = ~~c, this.g = ~~a, void(this.b = ~~b)) : arguments.length < 2 ? c instanceof ez ? new ez(c.r, c.g, c.b) : iS("" + c, ez, hX) : new ez(c, a, b)
    }

    function j4(a) {
        return new ez(a >> 16, a >> 8 & 255, 255 & a)
    }

    function gX(a) {
        return j4(a) + ""
    }

    function ks(a) {
        return 16 > a ? "0" + Math.max(0, a).toString(16) : Math.min(255, a).toString(16)
    }

    function iS(f, q, h) {
        var b, p, g, d = 0,
            m = 0,
            k = 0;
        if (b = /([a-z]+)\((.*)\)/i.exec(f)) {
            switch (p = b[2].split(","), b[1]) {
                case "hsl":
                    return h(parseFloat(p[0]), parseFloat(p[1]) / 100, parseFloat(p[2]) / 100);
                case "rgb":
                    return q(e9(p[0]), e9(p[1]), e9(p[2]))
            }
        }
        return (g = af.get(f.toLowerCase())) ? q(g.r, g.g, g.b) : (null == f || "#" !== f.charAt(0) || isNaN(g = parseInt(f.slice(1), 16)) || (4 === f.length ? (d = (3840 & g) >> 4, d = d >> 4 | d, m = 240 & g, m = m >> 4 | m, k = 15 & g, k = k << 4 | k) : 7 === f.length && (d = (16711680 & g) >> 16, m = (65280 & g) >> 8, k = 255 & g)), q(d, m, k))
    }

    function ak(f, q, h) {
        var b, p, g = Math.min(f /= 255, q /= 255, h /= 255),
            d = Math.max(f, q, h),
            m = d - g,
            k = (d + g) / 2;
        return m ? (p = 0.5 > k ? m / (d + g) : m / (2 - d - g), b = f == d ? (q - h) / m + (h > q ? 6 : 0) : q == d ? (h - f) / m + 2 : (f - q) / m + 4, b *= 60) : (b = 0 / 0, p = k > 0 && 1 > k ? 0 : b), new jJ(b, p, k)
    }

    function aK(g, c, f) {
        g = eW(g), c = eW(c), f = eW(f);
        var d = a2((0.4124564 * g + 0.3575761 * c + 0.1804375 * f) / dg),
            a = a2((0.2126729 * g + 0.7151522 * c + 0.072175 * f) / ej),
            b = a2((0.0193339 * g + 0.119192 * c + 0.9503041 * f) / b6);
        return gS(116 * a - 16, 500 * (d - a), 200 * (a - b))
    }

    function eW(a) {
        return (a /= 255) <= 0.04045 ? a / 12.92 : Math.pow((a + 0.055) / 1.055, 2.4)
    }

    function e9(b) {
        var a = parseFloat(b);
        return "%" === b.charAt(b.length - 1) ? Math.round(2.55 * a) : a
    }

    function aT(a) {
        return "function" == typeof a ? a : function() {
            return a
        }
    }

    function cm(a) {
        return function(b, d, c) {
            return 2 === arguments.length && "function" == typeof d && (c = d, d = null), gF(b, d, a, c)
        }
    }

    function gF(f, s, k, b) {
        function q() {
            var e, a = m.status;
            if (!a && jC(m) || a >= 200 && 300 > a || 304 === a) {
                try {
                    e = k.call(h, m)
                } catch (c) {
                    return void d.error.call(h, c)
                }
                d.load.call(h, e)
            } else {
                d.error.call(h, m)
            }
        }
        var h = {},
            d = bX.dispatch("beforesend", "progress", "load", "error"),
            p = {},
            m = new XMLHttpRequest,
            g = null;
        return !this.XDomainRequest || "withCredentials" in m || !/^(http(s)?:)?\/\//.test(f) || (m = new XDomainRequest), "onload" in m ? m.onload = m.onerror = q : m.onreadystatechange = function() {
            m.readyState > 3 && q()
        }, m.onprogress = function(c) {
            var a = bX.event;
            bX.event = c;
            try {
                d.progress.call(h, m)
            } finally {
                bX.event = a
            }
        }, h.header = function(c, a) {
            return c = (c + "").toLowerCase(), arguments.length < 2 ? p[c] : (null == a ? delete p[c] : p[c] = a + "", h)
        }, h.mimeType = function(a) {
            return arguments.length ? (s = null == a ? null : a + "", h) : s
        }, h.responseType = function(a) {
            return arguments.length ? (g = a, h) : g
        }, h.response = function(a) {
            return k = a, h
        }, ["get", "post"].forEach(function(a) {
            h[a] = function() {
                return h.send.apply(h, [a].concat(cR(arguments)))
            }
        }), h.send = function(o, n, a) {
            if (2 === arguments.length && "function" == typeof n && (a = n, n = null), m.open(o, f, !0), null == s || "accept" in p || (p.accept = s + ",*/*"), m.setRequestHeader) {
                for (var c in p) {
                    m.setRequestHeader(c, p[c])
                }
            }
            return null != s && m.overrideMimeType && m.overrideMimeType(s), null != g && (m.responseType = g), null != a && h.on("error", a).on("load", function(e) {
                a(null, e)
            }), d.beforesend.call(h, m), m.send(null == n ? null : n), h
        }, h.abort = function() {
            return m.abort(), h
        }, bX.rebind(h, d, "on"), null == b ? h : h.get(bC(b))
    }

    function bC(a) {
        return 1 === a.length ? function(b, c) {
            a(null == b ? c : null)
        } : a
    }

    function jC(b) {
        var a = b.responseType;
        return a && "text" !== a ? b.response : b.responseText
    }

    function cX() {
        var b = hj(),
            a = eE() - b;
        a > 24 ? (isFinite(a) && (clearTimeout(bV), bV = setTimeout(cX, a)), ep = 0) : (ep = 1, cQ(cX))
    }

    function hj() {
        var a = Date.now();
        for (hs = hQ; hs;) {
            a >= hs.t && (hs.f = hs.c(a - hs.t)), hs = hs.n
        }
        return a
    }

    function eE() {
        for (var c, a = hQ, b = 1 / 0; a;) {
            a.f ? a = c ? c.n = a.n : hQ = a.n : (a.t < b && (b = a.t), a = (c = a).n)
        }
        return fP = c, b
    }

    function fh(b, a) {
        return a - (b ? Math.ceil(Math.log(b) / Math.LN10) : 1)
    }

    function bd(c, a) {
        var b = Math.pow(10, 3 * gM(8 - a));
        return {
            scale: a > 8 ? function(d) {
                return d / b
            } : function(d) {
                return d * b
            },
            symbol: c
        }
    }

    function fW(g) {
        var c = g.decimal,
            f = g.thousands,
            d = g.grouping,
            a = g.currency,
            b = d && f ? function(r, m) {
                for (var h = r.length, k = [], p = 0, e = d[0], q = 0; h > 0 && e > 0 && (q + e + 1 > m && (e = Math.max(1, m - q)), k.push(r.substring(h -= e, h + e)), !((q += e + 1) > m));) {
                    e = d[p = (p + 1) % d.length]
                }
                return k.reverse().join(f)
            } : hR;
        return function(u) {
            var C = f2.exec(u),
                k = C[1] || " ",
                t = C[2] || ">",
                H = C[3] || "-",
                F = C[4] || "",
                x = C[5],
                J = +C[6],
                B = C[7],
                z = C[8],
                A = C[9],
                q = 1,
                I = "",
                E = "",
                w = !1,
                G = !0;
            switch (z && (z = +z.substring(1)), (x || "0" === k && "=" === t) && (x = k = "0", t = "="), A) {
                case "n":
                    B = !0, A = "g";
                    break;
                case "%":
                    q = 100, E = "%", A = "f";
                    break;
                case "p":
                    q = 100, E = "%", A = "r";
                    break;
                case "b":
                case "o":
                case "x":
                case "X":
                    "#" === F && (I = "0" + A.toLowerCase());
                case "c":
                    G = !1;
                case "d":
                    w = !0, z = 0;
                    break;
                case "s":
                    q = -1, A = "r"
            }
            "$" === F && (I = a[0], E = a[1]), "r" != A || z || (A = "g"), null != z && ("g" == A ? z = Math.max(1, Math.min(21, z)) : ("e" == A || "f" == A) && (z = Math.max(0, Math.min(20, z)))), A = dR.get(A) || ed;
            var D = x && B;
            return function(h) {
                var p = E;
                if (w && h % 1) {
                    return ""
                }
                var L = 0 > h || 0 === h && 0 > 1 / h ? (h = -h, "-") : "-" === H ? "" : H;
                if (0 > q) {
                    var r = bX.formatPrefix(h, z);
                    h = r.scale(h), p = r.symbol + E
                } else {
                    h *= q
                }
                h = A(h, z);
                var v, s, K = h.lastIndexOf(".");
                if (0 > K) {
                    var y = G ? h.lastIndexOf("e") : -1;
                    0 > y ? (v = h, s = "") : (v = h.substring(0, y), s = h.substring(y))
                } else {
                    v = h.substring(0, K), s = c + h.substring(K + 1)
                }!x && B && (v = b(v, 1 / 0));
                var o = I.length + v.length + s.length + (D ? 0 : L.length),
                    m = J > o ? new Array(o = J - o + 1).join(k) : "";
                return D && (v = b(m + v, m.length ? J - s.length : 1 / 0)), L += I, h = v + s, ("<" === t ? L + h + m : ">" === t ? m + L + h : "^" === t ? m.substring(0, o >>= 1) + L + h + m.substring(o) : L + (D ? h : m + h)) + p
            }
        }
    }

    function ed(a) {
        return a + ""
    }

    function fA() {
        this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0])
    }

    function ax(f, q, h) {
        function b(a) {
            var n = f(a),
                c = g(n, 1);
            return c - a > a - n ? n : c
        }

        function p(a) {
            return q(a = f(new iB(a - 1)), 1), a
        }

        function g(c, a) {
            return q(c = new iB(+c), a), c
        }

        function d(u, s, e) {
            var t = p(u),
                c = [];
            if (e > 1) {
                for (; s > t;) {
                    h(t) % e || c.push(new Date(+t)), q(t, 1)
                }
            } else {
                for (; s > t;) {
                    c.push(new Date(+t)), q(t, 1)
                }
            }
            return c
        }

        function m(s, a, o) {
            try {
                iB = fA;
                var c = new fA;
                return c._ = s, d(c, a, o)
            } finally {
                iB = Date
            }
        }
        f.floor = f, f.round = b, f.ceil = p, f.offset = g, f.range = d;
        var k = f.utc = jQ(f);
        return k.floor = k, k.round = jQ(b), k.ceil = jQ(p), k.offset = jQ(g), k.range = m, f
    }

    function jQ(a) {
        return function(b, d) {
            try {
                iB = fA;
                var c = new fA;
                return c._ = b, a(c, d)._
            } finally {
                iB = Date
            }
        }
    }

    function gh(U) {
        function K(c) {
            function a(h) {
                for (var k, f, g, m = [], d = -1, n = 0; ++d < b;) {
                    37 === c.charCodeAt(d) && (m.push(c.slice(n, d)), null != (f = cn[k = c.charAt(++d)]) && (k = c.charAt(++d)), (g = z[k]) && (k = g(h, null == f ? "e" === k ? " " : "0" : f)), m.push(k), n = d + 1)
                }
                return m.push(c.slice(n, d)), m.join("")
            }
            var b = c.length;
            return a.parse = function(f) {
                var g = {
                        y: 1900,
                        m: 0,
                        d: 1,
                        H: 0,
                        M: 0,
                        S: 0,
                        L: 0,
                        Z: null
                    },
                    d = ae(g, c, f, 0);
                if (d != f.length) {
                    return null
                }
                "p" in g && (g.H = g.H % 12 + 12 * g.p);
                var e = null != g.Z && iB !== fA,
                    h = new(e ? fA : iB);
                return "j" in g ? h.setFullYear(g.y, 0, g.j) : "w" in g && ("W" in g || "U" in g) ? (h.setFullYear(g.y, 0, 1), h.setFullYear(g.y, 0, "W" in g ? (g.w + 6) % 7 + 7 * g.W - (h.getDay() + 5) % 7 : g.w + 7 * g.U - (h.getDay() + 6) % 7)) : h.setFullYear(g.y, g.m, g.d), h.setHours(g.H + (g.Z / 100 | 0), g.M + g.Z % 100, g.S, g.L), e ? h._ : h
            }, a.toString = function() {
                return c
            }, a
        }

        function ae(f, v, k, b) {
            for (var s, h, d, p = 0, m = v.length, g = k.length; m > p;) {
                if (b >= g) {
                    return -1
                }
                if (s = v.charCodeAt(p++), 37 === s) {
                    if (d = v.charAt(p++), h = O[d in cn ? v.charAt(p++) : d], !h || (b = h(f, k, b)) < 0) {
                        return -1
                    }
                } else {
                    if (s != k.charCodeAt(b++)) {
                        return -1
                    }
                }
            }
            return b
        }

        function P(d, a, c) {
            at.lastIndex = 0;
            var b = at.exec(a.slice(c));
            return b ? (d.w = G.get(b[0].toLowerCase()), c + b[0].length) : -1
        }

        function I(d, a, c) {
            F.lastIndex = 0;
            var b = F.exec(a.slice(c));
            return b ? (d.w = ao.get(b[0].toLowerCase()), c + b[0].length) : -1
        }

        function Y(d, a, c) {
            J.lastIndex = 0;
            var b = J.exec(a.slice(c));
            return b ? (d.m = Q.get(b[0].toLowerCase()), c + b[0].length) : -1
        }

        function T(d, a, c) {
            q.lastIndex = 0;
            var b = q.exec(a.slice(c));
            return b ? (d.m = X.get(b[0].toLowerCase()), c + b[0].length) : -1
        }

        function ar(c, a, b) {
            return ae(c, z.c.toString(), a, b)
        }

        function al(c, a, b) {
            return ae(c, z.x.toString(), a, b)
        }

        function W(c, a, b) {
            return ae(c, z.X.toString(), a, b)
        }

        function L(d, a, c) {
            var b = B.get(a.slice(c, c += 2).toLowerCase());
            return null == b ? -1 : (d.p = b, c)
        }
        var ac = U.dateTime,
            Z = U.date,
            aa = U.time,
            R = U.periods,
            H = U.days,
            ai = U.shortDays,
            V = U.months,
            D = U.shortMonths;
        K.utc = function(c) {
            function b(e) {
                try {
                    iB = fA;
                    var d = new iB;
                    return d._ = e, a(d)
                } finally {
                    iB = Date
                }
            }
            var a = K(c);
            return b.parse = function(e) {
                try {
                    iB = fA;
                    var d = a.parse(e);
                    return d && d._
                } finally {
                    iB = Date
                }
            }, b.toString = a.toString, b
        }, K.multi = K.utc.multi = jW;
        var B = bX.map(),
            F = cK(H),
            ao = cb(H),
            at = cK(ai),
            G = cb(ai),
            q = cK(V),
            X = cb(V),
            J = cK(D),
            Q = cb(D);
        R.forEach(function(b, a) {
            B.set(b.toLowerCase(), a)
        });
        var z = {
                a: function(a) {
                    return ai[a.getDay()]
                },
                A: function(a) {
                    return H[a.getDay()]
                },
                b: function(a) {
                    return D[a.getMonth()]
                },
                B: function(a) {
                    return V[a.getMonth()]
                },
                c: K(ac),
                d: function(b, a) {
                    return i5(b.getDate(), a, 2)
                },
                e: function(b, a) {
                    return i5(b.getDate(), a, 2)
                },
                H: function(b, a) {
                    return i5(b.getHours(), a, 2)
                },
                I: function(b, a) {
                    return i5(b.getHours() % 12 || 12, a, 2)
                },
                j: function(b, a) {
                    return i5(1 + jY.dayOfYear(b), a, 3)
                },
                L: function(b, a) {
                    return i5(b.getMilliseconds(), a, 3)
                },
                m: function(b, a) {
                    return i5(b.getMonth() + 1, a, 2)
                },
                M: function(b, a) {
                    return i5(b.getMinutes(), a, 2)
                },
                p: function(a) {
                    return R[+(a.getHours() >= 12)]
                },
                S: function(b, a) {
                    return i5(b.getSeconds(), a, 2)
                },
                U: function(b, a) {
                    return i5(jY.sundayOfYear(b), a, 2)
                },
                w: function(a) {
                    return a.getDay()
                },
                W: function(b, a) {
                    return i5(jY.mondayOfYear(b), a, 2)
                },
                x: K(Z),
                X: K(aa),
                y: function(b, a) {
                    return i5(b.getFullYear() % 100, a, 2)
                },
                Y: function(b, a) {
                    return i5(b.getFullYear() % 10000, a, 4)
                },
                Z: f0,
                "%": function() {
                    return "%"
                }
            },
            O = {
                a: P,
                A: I,
                b: Y,
                B: T,
                c: ar,
                d: fF,
                e: fF,
                H: bT,
                I: bT,
                j: em,
                L: bB,
                m: hF,
                M: hp,
                p: L,
                S: cO,
                U: c2,
                w: dL,
                W: dW,
                x: al,
                X: W,
                y: dq,
                Y: bU,
                Z: ib,
                "%": dP
            };
        return K
    }

    function i5(g, c, f) {
        var d = 0 > g ? "-" : "",
            a = (d ? -g : g) + "",
            b = a.length;
        return d + (f > b ? new Array(f - b + 1).join(c) + a : a)
    }

    function cK(a) {
        return new RegExp("^(?:" + a.map(bX.requote).join("|") + ")", "i")
    }

    function cb(d) {
        for (var a = new ig, c = -1, b = d.length; ++c < b;) {
            a.set(d[c].toLowerCase(), c)
        }
        return a
    }

    function dL(d, a, c) {
        g3.lastIndex = 0;
        var b = g3.exec(a.slice(c, c + 1));
        return b ? (d.w = +b[0], c + b[0].length) : -1
    }

    function c2(d, a, c) {
        g3.lastIndex = 0;
        var b = g3.exec(a.slice(c));
        return b ? (d.U = +b[0], c + b[0].length) : -1
    }

    function dW(d, a, c) {
        g3.lastIndex = 0;
        var b = g3.exec(a.slice(c));
        return b ? (d.W = +b[0], c + b[0].length) : -1
    }

    function bU(d, a, c) {
        g3.lastIndex = 0;
        var b = g3.exec(a.slice(c, c + 4));
        return b ? (d.y = +b[0], c + b[0].length) : -1
    }

    function dq(d, a, c) {
        g3.lastIndex = 0;
        var b = g3.exec(a.slice(c, c + 2));
        return b ? (d.y = kg(+b[0]), c + b[0].length) : -1
    }

    function ib(c, a, b) {
        return /^[+-]\d{4}$/.test(a = a.slice(b, b + 5)) ? (c.Z = -a, b + 5) : -1
    }

    function kg(a) {
        return a + (a > 68 ? 1900 : 2000)
    }

    function hF(d, a, c) {
        g3.lastIndex = 0;
        var b = g3.exec(a.slice(c, c + 2));
        return b ? (d.m = b[0] - 1, c + b[0].length) : -1
    }

    function fF(d, a, c) {
        g3.lastIndex = 0;
        var b = g3.exec(a.slice(c, c + 2));
        return b ? (d.d = +b[0], c + b[0].length) : -1
    }

    function em(d, a, c) {
        g3.lastIndex = 0;
        var b = g3.exec(a.slice(c, c + 3));
        return b ? (d.j = +b[0], c + b[0].length) : -1
    }

    function bT(d, a, c) {
        g3.lastIndex = 0;
        var b = g3.exec(a.slice(c, c + 2));
        return b ? (d.H = +b[0], c + b[0].length) : -1
    }

    function hp(d, a, c) {
        g3.lastIndex = 0;
        var b = g3.exec(a.slice(c, c + 2));
        return b ? (d.M = +b[0], c + b[0].length) : -1
    }

    function cO(d, a, c) {
        g3.lastIndex = 0;
        var b = g3.exec(a.slice(c, c + 2));
        return b ? (d.S = +b[0], c + b[0].length) : -1
    }

    function bB(d, a, c) {
        g3.lastIndex = 0;
        var b = g3.exec(a.slice(c, c + 3));
        return b ? (d.L = +b[0], c + b[0].length) : -1
    }

    function f0(f) {
        var b = f.getTimezoneOffset(),
            d = b > 0 ? "-" : "+",
            c = gM(b) / 60 | 0,
            a = gM(b) % 60;
        return d + i5(c, "0", 2) + i5(a, "0", 2)
    }

    function dP(d, a, c) {
        gq.lastIndex = 0;
        var b = gq.exec(a.slice(c, c + 1));
        return b ? c + b[0].length : -1
    }

    function jW(c) {
        for (var a = c.length, b = -1; ++b < a;) {
            c[b][0] = this(c[b][0])
        }
        return function(d) {
            for (var g = 0, f = c[g]; !f[1](d);) {
                f = c[++g]
            }
            return f[0](d)
        }
    }

    function iy() {}

    function e0(g, c, f) {
        var d = f.s = g + c,
            a = d - g,
            b = d - a;
        f.t = g - b + (c - a)
    }

    function cj(b, a) {
        b && hK.hasOwnProperty(b.type) && hK[b.type](b, a)
    }

    function g1(g, c, f) {
        var d, a = -1,
            b = g.length - f;
        for (c.lineStart(); ++a < b;) {
            d = g[a], c.point(d[0], d[1], d[2])
        }
        c.lineEnd()
    }

    function gn(d, a) {
        var c = -1,
            b = d.length;
        for (a.polygonStart(); ++c < b;) {
            g1(d[c], a, 1)
        }
        a.polygonEnd()
    }

    function gJ() {
        function g(m, x) {
            m *= bw, x = x * bw / 2 + c9 / 4;
            var u = m - d,
                k = u >= 0 ? 1 : -1,
                w = k * u,
                v = Math.cos(x),
                p = Math.sin(x),
                y = b * p,
                r = a * v + y * Math.cos(w),
                q = y * k * Math.sin(w);
            kh.add(Math.atan2(q, r)), d = m, a = v, b = p
        }
        var c, f, d, a, b;
        g7.point = function(h, e) {
            g7.point = g, d = (c = h) * bw, a = Math.cos(e = (f = e) * bw / 2 + c9 / 4), b = Math.sin(e)
        }, g7.lineEnd = function() {
            g(c, f)
        }
    }

    function dx(d) {
        var a = d[0],
            c = d[1],
            b = Math.cos(c);
        return [b * Math.cos(a), b * Math.sin(a), Math.sin(c)]
    }

    function bb(b, a) {
        return b[0] * a[0] + b[1] * a[1] + b[2] * a[2]
    }

    function hJ(b, a) {
        return [b[1] * a[2] - b[2] * a[1], b[2] * a[0] - b[0] * a[2], b[0] * a[1] - b[1] * a[0]]
    }

    function eI(b, a) {
        b[0] += a[0], b[1] += a[1], b[2] += a[2]
    }

    function kf(b, a) {
        return [b[0] * a, b[1] * a, b[2] * a]
    }

    function g6(b) {
        var a = Math.sqrt(b[0] * b[0] + b[1] * b[1] + b[2] * b[2]);
        b[0] /= a, b[1] /= a, b[2] /= a
    }

    function av(a) {
        return [Math.atan2(a[1], a[0]), bL(a[2])]
    }

    function jk(b, a) {
        return gM(b[0] - a[0]) < bO && gM(b[1] - a[1]) < bO
    }

    function aD(c, a) {
        c *= bw;
        var b = Math.cos(a *= bw);
        aS(b * Math.cos(c), b * Math.sin(c), Math.sin(a))
    }

    function aS(c, a, b) {
        ++ay, aF += (c - aF) / ay, aU += (a - aU) / ay, e6 += (b - e6) / ay
    }

    function e5() {
        function d(p, g) {
            p *= bw;
            var h = Math.cos(g *= bw),
                k = h * Math.cos(p),
                f = h * Math.sin(p),
                m = Math.sin(g),
                e = Math.atan2(Math.sqrt((e = c * m - b * f) * e + (e = b * k - a * m) * e + (e = a * f - c * k) * e), a * k + c * f + b * m);
            jp += e, fq += e * (a + (a = k)), a3 += e * (c + (c = f)), cE += e * (b + (b = m)), aS(a, c, b)
        }
        var a, c, b;
        c8.point = function(e, f) {
            e *= bw;
            var g = Math.cos(f *= bw);
            a = g * Math.cos(e), c = g * Math.sin(e), b = Math.sin(f), c8.point = d, aS(a, c, b)
        }
    }

    function fn() {
        c8.point = aD
    }

    function a1() {
        function g(q, C) {
            q *= bw;
            var y = Math.cos(C *= bw),
                m = y * Math.cos(q),
                A = y * Math.sin(q),
                z = Math.sin(C),
                r = a * z - b * A,
                D = b * m - d * z,
                x = d * A - a * m,
                u = Math.sqrt(r * r + D * D + x * x),
                w = d * m + a * A + b * z,
                k = u && -d2(w) / u,
                B = Math.atan2(u, w);
            gP += k * r, bM += k * D, jR += k * x, jp += B, fq += B * (d + (d = m)), a3 += B * (a + (a = A)), cE += B * (b + (b = z)), aS(d, a, b)
        }
        var c, f, d, a, b;
        c8.point = function(h, e) {
            c = h, f = e, c8.point = g, h *= bw;
            var k = Math.cos(e *= bw);
            d = k * Math.cos(h), a = k * Math.sin(h), b = Math.sin(e), aS(d, a, b)
        }, c8.lineEnd = function() {
            g(c, f), c8.lineEnd = fn, c8.point = aD
        }
    }

    function cC(c, a) {
        function b(f, d) {
            return f = c(f, d), a(f[0], f[1])
        }
        return c.invert && a.invert && (b.invert = function(f, d) {
            return f = a.invert(f, d), f && c.invert(f[0], f[1])
        }), b
    }

    function gO() {
        return !0
    }

    function bK(m, D, z, b, C) {
        var v = [],
            k = [];
        if (m.forEach(function(u) {
                if (!((h = u.length - 1) <= 0)) {
                    var h, p = u[0],
                        o = u[h];
                    if (jk(p, o)) {
                        C.lineStart();
                        for (var g = 0; h > g; ++g) {
                            C.point((p = u[g])[0], p[1])
                        }
                        return void C.lineEnd()
                    }
                    var s = new c6(p, u, null, !0),
                        f = new c6(p, null, s, !1);
                    s.o = f, v.push(s), k.push(f), s = new c6(o, u, null, !1), f = new c6(o, null, s, !0), s.o = f, v.push(s), k.push(f)
                }
            }), k.sort(D), jO(v), jO(k), v.length) {
            for (var B = 0, A = z, q = k.length; q > B; ++B) {
                k[B].e = A = !A
            }
            for (var E, y, w = v[0];;) {
                for (var x = w, d = !0; x.v;) {
                    if ((x = x.n) === w) {
                        return
                    }
                }
                E = x.z, C.lineStart();
                do {
                    if (x.v = x.o.v = !0, x.e) {
                        if (d) {
                            for (var B = 0, q = E.length; q > B; ++B) {
                                C.point((y = E[B])[0], y[1])
                            }
                        } else {
                            b(x.x, x.n.x, 1, C)
                        }
                        x = x.n
                    } else {
                        if (d) {
                            E = x.p.z;
                            for (var B = E.length - 1; B >= 0; --B) {
                                C.point((y = E[B])[0], y[1])
                            }
                        } else {
                            b(x.x, x.p.x, -1, C)
                        }
                        x = x.p
                    }
                    x = x.o, E = x.z, d = !d
                } while (!x.v);
                C.lineEnd()
            }
        }
    }

    function jO(f) {
        if (b = f.length) {
            for (var b, d, c = 0, a = f[0]; ++c < b;) {
                a.n = d = f[c], d.p = a, a = d
            }
            a.n = d = f[0], d.p = a
        }
    }

    function c6(d, a, c, b) {
        this.x = d, this.z = a, this.o = c, this.e = b, this.v = !1, this.n = this.p = null
    }

    function hx(d, a, c, b) {
        return function(r, C) {
            function z(f, h) {
                var g = r(f, h);
                d(f = g[0], h = g[1]) && C.point(f, h)
            }

            function J(h, f) {
                var g = r(h, f);
                G.point(g[0], g[1])
            }

            function H() {
                k.point = J, G.lineStart()
            }

            function B() {
                k.point = z, G.lineEnd()
            }

            function t(h, f) {
                q.push([h, f]);
                var g = r(h, f);
                n.point(g[0], g[1])
            }

            function F() {
                n.lineStart(), q = []
            }

            function D() {
                t(q[0][0], q[0][1]), n.lineEnd();
                var s, g = n.clean(),
                    m = e.buffer(),
                    h = m.length;
                if (q.pop(), w.push(q), q = null, h) {
                    if (1 & g) {
                        s = m[0];
                        var f, h = s.length - 1,
                            p = -1;
                        if (h > 0) {
                            for (I || (C.polygonStart(), I = !0), C.lineStart(); ++p < h;) {
                                C.point((f = s[p])[0], f[1])
                            }
                            C.lineEnd()
                        }
                    } else {
                        h > 1 && 2 & g && m.push(m.pop().concat(m.shift())), E.push(m.filter(eN))
                    }
                }
            }
            var E, w, q, G = a(C),
                A = r.invert(b[0], b[1]),
                k = {
                    point: z,
                    lineStart: H,
                    lineEnd: B,
                    polygonStart: function() {
                        k.point = t, k.lineStart = F, k.lineEnd = D, E = [], w = []
                    },
                    polygonEnd: function() {
                        k.point = z, k.lineStart = H, k.lineEnd = B, E = bX.merge(E);
                        var f = aJ(A, w);
                        E.length ? (I || (C.polygonStart(), I = !0), bK(E, bp, f, c, C)) : f && (I || (C.polygonStart(), I = !0), C.lineStart(), c(null, null, 1, C), C.lineEnd()), I && (C.polygonEnd(), I = !1), E = w = null
                    },
                    sphere: function() {
                        C.polygonStart(), C.lineStart(), c(null, null, 1, C), C.lineEnd(), C.polygonEnd()
                    }
                },
                e = fw(),
                n = a(e),
                I = !1;
            return k
        }
    }

    function eN(a) {
        return a.length > 1
    }

    function fw() {
        var b, a = [];
        return {
            lineStart: function() {
                a.push(b = [])
            },
            point: function(c, d) {
                b.push([c, d])
            },
            lineEnd: iG,
            buffer: function() {
                var c = a;
                return a = [], b = null, c
            },
            rejoin: function() {
                a.length > 1 && a.push(a.pop().concat(a.shift()))
            }
        }
    }

    function bp(b, a) {
        return ((b = b.x)[0] < 0 ? b[1] - fy - bO : fy - b[1]) - ((a = a.x)[0] < 0 ? a[1] - fy - bO : fy - a[1])
    }

    function f5(f) {
        var b, d = 0 / 0,
            c = 0 / 0,
            a = 0 / 0;
        return {
            lineStart: function() {
                f.lineStart(), b = 1
            },
            point: function(g, h) {
                var e = g > 0 ? c9 : -c9,
                    k = gM(g - d);
                gM(k - c9) < bO ? (f.point(d, c = (c + h) / 2 > 0 ? fy : -fy), f.point(a, c), f.lineEnd(), f.lineStart(), f.point(e, c), f.point(g, c), b = 0) : a !== e && k >= c9 && (gM(d - a) < bO && (d -= a * bO), gM(g - e) < bO && (g -= e * bO), c = ev(d, c, g, h), f.point(a, c), f.lineEnd(), f.lineStart(), f.point(e, c), b = 0), f.point(d = g, c = h), a = e
            },
            lineEnd: function() {
                f.lineEnd(), d = c = 0 / 0
            },
            clean: function() {
                return 2 - b
            }
        }
    }

    function ev(h, c, f, d) {
        var a, b, g = Math.sin(h - f);
        return gM(g) > bO ? Math.atan((Math.sin(c) * (b = Math.cos(d)) * Math.sin(f) - Math.sin(d) * (a = Math.cos(c)) * Math.sin(h)) / (a * b * g)) : (c + d) / 2
    }

    function fJ(g, c, f, d) {
        var a;
        if (null == g) {
            a = f * fy, d.point(-c9, a), d.point(0, a), d.point(c9, a), d.point(c9, 0), d.point(c9, -a), d.point(0, -a), d.point(-c9, -a), d.point(-c9, 0), d.point(-c9, a)
        } else {
            if (gM(g[0] - c[0]) > bO) {
                var b = g[0] < c[0] ? c9 : -c9;
                a = f * b / 2, d.point(-b, a), d.point(0, a), d.point(b, a)
            } else {
                d.point(c[0], c[1])
            }
        }
    }

    function aJ(R, J) {
        var aa = R[0],
            L = R[1],
            H = [Math.sin(aa), -Math.cos(aa), 0],
            W = 0,
            Q = 0;
        kh.reset();
        for (var al = 0, ae = J.length; ae > al; ++al) {
            var U = J[al],
                K = U.length;
            if (K) {
                for (var Z = U[0], X = Z[0], Y = Z[1] / 2 + c9 / 4, P = Math.sin(Y), G = Math.cos(Y), ac = 1;;) {
                    ac === K && (ac = 0), R = U[ac];
                    var T = R[0],
                        C = R[1] / 2 + c9 / 4,
                        B = Math.sin(C),
                        D = Math.cos(C),
                        ai = T - X,
                        ao = ai >= 0 ? 1 : -1,
                        F = ao * ai,
                        q = F > c9,
                        V = P * B;
                    if (kh.add(Math.atan2(V * ao * Math.sin(F), G * D + V * Math.cos(F))), W += q ? ai + ao * hz : ai, q ^ X >= aa ^ T >= aa) {
                        var I = hJ(dx(Z), dx(R));
                        g6(I);
                        var O = hJ(H, I);
                        g6(O);
                        var z = (q ^ ai >= 0 ? -1 : 1) * bL(O[2]);
                        (L > z || L === z && (I[0] || I[1])) && (Q += q ^ ai >= 0 ? 1 : -1)
                    }
                    if (!ac++) {
                        break
                    }
                    X = T, P = B, G = D, Z = R
                }
            }
        }
        return (-bO > W || bO > W && 0 > kh) ^ 1 & Q
    }

    function j3(f) {
        function q(c, a) {
            return Math.cos(c) * Math.cos(a) > g
        }

        function h(v) {
            var t, o, u, a, r;
            return {
                lineStart: function() {
                    a = u = !1, r = 1
                },
                point: function(w, n) {
                    var s, x = [w, n],
                        e = q(w, n),
                        y = d ? e ? 0 : p(w, n) : e ? p(w + (0 > w ? c9 : -c9), n) : 0;
                    if (!t && (a = u = e) && v.lineStart(), e !== u && (s = b(t, x), (jk(t, s) || jk(x, s)) && (x[0] += bO, x[1] += bO, e = q(x[0], x[1]))), e !== u) {
                        r = 0, e ? (v.lineStart(), s = b(x, t), v.point(s[0], s[1])) : (s = b(t, x), v.point(s[0], s[1]), v.lineEnd()), t = s
                    } else {
                        if (m && t && d ^ e) {
                            var c;
                            y & o || !(c = b(x, t, !0)) || (r = 0, d ? (v.lineStart(), v.point(c[0][0], c[0][1]), v.point(c[1][0], c[1][1]), v.lineEnd()) : (v.point(c[1][0], c[1][1]), v.lineEnd(), v.lineStart(), v.point(c[0][0], c[0][1])))
                        }
                    }!e || t && jk(t, x) || v.point(x[0], x[1]), t = x, u = e, o = y
                },
                lineEnd: function() {
                    u && v.lineEnd(), t = null
                },
                clean: function() {
                    return r | (a && u) << 1
                }
            }
        }

        function b(X, P, al) {
            var T = dx(X),
                L = dx(P),
                W = [1, 0, 0],
                au = hJ(T, L),
                ar = bb(au, au),
                Z = au[0],
                Q = ar - Z * Z;
            if (!Q) {
                return !al && X
            }
            var ai = g * ar / Q,
                ac = -g * Z / Q,
                ae = hJ(W, au),
                V = kf(W, ai),
                K = kf(au, ac);
            eI(V, K);
            var ao = ae,
                Y = bb(V, ao),
                H = bb(ao, ao),
                F = Y * Y - H * (bb(V, V) - 1);
            if (!(0 > F)) {
                var I = Math.sqrt(F),
                    at = kf(ao, (-Y - I) / H);
                if (eI(at, V), at = av(at), !al) {
                    return at
                }
                var ba, J = X[0],
                    B = P[0],
                    aa = X[1],
                    O = P[1];
                J > B && (ba = J, J = B, B = ba);
                var U = B - J,
                    D = gM(U - c9) < bO,
                    R = D || bO > U;
                if (!D && aa > O && (ba = aa, aa = O, O = ba), R ? D ? aa + O > 0 ^ at[1] < (gM(at[0] - J) < bO ? aa : O) : aa <= at[1] && at[1] <= O : U > c9 ^ (J <= at[0] && at[0] <= B)) {
                    var G = kf(ao, (-Y + I) / H);
                    return eI(G, V), [at, av(G)]
                }
            }
        }

        function p(c, o) {
            var n = d ? f : c9 - f,
                a = 0;
            return -n > c ? a |= 1 : c > n && (a |= 2), -n > o ? a |= 4 : o > n && (a |= 8), a
        }
        var g = Math.cos(f),
            d = g > 0,
            m = gM(g) > bO,
            k = gB(f, 6 * bw);
        return hx(q, h, k, d ? [0, -f] : [-c9, f - c9])
    }

    function gw(d, a, c, b) {
        return function(z) {
            var n, k = z.a,
                x = z.b,
                w = k.x,
                m = k.y,
                A = x.x,
                t = x.y,
                q = 0,
                r = 1,
                e = A - w,
                y = t - m;
            if (n = d - w, e || !(n > 0)) {
                if (n /= e, 0 > e) {
                    if (q > n) {
                        return
                    }
                    r > n && (r = n)
                } else {
                    if (e > 0) {
                        if (n > r) {
                            return
                        }
                        n > q && (q = n)
                    }
                }
                if (n = c - w, e || !(0 > n)) {
                    if (n /= e, 0 > e) {
                        if (n > r) {
                            return
                        }
                        n > q && (q = n)
                    } else {
                        if (e > 0) {
                            if (q > n) {
                                return
                            }
                            r > n && (r = n)
                        }
                    }
                    if (n = a - m, y || !(n > 0)) {
                        if (n /= y, 0 > y) {
                            if (q > n) {
                                return
                            }
                            r > n && (r = n)
                        } else {
                            if (y > 0) {
                                if (n > r) {
                                    return
                                }
                                n > q && (q = n)
                            }
                        }
                        if (n = b - m, y || !(0 > n)) {
                            if (n /= y, 0 > y) {
                                if (n > r) {
                                    return
                                }
                                n > q && (q = n)
                            } else {
                                if (y > 0) {
                                    if (q > n) {
                                        return
                                    }
                                    r > n && (r = n)
                                }
                            }
                            return q > 0 && (z.a = {
                                x: w + q * e,
                                y: m + q * y
                            }), 1 > r && (z.b = {
                                x: w + r * e,
                                y: m + r * y
                            }), z
                        }
                    }
                }
            }
        }
    }

    function jB(h, c, f, d) {
        function a(k, e) {
            return gM(k[0] - h) < bO ? e > 0 ? 0 : 3 : gM(k[0] - f) < bO ? e > 0 ? 2 : 1 : gM(k[1] - c) < bO ? e > 0 ? 1 : 0 : e > 0 ? 3 : 2
        }

        function b(k, e) {
            return g(k.x, e.x)
        }

        function g(p, k) {
            var o = a(p, 1),
                m = a(k, 1);
            return o !== m ? o - m : 0 === o ? k[1] - p[1] : 1 === o ? p[0] - k[0] : 2 === o ? p[1] - k[1] : k[0] - p[0]
        }
        return function(T) {
            function Q(p) {
                for (var C = 0, w = P.length, k = p[1], A = 0; w > A; ++A) {
                    for (var v, m = 1, y = P[A], x = y.length, s = y[0]; x > m; ++m) {
                        v = y[m], s[1] <= k ? v[1] > k && iZ(s, v, p) > 0 && ++C : v[1] <= k && iZ(s, v, p) < 0 && --C, s = v
                    }
                }
                return 0 !== C
            }

            function I(p, m, x, k) {
                var v = 0,
                    w = 0;
                if (null == p || (v = a(p, x)) !== (w = a(m, x)) || g(p, m) < 0 ^ x > 0) {
                    do {
                        k.point(0 === v || 3 === v ? h : f, v > 1 ? d : c)
                    } while ((v = (v + x + 4) % 4) !== w)
                } else {
                    k.point(m[0], m[1])
                }
            }

            function B(k, m) {
                return k >= h && f >= k && m >= c && d >= m
            }

            function O(m, k) {
                B(m, k) && T.point(m, k)
            }

            function K() {
                D.point = G, P && P.push(H = []), e = !0, t = !1, R = U = 0 / 0
            }

            function L() {
                u && (G(q, o), r && t && F.rejoin(), u.push(F.buffer())), D.point = O, t && T.lineEnd()
            }

            function G(s, k) {
                s = Math.max(-eO, Math.min(eO, s)), k = Math.max(-eO, Math.min(eO, k));
                var p = B(s, k);
                if (P && H.push([s, k]), e) {
                    q = s, o = k, r = p, e = !1, p && (T.lineStart(), T.point(s, k))
                } else {
                    if (p && t) {
                        T.point(s, k)
                    } else {
                        var m = {
                            a: {
                                x: R,
                                y: U
                            },
                            b: {
                                x: s,
                                y: k
                            }
                        };
                        n(m) ? (t || (T.lineStart(), T.point(m.a.x, m.a.y)), T.point(m.b.x, m.b.y), p || T.lineEnd(), J = !1) : p && (T.lineStart(), T.point(s, k), J = !1)
                    }
                }
                R = s, U = k, t = p
            }
            var u, P, H, q, o, r, R, U, t, e, J, z = T,
                F = fw(),
                n = gw(h, c, f, d),
                D = {
                    point: O,
                    lineStart: K,
                    lineEnd: L,
                    polygonStart: function() {
                        T = F, u = [], P = [], J = !0
                    },
                    polygonEnd: function() {
                        T = z, u = bX.merge(u);
                        var m = Q([h, d]),
                            p = J && m,
                            k = u.length;
                        (p || k) && (T.polygonStart(), p && (T.lineStart(), I(null, null, 1, T), T.lineEnd()), k && bK(u, b, m, I, T), T.polygonEnd()), u = P = H = null
                    }
                };
            return D
        }
    }

    function cT(f) {
        var b = 0,
            d = c9 / 3,
            c = fS(f),
            a = c(b, d);
        return a.parallels = function(e) {
            return arguments.length ? c(b = e[0] * c9 / 180, d = e[1] * c9 / 180) : [b / c9 * 180, d / c9 * 180]
        }, a
    }

    function cw(h, c) {
        function f(o, k) {
            var m = Math.sqrt(b - 2 * a * Math.sin(k)) / a;
            return [m * Math.sin(o *= a), g - m * Math.cos(o)]
        }
        var d = Math.sin(h),
            a = (d + Math.sin(c)) / 2,
            b = 1 + d * (2 * a - d),
            g = Math.sqrt(b) / a;
        return f.invert = function(o, k) {
            var m = g - k;
            return [Math.atan2(o, m) / a, bL((b - (o * o + m * m) * a * a) / (2 * a))]
        }, f
    }

    function dV() {
        function f(g, e) {
            bs += a * g - c * e, c = g, a = e
        }
        var b, d, c, a;
        j5.point = function(e, g) {
            j5.point = f, b = c = e, d = a = g
        }, j5.lineEnd = function() {
            f(b, d)
        }
    }

    function dd(b, a) {
        f6 > b && (f6 = b), b > fK && (fK = b), ew > a && (ew = a), a > aL && (aL = a)
    }

    function eb() {
        function m(e, a) {
            k.push("M", e, ",", a, d)
        }

        function f(e, a) {
            k.push("M", e, ",", a), b.point = h
        }

        function h(e, a) {
            k.push("L", e, ",", a)
        }

        function g() {
            b.point = m
        }

        function c() {
            k.push("Z")
        }
        var d = b2(4.5),
            k = [],
            b = {
                point: m,
                lineStart: function() {
                    b.point = f
                },
                lineEnd: g,
                polygonStart: function() {
                    b.lineEnd = c
                },
                polygonEnd: function() {
                    b.lineEnd = g, b.point = m
                },
                pointRadius: function(a) {
                    return d = b2(a), b
                },
                result: function() {
                    if (k.length) {
                        var a = k.join("");
                        return k = [], a
                    }
                }
            };
        return b
    }

    function b2(a) {
        return "m0," + a + "a" + a + "," + a + " 0 1,1 0," + -2 * a + "a" + a + "," + a + " 0 1,1 0," + 2 * a + "z"
    }

    function dC(b, a) {
        aF += b, aU += a, ++e6
    }

    function iJ() {
        function c(h, f) {
            var d = h - a,
                e = f - b,
                g = Math.sqrt(d * d + e * e);
            fq += g * (a + h) / 2, a3 += g * (b + f) / 2, cE += g, dC(a = h, b = f)
        }
        var a, b;
        jD.point = function(e, d) {
            jD.point = c, dC(a = e, b = d)
        }
    }

    function kq() {
        jD.point = dC
    }

    function hN() {
        function f(p, h) {
            var k = p - c,
                g = h - a,
                m = Math.sqrt(k * k + g * g);
            fq += m * (c + p) / 2, a3 += m * (a + h) / 2, cE += m, m = a * p - c * h, gP += m * (c + p), bM += m * (a + h), jR += 3 * m, dC(c = p, a = h)
        }
        var b, d, c, a;
        jD.point = function(e, g) {
            jD.point = f, dC(b = c = e, d = a = g)
        }, jD.lineEnd = function() {
            f(b, d)
        }
    }

    function fN(m) {
        function f(a, n) {
            m.moveTo(a + k, n), m.arc(a, n, k, 0, hz)
        }

        function h(a, n) {
            m.moveTo(a, n), b.point = g
        }

        function g(a, n) {
            m.lineTo(a, n)
        }

        function c() {
            b.point = f
        }

        function d() {
            m.closePath()
        }
        var k = 4.5,
            b = {
                point: f,
                lineStart: function() {
                    b.point = h
                },
                lineEnd: c,
                polygonStart: function() {
                    b.lineEnd = d
                },
                polygonEnd: function() {
                    b.lineEnd = c, b.point = f
                },
                pointRadius: function(a) {
                    return k = a, b
                },
                result: iG
            };
        return b
    }

    function d5(m) {
        function f(a) {
            return (b ? g : h)(a)
        }

        function h(a) {
            return cF(a, function(o, n) {
                o = m(o, n), a.point(o[0], o[1])
            })
        }

        function g(B) {
            function N(p, o) {
                p = m(p, o), B.point(p[0], p[1])
            }

            function D() {
                n = 0 / 0, a.point = I, B.lineStart()
            }

            function I(t, s) {
                var p = dx([t, s]),
                    v = m(t, s);
                c(n, u, q, Q, R, z, n = v[0], u = v[1], q = t, Q = p[0], R = p[1], z = p[2], b, B), B.point(n, u)
            }

            function F() {
                a.point = N, B.lineEnd()
            }

            function P() {
                D(), a.point = H, a.lineEnd = C
            }

            function H(o, e) {
                I(L = o, J = e), K = n, E = u, A = Q, O = R, G = z, a.point = I
            }

            function C() {
                c(n, u, q, Q, R, z, K, E, L, A, O, G, b, B), a.lineEnd = F, F()
            }
            var L, J, K, E, A, O, G, q, n, u, Q, R, z, a = {
                point: N,
                lineStart: D,
                lineEnd: F,
                polygonStart: function() {
                    B.polygonStart(), a.lineStart = P
                },
                polygonEnd: function() {
                    B.polygonEnd(), a.lineStart = D
                }
            };
            return a
        }

        function c(K, ac, Q, ao, ai, W, O, aa, Y, Z, U, I, ae, V) {
            var F = O - K,
                u = aa - ac,
                G = F * F + u * u;
            if (G > 4 * d && ae--) {
                var al = ao + Z,
                    ar = ai + U,
                    H = W + I,
                    n = Math.sqrt(al * al + ar * ar + H * H),
                    X = Math.asin(H /= n),
                    J = gM(gM(H) - 1) < bO || gM(Q - Y) < bO ? (Q + Y) / 2 : Math.atan2(ar, al),
                    T = m(J, X),
                    o = T[0],
                    P = T[1],
                    D = o - K,
                    R = P - ac,
                    B = u * D - F * R;
                (B * B / G > d || gM((F * D + u * R) / G - 0.5) > 0.3 || k > ao * Z + ai * U + W * I) && (c(K, ac, Q, ao, ai, W, o, P, J, al /= n, ar /= n, H, ae, V), V.point(o, P), c(o, P, J, al, ar, H, O, aa, Y, Z, U, I, ae, V))
            }
        }
        var d = 0.5,
            k = Math.cos(30 * bw),
            b = 16;
        return f.precision = function(a) {
            return arguments.length ? (b = (d = a * a) > 0 && 16, f) : Math.sqrt(d)
        }, f
    }

    function bN(b) {
        var a = d5(function(c, d) {
            return b([c * f7, d * f7])
        });
        return function(c) {
            return dH(a(c))
        }
    }

    function hd(a) {
        this.stream = a
    }

    function cF(b, a) {
        return {
            point: a,
            sphere: function() {
                b.sphere()
            },
            lineStart: function() {
                b.lineStart()
            },
            lineEnd: function() {
                b.lineEnd()
            },
            polygonStart: function() {
                b.polygonStart()
            },
            polygonEnd: function() {
                b.polygonEnd()
            }
        }
    }

    function bv(a) {
        return fS(function() {
            return a
        })()
    }

    function fS(H) {
        function C(a) {
            return a = U(a[0] * bw, a[1] * bw), [a[0] * L + R, J - a[1] * L]
        }

        function P(a) {
            return a = U.invert((a[0] - R) / L, (J - a[1]) / L), a && [a[0] * f7, a[1] * f7]
        }

        function E() {
            U = cC(G = eS(I, q, y), K);
            var a = K(A, Q);
            return R = N - a[0] * L, J = F + a[1] * L, B()
        }

        function B() {
            return D && (D.valid = !1, D = null), C
        }
        var K, G, U, R, J, D, O = d5(function(b, a) {
                return b = K(b, a), [b[0] * L + R, J - b[1] * L]
            }),
            L = 150,
            N = 480,
            F = 250,
            A = 0,
            Q = 0,
            I = 0,
            q = 0,
            y = 0,
            T = hy,
            V = hR,
            z = null,
            k = null;
        return C.stream = function(a) {
                return D && (D.valid = !1), D = dH(T(G, O(V(a)))), D.valid = !0, D
            }, C.clipAngle = function(a) {
                return arguments.length ? (T = null == a ? (z = a, hy) : j3((z = +a) * bw), B()) : z
            }, C.clipExtent = function(a) {
                return arguments.length ? (k = a, V = a ? jB(a[0][0], a[0][1], a[1][0], a[1][1]) : hR, B()) : k
            }, C.scale = function(a) {
                return arguments.length ? (L = +a, E()) : L
            }, C.translate = function(a) {
                return arguments.length ? (N = +a[0], F = +a[1], E()) : [N, F]
            }, C.center = function(a) {
                return arguments.length ? (A = a[0] % 360 * bw, Q = a[1] % 360 * bw, E()) : [A * f7, Q * f7]
            }, C.rotate = function(a) {
                return arguments.length ? (I = a[0] % 360 * bw, q = a[1] % 360 * bw, y = a.length > 2 ? a[2] % 360 * bw : 0, E()) : [I * f7, q * f7, y * f7]
            }, bX.rebind(C, O, "precision"),
            function() {
                return K = H.apply(this, arguments), C.invert = K.invert && P, E()
            }
    }

    function dH(a) {
        return cF(a, function(b, c) {
            a.point(b * bw, c * bw)
        })
    }

    function jK(b, a) {
        return [b, a]
    }

    function h0(b, a) {
        return [b > c9 ? b - hz : -c9 > b ? b + hz : b, a]
    }

    function eS(c, a, b) {
        return c ? a || b ? cC(gT(c), gb(a, b)) : gT(c) : a || b ? gb(a, b) : h0
    }

    function b5(a) {
        return function(b, c) {
            return b += a, [b > c9 ? b - hz : -c9 > b ? b + hz : b, c]
        }
    }

    function gT(b) {
        var a = b5(b);
        return a.invert = b5(-b), a
    }

    function gb(h, c) {
        function f(u, o) {
            var q = Math.cos(o),
                m = Math.cos(u) * q,
                r = Math.sin(u) * q,
                k = Math.sin(o),
                p = k * d + m * a;
            return [Math.atan2(r * b - p * g, m * d - k * a), bL(p * b + r * g)]
        }
        var d = Math.cos(h),
            a = Math.sin(h),
            b = Math.cos(c),
            g = Math.sin(c);
        return f.invert = function(u, o) {
            var q = Math.cos(o),
                m = Math.cos(u) * q,
                r = Math.sin(u) * q,
                k = Math.sin(o),
                p = k * b - r * g;
            return [Math.atan2(r * b + k * g, m * d + p * a), bL(p * d - m * a)]
        }, f
    }

    function gB(d, a) {
        var c = Math.cos(d),
            b = Math.sin(d);
        return function(g, h, m, f) {
            var n = m * a;
            null != g ? (g = dk(c, g), h = dk(c, h), (m > 0 ? h > g : g > h) && (g += m * hz)) : (g = d + m * hz, h = d - 0.5 * n);
            for (var e, k = g; m > 0 ? k > h : h > k; k -= n) {
                f.point((e = av([c, -b * Math.cos(k), -b * Math.sin(k)]))[0], e[1])
            }
        }
    }

    function dk(d, a) {
        var c = dx(a);
        c[0] -= d, g6(c);
        var b = d2(-c[1]);
        return ((-c[2] < 0 ? -b : b) + 2 * Math.PI - bO) % (2 * Math.PI)
    }

    function a4(d, a, c) {
        var b = bX.range(d, a - bO, c).concat(a);
        return function(e) {
            return b.map(function(f) {
                return [e, f]
            })
        }
    }

    function hC(d, a, c) {
        var b = bX.range(d, a - bO, c).concat(a);
        return function(e) {
            return b.map(function(f) {
                return [f, e]
            })
        }
    }

    function eA(a) {
        return a.source
    }

    function j6(a) {
        return a.target
    }

    function gY(m, D, z, b) {
        var C = Math.cos(D),
            v = Math.sin(D),
            k = Math.cos(b),
            B = Math.sin(b),
            A = C * Math.cos(m),
            q = C * Math.sin(m),
            E = k * Math.cos(z),
            y = k * Math.sin(z),
            w = 2 * Math.asin(Math.sqrt(fR(b - D) + C * k * fR(z - m))),
            x = 1 / Math.sin(w),
            d = w ? function(p) {
                var c = Math.sin(p *= w) * x,
                    g = Math.sin(w - p) * x,
                    f = g * A + c * E,
                    a = g * q + c * y,
                    h = g * v + c * B;
                return [Math.atan2(a, f) * f7, Math.atan2(h, Math.sqrt(f * f + a * a)) * f7]
            } : function() {
                return [m * f7, D * f7]
            };
        return d.distance = w, d
    }

    function ad() {
        function d(m, f) {
            var g = Math.sin(f *= bw),
                h = Math.cos(f),
                e = gM((m *= bw) - a),
                k = Math.cos(e);
            cU += Math.atan2(Math.sqrt((e = h * Math.sin(e)) * e + (e = b * g - c * h * k) * e), c * g + b * h * k), a = m, c = g, b = h
        }
        var a, c, b;
        cy.point = function(e, f) {
            a = e * bw, c = Math.sin(f *= bw), b = Math.cos(f), cy.point = d
        }, cy.lineEnd = function() {
            cy.point = cy.lineEnd = iG
        }
    }

    function iV(c, a) {
        function b(g, k) {
            var h = Math.cos(g),
                d = Math.cos(k),
                f = c(h * d);
            return [f * d * Math.sin(g), f * Math.sin(k)]
        }
        return b.invert = function(m, h) {
            var g = Math.sqrt(m * m + h * h),
                d = a(g),
                f = Math.sin(d),
                k = Math.cos(d);
            return [Math.atan2(m * f, g * k), Math.asin(g && h * f / g)]
        }, b
    }

    function am(h, c) {
        function f(o, k) {
            g > 0 ? -fy + bO > k && (k = -fy + bO) : k > fy - bO && (k = fy - bO);
            var m = g / Math.pow(a(k), b);
            return [m * Math.sin(b * o), g - m * Math.cos(b * o)]
        }
        var d = Math.cos(h),
            a = function(e) {
                return Math.tan(c9 / 4 + e / 2)
            },
            b = h === c ? Math.sin(h) : Math.log(d / Math.cos(c)) / Math.log(a(c) / a(h)),
            g = d * Math.pow(a(h), b) / b;
        return b ? (f.invert = function(p, k) {
            var o = g - k,
                m = jb(b) * Math.sqrt(p * p + o * o);
            return [Math.atan2(p, o) / b, 2 * Math.atan(Math.pow(g / m, 1 / b)) - fy]
        }, f) : eX
    }

    function aM(g, c) {
        function f(m, h) {
            var k = b - h;
            return [k * Math.sin(a * m), b - k * Math.cos(a * m)]
        }
        var d = Math.cos(g),
            a = g === c ? Math.sin(g) : (d - Math.cos(c)) / (c - g),
            b = d / a + g;
        return gM(a) < bO ? jK : (f.invert = function(m, h) {
            var k = b - h;
            return [Math.atan2(m, k) / a, b - jb(a) * Math.sqrt(m * m + k * k)]
        }, f)
    }

    function eX(b, a) {
        return [b, Math.log(Math.tan(c9 / 4 + a / 2))]
    }

    function fb(g) {
        var c, f = bv(g),
            d = f.scale,
            a = f.translate,
            b = f.clipExtent;
        return f.scale = function() {
            var e = d.apply(f, arguments);
            return e === f ? c ? f.clipExtent(null) : f : e
        }, f.translate = function() {
            var e = a.apply(f, arguments);
            return e === f ? c ? f.clipExtent(null) : f : e
        }, f.clipExtent = function(m) {
            var h = b.apply(f, arguments);
            if (h === f) {
                if (c = null == m) {
                    var e = c9 * d(),
                        k = a();
                    b([
                        [k[0] - e, k[1] - e],
                        [k[0] + e, k[1] + e]
                    ])
                }
            } else {
                c && (h = null)
            }
            return h
        }, f.clipExtent(null)
    }

    function aV(b, a) {
        return [Math.log(Math.tan(c9 / 4 + a / 2)), -b]
    }

    function cp(a) {
        return a[0]
    }

    function gG(a) {
        return a[1]
    }

    function bE(f) {
        for (var b = f.length, d = [0, 1], c = 2, a = 2; b > a; a++) {
            for (; c > 1 && iZ(f[d[c - 2]], f[d[c - 1]], f[a]) <= 0;) {
                --c
            }
            d[c++] = a
        }
        return d.slice(0, c)
    }

    function jE(b, a) {
        return b[0] - a[0] || b[1] - a[1]
    }

    function cY(c, a, b) {
        return (b[0] - a[0]) * (c[1] - a[1]) < (b[1] - a[1]) * (c[0] - a[0])
    }

    function hk(g, z, v, b) {
        var y = g[0],
            m = v[0],
            d = z[0] - y,
            x = b[0] - m,
            w = g[1],
            k = v[1],
            A = z[1] - w,
            q = b[1] - k,
            p = (x * (w - k) - q * (y - m)) / (q * d - x * A);
        return [y + p * d, w + p * A]
    }

    function eF(c) {
        var a = c[0],
            b = c[c.length - 1];
        return !(a[0] - b[0] || a[1] - b[1])
    }

    function fj() {
        bJ(this), this.edge = this.site = this.circle = null
    }

    function bg(b) {
        var a = hh.pop() || new fj;
        return a.site = b, a
    }

    function fX(a) {
        c3(a), fO.remove(a), hh.push(a), bJ(a)
    }

    function eg(g) {
        var x = g.circle,
            p = x.x,
            b = x.cy,
            w = {
                x: p,
                y: b
            },
            k = g.P,
            d = g.N,
            v = [g];
        fX(g);
        for (var q = k; q.circle && gM(p - q.circle.x) < bO && gM(b - q.circle.cy) < bO;) {
            k = q.P, v.unshift(q), fX(q), q = k
        }
        v.unshift(q), c3(q);
        for (var h = d; h.circle && gM(p - h.circle.x) < bO && gM(b - h.circle.cy) < bO;) {
            d = h.N, v.push(h), fX(h), h = d
        }
        v.push(h), c3(h);
        var y, m = v.length;
        for (y = 1; m > y; ++y) {
            h = v[y], q = v[y - 1], hG(h.edge, q.site, h.site, w)
        }
        q = v[0], h = v[m - 1], h.edge = ij(q.site, h.site, null, w), dM(q), dM(h)
    }

    function fB(F) {
        for (var A, N, C, z, I = F.x, E = F.y, Q = fO._; Q;) {
            if (C = az(Q, E) - I, C > bO) {
                Q = Q.L
            } else {
                if (z = I - jS(Q, E), !(z > bO)) {
                    C > -bO ? (A = Q.P, N = Q) : z > -bO ? (A = Q, N = Q.N) : A = N = Q;
                    break
                }
                if (!Q.R) {
                    A = Q;
                    break
                }
                Q = Q.R
            }
        }
        var P = bg(F);
        if (fO.insert(A, P), A || N) {
            if (A === N) {
                return c3(A), N = bg(A.site), fO.insert(P, N), P.edge = N.edge = ij(A.site, P.site), dM(A), void dM(N)
            }
            if (!N) {
                return void(P.edge = ij(A.site, P.site))
            }
            c3(A), c3(N);
            var H = A.site,
                B = H.x,
                L = H.y,
                J = F.x - B,
                K = F.y - L,
                D = N.site,
                w = D.x - B,
                O = D.y - L,
                G = 2 * (J * O - K * w),
                k = J * J + K * K,
                b = w * w + O * O,
                q = {
                    x: (O * k - K * b) / G + B,
                    y: (J * b - w * k) / G + L
                };
            hG(N.edge, H, D, q), P.edge = ij(H, F, null, q), N.edge = ij(F, D, null, q), dM(A), dM(N)
        }
    }

    function az(g, z) {
        var v = g.site,
            b = v.x,
            y = v.y,
            m = y - z;
        if (!m) {
            return b
        }
        var d = g.P;
        if (!d) {
            return -1 / 0
        }
        v = d.site;
        var x = v.x,
            w = v.y,
            k = w - z;
        if (!k) {
            return x
        }
        var A = x - b,
            q = 1 / m - 1 / k,
            p = A / k;
        return q ? (-p + Math.sqrt(p * p - 2 * q * (A * A / (-2 * k) - w + k / 2 + y - m / 2))) / q + b : (b + x) / 2
    }

    function jS(d, a) {
        var c = d.N;
        if (c) {
            return az(c, a)
        }
        var b = d.site;
        return b.y === a ? b.x : 1 / 0
    }

    function gj(a) {
        this.site = a, this.edges = []
    }

    function i8(q) {
        for (var H, B, b, G, x, m, E, D, w, I, A = q[0][0], y = q[1][0], z = q[0][1], k = q[1][1], F = hO, C = F.length; C--;) {
            if (x = F[C], x && x.prepare()) {
                for (E = x.edges, D = E.length, m = 0; D > m;) {
                    I = E[m].end(), b = I.x, G = I.y, w = E[++m % D].start(), H = w.x, B = w.y, (gM(b - H) > bO || gM(G - B) > bO) && (E.splice(m, 0, new fG(kj(x.site, I, gM(b - A) < bO && k - G > bO ? {
                        x: A,
                        y: gM(H - A) < bO ? B : k
                    } : gM(G - k) < bO && y - b > bO ? {
                        x: gM(B - k) < bO ? H : y,
                        y: k
                    } : gM(b - y) < bO && G - z > bO ? {
                        x: y,
                        y: gM(H - y) < bO ? B : z
                    } : gM(G - z) < bO && b - A > bO ? {
                        x: gM(B - z) < bO ? H : A,
                        y: z
                    } : null), x.site, null)), ++D)
                }
            }
        }
    }

    function cL(b, a) {
        return a.angle - b.angle
    }

    function cd() {
        bJ(this), this.x = this.y = this.arc = this.site = this.cy = null
    }

    function dM(D) {
        var x = D.P,
            K = D.N;
        if (x && K) {
            var A = x.site,
                w = D.site,
                G = K.site;
            if (A !== G) {
                var C = w.x,
                    O = w.y,
                    N = A.x - C,
                    F = A.y - O,
                    z = G.x - C,
                    J = G.y - O,
                    H = 2 * (N * J - F * z);
                if (!(H >= -jT)) {
                    var I = N * N + F * F,
                        B = z * z + J * J,
                        q = (J * I - F * B) / H,
                        L = (N * B - z * I) / H,
                        J = L + O,
                        E = cJ.pop() || new cd;
                    E.arc = D, E.site = w, E.x = q + C, E.y = J + Math.sqrt(q * q + L * L), E.cy = J, D.circle = E;
                    for (var k = null, b = bQ._; b;) {
                        if (E.y < b.y || E.y === b.y && E.x <= b.x) {
                            if (!b.L) {
                                k = b.P;
                                break
                            }
                            b = b.L
                        } else {
                            if (!b.R) {
                                k = b;
                                break
                            }
                            b = b.R
                        }
                    }
                    bQ.insert(k, E), k || (d9 = E)
                }
            }
        }
    }

    function c3(b) {
        var a = b.circle;
        a && (a.P || (d9 = a.N), bQ.remove(a), cJ.push(a), bJ(a), b.circle = null)
    }

    function dY(f) {
        for (var b, d = ab, c = gw(f[0][0], f[0][1], f[1][0], f[1][1]), a = d.length; a--;) {
            b = d[a], (!bW(b, f) || !c(b) || gM(b.a.x - b.b.x) < bO && gM(b.a.y - b.b.y) < bO) && (b.a = b.b = null, d.splice(a, 1))
        }
    }

    function bW(A, q) {
        var H = A.b;
        if (H) {
            return !0
        }
        var x, k, D = A.a,
            z = q[0][0],
            K = q[1][0],
            J = q[0][1],
            C = q[1][1],
            w = A.l,
            G = A.r,
            E = w.x,
            F = w.y,
            y = G.x,
            b = G.y,
            I = (E + y) / 2,
            B = (F + b) / 2;
        if (b === F) {
            if (z > I || I >= K) {
                return
            }
            if (E > y) {
                if (D) {
                    if (D.y >= C) {
                        return
                    }
                } else {
                    D = {
                        x: I,
                        y: J
                    }
                }
                H = {
                    x: I,
                    y: C
                }
            } else {
                if (D) {
                    if (D.y < J) {
                        return
                    }
                } else {
                    D = {
                        x: I,
                        y: C
                    }
                }
                H = {
                    x: I,
                    y: J
                }
            }
        } else {
            if (x = (E - y) / (b - F), k = B - x * I, -1 > x || x > 1) {
                if (E > y) {
                    if (D) {
                        if (D.y >= C) {
                            return
                        }
                    } else {
                        D = {
                            x: (J - k) / x,
                            y: J
                        }
                    }
                    H = {
                        x: (C - k) / x,
                        y: C
                    }
                } else {
                    if (D) {
                        if (D.y < J) {
                            return
                        }
                    } else {
                        D = {
                            x: (C - k) / x,
                            y: C
                        }
                    }
                    H = {
                        x: (J - k) / x,
                        y: J
                    }
                }
            } else {
                if (b > F) {
                    if (D) {
                        if (D.x >= K) {
                            return
                        }
                    } else {
                        D = {
                            x: z,
                            y: x * z + k
                        }
                    }
                    H = {
                        x: K,
                        y: x * K + k
                    }
                } else {
                    if (D) {
                        if (D.x < z) {
                            return
                        }
                    } else {
                        D = {
                            x: K,
                            y: x * K + k
                        }
                    }
                    H = {
                        x: z,
                        y: x * z + k
                    }
                }
            }
        }
        return A.a = D, A.b = H, !0
    }

    function ds(b, a) {
        this.l = b, this.r = a, this.a = this.b = null
    }

    function ij(f, b, d, c) {
        var a = new ds(f, b);
        return ab.push(a), d && hG(a, f, b, d), c && hG(a, b, f, c), hO[f.i].edges.push(new fG(a, f, b)), hO[b.i].edges.push(new fG(a, b, f)), a
    }

    function kj(d, a, c) {
        var b = new ds(d, null);
        return b.a = a, b.b = c, ab.push(b), b
    }

    function hG(d, a, c, b) {
        d.a || d.b ? d.l === c ? d.b = b : d.a = b : (d.a = b, d.l = a, d.r = c)
    }

    function fG(f, b, d) {
        var c = f.a,
            a = f.b;
        this.edge = f, this.site = b, this.angle = d ? Math.atan2(d.y - b.y, d.x - b.x) : f.l === b ? Math.atan2(a.x - c.x, c.y - a.y) : Math.atan2(c.x - a.x, a.y - c.y)
    }

    function d1() {
        this._ = null
    }

    function bJ(a) {
        a.U = a.C = a.L = a.R = a.P = a.N = null
    }

    function g9(f, b) {
        var d = b,
            c = b.R,
            a = d.U;
        a ? a.L === d ? a.L = c : a.R = c : f._ = c, c.U = a, d.U = c, d.R = c.L, d.R && (d.R.U = d), c.L = d
    }

    function cB(f, b) {
        var d = b,
            c = b.L,
            a = d.U;
        a ? a.L === d ? a.L = c : a.R = c : f._ = c, c.U = a, d.U = c, d.L = c.R, d.L && (d.L.U = d), c.R = d
    }

    function bn(a) {
        for (; a.L;) {
            a = a.L
        }
        return a
    }

    function fQ(h, c) {
        var f, d, a, b = h.sort(dF).pop();
        for (ab = [], hO = new Array(h.length), fO = new d1, bQ = new d1;;) {
            if (a = d9, b && (!a || b.y < a.y || b.y === a.y && b.x < a.x)) {
                (b.x !== f || b.y !== d) && (hO[b.i] = new gj(b), fB(b), f = b.x, d = b.y), b = h.pop()
            } else {
                if (!a) {
                    break
                }
                eg(a.arc)
            }
        }
        c && (dY(c), i8(c));
        var g = {
            cells: hO,
            edges: ab
        };
        return fO = bQ = ab = hO = null, g
    }

    function dF(b, a) {
        return a.y - b.y || a.x - b.x
    }

    function jH(c, a, b) {
        return (c.x - b.x) * (a.y - c.y) - (c.x - a.x) * (b.y - c.y)
    }

    function hV(a) {
        return a.x
    }

    function eQ(a) {
        return a.y
    }

    function b1() {
        return {
            leaf: !0,
            nodes: [],
            point: null,
            x: null,
            y: null
        }
    }

    function gR(f, q, h, b, p, g) {
        if (!f(q, h, b, p, g)) {
            var d = 0.5 * (h + p),
                m = 0.5 * (b + g),
                k = q.nodes;
            k[0] && gR(f, k[0], h, b, d, m), k[1] && gR(f, k[1], d, b, p, m), k[2] && gR(f, k[2], h, m, d, g), k[3] && gR(f, k[3], d, m, p, g)
        }
    }

    function f8(f, s, k, b, q, h, d) {
        var p, m = 1 / 0;
        return function g(c, I, z, t, u) {
            if (!(I > h || z > d || b > t || q > u)) {
                if (a = c.point) {
                    var a, H = s - c.x,
                        B = k - c.y,
                        e = H * H + B * B;
                    if (m > e) {
                        var D = Math.sqrt(m = e);
                        b = s - D, q = k - D, h = s + D, d = k + D, p = a
                    }
                }
                for (var A = c.nodes, E = 0.5 * (I + t), C = 0.5 * (z + u), G = s >= E, F = k >= C, r = F << 1 | G, o = r + 4; o > r; ++r) {
                    if (c = A[3 & r]) {
                        switch (3 & r) {
                            case 0:
                                g(c, I, z, E, C);
                                break;
                            case 1:
                                g(c, E, z, t, C);
                                break;
                            case 2:
                                g(c, I, C, E, u);
                                break;
                            case 3:
                                g(c, E, C, t, u)
                        }
                    }
                }
            }
        }(f, b, q, h, d), p
    }

    function gz(m, f) {
        m = bX.rgb(m), f = bX.rgb(f);
        var h = m.r,
            g = m.g,
            c = m.b,
            d = f.r - h,
            k = f.g - g,
            b = f.b - c;
        return function(a) {
            return "#" + ks(Math.round(h + d * a)) + ks(Math.round(g + k * a)) + ks(Math.round(c + b * a))
        }
    }

    function dh(f, b) {
        var d, c = {},
            a = {};
        for (d in f) {
            d in b ? c[d] = ey(f[d], b[d]) : a[d] = f[d]
        }
        for (d in b) {
            d in f || (a[d] = b[d])
        }
        return function(e) {
            for (d in c) {
                a[d] = c[d](e)
            }
            return a
        }
    }

    function a0(b, a) {
        return b = +b, a = +a,
            function(c) {
                return b * (1 - c) + a * c
            }
    }

    function hA(f, q) {
        var h, b, p, g = fV.lastIndex = dK.lastIndex = 0,
            d = -1,
            m = [],
            k = [];
        for (f += "", q += "";
            (h = fV.exec(f)) && (b = dK.exec(q));) {
            (p = b.index) > g && (p = q.slice(g, p), m[d] ? m[d] += p : m[++d] = p), (h = h[0]) === (b = b[0]) ? m[d] ? m[d] += b : m[++d] = b : (m[++d] = null, k.push({
                i: d,
                x: a0(h, b)
            })), g = dK.lastIndex
        }
        return g < q.length && (p = q.slice(g), m[d] ? m[d] += p : m[++d] = p), m.length < 2 ? k[0] ? (q = k[0].x, function(a) {
            return q(a) + ""
        }) : function() {
            return q
        } : (q = k.length, function(o) {
            for (var c, a = 0; q > a; ++a) {
                m[(c = k[a]).i] = c.x(o)
            }
            return m.join("")
        })
    }

    function ey(d, a) {
        for (var c, b = bX.interpolators.length; --b >= 0 && !(c = bX.interpolators[b](d, a));) {}
        return c
    }

    function j2(m, f) {
        var h, g = [],
            c = [],
            d = m.length,
            k = f.length,
            b = Math.min(m.length, f.length);
        for (h = 0; b > h; ++h) {
            g.push(ey(m[h], f[h]))
        }
        for (; d > h; ++h) {
            c[h] = m[h]
        }
        for (; k > h; ++h) {
            c[h] = f[h]
        }
        return function(a) {
            for (h = 0; b > h; ++h) {
                c[h] = g[h](a)
            }
            return c
        }
    }

    function gV(a) {
        return function(b) {
            return 0 >= b ? 0 : b >= 1 ? 1 : a(b)
        }
    }

    function kp(a) {
        return function(b) {
            return 1 - a(1 - b)
        }
    }

    function iQ(a) {
        return function(b) {
            return 0.5 * (0.5 > b ? a(2 * b) : 2 - a(2 - 2 * b))
        }
    }

    function ah(a) {
        return a * a
    }

    function aI(a) {
        return a * a * a
    }

    function eU(c) {
        if (0 >= c) {
            return 0
        }
        if (c >= 1) {
            return 1
        }
        var a = c * c,
            b = a * c;
        return 4 * (0.5 > c ? b : 3 * (c - a) + b - 0.75)
    }

    function e8(a) {
        return function(b) {
            return Math.pow(b, a)
        }
    }

    function aR(a) {
        return 1 - Math.cos(a * fy)
    }

    function ch(a) {
        return Math.pow(2, 10 * (a - 1))
    }

    function gD(a) {
        return 1 - Math.sqrt(1 - a * a)
    }

    function bA(c, a) {
        var b;
        return arguments.length < 2 && (a = 0.45), arguments.length ? b = a / hz * Math.asin(1 / c) : (c = 1, b = a / 4),
            function(d) {
                return 1 + c * Math.pow(2, -10 * d) * Math.sin((d - b) * hz / a)
            }
    }

    function jA(a) {
        return a || (a = 1.70158),
            function(b) {
                return b * b * ((a + 1) * b - a)
            }
    }

    function cW(a) {
        return 1 / 2.75 > a ? 7.5625 * a * a : 2 / 2.75 > a ? 7.5625 * (a -= 1.5 / 2.75) * a + 0.75 : 2.5 / 2.75 > a ? 7.5625 * (a -= 2.25 / 2.75) * a + 0.9375 : 7.5625 * (a -= 2.625 / 2.75) * a + 0.984375
    }

    function hg(m, f) {
        m = bX.hcl(m), f = bX.hcl(f);
        var h = m.h,
            g = m.c,
            c = m.l,
            d = f.h - h,
            k = f.c - g,
            b = f.l - c;
        return isNaN(k) && (k = 0, g = isNaN(g) ? f.c : g), isNaN(d) ? (d = 0, h = isNaN(h) ? f.h : h) : d > 180 ? d -= 360 : -180 > d && (d += 360),
            function(a) {
                return b3(h + d * a, g + k * a, c + b * a) + ""
            }
    }

    function eC(m, f) {
        m = bX.hsl(m), f = bX.hsl(f);
        var h = m.h,
            g = m.s,
            c = m.l,
            d = f.h - h,
            k = f.s - g,
            b = f.l - c;
        return isNaN(k) && (k = 0, g = isNaN(g) ? f.s : g), isNaN(d) ? (d = 0, h = isNaN(h) ? f.h : h) : d > 180 ? d -= 360 : -180 > d && (d += 360),
            function(a) {
                return hX(h + d * a, g + k * a, c + b * a) + ""
            }
    }

    function ff(m, f) {
        m = bX.lab(m), f = bX.lab(f);
        var h = m.l,
            g = m.a,
            c = m.b,
            d = f.l - h,
            k = f.a - g,
            b = f.b - c;
        return function(a) {
            return f9(h + d * a, g + k * a, c + b * a) + ""
        }
    }

    function a9(b, a) {
        return a -= b,
            function(c) {
                return Math.round(b + a * c)
            }
    }

    function fU(g) {
        var c = [g.a, g.b],
            f = [g.c, g.d],
            d = fz(c),
            a = d8(c, f),
            b = fz(aq(f, c, -a)) || 0;
        c[0] * f[1] < f[0] * c[1] && (c[0] *= -1, c[1] *= -1, d *= -1, a *= -1), this.rotate = (d ? Math.atan2(c[1], c[0]) : Math.atan2(-f[0], f[1])) * f7, this.translate = [g.e, g.f], this.scale = [d, b], this.skew = b ? Math.atan2(a, b) * f7 : 0
    }

    function d8(b, a) {
        return b[0] * a[0] + b[1] * a[1]
    }

    function fz(b) {
        var a = Math.sqrt(d8(b, b));
        return a && (b[0] /= a, b[1] /= a), a
    }

    function aq(c, a, b) {
        return c[0] += b * a[0], c[1] += b * a[1], c
    }

    function jN(m, D) {
        var z, b = [],
            C = [],
            v = bX.transform(m),
            k = bX.transform(D),
            B = v.translate,
            A = k.translate,
            q = v.rotate,
            E = k.rotate,
            y = v.skew,
            w = k.skew,
            x = v.scale,
            d = k.scale;
        return B[0] != A[0] || B[1] != A[1] ? (b.push("translate(", null, ",", null, ")"), C.push({
                i: 1,
                x: a0(B[0], A[0])
            }, {
                i: 3,
                x: a0(B[1], A[1])
            })) : b.push(A[0] || A[1] ? "translate(" + A + ")" : ""), q != E ? (q - E > 180 ? E += 360 : E - q > 180 && (q += 360), C.push({
                i: b.push(b.pop() + "rotate(", null, ")") - 2,
                x: a0(q, E)
            })) : E && b.push(b.pop() + "rotate(" + E + ")"), y != w ? C.push({
                i: b.push(b.pop() + "skewX(", null, ")") - 2,
                x: a0(y, w)
            }) : w && b.push(b.pop() + "skewX(" + w + ")"), x[0] != d[0] || x[1] != d[1] ? (z = b.push(b.pop() + "scale(", null, ",", null, ")"), C.push({
                i: z - 4,
                x: a0(x[0], d[0])
            }, {
                i: z - 2,
                x: a0(x[1], d[1])
            })) : (1 != d[0] || 1 != d[1]) && b.push(b.pop() + "scale(" + d + ")"), z = C.length,
            function(e) {
                for (var c, a = -1; ++a < z;) {
                    b[(c = C[a]).i] = c.x(e)
                }
                return b.join("")
            }
    }

    function gf(b, a) {
        return a = (a -= b = +b) || 1 / a,
            function(c) {
                return (c - b) / a
            }
    }

    function i2(b, a) {
        return a = (a -= b = +b) || 1 / a,
            function(c) {
                return Math.max(0, Math.min(1, (c - b) / a))
            }
    }

    function cI(g) {
        for (var c = g.source, f = g.target, d = dJ(c, f), a = [c]; c !== d;) {
            c = c.parent, a.push(c)
        }
        for (var b = a.length; f !== d;) {
            a.splice(b, 0, f), f = f.parent
        }
        return a
    }

    function b8(c) {
        for (var a = [], b = c.parent; null != b;) {
            a.push(c), c = b, b = b.parent
        }
        return a.push(c), a
    }

    function dJ(h, c) {
        if (h === c) {
            return h
        }
        for (var f = b8(h), d = b8(c), a = f.pop(), b = d.pop(), g = null; a === b;) {
            g = a, a = f.pop(), b = d.pop()
        }
        return g
    }

    function c0(a) {
        a.fixed |= 2
    }

    function dU(a) {
        a.fixed &= -7
    }

    function bS(a) {
        a.fixed |= 4, a.px = a.x, a.py = a.y
    }

    function dn(a) {
        a.fixed &= -5
    }

    function h7(f, s, k) {
        var b = 0,
            q = 0;
        if (f.charge = 0, !f.leaf) {
            for (var h, d = f.nodes, p = d.length, m = -1; ++m < p;) {
                h = d[m], null != h && (h7(h, s, k), f.charge += h.charge, b += h.charge * h.cx, q += h.charge * h.cy)
            }
        }
        if (f.point) {
            f.leaf || (f.point.x += Math.random() - 0.5, f.point.y += Math.random() - 0.5);
            var g = s * k[f.point.index];
            f.charge += f.pointCharge = g, b += g * f.point.x, q += g * f.point.y
        }
        f.cx = b / f.charge, f.cy = q / f.charge
    }

    function kd(b, a) {
        return bX.rebind(b, a, "sort", "children", "value"), b.nodes = b, b.links = cM, b
    }

    function hD(f, b) {
        for (var d = [f]; null != (f = d.pop());) {
            if (b(f), (a = f.children) && (c = a.length)) {
                for (var c, a; --c >= 0;) {
                    d.push(a[c])
                }
            }
        }
    }

    function fD(h, c) {
        for (var f = [h], d = []; null != (h = f.pop());) {
            if (d.push(h), (b = h.children) && (a = b.length)) {
                for (var a, b, g = -1;
                    ++g < a;) {
                    f.push(b[g])
                }
            }
        }
        for (; null != (h = d.pop());) {
            c(h)
        }
    }

    function eh(a) {
        return a.children
    }

    function bR(a) {
        return a.value
    }

    function hm(b, a) {
        return a.value - b.value
    }

    function cM(a) {
        return bX.merge(a.map(function(b) {
            return (b.children || []).map(function(c) {
                return {
                    source: b,
                    target: c
                }
            })
        }))
    }

    function bz(a) {
        return a.x
    }

    function fY(a) {
        return a.y
    }

    function dN(c, a, b) {
        c.y0 = a, c.y = b
    }

    function jU(a) {
        return bX.range(a.length)
    }

    function im(d) {
        for (var a = -1, c = d[0].length, b = []; ++a < c;) {
            b[a] = 0
        }
        return b
    }

    function eY(g) {
        for (var c, f = 1, d = 0, a = g[0][1], b = g.length; b > f; ++f) {
            (c = g[f][1]) > a && (d = f, a = c)
        }
        return d
    }

    function cf(a) {
        return a.reduce(gZ, 0)
    }

    function gZ(b, a) {
        return b + a[1]
    }

    function gk(b, a) {
        return gH(b, Math.ceil(Math.log(a.length) / Math.LN2 + 1))
    }

    function gH(g, c) {
        for (var f = -1, d = +g[0], a = (g[1] - d) / c, b = []; ++f <= c;) {
            b[f] = a * f + d
        }
        return b
    }

    function dv(a) {
        return [bX.min(a), bX.max(a)]
    }

    function a8(b, a) {
        return b.value - a.value
    }

    function hH(c, a) {
        var b = c._pack_next;
        c._pack_next = a, a._pack_prev = c, a._pack_next = b, b._pack_prev = a
    }

    function eG(b, a) {
        b._pack_next = a, a._pack_prev = b
    }

    function kb(f, b) {
        var d = b.x - f.x,
            c = b.y - f.y,
            a = f.r + b.r;
        return 0.999 * a * a > d * d + c * c
    }

    function g5(D) {
        function x(a) {
            z = Math.min(a.x - a.r, z), J = Math.max(a.x + a.r, J), H = Math.min(a.y - a.r, H), I = Math.max(a.y + a.r, I)
        }
        if ((K = D.children) && (F = K.length)) {
            var K, A, w, G, C, O, N, F, z = 1 / 0,
                J = -1 / 0,
                H = 1 / 0,
                I = -1 / 0;
            if (K.forEach(an), A = K[0], A.x = -A.r, A.y = 0, x(A), F > 1 && (w = K[1], w.x = w.r, w.y = 0, x(w), F > 2)) {
                for (G = K[2], aQ(A, w, G), x(G), hH(A, G), A._pack_prev = G, hH(G, w), w = A._pack_next, C = 3; F > C; C++) {
                    aQ(A, w, G = K[C]);
                    var B = 0,
                        q = 1,
                        L = 1;
                    for (O = w._pack_next; O !== w; O = O._pack_next, q++) {
                        if (kb(O, G)) {
                            B = 1;
                            break
                        }
                    }
                    if (1 == B) {
                        for (N = A._pack_prev; N !== O._pack_prev && !kb(N, G); N = N._pack_prev, L++) {}
                    }
                    B ? (L > q || q == L && w.r < A.r ? eG(A, w = O) : eG(A = N, w), C--) : (hH(A, G), w = G, x(G))
                }
            }
            var E = (z + J) / 2,
                k = (H + I) / 2,
                b = 0;
            for (C = 0; F > C; C++) {
                G = K[C], G.x -= E, G.y -= k, b = Math.max(b, G.r + Math.sqrt(G.x * G.x + G.y * G.y))
            }
            D.r = b, K.forEach(i9)
        }
    }

    function an(a) {
        a._pack_next = a._pack_prev = a
    }

    function i9(a) {
        delete a._pack_next, delete a._pack_prev
    }

    function aB(h, c, f, d) {
        var a = h.children;
        if (h.x = c += d * h.x, h.y = f += d * h.y, h.r *= d, a) {
            for (var b = -1, g = a.length;
                ++b < g;) {
                aB(a[b], c, f, d)
            }
        }
    }

    function aQ(f, s, k) {
        var b = f.r + k.r,
            q = s.x - f.x,
            h = s.y - f.y;
        if (b && (q || h)) {
            var d = s.r + k.r,
                p = q * q + h * h;
            d *= d, b *= b;
            var m = 0.5 + (b - d) / (2 * p),
                g = Math.sqrt(Math.max(0, 2 * d * (b + p) - (b -= p) * b - d * d)) / (2 * p);
            k.x = f.x + m * q + g * h, k.y = f.y + m * h - g * q
        } else {
            k.x = f.x + b, k.y = f.y
        }
    }

    function e4(b, a) {
        return b.parent == a.parent ? 1 : 2
    }

    function fk(b) {
        var a = b.children;
        return a.length ? a[0] : b.t
    }

    function aZ(c) {
        var a, b = c.children;
        return (a = b.length) ? b[a - 1] : c.t
    }

    function cA(d, a, c) {
        var b = c / (a.i - d.i);
        a.c -= b, a.s += c, d.c += b, a.z += c, a.m += c
    }

    function gN(g) {
        for (var c, f = 0, d = 0, a = g.children, b = a.length; --b >= 0;) {
            c = a[b], c.z += f, c.m += f, f += c.s + (d += c.c)
        }
    }

    function bI(c, a, b) {
        return c.a.parent === a.parent ? c.a : b
    }

    function jL(a) {
        return 1 + bX.max(a, function(b) {
            return b.y
        })
    }

    function c4(a) {
        return a.reduce(function(c, b) {
            return c + b.x
        }, 0) / a.length
    }

    function hw(b) {
        var a = b.children;
        return a && a.length ? hw(a[0]) : b
    }

    function eM(c) {
        var a, b = c.children;
        return b && (a = b.length) ? eM(b[a - 1]) : c
    }

    function fv(a) {
        return {
            x: a.x,
            y: a.y,
            dx: a.dx,
            dy: a.dy
        }
    }

    function bm(g, c) {
        var f = g.x + c[3],
            d = g.y + c[0],
            a = g.dx - c[1] - c[3],
            b = g.dy - c[0] - c[2];
        return 0 > a && (f += a / 2, a = 0), 0 > b && (d += b / 2, b = 0), {
            x: f,
            y: d,
            dx: a,
            dy: b
        }
    }

    function f4(c) {
        var a = c[0],
            b = c[c.length - 1];
        return b > a ? [a, b] : [b, a]
    }

    function es(a) {
        return a.rangeExtent ? a.rangeExtent() : f4(a.range())
    }

    function fH(g, c, f, d) {
        var a = f(g[0], g[1]),
            b = d(c[0], c[1]);
        return function(e) {
            return b(a(e))
        }
    }

    function aH(h, c) {
        var f, d = 0,
            a = h.length - 1,
            b = h[d],
            g = h[a];
        return b > g && (f = d, d = a, a = f, f = b, b = g, g = f), h[d] = c.floor(b), h[a] = c.ceil(g), h
    }

    function j0(a) {
        return a ? {
            floor: function(b) {
                return Math.floor(b / a) * a
            },
            ceil: function(b) {
                return Math.ceil(b / a) * a
            }
        } : eD
    }

    function gv(m, f, h, g) {
        var c = [],
            d = [],
            k = 0,
            b = Math.min(m.length, f.length) - 1;
        for (m[b] < m[0] && (m = m.slice().reverse(), f = f.slice().reverse()); ++k <= b;) {
            c.push(h(m[k - 1], m[k])), d.push(g(f[k - 1], f[k]))
        }
        return function(a) {
            var n = bX.bisect(m, a, 1, b) - 1;
            return d[n](c[n](a))
        }
    }

    function jw(m, f, h, g) {
        function c() {
            var a = Math.min(m.length, f.length) > 2 ? gv : fH,
                e = g ? i2 : gf;
            return k = a(m, f, e, h), b = a(f, m, e, ey), d
        }

        function d(a) {
            return k(a)
        }
        var k, b;
        return d.invert = function(a) {
            return b(a)
        }, d.domain = function(a) {
            return arguments.length ? (m = a.map(Number), c()) : m
        }, d.range = function(a) {
            return arguments.length ? (f = a, c()) : f
        }, d.rangeRound = function(a) {
            return d.range(a).interpolate(a9)
        }, d.clamp = function(a) {
            return arguments.length ? (g = a, c()) : g
        }, d.interpolate = function(a) {
            return arguments.length ? (h = a, c()) : h
        }, d.ticks = function(a) {
            return db(m, a)
        }, d.tickFormat = function(a, n) {
            return d6(m, a, n)
        }, d.nice = function(a) {
            return cs(m, a), c()
        }, d.copy = function() {
            return jw(m, f, h, g)
        }, c()
    }

    function cS(b, a) {
        return bX.rebind(b, a, "range", "rangeRound", "interpolate", "clamp")
    }

    function cs(b, a) {
        return aH(b, j0(dT(b, a)[2]))
    }

    function dT(g, c) {
        null == c && (c = 10);
        var f = f4(g),
            d = f[1] - f[0],
            a = Math.pow(10, Math.floor(Math.log(d / c) / Math.LN10)),
            b = c / d * a;
        return 0.15 >= b ? a *= 10 : 0.35 >= b ? a *= 5 : 0.75 >= b && (a *= 2), f[0] = Math.ceil(f[0] / a) * a, f[1] = Math.floor(f[1] / a) * a + 0.5 * a, f[2] = a, f
    }

    function db(b, a) {
        return bX.range.apply(bX, dT(b, a))
    }

    function d6(g, c, f) {
        var d = dT(g, c);
        if (f) {
            var a = f2.exec(f);
            if (a.shift(), "s" === a[8]) {
                var b = bX.formatPrefix(Math.max(gM(d[0]), gM(d[1])));
                return a[7] || (a[7] = "." + b0(b.scale(d[2]))), a[8] = "f", f = bX.format(a.join("")),
                    function(e) {
                        return f(b.scale(e)) + b.symbol
                    }
            }
            a[7] || (a[7] = "." + dB(a[8], d)), f = a.join("")
        } else {
            f = ",." + b0(d[2]) + "f"
        }
        return bX.format(f)
    }

    function b0(a) {
        return -Math.floor(Math.log(a) / Math.LN10 + 0.01)
    }

    function dB(c, a) {
        var b = b0(a[2]);
        return c in j9 ? Math.abs(b - b0(Math.max(gM(a[0]), gM(a[1])))) + +("e" !== c) : b - 2 * ("%" === c)
    }

    function iF(h, c, f, d) {
        function a(e) {
            return (f ? Math.log(0 > e ? 0 : e) : -Math.log(e > 0 ? 0 : -e)) / Math.log(c)
        }

        function b(e) {
            return f ? Math.pow(c, e) : -Math.pow(c, -e)
        }

        function g(e) {
            return h(a(e))
        }
        return g.invert = function(e) {
            return b(h.invert(e))
        }, g.domain = function(e) {
            return arguments.length ? (f = e[0] >= 0, h.domain((d = e.map(Number)).map(a)), g) : d
        }, g.base = function(k) {
            return arguments.length ? (c = +k, h.domain(d.map(a)), g) : c
        }, g.nice = function() {
            var e = aH(d.map(a), f ? Math : aj);
            return h.domain(e), d = e.map(b), g
        }, g.ticks = function() {
            var u = f4(d),
                r = [],
                k = u[0],
                t = u[1],
                e = Math.floor(a(k)),
                p = Math.ceil(a(t)),
                q = c % 1 ? 2 : c;
            if (isFinite(p - e)) {
                if (f) {
                    for (; p > e; e++) {
                        for (var m = 1; q > m; m++) {
                            r.push(b(e) * m)
                        }
                    }
                    r.push(b(e))
                } else {
                    for (r.push(b(e)); e++ < p;) {
                        for (var m = q - 1; m > 0; m--) {
                            r.push(b(e) * m)
                        }
                    }
                }
                for (e = 0; r[e] < k; e++) {}
                for (p = r.length; r[p - 1] > t; p--) {}
                r = r.slice(e, p)
            }
            return r
        }, g.tickFormat = function(p, k) {
            if (!arguments.length) {
                return g2
            }
            arguments.length < 2 ? k = g2 : "function" != typeof k && (k = bX.format(k));
            var m, e = Math.max(0.1, p / g.ticks().length),
                o = f ? (m = 1e-12, Math.ceil) : (m = -1e-12, Math.floor);
            return function(q) {
                return q / b(o(a(q) + m)) <= e ? k(q) : ""
            }
        }, g.copy = function() {
            return iF(h.copy(), c, f, d)
        }, cS(g, h)
    }

    function kn(g, c, f) {
        function d(e) {
            return g(a(e))
        }
        var a = hM(c),
            b = hM(1 / c);
        return d.invert = function(e) {
            return b(g.invert(e))
        }, d.domain = function(e) {
            return arguments.length ? (g.domain((f = e.map(Number)).map(a)), d) : f
        }, d.ticks = function(e) {
            return db(f, e)
        }, d.tickFormat = function(h, e) {
            return d6(f, h, e)
        }, d.nice = function(e) {
            return d.domain(cs(f, e))
        }, d.exponent = function(e) {
            return arguments.length ? (a = hM(c = e), b = hM(1 / c), g.domain(f.map(a)), d) : c
        }, d.copy = function() {
            return kn(g.copy(), c, f)
        }, cS(d, g)
    }

    function hM(a) {
        return function(b) {
            return 0 > b ? -Math.pow(-b, a) : Math.pow(b, a)
        }
    }

    function fM(h, c) {
        function f(k) {
            return b[((a.get(k) || ("range" === c.t ? a.set(k, h.push(k)) : 0 / 0)) - 1) % b.length]
        }

        function d(k, m) {
            return bX.range(h.length).map(function(e) {
                return k + m * e
            })
        }
        var a, b, g;
        return f.domain = function(m) {
            if (!arguments.length) {
                return h
            }
            h = [], a = new ig;
            for (var k, n = -1, e = m.length; ++n < e;) {
                a.has(k = m[n]) || a.set(k, h.push(k))
            }
            return f[c.t].apply(f, c.a)
        }, f.range = function(e) {
            return arguments.length ? (b = e, g = 0, c = {
                t: "range",
                a: arguments
            }, f) : b
        }, f.rangePoints = function(m, k) {
            arguments.length < 2 && (k = 0);
            var o = m[0],
                e = m[1],
                n = h.length < 2 ? (o = (o + e) / 2, 0) : (e - o) / (h.length - 1 + k);
            return b = d(o + n * k / 2, n), g = 0, c = {
                t: "rangePoints",
                a: arguments
            }, f
        }, f.rangeRoundPoints = function(m, k) {
            arguments.length < 2 && (k = 0);
            var o = m[0],
                e = m[1],
                n = h.length < 2 ? (o = e = Math.round((o + e) / 2), 0) : (e - o) / (h.length - 1 + k) | 0;
            return b = d(o + Math.round(n * k / 2 + (e - o - (h.length - 1 + k) * n) / 2), n), g = 0, c = {
                t: "rangeRoundPoints",
                a: arguments
            }, f
        }, f.rangeBands = function(m, k, q) {
            arguments.length < 2 && (k = 0), arguments.length < 3 && (q = k);
            var e = m[1] < m[0],
                o = m[e - 0],
                p = m[1 - e],
                n = (p - o) / (h.length - k + 2 * q);
            return b = d(o + n * q, n), e && b.reverse(), g = n * (1 - k), c = {
                t: "rangeBands",
                a: arguments
            }, f
        }, f.rangeRoundBands = function(m, k, q) {
            arguments.length < 2 && (k = 0), arguments.length < 3 && (q = k);
            var e = m[1] < m[0],
                o = m[e - 0],
                p = m[1 - e],
                n = Math.floor((p - o) / (h.length - k + 2 * q));
            return b = d(o + Math.round((p - o - (h.length - k) * n) / 2), n), e && b.reverse(), g = Math.round(n * (1 - k)), c = {
                t: "rangeRoundBands",
                a: arguments
            }, f
        }, f.rangeBand = function() {
            return g
        }, f.rangeExtent = function() {
            return f4(c.a[0])
        }, f.copy = function() {
            return fM(h, c)
        }, f.domain(h)
    }

    function d7(f, d) {
        function c() {
            var g = 0,
                a = d.length;
            for (b = []; ++g < a;) {
                b[g - 1] = bX.quantile(f, g / a)
            }
            return e
        }

        function e(a) {
            return isNaN(a = +a) ? void 0 : d[bX.bisect(b, a)]
        }
        var b;
        return e.domain = function(a) {
            return arguments.length ? (f = a.map(h1).filter(hW).sort(iA), c()) : f
        }, e.range = function(a) {
            return arguments.length ? (d = a, c()) : d
        }, e.quantiles = function() {
            return b
        }, e.invertExtent = function(a) {
            return a = d.indexOf(a), 0 > a ? [0 / 0, 0 / 0] : [a > 0 ? b[a - 1] : f[0], a < b.length ? b[a] : f[f.length - 1]]
        }, e.copy = function() {
            return d7(f, d)
        }, c()
    }

    function bP(h, c, f) {
        function d(e) {
            return f[Math.max(0, Math.min(g, Math.floor(b * (e - h))))]
        }

        function a() {
            return b = f.length / (c - h), g = f.length - 1, d
        }
        var b, g;
        return d.domain = function(k) {
            return arguments.length ? (h = +k[0], c = +k[k.length - 1], a()) : [h, c]
        }, d.range = function(e) {
            return arguments.length ? (f = e, a()) : f
        }, d.invertExtent = function(e) {
            return e = f.indexOf(e), e = 0 > e ? 0 / 0 : e / b + h, [e, e + 1 / b]
        }, d.copy = function() {
            return bP(h, c, f)
        }, a()
    }

    function hf(c, a) {
        function b(d) {
            return d >= d ? a[bX.bisect(c, d)] : void 0
        }
        return b.domain = function(d) {
            return arguments.length ? (c = d, b) : c
        }, b.range = function(d) {
            return arguments.length ? (a = d, b) : a
        }, b.invertExtent = function(d) {
            return d = a.indexOf(d), [c[d - 1], c[d]]
        }, b.copy = function() {
            return hf(c, a)
        }, b
    }

    function cH(b) {
        function a(c) {
            return +c
        }
        return a.invert = a, a.domain = a.range = function(c) {
            return arguments.length ? (b = c.map(a), a) : b
        }, a.ticks = function(c) {
            return db(b, c)
        }, a.tickFormat = function(c, d) {
            return d6(b, c, d)
        }, a.copy = function() {
            return cH(b)
        }, a
    }

    function bx() {
        return 0
    }

    function fT(a) {
        return a.innerRadius
    }

    function dI(a) {
        return a.outerRadius
    }

    function jM(a) {
        return a.startAngle
    }

    function h3(a) {
        return a.endAngle
    }

    function eT(a) {
        return a && a.padAngle
    }

    function b7(d, a, c, b) {
        return (d - c) * a - (a - b) * d > 0 ? 0 : 1
    }

    function gU(U, K, ae, P, I) {
        var Y = U[0] - K[0],
            T = U[1] - K[1],
            ar = (I ? P : -P) / Math.sqrt(Y * Y + T * T),
            al = ar * T,
            W = -ar * Y,
            L = U[0] + al,
            ac = U[1] + W,
            Z = K[0] + al,
            aa = K[1] + W,
            R = (L + Z) / 2,
            H = (ac + aa) / 2,
            ai = Z - L,
            V = aa - ac,
            D = ai * ai + V * V,
            B = ae - P,
            F = L * aa - Z * ac,
            ao = (0 > V ? -1 : 1) * Math.sqrt(B * B * D - F * F),
            at = (F * V - ai * ao) / D,
            G = (-F * ai - V * ao) / D,
            q = (F * V + ai * ao) / D,
            X = (-F * ai + V * ao) / D,
            J = at - R,
            Q = G - H,
            z = q - R,
            O = X - H;
        return J * J + Q * Q > z * z + O * O && (at = q, G = X), [
            [at - al, G - W],
            [at * ae / B, G * ae / B]
        ]
    }

    function gd(m) {
        function f(w) {
            function e() {
                n.push("M", d(m(x), b))
            }
            for (var v, n = [], x = [], u = -1, q = w.length, r = aT(h), a = aT(g); ++u < q;) {
                c.call(this, v = w[u], u) ? x.push([+r.call(this, v, u), +a.call(this, v, u)]) : x.length && (e(), x = [])
            }
            return x.length && e(), n.length ? n.join("") : null
        }
        var h = cp,
            g = gG,
            c = gO,
            d = gC,
            k = d.key,
            b = 0.7;
        return f.x = function(a) {
            return arguments.length ? (h = a, f) : h
        }, f.y = function(a) {
            return arguments.length ? (g = a, f) : g
        }, f.defined = function(a) {
            return arguments.length ? (c = a, f) : c
        }, f.interpolate = function(a) {
            return arguments.length ? (k = "function" == typeof a ? d = a : (d = aY.get(a) || gC).key, f) : k
        }, f.tension = function(a) {
            return arguments.length ? (b = a, f) : b
        }, f
    }

    function gC(a) {
        return a.join("L")
    }

    function dm(a) {
        return gC(a) + "Z"
    }

    function a6(f) {
        for (var b = 0, d = f.length, c = f[0], a = [c[0], ",", c[1]]; ++b < d;) {
            a.push("H", (c[0] + (c = f[b])[0]) / 2, "V", c[1])
        }
        return d > 1 && a.push("H", c[0]), a.join("")
    }

    function eB(f) {
        for (var b = 0, d = f.length, c = f[0], a = [c[0], ",", c[1]]; ++b < d;) {
            a.push("V", (c = f[b])[1], "H", c[0])
        }
        return a.join("")
    }

    function j8(f) {
        for (var b = 0, d = f.length, c = f[0], a = [c[0], ",", c[1]]; ++b < d;) {
            a.push("H", (c = f[b])[0], "V", c[1])
        }
        return a.join("")
    }

    function g0(b, a) {
        return b.length < 4 ? gC(b) : b[1] + ap(b.slice(1, -1), aO(b, a))
    }

    function ag(b, a) {
        return b.length < 3 ? gC(b) : b[0] + ap((b.push(b[0]), b), aO([b[b.length - 2]].concat(b, [b[1]]), a))
    }

    function iY(b, a) {
        return b.length < 3 ? gC(b) : b[0] + ap(b, aO(b, a))
    }

    function ap(f, v) {
        if (v.length < 1 || f.length != v.length && f.length != v.length + 2) {
            return gC(f)
        }
        var k = f.length != v.length,
            b = "",
            q = f[0],
            h = f[1],
            d = v[0],
            p = d,
            m = 1;
        if (k && (b += "Q" + (h[0] - 2 * d[0] / 3) + "," + (h[1] - 2 * d[1] / 3) + "," + h[0] + "," + h[1], q = f[1], m = 2), v.length > 1) {
            p = v[1], h = f[m], m++, b += "C" + (q[0] + d[0]) + "," + (q[1] + d[1]) + "," + (h[0] - p[0]) + "," + (h[1] - p[1]) + "," + h[0] + "," + h[1];
            for (var g = 2; g < v.length; g++, m++) {
                h = f[m], p = v[g], b += "S" + (h[0] - p[0]) + "," + (h[1] - p[1]) + "," + h[0] + "," + h[1]
            }
        }
        if (k) {
            var w = f[m];
            b += "Q" + (h[0] + 2 * p[0] / 3) + "," + (h[1] + 2 * p[1] / 3) + "," + w[0] + "," + w[1]
        }
        return b
    }

    function aO(f, q) {
        for (var h, b = [], p = (1 - q) / 2, g = f[0], d = f[1], m = 1, k = f.length; ++m < k;) {
            h = g, g = d, d = f[m], b.push([p * (d[0] - h[0]), p * (d[1] - h[1])])
        }
        return b
    }

    function eZ(f) {
        if (f.length < 3) {
            return gC(f)
        }
        var q = 1,
            h = f.length,
            b = f[0],
            p = b[0],
            g = b[1],
            d = [p, p, p, (b = f[1])[0]],
            m = [g, g, g, b[1]],
            k = [p, ",", g, "L", gI(bH, d), ",", gI(bH, m)];
        for (f.push(f[h - 1]); ++q <= h;) {
            b = f[q], d.shift(), d.push(b[0]), m.shift(), m.push(b[1]), bG(k, d, m)
        }
        return f.pop(), k.push("L", b), k.join("")
    }

    function fd(h) {
        if (h.length < 4) {
            return gC(h)
        }
        for (var c, f = [], d = -1, a = h.length, b = [0], g = [0]; ++d < 3;) {
            c = h[d], b.push(c[0]), g.push(c[1])
        }
        for (f.push(gI(bH, b) + "," + gI(bH, g)), --d; ++d < a;) {
            c = h[d], b.shift(), b.push(c[0]), g.shift(), g.push(c[1]), bG(f, b, g)
        }
        return f.join("")
    }

    function aX(m) {
        for (var f, h, g = -1, c = m.length, d = c + 4, k = [], b = []; ++g < 4;) {
            h = m[g % c], k.push(h[0]), b.push(h[1])
        }
        for (f = [gI(bH, k), ",", gI(bH, b)], --g; ++g < d;) {
            h = m[g % c], k.shift(), k.push(h[0]), b.shift(), b.push(h[1]), bG(f, k, b)
        }
        return f.join("")
    }

    function cv(f, s) {
        var k = f.length - 1;
        if (k) {
            for (var b, q, h = f[0][0], d = f[0][1], p = f[k][0] - h, m = f[k][1] - d, g = -1; ++g <= k;) {
                b = f[g], q = g / k, b[0] = s * b[0] + (1 - s) * (h + q * p), b[1] = s * b[1] + (1 - s) * (d + q * m)
            }
        }
        return eZ(f)
    }

    function gI(b, a) {
        return b[0] * a[0] + b[1] * a[1] + b[2] * a[2] + b[3] * a[3]
    }

    function bG(c, a, b) {
        c.push("C", gI(cx, a), ",", gI(cx, b), ",", gI(gK, a), ",", gI(gK, b), ",", gI(bH, a), ",", gI(bH, b))
    }

    function jG(b, a) {
        return (a[1] - b[1]) / (a[0] - b[0])
    }

    function cZ(h) {
        for (var c = 0, f = h.length - 1, d = [], a = h[0], b = h[1], g = d[0] = jG(a, b); ++c < f;) {
            d[c] = (g + (g = jG(a = b, b = h[c + 1]))) / 2
        }
        return d[c] = g, d
    }

    function hn(f) {
        for (var q, h, b, p, g = [], d = cZ(f), m = -1, k = f.length - 1; ++m < k;) {
            q = jG(f[m], f[m + 1]), gM(q) < bO ? d[m] = d[m + 1] = 0 : (h = d[m] / q, b = d[m + 1] / q, p = h * h + b * b, p > 9 && (p = 3 * q / Math.sqrt(p), d[m] = p * h, d[m + 1] = p * b))
        }
        for (m = -1; ++m <= k;) {
            p = (f[Math.min(k, m + 1)][0] - f[Math.max(0, m - 1)][0]) / (6 * (1 + d[m] * d[m])), g.push([p || 0, d[m] * p || 0])
        }
        return g
    }

    function eH(a) {
        return a.length < 3 ? gC(a) : a[0] + ap(a, hn(a))
    }

    function fm(g) {
        for (var c, f, d, a = -1, b = g.length; ++a < b;) {
            c = g[a], f = c[0], d = c[1] - fy, c[0] = f * Math.cos(d), c[1] = f * Math.sin(d)
        }
        return g
    }

    function bj(g) {
        function x(E) {
            function s() {
                D.push("M", v(g(e), m), y, h(g(r.reverse()), m), "Z")
            }
            for (var f, n, a, D = [], r = [], e = [], z = -1, o = E.length, A = aT(p), u = aT(w), C = p === b ? function() {
                    return n
                } : aT(b), B = w === k ? function() {
                    return a
                } : aT(k); ++z < o;) {
                d.call(this, f = E[z], z) ? (r.push([n = +A.call(this, f, z), a = +u.call(this, f, z)]), e.push([+C.call(this, f, z), +B.call(this, f, z)])) : r.length && (s(), r = [], e = [])
            }
            return r.length && s(), D.length ? D.join("") : null
        }
        var p = cp,
            b = cp,
            w = 0,
            k = gG,
            d = gO,
            v = gC,
            q = v.key,
            h = v,
            y = "L",
            m = 0.7;
        return x.x = function(a) {
            return arguments.length ? (p = b = a, x) : b
        }, x.x0 = function(a) {
            return arguments.length ? (p = a, x) : p
        }, x.x1 = function(a) {
            return arguments.length ? (b = a, x) : b
        }, x.y = function(a) {
            return arguments.length ? (w = k = a, x) : k
        }, x.y0 = function(a) {
            return arguments.length ? (w = a, x) : w
        }, x.y1 = function(a) {
            return arguments.length ? (k = a, x) : k
        }, x.defined = function(a) {
            return arguments.length ? (d = a, x) : d
        }, x.interpolate = function(a) {
            return arguments.length ? (q = "function" == typeof a ? v = a : (v = aY.get(a) || gC).key, h = v.reverse || v, y = v.closed ? "M" : "L", x) : q
        }, x.tension = function(a) {
            return arguments.length ? (m = a, x) : m
        }, x
    }

    function fZ(a) {
        return a.radius
    }

    function ek(a) {
        return [a.x, a.y]
    }

    function fC(a) {
        return function() {
            var b = a.apply(this, arguments),
                d = b[0],
                c = b[1] - fy;
            return [d * Math.cos(c), d * Math.sin(c)]
        }
    }

    function aC() {
        return 64
    }

    function jV() {
        return "circle"
    }

    function gm(b) {
        var a = Math.sqrt(b / c9);
        return "M0," + a + "A" + a + "," + a + " 0 1,1 0," + -a + "A" + a + "," + a + " 0 1,1 0," + a + "Z"
    }

    function jf(a) {
        return function() {
            var b, c;
            (b = this[a]) && (c = b[b.active]) && (--b.count ? delete b[b.active] : delete this[a], b.active += 0.5, c.event && c.event.interrupt.call(this, this.__data__, c.index))
        }
    }

    function cN(c, a, b) {
        return kk(c, f1), c.namespace = a, c.id = b, c
    }

    function cg(g, c, f, d) {
        var a = g.id,
            b = g.namespace;
        return iN(g, "function" == typeof f ? function(k, h, e) {
            k[b][a].tween.set(c, d(f.call(k, k.__data__, h, e)))
        } : (f = d(f), function(e) {
            e[b][a].tween.set(c, f)
        }))
    }

    function dO(a) {
        return null == a && (a = ""),
            function() {
                this.textContent = a
            }
    }

    function c5(a) {
        return null == a ? "__transition__" : "__transition_" + a + "__"
    }

    function d0(m, f, h, g, c) {
        var d = m[h] || (m[h] = {
                active: 0,
                count: 0
            }),
            k = d[g];
        if (!k) {
            var b = c.time;
            k = d[g] = {
                tween: new ig,
                time: b,
                delay: c.delay,
                duration: c.duration,
                ease: c.ease,
                index: f
            }, c = null, ++d.count, bX.timer(function(w) {
                function r(s) {
                    if (d.active > g) {
                        return x()
                    }
                    var p = d[d.active];
                    p && (--d.count, delete d[d.active], p.event && p.event.interrupt.call(m, m.__data__, p.index)), d.active = g, k.event && k.event.start.call(m, m.__data__, f), k.tween.forEach(function(v, u) {
                        (u = u.call(m, m.__data__, f)) && t.push(u)
                    }), n = k.ease, q = k.duration, bX.timer(function() {
                        return a.c = e(s || 1) ? gO : e, 1
                    }, 0, b)
                }

                function e(v) {
                    if (d.active !== g) {
                        return 1
                    }
                    for (var s = v / q, p = n(s), y = t.length; y > 0;) {
                        t[--y].call(m, p)
                    }
                    return s >= 1 ? (k.event && k.event.end.call(m, m.__data__, f), x()) : void 0
                }

                function x() {
                    return --d.count ? delete d[g] : delete m[h], 1
                }
                var q, n, o = k.delay,
                    a = hs,
                    t = [];
                return a.t = o + b, w >= o ? r(w - o) : void(a.c = r)
            }, 0, b)
        }
    }

    function bY(c, a, b) {
        c.attr("transform", function(e) {
            var d = a(e);
            return "translate(" + (isFinite(d) ? d : b(e)) + ",0)"
        })
    }

    function dw(c, a, b) {
        c.attr("transform", function(e) {
            var d = a(e);
            return "translate(0," + (isFinite(d) ? d : b(e)) + ")"
        })
    }

    function iq(a) {
        return a.toISOString()
    }

    function km(f, b, d) {
        function c(e) {
            return f(e)
        }

        function a(o, m) {
            var k = o[1] - o[0],
                g = k / m,
                h = bX.bisect(dQ, g);
            return h == dQ.length ? [b.year, dT(o.map(function(e) {
                return e / 31536000000
            }), m)[2]] : h ? b[g / dQ[h - 1] < dQ[h] / g ? h - 1 : h] : [bZ, dT(o, m)[2]]
        }
        return c.invert = function(e) {
            return hI(f.invert(e))
        }, c.domain = function(e) {
            return arguments.length ? (f.domain(e), c) : f.domain().map(hI)
        }, c.nice = function(q, k) {
            function m(n) {
                return !isNaN(n) && !q.range(n, hI(+n + 1), k).length
            }
            var h = c.domain(),
                p = f4(h),
                g = null == q ? a(p, 10) : "number" == typeof q && a(p, q);
            return g && (q = g[0], k = g[1]), c.domain(aH(h, k > 1 ? {
                floor: function(e) {
                    for (; m(e = q.floor(e));) {
                        e = hI(e - 1)
                    }
                    return e
                },
                ceil: function(e) {
                    for (; m(e = q.ceil(e));) {
                        e = hI(+e + 1)
                    }
                    return e
                }
            } : q))
        }, c.ticks = function(m, h) {
            var k = f4(c.domain()),
                g = null == m ? a(k, 10) : "number" == typeof m ? a(k, m) : !m.range && [{
                    range: m
                }, h];
            return g && (m = g[0], h = g[1]), m.range(k[0], hI(+k[1] + 1), 1 > h ? 1 : h)
        }, c.tickFormat = function() {
            return d
        }, c.copy = function() {
            return km(f.copy(), b, d)
        }, cS(c, f)
    }

    function hI(a) {
        return new Date(a)
    }

    function fI(a) {
        return JSON.parse(a.responseText)
    }

    function eq(b) {
        var a = bF.createRange();
        return a.selectNode(bF.body), a.createContextualFragment(b.responseText)
    }
    var bX = {
            version: "3.5.5"
        },
        hv = [].slice,
        cR = function(a) {
            return hv.call(a)
        },
        bF = this.document;
    if (bF) {
        try {
            cR(bF.documentElement.childNodes)[0].nodeType
        } catch (f3) {
            cR = function(c) {
                for (var a = c.length, b = new Array(a); a--;) {
                    b[a] = c[a]
                }
                return b
            }
        }
    }
    if (Date.now || (Date.now = function() {
            return +new Date
        }), bF) {
        try {
            bF.createElement("DIV").style.setProperty("opacity", 0, "")
        } catch (dS) {
            var jZ = this.Element.prototype,
                iE = jZ.setAttribute,
                e3 = jZ.setAttributeNS,
                cq = this.CSSStyleDeclaration.prototype,
                g4 = cq.setProperty;
            jZ.setAttribute = function(b, a) {
                iE.call(this, b, a + "")
            }, jZ.setAttributeNS = function(c, a, b) {
                e3.call(this, c, a, b + "")
            }, cq.setProperty = function(c, a, b) {
                g4.call(this, c, a + "", b)
            }
        }
    }
    bX.ascending = iA, bX.descending = function(b, a) {
        return b > a ? -1 : a > b ? 1 : a >= b ? 0 : 0 / 0
    }, bX.min = function(g, c) {
        var f, d, a = -1,
            b = g.length;
        if (1 === arguments.length) {
            for (; ++a < b;) {
                if (null != (d = g[a]) && d >= d) {
                    f = d;
                    break
                }
            }
            for (; ++a < b;) {
                null != (d = g[a]) && f > d && (f = d)
            }
        } else {
            for (; ++a < b;) {
                if (null != (d = c.call(g, g[a], a)) && d >= d) {
                    f = d;
                    break
                }
            }
            for (; ++a < b;) {
                null != (d = c.call(g, g[a], a)) && f > d && (f = d)
            }
        }
        return f
    }, bX.max = function(g, c) {
        var f, d, a = -1,
            b = g.length;
        if (1 === arguments.length) {
            for (; ++a < b;) {
                if (null != (d = g[a]) && d >= d) {
                    f = d;
                    break
                }
            }
            for (; ++a < b;) {
                null != (d = g[a]) && d > f && (f = d)
            }
        } else {
            for (; ++a < b;) {
                if (null != (d = c.call(g, g[a], a)) && d >= d) {
                    f = d;
                    break
                }
            }
            for (; ++a < b;) {
                null != (d = c.call(g, g[a], a)) && d > f && (f = d)
            }
        }
        return f
    }, bX.extent = function(h, c) {
        var f, d, a, b = -1,
            g = h.length;
        if (1 === arguments.length) {
            for (; ++b < g;) {
                if (null != (d = h[b]) && d >= d) {
                    f = a = d;
                    break
                }
            }
            for (; ++b < g;) {
                null != (d = h[b]) && (f > d && (f = d), d > a && (a = d))
            }
        } else {
            for (; ++b < g;) {
                if (null != (d = c.call(h, h[b], b)) && d >= d) {
                    f = a = d;
                    break
                }
            }
            for (; ++b < g;) {
                null != (d = c.call(h, h[b], b)) && (f > d && (f = d), d > a && (a = d))
            }
        }
        return [f, a]
    }, bX.sum = function(g, b) {
        var d, c = 0,
            a = g.length,
            f = -1;
        if (1 === arguments.length) {
            for (; ++f < a;) {
                hW(d = +g[f]) && (c += d)
            }
        } else {
            for (; ++f < a;) {
                hW(d = +b.call(g, g[f], f)) && (c += d)
            }
        }
        return c
    }, bX.mean = function(m, f) {
        var g, d = 0,
            h = m.length,
            b = -1,
            k = h;
        if (1 === arguments.length) {
            for (; ++b < h;) {
                hW(g = h1(m[b])) ? d += g : --k
            }
        } else {
            for (; ++b < h;) {
                hW(g = h1(f.call(m, m[b], b))) ? d += g : --k
            }
        }
        return k ? d / k : void 0
    }, bX.quantile = function(g, c) {
        var f = (g.length - 1) * c + 1,
            d = Math.floor(f),
            a = +g[d - 1],
            b = f - d;
        return b ? a + b * (g[d] - a) : a
    }, bX.median = function(h, e) {
        var d, f = [],
            b = h.length,
            g = -1;
        if (1 === arguments.length) {
            for (; ++g < b;) {
                hW(d = h1(h[g])) && f.push(d)
            }
        } else {
            for (; ++g < b;) {
                hW(d = h1(e.call(h, h[g], g))) && f.push(d)
            }
        }
        return f.length ? bX.quantile(f.sort(iA), 0.5) : void 0
    }, bX.variance = function(d, p) {
        var h, g, b = d.length,
            m = 0,
            k = 0,
            f = -1,
            q = 0;
        if (1 === arguments.length) {
            for (; ++f < b;) {
                hW(h = h1(d[f])) && (g = h - m, m += g / ++q, k += g * (h - m))
            }
        } else {
            for (; ++f < b;) {
                hW(h = h1(p.call(d, d[f], f))) && (g = h - m, m += g / ++q, k += g * (h - m))
            }
        }
        return q > 1 ? k / (q - 1) : void 0
    }, bX.deviation = function() {
        var a = bX.variance.apply(this, arguments);
        return a ? Math.sqrt(a) : a
    };
    var gs = ip(iA);
    bX.bisectLeft = gs.left, bX.bisect = bX.bisectRight = gs.right, bX.bisector = function(a) {
        return ip(1 === a.length ? function(b, c) {
            return iA(a(b), c)
        } : a)
    }, bX.shuffle = function(g, c, f) {
        (b = arguments.length) < 3 && (f = g.length, 2 > b && (c = 0));
        for (var d, a, b = f - c; b;) {
            a = Math.random() * b-- | 0, d = g[b + c], g[b + c] = g[a + c], g[a + c] = d
        }
        return g
    }, bX.permute = function(d, a) {
        for (var c = a.length, b = new Array(c); c--;) {
            b[c] = d[a[c]]
        }
        return b
    }, bX.pairs = function(g) {
        for (var c, f = 0, d = g.length - 1, a = g[0], b = new Array(0 > d ? 0 : d); d > f;) {
            b[f] = [c = a, a = g[++f]]
        }
        return b
    }, bX.zip = function() {
        if (!(d = arguments.length)) {
            return []
        }
        for (var g = -1, c = bX.min(arguments, h5), f = new Array(c); ++g < c;) {
            for (var d, a = -1, b = f[g] = new Array(d); ++a < d;) {
                b[a] = arguments[a][g]
            }
        }
        return f
    }, bX.transpose = function(a) {
        return bX.zip.apply(bX, a)
    }, bX.keys = function(c) {
        var a = [];
        for (var b in c) {
            a.push(b)
        }
        return a
    }, bX.values = function(c) {
        var a = [];
        for (var b in c) {
            a.push(c[b])
        }
        return a
    }, bX.entries = function(c) {
        var a = [];
        for (var b in c) {
            a.push({
                key: b,
                value: c[b]
            })
        }
        return a
    }, bX.merge = function(h) {
        for (var c, f, d, a = h.length, b = -1, g = 0; ++b < a;) {
            g += h[b].length
        }
        for (f = new Array(g); --a >= 0;) {
            for (d = h[a], c = d.length; --c >= 0;) {
                f[--g] = d[c]
            }
        }
        return f
    };
    var gM = Math.abs;
    bX.range = function(h, c, f) {
        if (arguments.length < 3 && (f = 1, arguments.length < 2 && (c = h, h = 0)), (c - h) / f === 1 / 0) {
            throw new Error("infinite range")
        }
        var d, a = [],
            b = iH(gM(f)),
            g = -1;
        if (h *= b, c *= b, f *= b, 0 > f) {
            for (;
                (d = h + f * ++g) > c;) {
                a.push(d / b)
            }
        } else {
            for (;
                (d = h + f * ++g) < c;) {
                a.push(d / b)
            }
        }
        return a
    }, bX.map = function(h, c) {
        var f = new ig;
        if (h instanceof ig) {
            h.forEach(function(k, e) {
                f.set(k, e)
            })
        } else {
            if (Array.isArray(h)) {
                var d, a = -1,
                    b = h.length;
                if (1 === arguments.length) {
                    for (; ++a < b;) {
                        f.set(a, h[a])
                    }
                } else {
                    for (; ++a < b;) {
                        f.set(c.call(h, d = h[a], a), d)
                    }
                }
            } else {
                for (var g in h) {
                    f.set(g, h[g])
                }
            }
        }
        return f
    };
    var dA = "__proto__",
        bh = "\x00";
    iD(ig, {
        has: iv,
        get: function(a) {
            return this._[hZ(a)]
        },
        set: function(b, a) {
            return this._[hZ(b)] = a
        },
        remove: iw,
        keys: h4,
        values: function() {
            var b = [];
            for (var a in this._) {
                b.push(this._[a])
            }
            return b
        },
        entries: function() {
            var b = [];
            for (var a in this._) {
                b.push({
                    key: ix(a),
                    value: this._[a]
                })
            }
            return b
        },
        size: hU,
        empty: iC,
        forEach: function(b) {
            for (var a in this._) {
                b.call(this, ix(a), this._[a])
            }
        }
    }), bX.nest = function() {
        function h(y, k, w) {
            if (w >= b.length) {
                return d ? d.call(a, k) : f ? k.sort(f) : k
            }
            for (var u, z, q, m, n = -1, e = k.length, x = b[w++], r = new ig; ++n < e;) {
                (m = r.get(u = x(z = k[n]))) ? m.push(z): r.set(u, [z])
            }
            return y ? (z = y(), q = function(p, o) {
                z.set(p, h(y, o, w))
            }) : (z = {}, q = function(p, o) {
                z[p] = h(y, o, w)
            }), r.forEach(q), z
        }

        function c(p, o) {
            if (o >= b.length) {
                return p
            }
            var m = [],
                k = g[o++];
            return p.forEach(function(q, e) {
                m.push({
                    key: q,
                    values: c(e, o)
                })
            }), k ? m.sort(function(q, e) {
                return k(q.key, e.key)
            }) : m
        }
        var f, d, a = {},
            b = [],
            g = [];
        return a.map = function(k, m) {
            return h(m, k, 0)
        }, a.entries = function(k) {
            return c(h(bX.map, k, 0), 0)
        }, a.key = function(e) {
            return b.push(e), a
        }, a.sortKeys = function(e) {
            return g[b.length - 1] = e, a
        }, a.sortValues = function(e) {
            return f = e, a
        }, a.rollup = function(e) {
            return d = e, a
        }, a
    }, bX.set = function(d) {
        var a = new h9;
        if (d) {
            for (var c = 0, b = d.length; b > c; ++c) {
                a.add(d[c])
            }
        }
        return a
    }, iD(h9, {
        has: iv,
        add: function(a) {
            return this._[hZ(a += "")] = !0, a
        },
        remove: iw,
        values: h4,
        size: hU,
        empty: iC,
        forEach: function(b) {
            for (var a in this._) {
                b.call(this, ix(a))
            }
        }
    }), bX.behavior = {}, bX.rebind = function(f, b) {
        for (var d, c = 1, a = arguments.length; ++c < a;) {
            f[d = arguments[c]] = i6(f, b, b[d])
        }
        return f
    };
    var hL = ["webkit", "ms", "moz", "Moz", "o", "O"];
    bX.dispatch = function() {
        for (var c = new iI, a = -1, b = arguments.length; ++a < b;) {
            c[arguments[a]] = hT(c)
        }
        return c
    }, iI.prototype.on = function(d, a) {
        var c = d.indexOf("."),
            b = "";
        if (c >= 0 && (b = d.slice(c + 1), d = d.slice(0, c)), d) {
            return arguments.length < 2 ? this[d].on(b) : this[d].on(b, a)
        }
        if (2 === arguments.length) {
            if (null == a) {
                for (d in this) {
                    this.hasOwnProperty(d) && this[d].on(b, null)
                }
            }
            return this
        }
    }, bX.event = null, bX.requote = function(a) {
        return a.replace(eL, "\\$&")
    };
    var eL = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g,
        kk = {}.__proto__ ? function(b, a) {
            b.__proto__ = a
        } : function(c, a) {
            for (var b in a) {
                c[b] = a[b]
            }
        },
        g8 = function(b, a) {
            return a.querySelector(b)
        },
        aA = function(b, a) {
            return a.querySelectorAll(b)
        },
        jv = function(c, a) {
            var b = c.matches || c[hS(c, "matchesSelector")];
            return (jv = function(e, d) {
                return b.call(e, d)
            })(c, a)
        };
    "function" == typeof Sizzle && (g8 = function(b, a) {
        return Sizzle(b, a)[0] || null
    }, aA = Sizzle, jv = Sizzle.matchesSelector), bX.selection = function() {
        return bX.select(bF.documentElement)
    };
    var aG = bX.selection.prototype = [];
    aG.select = function(f) {
        var s, k, b, q, h = [];
        f = i4(f);
        for (var d = -1, p = this.length; ++d < p;) {
            h.push(s = []), s.parentNode = (b = this[d]).parentNode;
            for (var m = -1, g = b.length; ++m < g;) {
                (q = b[m]) ? (s.push(k = f.call(q, q.__data__, m, d)), k && "__data__" in q && (k.__data__ = q.__data__)) : s.push(null)
            }
        }
        return jz(h)
    }, aG.selectAll = function(f) {
        var q, h, b = [];
        f = jx(f);
        for (var p = -1, g = this.length; ++p < g;) {
            for (var d = this[p], m = -1, k = d.length; ++m < k;) {
                (h = d[m]) && (b.push(q = cR(f.call(h, h.__data__, m, p))), q.parentNode = h)
            }
        }
        return jz(b)
    };
    var aW = {
        svg: "http://www.w3.org/2000/svg",
        xhtml: "http://www.w3.org/1999/xhtml",
        xlink: "http://www.w3.org/1999/xlink",
        xml: "http://www.w3.org/XML/1998/namespace",
        xmlns: "http://www.w3.org/2000/xmlns/"
    };
    bX.ns = {
        prefix: aW,
        qualify: function(c) {
            var a = c.indexOf(":"),
                b = c;
            return a >= 0 && (b = c.slice(0, a), c = c.slice(a + 1)), aW.hasOwnProperty(b) ? {
                space: aW[b],
                local: c
            } : c
        }
    }, aG.attr = function(c, a) {
        if (arguments.length < 2) {
            if ("string" == typeof c) {
                var b = this.node();
                return c = bX.ns.qualify(c), c.local ? b.getAttributeNS(c.space, c.local) : b.getAttribute(c)
            }
            for (a in c) {
                this.each(hP(a, c[a]))
            }
            return this
        }
        return this.each(hP(c, a))
    }, aG.classed = function(f, b) {
        if (arguments.length < 2) {
            if ("string" == typeof f) {
                var d = this.node(),
                    c = (f = iU(f)).length,
                    a = -1;
                if (b = d.classList) {
                    for (; ++a < c;) {
                        if (!b.contains(f[a])) {
                            return !1
                        }
                    }
                } else {
                    for (b = d.getAttribute("class"); ++a < c;) {
                        if (!i7(f[a]).test(b)) {
                            return !1
                        }
                    }
                }
                return !0
            }
            for (b in f) {
                this.each(iX(b, f[b]))
            }
            return this
        }
        return this.each(iX(f, b))
    }, aG.style = function(f, d, c) {
        var a = arguments.length;
        if (3 > a) {
            if ("string" != typeof f) {
                2 > a && (d = "");
                for (c in f) {
                    this.each(i0(c, f[c], d))
                }
                return this
            }
            if (2 > a) {
                var b = this.node();
                return hY(b).getComputedStyle(b, null).getPropertyValue(f)
            }
            c = ""
        }
        return this.each(i0(f, d, c))
    }, aG.property = function(b, a) {
        if (arguments.length < 2) {
            if ("string" == typeof b) {
                return this.node()[b]
            }
            for (a in b) {
                this.each(iT(a, b[a]))
            }
            return this
        }
        return this.each(iT(b, a))
    }, aG.text = function(a) {
        return arguments.length ? this.each("function" == typeof a ? function() {
            var b = a.apply(this, arguments);
            this.textContent = null == b ? "" : b
        } : null == a ? function() {
            this.textContent = ""
        } : function() {
            this.textContent = a
        }) : this.node().textContent
    }, aG.html = function(a) {
        return arguments.length ? this.each("function" == typeof a ? function() {
            var b = a.apply(this, arguments);
            this.innerHTML = null == b ? "" : b
        } : null == a ? function() {
            this.innerHTML = ""
        } : function() {
            this.innerHTML = a
        }) : this.node().innerHTML
    }, aG.append = function(a) {
        return a = ik(a), this.select(function() {
            return this.appendChild(a.apply(this, arguments))
        })
    }, aG.insert = function(b, a) {
        return b = ik(b), a = i4(a), this.select(function() {
            return this.insertBefore(b.apply(this, arguments), a.apply(this, arguments) || null)
        })
    }, aG.remove = function() {
        return this.each(jn)
    }, aG.data = function(f, q) {
        function h(t, C) {
            var a, G, x, s = t.length,
                B = C.length,
                z = Math.min(s, B),
                A = new Array(B),
                c = new Array(B),
                F = new Array(s);
            if (q) {
                var D, w = new ig,
                    E = new Array(s);
                for (a = -1; ++a < s;) {
                    w.has(D = q.call(G = t[a], G.__data__, a)) ? F[a] = G : w.set(D, G), E[a] = D
                }
                for (a = -1; ++a < B;) {
                    (G = w.get(D = q.call(C, x = C[a], a))) ? G !== !0 && (A[a] = G, G.__data__ = x): c[a] = jh(x), w.set(D, !0)
                }
                for (a = -1; ++a < s;) {
                    w.get(E[a]) !== !0 && (F[a] = t[a])
                }
            } else {
                for (a = -1; ++a < z;) {
                    G = t[a], x = C[a], G ? (G.__data__ = x, A[a] = G) : c[a] = jh(x)
                }
                for (; B > a; ++a) {
                    c[a] = jh(C[a])
                }
                for (; s > a; ++a) {
                    F[a] = t[a]
                }
            }
            c.update = A, c.parentNode = A.parentNode = F.parentNode = t.parentNode, m.push(c), k.push(A), v.push(F)
        }
        var b, p, g = -1,
            d = this.length;
        if (!arguments.length) {
            for (f = new Array(d = (b = this[0]).length); ++g < d;) {
                (p = b[g]) && (f[g] = p.__data__)
            }
            return f
        }
        var m = iM([]),
            k = jz([]),
            v = jz([]);
        if ("function" == typeof f) {
            for (; ++g < d;) {
                h(b = this[g], f.call(b, b.parentNode.__data__, g))
            }
        } else {
            for (; ++g < d;) {
                h(b = this[g], f)
            }
        }
        return k.enter = function() {
            return m
        }, k.exit = function() {
            return v
        }, k
    }, aG.datum = function(a) {
        return arguments.length ? this.property("__data__", a) : this.property("__data__")
    }, aG.filter = function(f) {
        var q, h, b, p = [];
        "function" != typeof f && (f = i1(f));
        for (var g = 0, d = this.length; d > g; g++) {
            p.push(q = []), q.parentNode = (h = this[g]).parentNode;
            for (var m = 0, k = h.length; k > m; m++) {
                (b = h[m]) && f.call(b, b.__data__, m, g) && q.push(b)
            }
        }
        return jz(p)
    }, aG.order = function() {
        for (var g = -1, c = this.length; ++g < c;) {
            for (var f, d = this[g], a = d.length - 1, b = d[a]; --a >= 0;) {
                (f = d[a]) && (b && b !== f.nextSibling && b.parentNode.insertBefore(f, b), b = f)
            }
        }
        return this
    }, aG.sort = function(c) {
        c = jg.apply(this, arguments);
        for (var a = -1, b = this.length; ++a < b;) {
            this[a].sort(c)
        }
        return this.order()
    }, aG.each = function(a) {
        return iN(this, function(b, d, c) {
            a.call(b, b.__data__, d, c)
        })
    }, aG.call = function(b) {
        var a = cR(arguments);
        return b.apply(a[0] = this, a), this
    }, aG.empty = function() {
        return !this.node()
    }, aG.node = function() {
        for (var g = 0, c = this.length; c > g; g++) {
            for (var f = this[g], d = 0, a = f.length; a > d; d++) {
                var b = f[d];
                if (b) {
                    return b
                }
            }
        }
        return null
    }, aG.size = function() {
        var a = 0;
        return iN(this, function() {
            ++a
        }), a
    };
    var e7 = [];
    bX.selection.enter = iM, bX.selection.enter.prototype = e7, e7.append = aG.append, e7.empty = aG.empty, e7.node = aG.node, e7.call = aG.call, e7.size = aG.size, e7.select = function(f) {
        for (var v, k, b, q, h, d = [], p = -1, m = this.length;
            ++p < m;) {
            b = (q = this[p]).update, d.push(v = []), v.parentNode = q.parentNode;
            for (var g = -1, w = q.length; ++g < w;) {
                (h = q[g]) ? (v.push(b[g] = k = f.call(q.parentNode, h.__data__, g, p)), k.__data__ = h.__data__) : v.push(null)
            }
        }
        return jz(d)
    }, e7.insert = function(b, a) {
        return arguments.length < 2 && (a = iR(this)), aG.insert.call(this, b, a)
    }, bX.select = function(a) {
        var b;
        return "string" == typeof a ? (b = [g8(a, bF)], b.parentNode = bF.documentElement) : (b = [a], b.parentNode = h6(a)), jz([b])
    }, bX.selectAll = function(b) {
        var a;
        return "string" == typeof b ? (a = cR(aA(b, bF)), a.parentNode = bF.documentElement) : (a = b, a.parentNode = null), jz([a])
    }, aG.on = function(d, a, c) {
        var b = arguments.length;
        if (3 > b) {
            if ("string" != typeof d) {
                2 > b && (a = !1);
                for (c in d) {
                    this.each(iO(c, d[c], a))
                }
                return this
            }
            if (2 > b) {
                return (b = this.node()["__on" + d]) && b._
            }
            c = !1
        }
        return this.each(iO(d, a, c))
    };
    var fs = bX.map({
        mouseenter: "mouseover",
        mouseleave: "mouseout"
    });
    bF && fs.forEach(function(a) {
        "on" + a in bF && fs.remove(a)
    });
    var a5, cG = 0;
    bX.mouse = function(a) {
        return jd(a, ih())
    };
    var gQ = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;
    bX.touch = function(g, c, f) {
        if (arguments.length < 3 && (f = c, c = ih().changedTouches), c) {
            for (var d, a = 0, b = c.length; b > a; ++a) {
                if ((d = c[a]).identifier === f) {
                    return jd(g, d)
                }
            }
        }
    }, bX.behavior.drag = function() {
        function g() {
            this.on("mousedown.drag", b).on("touchstart.drag", f)
        }

        function d(q, k, m, h, p) {
            return function() {
                function B() {
                    var y, v, s = k(r, C);
                    s && (y = s[0] - w[0], v = s[1] - w[1], e |= y | v, w = s, t({
                        type: "drag",
                        x: s[0] + o[0],
                        y: s[1] + o[1],
                        dx: y,
                        dy: v
                    }))
                }

                function z() {
                    k(r, C) && (n.on(h + x, null).on(p + x, null), A(e && bX.event.target === u), t({
                        type: "dragend"
                    }))
                }
                var o, D = this,
                    u = bX.event.target,
                    r = D.parentNode,
                    t = c.of(D, arguments),
                    e = 0,
                    C = q(),
                    x = ".drag" + (null == C ? "" : "-" + C),
                    n = bX.select(m(u)).on(h + x, B).on(p + x, z),
                    A = iP(u),
                    w = k(r, C);
                a ? (o = a.apply(D, arguments), o = [o.x - w[0], o.y - w[1]]) : o = [0, 0], t({
                    type: "dragstart"
                })
            }
        }
        var c = jq(g, "drag", "dragstart", "dragend"),
            a = null,
            b = d(iG, bX.mouse, hY, "mousemove", "mouseup"),
            f = d(jj, bX.touch, hR, "touchmove", "touchend");
        return g.origin = function(e) {
            return arguments.length ? (a = e, g) : a
        }, bX.rebind(g, c, "on")
    }, bX.touches = function(b, a) {
        return arguments.length < 2 && (a = ih().touches), a ? cR(a).map(function(c) {
            var d = jd(b, c);
            return d.identifier = c.identifier, d
        }) : []
    };
    var bO = 0.000001,
        jT = bO * bO,
        c9 = Math.PI,
        hz = 2 * c9,
        eP = hz - bO,
        fy = c9 / 2,
        bw = c9 / 180,
        f7 = 180 / c9,
        ex = Math.SQRT2,
        fL = 2,
        aN = 4;
    bX.interpolateZoom = function(C, w) {
        function J(f) {
            var a = f * b;
            if (D) {
                var c = cD(k),
                    d = F / (fL * G) * (c * bq(ex * a + k) - hb(k));
                return [z + d * E, q + d * x, F * c / cD(ex * a + k)]
            }
            return [z + f * E, q + f * x, F * Math.exp(ex * a)]
        }
        var z = C[0],
            q = C[1],
            F = C[2],
            B = w[0],
            M = w[1],
            L = w[2],
            E = B - z,
            x = M - q,
            I = E * E + x * x,
            G = Math.sqrt(I),
            H = (L * L - F * F + aN * I) / (2 * F * fL * G),
            A = (L * L - F * F - aN * I) / (2 * L * fL * G),
            k = Math.log(Math.sqrt(H * H + 1) - H),
            K = Math.log(Math.sqrt(A * A + 1) - A),
            D = K - k,
            b = (D || Math.log(L / F)) / ex;
        return J.duration = 1000 * b, J
    }, bX.behavior.zoom = function() {
        function aa(a) {
            a.on(W, at).on(gy + ".zoom", ar).on("dblclick.zoom", Y).on(B, ao)
        }

        function au(a) {
            return [(a[0] - ai.x) / ai.k, (a[1] - ai.y) / ai.k]
        }

        function V(a) {
            return [a[0] * ai.k + ai.x, a[1] * ai.k + ai.y]
        }

        function P(a) {
            ai.k = Math.max(E[0], Math.min(E[1], a))
        }

        function al(b, a) {
            a = V(a), ai.x += b[0] - a[0], ai.y += b[1] - a[1]
        }

        function Z(a, c, b, d) {
            a.__chart__ = {
                x: ai.x,
                y: ai.y,
                k: ai.k
            }, P(Math.pow(2, d)), al(ba = c, b), a = bX.select(a), U > 0 && (a = a.transition().duration(U)), a.call(aa.event)
        }

        function bi() {
            be && be.domain(J.range().map(function(a) {
                return (a - ai.x) / ai.k
            }).map(J.invert)), K && K.domain(bl.range().map(function(a) {
                return (a - ai.y) / ai.k
            }).map(bl.invert))
        }

        function bc(a) {
            H++ || a({
                type: "zoomstart"
            })
        }

        function ae(a) {
            bi(), a({
                type: "zoom",
                scale: ai.k,
                translate: [ai.x, ai.y]
            })
        }

        function S(a) {
            --H || a({
                type: "zoomend"
            }), ba = null
        }

        function at() {
            function e() {
                q = 1, al(bX.mouse(v), m), ae(s)
            }

            function b() {
                k.on(G, null).on(t, null), c(q && bX.event.target === d), S(s)
            }
            var v = this,
                d = bX.event.target,
                s = Q.of(v, arguments),
                q = 0,
                k = bX.select(hY(v)).on(G, e).on(t, b),
                m = au(bX.mouse(v)),
                c = iP(v);
            bk.call(v), bc(s)
        }

        function ao() {
            function f() {
                var a = bX.touches(e);
                return k = ai.k, a.forEach(function(b) {
                    b.identifier in o && (o[b.identifier] = au(b))
                }), a
            }

            function L() {
                var w = bX.event.target;
                bX.select(w).on(u, c).on(q, z), C.push(w);
                for (var p = bX.event.changedTouches, v = 0, b = p.length; b > v; ++v) {
                    o[p[v].identifier] = null
                }
                var r = f(),
                    a = Date.now();
                if (1 === r.length) {
                    if (500 > a - F) {
                        var x = r[0];
                        Z(e, x, o[x.identifier], Math.floor(Math.log(ai.k) / Math.LN2) + 1), iW()
                    }
                    F = a
                } else {
                    if (r.length > 1) {
                        var x = r[0],
                            n = r[1],
                            d = x[0] - n[0],
                            m = x[1] - n[1];
                        h = d * d + m * m
                    }
                }
            }

            function c() {
                var g, x, p, b, d = bX.touches(e);
                bk.call(e);
                for (var w = 0, v = d.length; v > w; ++w, b = null) {
                    if (p = d[w], b = o[p.identifier]) {
                        if (x) {
                            break
                        }
                        g = p, x = b
                    }
                }
                if (b) {
                    var y = (y = p[0] - g[0]) * y + (y = p[1] - g[1]) * y,
                        m = h && Math.sqrt(y / h);
                    g = [(g[0] + p[0]) / 2, (g[1] + p[1]) / 2], x = [(x[0] + b[0]) / 2, (x[1] + b[1]) / 2], P(m * k)
                }
                F = null, al(g, x), ae(D)
            }

            function z() {
                if (bX.event.touches.length) {
                    for (var b = bX.event.changedTouches, g = 0, d = b.length; d > g; ++g) {
                        delete o[b[g].identifier]
                    }
                    for (var a in o) {
                        return void f()
                    }
                }
                bX.selectAll(C).on(s, null), A.on(W, at).on(B, ao), M(), S(D)
            }
            var k, e = this,
                D = Q.of(e, arguments),
                o = {},
                h = 0,
                s = ".zoom-" + bX.event.changedTouches[0].identifier,
                u = "touchmove" + s,
                q = "touchend" + s,
                C = [],
                A = bX.select(e),
                M = iP(e);
            L(), bc(D), A.on(W, null).on(B, L)
        }

        function ar() {
            var a = Q.of(this, arguments);
            I ? clearTimeout(I) : (O = au(ba = ac || bX.mouse(this)), bk.call(this), bc(a)), I = setTimeout(function() {
                I = null, S(a)
            }, 50), iW(), P(Math.pow(2, 0.002 * j7()) * ai.k), al(ba, O), ae(a)
        }

        function Y() {
            var b = bX.mouse(this),
                a = Math.log(ai.k) / Math.LN2;
            Z(this, b, au(b), bX.event.shiftKey ? Math.ceil(a) - 1 : Math.floor(a) + 1)
        }
        var O, ba, ac, I, F, J, be, bl, K, ai = {
                x: 0,
                y: 0,
                k: 1
            },
            X = [960, 500],
            E = jF,
            U = 250,
            H = 0,
            W = "mousedown.zoom",
            G = "mousemove.zoom",
            t = "mouseup.zoom",
            B = "touchstart.zoom",
            Q = jq(aa, "zoomstart", "zoom", "zoomend");
        return gy || (gy = "onwheel" in bF ? (j7 = function() {
            return -bX.event.deltaY * (bX.event.deltaMode ? 120 : 1)
        }, "wheel") : "onmousewheel" in bF ? (j7 = function() {
            return bX.event.wheelDelta
        }, "mousewheel") : (j7 = function() {
            return -bX.event.detail
        }, "MozMousePixelScroll")), aa.event = function(a) {
            a.each(function() {
                var c = Q.of(this, arguments),
                    b = ai;
                eJ ? bX.select(this).transition().each("start.zoom", function() {
                    ai = this.__chart__ || {
                        x: 0,
                        y: 0,
                        k: 1
                    }, bc(c)
                }).tween("zoom:zoom", function() {
                    var h = X[0],
                        g = X[1],
                        d = ba ? ba[0] : h / 2,
                        f = ba ? ba[1] : g / 2,
                        k = bX.interpolateZoom([(d - ai.x) / ai.k, (f - ai.y) / ai.k, h / ai.k], [(d - b.x) / b.k, (f - b.y) / b.k, h / b.k]);
                    return function(m) {
                        var n = k(m),
                            e = h / n[2];
                        this.__chart__ = ai = {
                            x: d - n[0] * e,
                            y: f - n[1] * e,
                            k: e
                        }, ae(c)
                    }
                }).each("interrupt.zoom", function() {
                    S(c)
                }).each("end.zoom", function() {
                    S(c)
                }) : (this.__chart__ = ai, bc(c), ae(c), S(c))
            })
        }, aa.translate = function(a) {
            return arguments.length ? (ai = {
                x: +a[0],
                y: +a[1],
                k: ai.k
            }, bi(), aa) : [ai.x, ai.y]
        }, aa.scale = function(a) {
            return arguments.length ? (ai = {
                x: ai.x,
                y: ai.y,
                k: +a
            }, bi(), aa) : ai.k
        }, aa.scaleExtent = function(a) {
            return arguments.length ? (E = null == a ? jF : [+a[0], +a[1]], aa) : E
        }, aa.center = function(a) {
            return arguments.length ? (ac = a && [+a[0], +a[1]], aa) : ac
        }, aa.size = function(a) {
            return arguments.length ? (X = a && [+a[0], +a[1]], aa) : X
        }, aa.duration = function(a) {
            return arguments.length ? (U = +a, aa) : U
        }, aa.x = function(a) {
            return arguments.length ? (be = a, J = a.copy(), ai = {
                x: 0,
                y: 0,
                k: 1
            }, aa) : be
        }, aa.y = function(a) {
            return arguments.length ? (K = a, bl = a.copy(), ai = {
                x: 0,
                y: 0,
                k: 1
            }, aa) : K
        }, bX.rebind(aa, Q, "on")
    };
    var j7, gy, jF = [0, 1 / 0];
    bX.color = dG, dG.prototype.toString = function() {
        return this.rgb() + ""
    }, bX.hsl = jJ;
    var cV = jJ.prototype = new dG;
    cV.brighter = function(a) {
        return a = Math.pow(0.7, arguments.length ? a : 1), new jJ(this.h, this.s, this.l / a)
    }, cV.darker = function(a) {
        return a = Math.pow(0.7, arguments.length ? a : 1), new jJ(this.h, this.s, a * this.l)
    }, cV.rgb = function() {
        return hX(this.h, this.s, this.l)
    }, bX.hcl = eR;
    var cz = eR.prototype = new dG;
    cz.brighter = function(a) {
        return new eR(this.h, this.c, Math.min(100, this.l + dZ * (arguments.length ? a : 1)))
    }, cz.darker = function(a) {
        return new eR(this.h, this.c, Math.max(0, this.l - dZ * (arguments.length ? a : 1)))
    }, cz.rgb = function() {
        return b3(this.h, this.c, this.l).rgb()
    }, bX.lab = gS;
    var dZ = 18,
        dg = 0.95047,
        ej = 1,
        b6 = 1.08883,
        dE = gS.prototype = new dG;
    dE.brighter = function(a) {
        return new gS(Math.min(100, this.l + dZ * (arguments.length ? a : 1)), this.a, this.b)
    }, dE.darker = function(a) {
        return new gS(Math.max(0, this.l - dZ * (arguments.length ? a : 1)), this.a, this.b)
    }, dE.rgb = function() {
        return f9(this.l, this.a, this.b)
    }, bX.rgb = ez;
    var iL = ez.prototype = new dG;
    iL.brighter = function(f) {
        f = Math.pow(0.7, arguments.length ? f : 1);
        var b = this.r,
            d = this.g,
            c = this.b,
            a = 30;
        return b || d || c ? (b && a > b && (b = a), d && a > d && (d = a), c && a > c && (c = a), new ez(Math.min(255, b / f), Math.min(255, d / f), Math.min(255, c / f))) : new ez(a, a, a)
    }, iL.darker = function(a) {
        return a = Math.pow(0.7, arguments.length ? a : 1), new ez(a * this.r, a * this.g, a * this.b)
    }, iL.hsl = function() {
        return ak(this.r, this.g, this.b)
    }, iL.toString = function() {
        return "#" + ks(this.r) + ks(this.g) + ks(this.b)
    };
    var af = bX.map({
        aliceblue: 15792383,
        antiquewhite: 16444375,
        aqua: 65535,
        aquamarine: 8388564,
        azure: 15794175,
        beige: 16119260,
        bisque: 16770244,
        black: 0,
        blanchedalmond: 16772045,
        blue: 255,
        blueviolet: 9055202,
        brown: 10824234,
        burlywood: 14596231,
        cadetblue: 6266528,
        chartreuse: 8388352,
        chocolate: 13789470,
        coral: 16744272,
        cornflowerblue: 6591981,
        cornsilk: 16775388,
        crimson: 14423100,
        cyan: 65535,
        darkblue: 139,
        darkcyan: 35723,
        darkgoldenrod: 12092939,
        darkgray: 11119017,
        darkgreen: 25600,
        darkgrey: 11119017,
        darkkhaki: 12433259,
        darkmagenta: 9109643,
        darkolivegreen: 5597999,
        darkorange: 16747520,
        darkorchid: 10040012,
        darkred: 9109504,
        darksalmon: 15308410,
        darkseagreen: 9419919,
        darkslateblue: 4734347,
        darkslategray: 3100495,
        darkslategrey: 3100495,
        darkturquoise: 52945,
        darkviolet: 9699539,
        deeppink: 16716947,
        deepskyblue: 49151,
        dimgray: 6908265,
        dimgrey: 6908265,
        dodgerblue: 2003199,
        firebrick: 11674146,
        floralwhite: 16775920,
        forestgreen: 2263842,
        fuchsia: 16711935,
        gainsboro: 14474460,
        ghostwhite: 16316671,
        gold: 16766720,
        goldenrod: 14329120,
        gray: 8421504,
        green: 32768,
        greenyellow: 11403055,
        grey: 8421504,
        honeydew: 15794160,
        hotpink: 16738740,
        indianred: 13458524,
        indigo: 4915330,
        ivory: 16777200,
        khaki: 15787660,
        lavender: 15132410,
        lavenderblush: 16773365,
        lawngreen: 8190976,
        lemonchiffon: 16775885,
        lightblue: 11393254,
        lightcoral: 15761536,
        lightcyan: 14745599,
        lightgoldenrodyellow: 16448210,
        lightgray: 13882323,
        lightgreen: 9498256,
        lightgrey: 13882323,
        lightpink: 16758465,
        lightsalmon: 16752762,
        lightseagreen: 2142890,
        lightskyblue: 8900346,
        lightslategray: 7833753,
        lightslategrey: 7833753,
        lightsteelblue: 11584734,
        lightyellow: 16777184,
        lime: 65280,
        limegreen: 3329330,
        linen: 16445670,
        magenta: 16711935,
        maroon: 8388608,
        mediumaquamarine: 6737322,
        mediumblue: 205,
        mediumorchid: 12211667,
        mediumpurple: 9662683,
        mediumseagreen: 3978097,
        mediumslateblue: 8087790,
        mediumspringgreen: 64154,
        mediumturquoise: 4772300,
        mediumvioletred: 13047173,
        midnightblue: 1644912,
        mintcream: 16121850,
        mistyrose: 16770273,
        moccasin: 16770229,
        navajowhite: 16768685,
        navy: 128,
        oldlace: 16643558,
        olive: 8421376,
        olivedrab: 7048739,
        orange: 16753920,
        orangered: 16729344,
        orchid: 14315734,
        palegoldenrod: 15657130,
        palegreen: 10025880,
        paleturquoise: 11529966,
        palevioletred: 14381203,
        papayawhip: 16773077,
        peachpuff: 16767673,
        peru: 13468991,
        pink: 16761035,
        plum: 14524637,
        powderblue: 11591910,
        purple: 8388736,
        rebeccapurple: 6697881,
        red: 16711680,
        rosybrown: 12357519,
        royalblue: 4286945,
        saddlebrown: 9127187,
        salmon: 16416882,
        sandybrown: 16032864,
        seagreen: 3050327,
        seashell: 16774638,
        sienna: 10506797,
        silver: 12632256,
        skyblue: 8900331,
        slateblue: 6970061,
        slategray: 7372944,
        slategrey: 7372944,
        snow: 16775930,
        springgreen: 65407,
        steelblue: 4620980,
        tan: 13808780,
        teal: 32896,
        thistle: 14204888,
        tomato: 16737095,
        turquoise: 4251856,
        violet: 15631086,
        wheat: 16113331,
        white: 16777215,
        whitesmoke: 16119285,
        yellow: 16776960,
        yellowgreen: 10145074
    });
    af.forEach(function(b, a) {
        af.set(b, j4(a))
    }), bX.functor = aT, bX.xhr = cm(hR), bX.dsv = function(f, q) {
        function h(s, c, a) {
            arguments.length < 3 && (a = c, c = null);
            var r = gF(s, q, null == c ? b : p(c), a);
            return r.row = function(e) {
                return arguments.length ? r.response(null == (c = e) ? b : p(e)) : c
            }, r
        }

        function b(a) {
            return h.parse(a.responseText)
        }

        function p(a) {
            return function(c) {
                return h.parse(c.responseText, a)
            }
        }

        function g(a) {
            return a.map(d).join(f)
        }

        function d(a) {
            return m.test(a) ? '"' + a.replace(/\"/g, '""') + '"' : a
        }
        var m = new RegExp('["' + f + "\n]"),
            k = f.charCodeAt(0);
        return h.parse = function(e, a) {
            var c;
            return h.parseRows(e, function(s, r) {
                if (c) {
                    return c(s, r - 1)
                }
                var o = new Function("d", "return {" + s.map(function(v, u) {
                    return JSON.stringify(v) + ": d[" + u + "]"
                }).join(",") + "}");
                c = a ? function(u, t) {
                    return a(o(u), t)
                } : o
            })
        }, h.parseRows = function(w, E) {
            function B() {
                if (F >= x) {
                    return v
                }
                if (D) {
                    return D = !1, y
                }
                var o = F;
                if (34 === w.charCodeAt(o)) {
                    for (var u = o; u++ < x;) {
                        if (34 === w.charCodeAt(u)) {
                            if (34 !== w.charCodeAt(u + 1)) {
                                break
                            }++u
                        }
                    }
                    F = u + 2;
                    var s = w.charCodeAt(u + 1);
                    return 13 === s ? (D = !0, 10 === w.charCodeAt(u + 2) && ++F) : 10 === s && (D = !0), w.slice(o + 1, u).replace(/""/g, '"')
                }
                for (; x > F;) {
                    var s = w.charCodeAt(F++),
                        n = 1;
                    if (10 === s) {
                        D = !0
                    } else {
                        if (13 === s) {
                            D = !0, 10 === w.charCodeAt(F) && (++F, ++n)
                        } else {
                            if (s !== k) {
                                continue
                            }
                        }
                    }
                    return w.slice(o, F - n)
                }
                return w.slice(o)
            }
            for (var c, D, y = {}, v = {}, C = [], x = w.length, F = 0, A = 0;
                (c = B()) !== v;) {
                for (var z = []; c !== y && c !== v;) {
                    z.push(c), c = B()
                }
                E && null == (z = E(z, A++)) || C.push(z)
            }
            return C
        }, h.format = function(c) {
            if (Array.isArray(c[0])) {
                return h.formatRows(c)
            }
            var e = new h9,
                a = [];
            return c.forEach(function(r) {
                for (var o in r) {
                    e.has(o) || a.push(e.add(o))
                }
            }), [a.map(d).join(f)].concat(c.map(function(n) {
                return a.map(function(o) {
                    return d(n[o])
                }).join(f)
            })).join("\n")
        }, h.formatRows = function(a) {
            return a.map(g).join("\n")
        }, h
    }, bX.csv = bX.dsv(",", "text/csv"), bX.tsv = bX.dsv("	", "text/tab-separated-values");
    var hQ, fP, ep, bV, hs, cQ = this[hS(this, "requestAnimationFrame")] || function(a) {
        setTimeout(a, 17)
    };
    bX.timer = function(g, c, f) {
        var d = arguments.length;
        2 > d && (c = 0), 3 > d && (f = Date.now());
        var a = f + c,
            b = {
                c: g,
                t: a,
                f: !1,
                n: null
            };
        fP ? fP.n = b : hQ = b, fP = b, ep || (bV = clearTimeout(bV), ep = 1, cQ(cX))
    }, bX.timer.flush = function() {
        hj(), eE()
    }, bX.round = function(b, a) {
        return a ? Math.round(b * (a = Math.pow(10, a))) / a : Math.round(b)
    };
    var bD = ["y", "z", "a", "f", "p", "n", "\xb5", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"].map(bd);
    bX.formatPrefix = function(c, a) {
        var b = 0;
        return c && (0 > c && (c *= -1), a && (c = bX.round(c, fh(c, a))), b = 1 + Math.floor(1e-12 + Math.log(c) / Math.LN10), b = Math.max(-24, Math.min(24, 3 * Math.floor((b - 1) / 3)))), bD[8 + b / 3]
    };
    var f2 = /(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i,
        dR = bX.map({
            b: function(a) {
                return a.toString(2)
            },
            c: function(a) {
                return String.fromCharCode(a)
            },
            o: function(a) {
                return a.toString(8)
            },
            x: function(a) {
                return a.toString(16)
            },
            X: function(a) {
                return a.toString(16).toUpperCase()
            },
            g: function(b, a) {
                return b.toPrecision(a)
            },
            e: function(b, a) {
                return b.toExponential(a)
            },
            f: function(b, a) {
                return b.toFixed(a)
            },
            r: function(b, a) {
                return (b = bX.round(b, fh(b, a))).toFixed(Math.max(0, Math.min(20, fh(b * (1 + 1e-15), a))))
            }
        }),
        jY = bX.time = {},
        iB = Date;
    fA.prototype = {
        getDate: function() {
            return this._.getUTCDate()
        },
        getDay: function() {
            return this._.getUTCDay()
        },
        getFullYear: function() {
            return this._.getUTCFullYear()
        },
        getHours: function() {
            return this._.getUTCHours()
        },
        getMilliseconds: function() {
            return this._.getUTCMilliseconds()
        },
        getMinutes: function() {
            return this._.getUTCMinutes()
        },
        getMonth: function() {
            return this._.getUTCMonth()
        },
        getSeconds: function() {
            return this._.getUTCSeconds()
        },
        getTime: function() {
            return this._.getTime()
        },
        getTimezoneOffset: function() {
            return 0
        },
        valueOf: function() {
            return this._.valueOf()
        },
        setDate: function() {
            e2.setUTCDate.apply(this._, arguments)
        },
        setDay: function() {
            e2.setUTCDay.apply(this._, arguments)
        },
        setFullYear: function() {
            e2.setUTCFullYear.apply(this._, arguments)
        },
        setHours: function() {
            e2.setUTCHours.apply(this._, arguments)
        },
        setMilliseconds: function() {
            e2.setUTCMilliseconds.apply(this._, arguments)
        },
        setMinutes: function() {
            e2.setUTCMinutes.apply(this._, arguments)
        },
        setMonth: function() {
            e2.setUTCMonth.apply(this._, arguments)
        },
        setSeconds: function() {
            e2.setUTCSeconds.apply(this._, arguments)
        },
        setTime: function() {
            e2.setTime.apply(this._, arguments)
        }
    };
    var e2 = Date.prototype;
    jY.year = ax(function(a) {
        return a = jY.day(a), a.setMonth(0, 1), a
    }, function(b, a) {
        b.setFullYear(b.getFullYear() + a)
    }, function(a) {
        return a.getFullYear()
    }), jY.years = jY.year.range, jY.years.utc = jY.year.utc.range, jY.day = ax(function(b) {
        var a = new iB(2000, 0);
        return a.setFullYear(b.getFullYear(), b.getMonth(), b.getDate()), a
    }, function(b, a) {
        b.setDate(b.getDate() + a)
    }, function(a) {
        return a.getDate() - 1
    }), jY.days = jY.day.range, jY.days.utc = jY.day.utc.range, jY.dayOfYear = function(b) {
        var a = jY.year(b);
        return Math.floor((b - a - 60000 * (b.getTimezoneOffset() - a.getTimezoneOffset())) / 86400000)
    }, ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"].forEach(function(c, a) {
        a = 7 - a;
        var b = jY[c] = ax(function(d) {
            return (d = jY.day(d)).setDate(d.getDate() - (d.getDay() + a) % 7), d
        }, function(e, d) {
            e.setDate(e.getDate() + 7 * Math.floor(d))
        }, function(f) {
            var d = jY.year(f).getDay();
            return Math.floor((jY.dayOfYear(f) + (d + a) % 7) / 7) - (d !== a)
        });
        jY[c + "s"] = b.range, jY[c + "s"].utc = b.utc.range, jY[c + "OfYear"] = function(f) {
            var d = jY.year(f).getDay();
            return Math.floor((jY.dayOfYear(f) + (d + a) % 7) / 7)
        }
    }), jY.week = jY.sunday, jY.weeks = jY.sunday.range, jY.weeks.utc = jY.sunday.utc.range, jY.weekOfYear = jY.sundayOfYear;
    var cn = {
            "-": "",
            _: " ",
            0: "0"
        },
        g3 = /^\s*\d+/,
        gq = /^%/;
    bX.locale = function(a) {
        return {
            numberFormat: fW(a),
            timeFormat: gh(a)
        }
    };
    var gL = bX.locale({
        decimal: ".",
        thousands: ",",
        grouping: [3],
        currency: ["$", ""],
        dateTime: "%a %b %e %X %Y",
        date: "%m/%d/%Y",
        time: "%H:%M:%S",
        periods: ["AM", "PM"],
        days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
        shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
        months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
        shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
    });
    bX.format = gL.numberFormat, bX.geo = {}, iy.prototype = {
        s: 0,
        t: 0,
        add: function(a) {
            e0(a, this.t, dz), e0(dz.s, this.s, this), this.s ? this.t += dz.t : this.s = dz.t
        },
        reset: function() {
            this.s = this.t = 0
        },
        valueOf: function() {
            return this.s
        }
    };
    var dz = new iy;
    bX.geo.stream = function(b, a) {
        b && bf.hasOwnProperty(b.type) ? bf[b.type](b, a) : cj(b, a)
    };
    var bf = {
            Feature: function(b, a) {
                cj(b.geometry, a)
            },
            FeatureCollection: function(f, b) {
                for (var d = f.features, c = -1, a = d.length; ++c < a;) {
                    cj(d[c].geometry, b)
                }
            }
        },
        hK = {
            Sphere: function(b, a) {
                a.sphere()
            },
            Point: function(b, a) {
                b = b.coordinates, a.point(b[0], b[1], b[2])
            },
            MultiPoint: function(f, b) {
                for (var d = f.coordinates, c = -1, a = d.length; ++c < a;) {
                    f = d[c], b.point(f[0], f[1], f[2])
                }
            },
            LineString: function(b, a) {
                g1(b.coordinates, a, 0)
            },
            MultiLineString: function(f, b) {
                for (var d = f.coordinates, c = -1, a = d.length; ++c < a;) {
                    g1(d[c], b, 0)
                }
            },
            Polygon: function(b, a) {
                gn(b.coordinates, a)
            },
            MultiPolygon: function(f, b) {
                for (var d = f.coordinates, c = -1, a = d.length; ++c < a;) {
                    gn(d[c], b)
                }
            },
            GeometryCollection: function(f, b) {
                for (var d = f.geometries, c = -1, a = d.length; ++c < a;) {
                    cj(d[c], b)
                }
            }
        };
    bX.geo.area = function(a) {
        return eK = 0, bX.geo.stream(a, g7), eK
    };
    var eK, kh = new iy,
        g7 = {
            sphere: function() {
                eK += 4 * c9
            },
            point: iG,
            lineStart: iG,
            lineEnd: iG,
            polygonStart: function() {
                kh.reset(), g7.lineStart = gJ
            },
            polygonEnd: function() {
                var a = 2 * kh;
                eK += 0 > a ? 4 * c9 + a : a, g7.lineStart = g7.lineEnd = g7.point = iG
            }
        };
    bX.geo.bounds = function() {
        function G(b, a) {
            k.push(w = [C = b, K = b]), N > a && (N = a), a > L && (L = a)
        }

        function B(M, h) {
            var a = dx([M * bw, h * bw]);
            if (H) {
                var x = hJ(H, a),
                    g = [x[1], -x[0], 0],
                    b = hJ(g, x);
                g6(b), b = av(b);
                var n = M - E,
                    f = n > 0 ? 1 : -1,
                    s = b[0] * f7 * f,
                    m = gM(n) > 180;
                if (m ^ (s > f * E && f * M > s)) {
                    var p = b[1] * f7;
                    p > L && (L = p)
                } else {
                    if (s = (s + 360) % 360 - 180, m ^ (s > f * E && f * M > s)) {
                        var p = -b[1] * f7;
                        N > p && (N = p)
                    } else {
                        N > h && (N = h), h > L && (L = h)
                    }
                }
                m ? E > M ? S(C, M) > S(C, K) && (K = M) : S(M, K) > S(C, K) && (C = M) : K >= C ? (C > M && (C = M), M > K && (K = M)) : M > E ? S(C, M) > S(C, K) && (K = M) : S(M, K) > S(C, K) && (C = M)
            } else {
                G(M, h)
            }
            H = a, E = M
        }

        function O() {
            R.point = B
        }

        function D() {
            w[0] = C, w[1] = K, R.point = G, H = null
        }

        function A(c, b) {
            if (H) {
                var a = c - E;
                q += gM(a) > 180 ? a + (a > 0 ? 360 : -360) : a
            } else {
                z = c, P = b
            }
            g7.point(c, b), B(c, b)
        }

        function J() {
            g7.lineStart()
        }

        function F() {
            A(z, P), g7.lineEnd(), gM(q) > bO && (C = -(K = 180)), w[0] = C, w[1] = K, H = null
        }

        function S(b, a) {
            return (a -= b) < 0 ? a + 360 : a
        }

        function Q(b, a) {
            return b[0] - a[0]
        }

        function I(b, a) {
            return a[0] <= a[1] ? a[0] <= b && b <= a[1] : b < a[0] || a[1] < b
        }
        var C, N, K, L, E, z, P, H, q, k, w, R = {
            point: G,
            lineStart: O,
            lineEnd: D,
            polygonStart: function() {
                R.point = A, R.lineStart = J, R.lineEnd = F, q = 0, g7.polygonStart()
            },
            polygonEnd: function() {
                g7.polygonEnd(), R.point = G, R.lineStart = O, R.lineEnd = D, 0 > kh ? (C = -(K = 180), N = -(L = 90)) : q > bO ? L = 90 : -bO > q && (N = -90), w[0] = C, w[1] = K
            }
        };
        return function(m) {
            L = K = -(C = N = 1 / 0), k = [], bX.geo.stream(m, R);
            var c = k.length;
            if (c) {
                k.sort(Q);
                for (var g, d = 1, a = k[0], b = [a]; c > d; ++d) {
                    g = k[d], I(g[0], a) || I(g[1], a) ? (S(a[0], g[1]) > S(a[0], a[1]) && (a[1] = g[1]), S(g[0], a[1]) > S(a[0], a[1]) && (a[0] = g[0])) : b.push(a = g)
                }
                for (var h, g, f = -1 / 0, c = b.length - 1, d = 0, a = b[c]; c >= d; a = g, ++d) {
                    g = b[d], (h = S(a[1], g[0])) > f && (f = h, C = g[0], K = a[1])
                }
            }
            return k = w = null, 1 / 0 === C || 1 / 0 === N ? [
                [0 / 0, 0 / 0],
                [0 / 0, 0 / 0]
            ] : [
                [C, N],
                [K, L]
            ]
        }
    }(), bX.geo.centroid = function(f) {
        ay = jp = aF = aU = e6 = fq = a3 = cE = gP = bM = jR = 0, bX.geo.stream(f, c8);
        var b = gP,
            d = bM,
            c = jR,
            a = b * b + d * d + c * c;
        return jT > a && (b = fq, d = a3, c = cE, bO > jp && (b = aF, d = aU, c = e6), a = b * b + d * d + c * c, jT > a) ? [0 / 0, 0 / 0] : [Math.atan2(d, b) * f7, bL(c / Math.sqrt(a)) * f7]
    };
    var ay, jp, aF, aU, e6, fq, a3, cE, gP, bM, jR, c8 = {
            sphere: iG,
            point: aD,
            lineStart: e5,
            lineEnd: fn,
            polygonStart: function() {
                c8.lineStart = a1
            },
            polygonEnd: function() {
                c8.lineStart = e5
            }
        },
        hy = hx(gO, f5, fJ, [-c9, -c9 / 2]),
        eO = 1000000000;
    bX.geo.clipExtent = function() {
        var h, c, f, d, a, b, g = {
            stream: function(e) {
                return a && (a.valid = !1), a = b(e), a.valid = !0, a
            },
            extent: function(e) {
                return arguments.length ? (b = jB(h = +e[0][0], c = +e[0][1], f = +e[1][0], d = +e[1][1]), a && (a.valid = !1, a = null), g) : [
                    [h, c],
                    [f, d]
                ]
            }
        };
        return g.extent([
            [0, 0],
            [960, 500]
        ])
    }, (bX.geo.conicEqualArea = function() {
        return cT(cw)
    }).raw = cw, bX.geo.albers = function() {
        return bX.geo.conicEqualArea().rotate([96, 0]).center([-0.6, 38.7]).parallels([29.5, 45.5]).scale(1070)
    }, bX.geo.albersUsa = function() {
        function f(e) {
            var a = e[0],
                c = e[1];
            return q = null, h(a, c), q || (b(a, c), q) || p(a, c), q
        }
        var q, h, b, p, g = bX.geo.albers(),
            d = bX.geo.conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]),
            m = bX.geo.conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]),
            k = {
                point: function(c, a) {
                    q = [c, a]
                }
            };
        return f.invert = function(v) {
            var c = g.scale(),
                s = g.translate(),
                o = (v[0] - s[0]) / c,
                a = (v[1] - s[1]) / c;
            return (a >= 0.12 && 0.234 > a && o >= -0.425 && -0.214 > o ? d : a >= 0.166 && 0.234 > a && o >= -0.214 && -0.115 > o ? m : g).invert(v)
        }, f.stream = function(s) {
            var a = g.stream(s),
                o = d.stream(s),
                c = m.stream(s);
            return {
                point: function(r, e) {
                    a.point(r, e), o.point(r, e), c.point(r, e)
                },
                sphere: function() {
                    a.sphere(), o.sphere(), c.sphere()
                },
                lineStart: function() {
                    a.lineStart(), o.lineStart(), c.lineStart()
                },
                lineEnd: function() {
                    a.lineEnd(), o.lineEnd(), c.lineEnd()
                },
                polygonStart: function() {
                    a.polygonStart(), o.polygonStart(), c.polygonStart()
                },
                polygonEnd: function() {
                    a.polygonEnd(), o.polygonEnd(), c.polygonEnd()
                }
            }
        }, f.precision = function(a) {
            return arguments.length ? (g.precision(a), d.precision(a), m.precision(a), f) : g.precision()
        }, f.scale = function(a) {
            return arguments.length ? (g.scale(a), d.scale(0.35 * a), m.scale(a), f.translate(g.translate())) : g.scale()
        }, f.translate = function(c) {
            if (!arguments.length) {
                return g.translate()
            }
            var a = g.scale(),
                e = +c[0],
                n = +c[1];
            return h = g.translate(c).clipExtent([
                [e - 0.455 * a, n - 0.238 * a],
                [e + 0.455 * a, n + 0.238 * a]
            ]).stream(k).point, b = d.translate([e - 0.307 * a, n + 0.201 * a]).clipExtent([
                [e - 0.425 * a + bO, n + 0.12 * a + bO],
                [e - 0.214 * a - bO, n + 0.234 * a - bO]
            ]).stream(k).point, p = m.translate([e - 0.205 * a, n + 0.212 * a]).clipExtent([
                [e - 0.214 * a + bO, n + 0.166 * a + bO],
                [e - 0.115 * a - bO, n + 0.234 * a - bO]
            ]).stream(k).point, f
        }, f.scale(1070)
    };
    var fx, bs, f6, ew, fK, aL, j5 = {
            point: iG,
            lineStart: iG,
            lineEnd: iG,
            polygonStart: function() {
                bs = 0, j5.lineStart = dV
            },
            polygonEnd: function() {
                j5.lineStart = j5.lineEnd = j5.point = iG, fx += gM(bs / 2)
            }
        },
        gx = {
            point: dd,
            lineStart: iG,
            lineEnd: iG,
            polygonStart: iG,
            polygonEnd: iG
        },
        jD = {
            point: dC,
            lineStart: iJ,
            lineEnd: kq,
            polygonStart: function() {
                jD.lineStart = hN
            },
            polygonEnd: function() {
                jD.point = dC, jD.lineStart = iJ, jD.lineEnd = kq
            }
        };
    bX.geo.path = function() {
        function m(a) {
            return a && ("function" == typeof b && d.pointRadius(+b.apply(this, arguments)), k && k.valid || (k = c(d)), bX.geo.stream(a, k)), d.result()
        }

        function f() {
            return k = null, m
        }
        var h, g, c, d, k, b = 4.5;
        return m.area = function(a) {
            return fx = 0, bX.geo.stream(a, c(j5)), fx
        }, m.centroid = function(a) {
            return aF = aU = e6 = fq = a3 = cE = gP = bM = jR = 0, bX.geo.stream(a, c(jD)), jR ? [gP / jR, bM / jR] : cE ? [fq / cE, a3 / cE] : e6 ? [aF / e6, aU / e6] : [0 / 0, 0 / 0]
        }, m.bounds = function(a) {
            return fK = aL = -(f6 = ew = 1 / 0), bX.geo.stream(a, c(gx)), [
                [f6, ew],
                [fK, aL]
            ]
        }, m.projection = function(a) {
            return arguments.length ? (c = (h = a) ? a.stream || bN(a) : hR, f()) : h
        }, m.context = function(a) {
            return arguments.length ? (d = null == (g = a) ? new eb : new fN(a), "function" != typeof b && d.pointRadius(b), f()) : g
        }, m.pointRadius = function(a) {
            return arguments.length ? (b = "function" == typeof a ? a : (d.pointRadius(+a), +a), m) : b
        }, m.projection(bX.geo.albersUsa()).context(null)
    }, bX.geo.transform = function(a) {
        return {
            stream: function(b) {
                var d = new hd(b);
                for (var c in a) {
                    d[c] = a[c]
                }
                return d
            }
        }
    }, hd.prototype = {
        point: function(b, a) {
            this.stream.point(b, a)
        },
        sphere: function() {
            this.stream.sphere()
        },
        lineStart: function() {
            this.stream.lineStart()
        },
        lineEnd: function() {
            this.stream.lineEnd()
        },
        polygonStart: function() {
            this.stream.polygonStart()
        },
        polygonEnd: function() {
            this.stream.polygonEnd()
        }
    }, bX.geo.projection = bv, bX.geo.projectionMutator = fS, (bX.geo.equirectangular = function() {
        return bv(jK)
    }).raw = jK.invert = jK, bX.geo.rotation = function(b) {
        function a(c) {
            return c = b(c[0] * bw, c[1] * bw), c[0] *= f7, c[1] *= f7, c
        }
        return b = eS(b[0] % 360 * bw, b[1] * bw, b.length > 2 ? b[2] * bw : 0), a.invert = function(c) {
            return c = b.invert(c[0] * bw, c[1] * bw), c[0] *= f7, c[1] *= f7, c
        }, a
    }, h0.invert = jK, bX.geo.circle = function() {
        function f() {
            var h = "function" == typeof c ? c.apply(this, arguments) : c,
                g = eS(-h[0] * bw, -h[1] * bw, 0).invert,
                e = [];
            return d(null, null, 1, {
                point: function(m, k) {
                    e.push(m = g(m, k)), m[0] *= f7, m[1] *= f7
                }
            }), {
                type: "Polygon",
                coordinates: [e]
            }
        }
        var b, d, c = [0, 0],
            a = 6;
        return f.origin = function(e) {
            return arguments.length ? (c = e, f) : c
        }, f.angle = function(e) {
            return arguments.length ? (d = gB((b = +e) * bw, a * bw), f) : b
        }, f.precision = function(e) {
            return arguments.length ? (d = gB(b * bw, (a = +e) * bw), f) : a
        }, f.angle(90)
    }, bX.geo.distance = function(g, x) {
        var p, b = (x[0] - g[0]) * bw,
            w = g[1] * bw,
            k = x[1] * bw,
            d = Math.sin(b),
            v = Math.cos(b),
            q = Math.sin(w),
            h = Math.cos(w),
            y = Math.sin(k),
            m = Math.cos(k);
        return Math.atan2(Math.sqrt((p = m * d) * p + (p = h * y - q * m * v) * p), q * y + h * m * v)
    }, bX.geo.graticule = function() {
        function C() {
            return {
                type: "MultiLineString",
                coordinates: w()
            }
        }

        function w() {
            return bX.range(Math.ceil(F / K) * K, q, K).map(G).concat(bX.range(Math.ceil(E / D) * D, L, D).map(H)).concat(bX.range(Math.ceil(z / A) * A, J, A).filter(function(a) {
                return gM(a % K) > bO
            }).map(x)).concat(bX.range(Math.ceil(M / k) * k, B, k).filter(function(a) {
                return gM(a % D) > bO
            }).map(I))
        }
        var J, z, q, F, B, M, L, E, x, I, G, H, A = 10,
            k = A,
            K = 90,
            D = 360,
            b = 2.5;
        return C.lines = function() {
            return w().map(function(a) {
                return {
                    type: "LineString",
                    coordinates: a
                }
            })
        }, C.outline = function() {
            return {
                type: "Polygon",
                coordinates: [G(F).concat(H(L).slice(1), G(q).reverse().slice(1), H(E).reverse().slice(1))]
            }
        }, C.extent = function(a) {
            return arguments.length ? C.majorExtent(a).minorExtent(a) : C.minorExtent()
        }, C.majorExtent = function(a) {
            return arguments.length ? (F = +a[0][0], q = +a[1][0], E = +a[0][1], L = +a[1][1], F > q && (a = F, F = q, q = a), E > L && (a = E, E = L, L = a), C.precision(b)) : [
                [F, E],
                [q, L]
            ]
        }, C.minorExtent = function(a) {
            return arguments.length ? (z = +a[0][0], J = +a[1][0], M = +a[0][1], B = +a[1][1], z > J && (a = z, z = J, J = a), M > B && (a = M, M = B, B = a), C.precision(b)) : [
                [z, M],
                [J, B]
            ]
        }, C.step = function(a) {
            return arguments.length ? C.majorStep(a).minorStep(a) : C.minorStep()
        }, C.majorStep = function(a) {
            return arguments.length ? (K = +a[0], D = +a[1], C) : [K, D]
        }, C.minorStep = function(a) {
            return arguments.length ? (A = +a[0], k = +a[1], C) : [A, k]
        }, C.precision = function(a) {
            return arguments.length ? (b = +a, x = a4(M, B, 90), I = hC(z, J, b), G = a4(E, L, 90), H = hC(F, q, b), C) : b
        }, C.majorExtent([
            [-180, -90 + bO],
            [180, 90 - bO]
        ]).minorExtent([
            [-180, -80 - bO],
            [180, 80 + bO]
        ])
    }, bX.geo.greatArc = function() {
        function f() {
            return {
                type: "LineString",
                coordinates: [b || c.apply(this, arguments), d || a.apply(this, arguments)]
            }
        }
        var b, d, c = eA,
            a = j6;
        return f.distance = function() {
            return bX.geo.distance(b || c.apply(this, arguments), d || a.apply(this, arguments))
        }, f.source = function(g) {
            return arguments.length ? (c = g, b = "function" == typeof g ? null : g, f) : c
        }, f.target = function(e) {
            return arguments.length ? (a = e, d = "function" == typeof e ? null : e, f) : a
        }, f.precision = function() {
            return arguments.length ? f : 0
        }, f
    }, bX.geo.interpolate = function(b, a) {
        return gY(b[0] * bw, b[1] * bw, a[0] * bw, a[1] * bw)
    }, bX.geo.length = function(a) {
        return cU = 0, bX.geo.stream(a, cy), cU
    };
    var cU, cy = {
            sphere: iG,
            point: iG,
            lineStart: ad,
            lineEnd: iG,
            polygonStart: iG,
            polygonEnd: iG
        },
        dX = iV(function(a) {
            return Math.sqrt(2 / (1 + a))
        }, function(a) {
            return 2 * Math.asin(a / 2)
        });
    (bX.geo.azimuthalEqualArea = function() {
        return bv(dX)
    }).raw = dX;
    var df = iV(function(b) {
        var a = Math.acos(b);
        return a && a / Math.sin(a)
    }, hR);
    (bX.geo.azimuthalEquidistant = function() {
        return bv(df)
    }).raw = df, (bX.geo.conicConformal = function() {
        return cT(am)
    }).raw = am, (bX.geo.conicEquidistant = function() {
        return cT(aM)
    }).raw = aM;
    var ef = iV(function(a) {
        return 1 / a
    }, Math.atan);
    (bX.geo.gnomonic = function() {
        return bv(ef)
    }).raw = ef, eX.invert = function(b, a) {
        return [b, 2 * Math.atan(Math.exp(a)) - fy]
    }, (bX.geo.mercator = function() {
        return fb(eX)
    }).raw = eX;
    var b4 = iV(function() {
        return 1
    }, Math.asin);
    (bX.geo.orthographic = function() {
        return bv(b4)
    }).raw = b4;
    var dD = iV(function(a) {
        return 1 / (1 + a)
    }, function(a) {
        return 2 * Math.atan(a)
    });
    (bX.geo.stereographic = function() {
        return bv(dD)
    }).raw = dD, aV.invert = function(b, a) {
        return [-a, 2 * Math.atan(Math.exp(b)) - fy]
    }, (bX.geo.transverseMercator = function() {
        var c = fb(aV),
            a = c.center,
            b = c.rotate;
        return c.center = function(d) {
            return d ? a([-d[1], d[0]]) : (d = a(), [d[1], -d[0]])
        }, c.rotate = function(d) {
            return d ? b([d[0], d[1], d.length > 2 ? d[2] + 90 : 90]) : (d = b(), [d[0], d[1], d[2] - 90])
        }, b([0, 0, 90])
    }).raw = aV, bX.geom = {}, bX.geom.hull = function(d) {
        function a(k) {
            if (k.length < 3) {
                return []
            }
            var z, y = aT(c),
                p = aT(b),
                e = k.length,
                x = [],
                w = [];
            for (z = 0; e > z; z++) {
                x.push([+y.call(this, k[z], z), +p.call(this, k[z], z), z])
            }
            for (x.sort(jE), z = 0; e > z; z++) {
                w.push([x[z][0], -x[z][1]])
            }
            var m = bE(x),
                A = bE(w),
                v = A[0] === m[0],
                q = A[A.length - 1] === m[m.length - 1],
                r = [];
            for (z = m.length - 1; z >= 0; --z) {
                r.push(k[x[m[z]][2]])
            }
            for (z = +v; z < A.length - q; ++z) {
                r.push(k[x[A[z]][2]])
            }
            return r
        }
        var c = cp,
            b = gG;
        return arguments.length ? a(d) : (a.x = function(e) {
            return arguments.length ? (c = e, a) : c
        }, a.y = function(e) {
            return arguments.length ? (b = e, a) : b
        }, a)
    }, bX.geom.polygon = function(a) {
        return kk(a, iK), a
    };
    var iK = bX.geom.polygon.prototype = [];
    iK.area = function() {
        for (var f, b = -1, d = this.length, c = this[d - 1], a = 0; ++b < d;) {
            f = c, c = this[b], a += f[1] * c[0] - f[0] * c[1]
        }
        return 0.5 * a
    }, iK.centroid = function(m) {
        var f, h, g = -1,
            c = this.length,
            d = 0,
            k = 0,
            b = this[c - 1];
        for (arguments.length || (m = -1 / (6 * this.area())); ++g < c;) {
            f = b, b = this[g], h = f[0] * b[1] - b[0] * f[1], d += (f[0] + b[0]) * h, k += (f[1] + b[1]) * h
        }
        return [d * m, k * m]
    }, iK.clip = function(f) {
        for (var v, k, b, q, h, d, p = eF(f), m = -1, g = this.length - eF(this), w = this[g - 1]; ++m < g;) {
            for (v = f.slice(), f.length = 0, q = this[m], h = v[(b = v.length - p) - 1], k = -1; ++k < b;) {
                d = v[k], cY(d, w, q) ? (cY(h, w, q) || f.push(hk(h, d, w, q)), f.push(d)) : cY(h, w, q) && f.push(hk(h, d, w, q)), h = d
            }
            p && f.push(f[0]), w = q
        }
        return f
    };
    var ab, hO, fO, d9, bQ, hh = [],
        cJ = [];
    gj.prototype.prepare = function() {
        for (var c, a = this.edges, b = a.length; b--;) {
            c = a[b].edge, c.b && c.a || a.splice(b, 1)
        }
        return a.sort(cL), a.length
    }, fG.prototype = {
        start: function() {
            return this.edge.l === this.site ? this.edge.a : this.edge.b
        },
        end: function() {
            return this.edge.l === this.site ? this.edge.b : this.edge.a
        }
    }, d1.prototype = {
        insert: function(f, b) {
            var d, c, a;
            if (f) {
                if (b.P = f, b.N = f.N, f.N && (f.N.P = b), f.N = b, f.R) {
                    for (f = f.R; f.L;) {
                        f = f.L
                    }
                    f.L = b
                } else {
                    f.R = b
                }
                d = f
            } else {
                this._ ? (f = bn(this._), b.P = null, b.N = f, f.P = f.L = b, d = f) : (b.P = b.N = null, this._ = b, d = null)
            }
            for (b.L = b.R = null, b.U = d, b.C = !0, f = b; d && d.C;) {
                c = d.U, d === c.L ? (a = c.R, a && a.C ? (d.C = a.C = !1, c.C = !0, f = c) : (f === d.R && (g9(this, d), f = d, d = f.U), d.C = !1, c.C = !0, cB(this, c))) : (a = c.L, a && a.C ? (d.C = a.C = !1, c.C = !0, f = c) : (f === d.L && (cB(this, d), f = d, d = f.U), d.C = !1, c.C = !0, g9(this, c))), d = f.U
            }
            this._.C = !1
        },
        remove: function(h) {
            h.N && (h.N.P = h.P), h.P && (h.P.N = h.N), h.N = h.P = null;
            var c, f, d, a = h.U,
                b = h.L,
                g = h.R;
            if (f = b ? g ? bn(g) : b : g, a ? a.L === h ? a.L = f : a.R = f : this._ = f, b && g ? (d = f.C, f.C = h.C, f.L = b, b.U = f, f !== g ? (a = f.U, f.U = h.U, h = f.R, a.L = h, f.R = g, g.U = f) : (f.U = a, a = f, h = f.R)) : (d = h.C, h = f), h && (h.U = a), !d) {
                if (h && h.C) {
                    return void(h.C = !1)
                }
                do {
                    if (h === this._) {
                        break
                    }
                    if (h === a.L) {
                        if (c = a.R, c.C && (c.C = !1, a.C = !0, g9(this, a), c = a.R), c.L && c.L.C || c.R && c.R.C) {
                            c.R && c.R.C || (c.L.C = !1, c.C = !0, cB(this, c), c = a.R), c.C = a.C, a.C = c.R.C = !1, g9(this, a), h = this._;
                            break
                        }
                    } else {
                        if (c = a.L, c.C && (c.C = !1, a.C = !0, cB(this, a), c = a.L), c.L && c.L.C || c.R && c.R.C) {
                            c.L && c.L.C || (c.R.C = !1, c.C = !0, g9(this, c), c = a.L), c.C = a.C, a.C = c.L.C = !1, cB(this, a), h = this._;
                            break
                        }
                    }
                    c.C = !0, h = a, a = a.U
                } while (!h.C);
                h && (h.C = !1)
            }
        }
    }, bX.geom.voronoi = function(m) {
        function f(v) {
            var p = new Array(v.length),
                q = b[0][0],
                a = b[0][1],
                e = b[1][0],
                s = b[1][1];
            return fQ(h(v), b).cells.forEach(function(t, o) {
                var u = t.edges,
                    n = t.site,
                    r = p[o] = u.length ? u.map(function(x) {
                        var w = x.start();
                        return [w.x, w.y]
                    }) : n.x >= q && n.x <= e && n.y >= a && n.y <= s ? [
                        [q, s],
                        [e, s],
                        [e, a],
                        [q, a]
                    ] : [];
                r.point = v[o]
            }), p
        }

        function h(a) {
            return a.map(function(o, e) {
                return {
                    x: Math.round(d(o, e) / bO) * bO,
                    y: Math.round(k(o, e) / bO) * bO,
                    i: e
                }
            })
        }
        var g = cp,
            c = gG,
            d = g,
            k = c,
            b = by;
        return m ? f(m) : (f.links = function(a) {
            return fQ(h(a)).edges.filter(function(e) {
                return e.l && e.r
            }).map(function(e) {
                return {
                    source: a[e.l.i],
                    target: a[e.r.i]
                }
            })
        }, f.triangles = function(e) {
            var a = [];
            return fQ(h(e)).cells.forEach(function(w, n) {
                for (var z, t, p = w.site, y = w.edges.sort(cL), x = -1, q = y.length, A = y[q - 1].edge, v = A.l === p ? A.r : A.l; ++x < q;) {
                    z = A, t = v, A = y[x].edge, v = A.l === p ? A.r : A.l, n < t.i && n < v.i && jH(p, t, v) < 0 && a.push([e[n], e[t.i], e[v.i]])
                }
            }), a
        }, f.x = function(a) {
            return arguments.length ? (d = aT(g = a), f) : g
        }, f.y = function(a) {
            return arguments.length ? (k = aT(c = a), f) : c
        }, f.clipExtent = function(a) {
            return arguments.length ? (b = null == a ? by : a, f) : b === by ? null : b
        }, f.size = function(a) {
            return arguments.length ? f.clipExtent(a && [
                [0, 0], a
            ]) : b === by ? null : b && b[1]
        }, f)
    };
    var by = [
        [-1000000, -1000000],
        [1000000, 1000000]
    ];
    bX.geom.delaunay = function(a) {
        return bX.geom.voronoi().triangles(a)
    }, bX.geom.quadtree = function(f, q, h, b, p) {
        function g(A) {
            function E(x, Q, M, v, P, y, w, O) {
                if (!isNaN(M) && !isNaN(v)) {
                    if (x.leaf) {
                        var N = x.x,
                            R = x.y;
                        if (null != N) {
                            if (gM(N - M) + gM(R - v) < 0.01) {
                                C(x, Q, M, v, P, y, w, O)
                            } else {
                                var L = x.point;
                                x.x = x.y = x.point = null, C(x, L, N, R, P, y, w, O), C(x, Q, M, v, P, y, w, O)
                            }
                        } else {
                            x.x = M, x.y = v, x.point = Q
                        }
                    } else {
                        C(x, Q, M, v, P, y, w, O)
                    }
                }
            }

            function C(x, S, O, v, R, w, Q, P) {
                var y = 0.5 * (R + Q),
                    T = 0.5 * (w + P),
                    N = O >= y,
                    L = v >= T,
                    M = L << 1 | N;
                x.leaf = !1, x = x.nodes[M] || (x.nodes[M] = b1()), N ? R = y : Q = y, L ? w = T : P = T, E(x, S, O, v, R, w, Q, P)
            }
            var u, H, F, G, z, t, I, B, e, c = aT(m),
                o = aT(k);
            if (null != q) {
                t = q, I = h, B = b, e = p
            } else {
                if (B = e = -(t = I = 1 / 0), H = [], F = [], z = A.length, d) {
                    for (G = 0; z > G; ++G) {
                        u = A[G], u.x < t && (t = u.x), u.y < I && (I = u.y), u.x > B && (B = u.x), u.y > e && (e = u.y), H.push(u.x), F.push(u.y)
                    }
                } else {
                    for (G = 0; z > G; ++G) {
                        var J = +c(u = A[G], G),
                            K = +o(u, G);
                        t > J && (t = J), I > K && (I = K), J > B && (B = J), K > e && (e = K), H.push(J), F.push(K)
                    }
                }
            }
            var r = B - t,
                a = e - I;
            r > a ? e = I + r : B = t + a;
            var D = b1();
            if (D.add = function(s) {
                    E(D, s, +c(s, ++G), +o(s, G), t, I, B, e)
                }, D.visit = function(s) {
                    gR(s, D, t, I, B, e)
                }, D.find = function(s) {
                    return f8(D, s[0], s[1], t, I, B, e)
                }, G = -1, null == q) {
                for (; ++G < z;) {
                    E(D, A[G], H[G], F[G], t, I, B, e)
                }--G
            } else {
                A.forEach(D.add)
            }
            return H = F = A = u = null, D
        }
        var d, m = cp,
            k = gG;
        return (d = arguments.length) ? (m = hV, k = eQ, 3 === d && (p = h, b = q, h = q = 0), g(f)) : (g.x = function(a) {
            return arguments.length ? (m = a, g) : m
        }, g.y = function(a) {
            return arguments.length ? (k = a, g) : k
        }, g.extent = function(a) {
            return arguments.length ? (null == a ? q = h = b = p = null : (q = +a[0][0], h = +a[0][1], b = +a[1][0], p = +a[1][1]), g) : null == q ? null : [
                [q, h],
                [b, p]
            ]
        }, g.size = function(a) {
            return arguments.length ? (null == a ? q = h = b = p = null : (q = h = 0, b = +a[0], p = +a[1]), g) : null == q ? null : [b - q, p - h]
        }, g)
    }, bX.interpolateRgb = gz, bX.interpolateObject = dh, bX.interpolateNumber = a0, bX.interpolateString = hA;
    var fV = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
        dK = new RegExp(fV.source, "g");
    bX.interpolate = ey, bX.interpolators = [function(c, a) {
        var b = typeof a;
        return ("string" === b ? af.has(a) || /^(#|rgb\(|hsl\()/.test(a) ? gz : hA : a instanceof dG ? gz : Array.isArray(a) ? j2 : "object" === b && isNaN(a) ? dh : a0)(c, a)
    }], bX.interpolateArray = j2;
    var jP = function() {
            return hR
        },
        h8 = bX.map({
            linear: jP,
            poly: e8,
            quad: function() {
                return ah
            },
            cubic: function() {
                return aI
            },
            sin: function() {
                return aR
            },
            exp: function() {
                return ch
            },
            circle: function() {
                return gD
            },
            elastic: bA,
            back: jA,
            bounce: function() {
                return cW
            }
        }),
        eV = bX.map({
            "in": hR,
            out: kp,
            "in-out": iQ,
            "out-in": function(a) {
                return iQ(kp(a))
            }
        });
    bX.ease = function(d) {
        var a = d.indexOf("-"),
            c = a >= 0 ? d.slice(0, a) : d,
            b = a >= 0 ? d.slice(a + 1) : "in";
        return c = h8.get(c) || jP, b = eV.get(b) || hR, gV(b(c.apply(null, hv.call(arguments, 1))))
    }, bX.interpolateHcl = hg, bX.interpolateHsl = eC, bX.interpolateLab = ff, bX.interpolateRound = a9, bX.transform = function(b) {
        var a = bF.createElementNS(bX.ns.prefix.svg, "g");
        return (bX.transform = function(d) {
            if (null != d) {
                a.setAttribute("transform", d);
                var c = a.transform.baseVal.consolidate()
            }
            return new fU(c ? c.matrix : b9)
        })(b)
    }, fU.prototype.toString = function() {
        return "translate(" + this.translate + ")rotate(" + this.rotate + ")skewX(" + this.skew + ")scale(" + this.scale + ")"
    };
    var b9 = {
        a: 1,
        b: 0,
        c: 0,
        d: 1,
        e: 0,
        f: 0
    };
    bX.interpolateTransform = jN, bX.layout = {}, bX.layout.bundle = function() {
        return function(d) {
            for (var a = [], c = -1, b = d.length; ++c < b;) {
                a.push(cI(d[c]))
            }
            return a
        }
    }, bX.layout.chord = function() {
        function f() {
            var c, o, u, s, t, a = {},
                G = [],
                A = bX.range(h),
                e = [];
            for (k = [], b = [], c = 0, s = -1; ++s < h;) {
                for (o = 0, t = -1; ++t < h;) {
                    o += q[s][t]
                }
                G.push(o), e.push(bX.range(h)), c += o
            }
            for (d && A.sort(function(y, x) {
                    return d(G[y], G[x])
                }), p && e.forEach(function(y, x) {
                    y.sort(function(I, H) {
                        return p(q[x][I], q[x][H])
                    })
                }), c = (hz - w * h) / c, o = 0, s = -1; ++s < h;) {
                for (u = o, t = -1; ++t < h;) {
                    var C = A[s],
                        z = e[C][t],
                        D = q[C][z],
                        B = o,
                        F = o += D * c;
                    a[C + "-" + z] = {
                        index: C,
                        subindex: z,
                        startAngle: B,
                        endAngle: F,
                        value: D
                    }
                }
                b[C] = {
                    index: C,
                    startAngle: u,
                    endAngle: o,
                    value: (o - u) / c
                }, o += w
            }
            for (s = -1; ++s < h;) {
                for (t = s - 1; ++t < h;) {
                    var E = a[s + "-" + t],
                        r = a[t + "-" + s];
                    (E.value || r.value) && k.push(E.value < r.value ? {
                        source: r,
                        target: E
                    } : {
                        source: E,
                        target: r
                    })
                }
            }
            m && v()
        }

        function v() {
            k.sort(function(c, a) {
                return m((c.source.value + c.target.value) / 2, (a.source.value + a.target.value) / 2)
            })
        }
        var k, b, q, h, d, p, m, g = {},
            w = 0;
        return g.matrix = function(a) {
            return arguments.length ? (h = (q = a) && q.length, k = b = null, g) : q
        }, g.padding = function(a) {
            return arguments.length ? (w = a, k = b = null, g) : w
        }, g.sortGroups = function(a) {
            return arguments.length ? (d = a, k = b = null, g) : d
        }, g.sortSubgroups = function(a) {
            return arguments.length ? (p = a, k = null, g) : p
        }, g.sortChords = function(a) {
            return arguments.length ? (m = a, k && v(), g) : m
        }, g.chords = function() {
            return k || f(), k
        }, g.groups = function() {
            return b || f(), b
        }, g
    }, bX.layout.force = function() {
        function B(a) {
            return function(v, m, d, s) {
                if (v.point !== a) {
                    var h = v.cx - a.x,
                        f = v.cy - a.y,
                        p = s - m,
                        n = h * h + f * f;
                    if (n > p * p / J) {
                        if (z > n) {
                            var g = v.charge / n;
                            a.px -= h * g, a.py -= f * g
                        }
                        return !0
                    }
                    if (v.point && n && z > n) {
                        var g = v.pointCharge / n;
                        a.px -= h * g, a.py -= f * g
                    }
                }
                return !v.charge
            }
        }

        function w(a) {
            a.px = bX.event.x, a.py = bX.event.y, L.resume()
        }
        var I, y, q, E, A, L = {},
            K = bX.dispatch("start", "tick", "end"),
            D = [1, 1],
            x = 0.9,
            H = gW,
            F = gg,
            G = -30,
            z = gE,
            k = 0.1,
            J = 0.64,
            C = [],
            b = [];
        return L.tick = function() {
            if ((y *= 0.99) < 0.005) {
                return K.end({
                    type: "end",
                    alpha: y = 0
                }), !0
            }
            var N, n, v, m, g, c, o, s, u, r = C.length,
                M = b.length;
            for (n = 0; M > n; ++n) {
                v = b[n], m = v.source, g = v.target, s = g.x - m.x, u = g.y - m.y, (c = s * s + u * u) && (c = y * E[n] * ((c = Math.sqrt(c)) - q[n]) / c, s *= c, u *= c, g.x -= s * (o = m.weight / (g.weight + m.weight)), g.y -= u * o, m.x += s * (o = 1 - o), m.y += u * o)
            }
            if ((o = y * k) && (s = D[0] / 2, u = D[1] / 2, n = -1, o)) {
                for (; ++n < r;) {
                    v = C[n], v.x += (s - v.x) * o, v.y += (u - v.y) * o
                }
            }
            if (G) {
                for (h7(N = bX.geom.quadtree(C), y, A), n = -1; ++n < r;) {
                    (v = C[n]).fixed || N.visit(B(v))
                }
            }
            for (n = -1; ++n < r;) {
                v = C[n], v.fixed ? (v.x = v.px, v.y = v.py) : (v.x -= (v.px - (v.px = v.x)) * x, v.y -= (v.py - (v.py = v.y)) * x)
            }
            K.tick({
                type: "tick",
                alpha: y
            })
        }, L.nodes = function(a) {
            return arguments.length ? (C = a, L) : C
        }, L.links = function(a) {
            return arguments.length ? (b = a, L) : b
        }, L.size = function(a) {
            return arguments.length ? (D = a, L) : D
        }, L.linkDistance = function(a) {
            return arguments.length ? (H = "function" == typeof a ? a : +a, L) : H
        }, L.distance = L.linkDistance, L.linkStrength = function(a) {
            return arguments.length ? (F = "function" == typeof a ? a : +a, L) : F
        }, L.friction = function(a) {
            return arguments.length ? (x = +a, L) : x
        }, L.charge = function(a) {
            return arguments.length ? (G = "function" == typeof a ? a : +a, L) : G
        }, L.chargeDistance = function(a) {
            return arguments.length ? (z = a * a, L) : Math.sqrt(z)
        }, L.gravity = function(a) {
            return arguments.length ? (k = +a, L) : k
        }, L.theta = function(a) {
            return arguments.length ? (J = a * a, L) : Math.sqrt(J)
        }, L.alpha = function(a) {
            return arguments.length ? (a = +a, y ? y = a > 0 ? a : 0 : a > 0 && (K.start({
                type: "start",
                alpha: y = a
            }), bX.timer(L.tick)), L) : y
        }, L.start = function() {
            function u(M, t) {
                if (!m) {
                    for (m = new Array(o), e = 0; o > e; ++e) {
                        m[e] = []
                    }
                    for (e = 0; f > e; ++e) {
                        var p = b[e];
                        m[p.source.index].push(p.target), m[p.target.index].push(p.source)
                    }
                }
                for (var s, v = m[d], e = -1, c = v.length; ++e < c;) {
                    if (!isNaN(s = v[e][M])) {
                        return s
                    }
                }
                return Math.random() * t
            }
            var d, m, g, o = C.length,
                f = b.length,
                h = D[0],
                a = D[1];
            for (d = 0; o > d; ++d) {
                (g = C[d]).index = d, g.weight = 0
            }
            for (d = 0; f > d; ++d) {
                g = b[d], "number" == typeof g.source && (g.source = C[g.source]), "number" == typeof g.target && (g.target = C[g.target]), ++g.source.weight, ++g.target.weight
            }
            for (d = 0; o > d; ++d) {
                g = C[d], isNaN(g.x) && (g.x = u("x", h)), isNaN(g.y) && (g.y = u("y", a)), isNaN(g.px) && (g.px = g.x), isNaN(g.py) && (g.py = g.y)
            }
            if (q = [], "function" == typeof H) {
                for (d = 0; f > d; ++d) {
                    q[d] = +H.call(this, b[d], d)
                }
            } else {
                for (d = 0; f > d; ++d) {
                    q[d] = H
                }
            }
            if (E = [], "function" == typeof F) {
                for (d = 0; f > d; ++d) {
                    E[d] = +F.call(this, b[d], d)
                }
            } else {
                for (d = 0; f > d; ++d) {
                    E[d] = F
                }
            }
            if (A = [], "function" == typeof G) {
                for (d = 0; o > d; ++d) {
                    A[d] = +G.call(this, C[d], d)
                }
            } else {
                for (d = 0; o > d; ++d) {
                    A[d] = G
                }
            }
            return L.resume()
        }, L.resume = function() {
            return L.alpha(0.1)
        }, L.stop = function() {
            return L.alpha(0)
        }, L.drag = function() {
            return I || (I = bX.behavior.drag().origin(hR).on("dragstart.force", c0).on("drag.force", w).on("dragend.force", dU)), arguments.length ? void this.on("mouseover.force", bS).on("mouseout.force", dn).call(I) : I
        }, bX.rebind(L, K, "on")
    };
    var gW = 20,
        gg = 1,
        gE = 1 / 0;
    bX.layout.hierarchy = function() {
        function d(g) {
            var h, m = [g],
                f = [];
            for (g.depth = 0; null != (h = m.pop());) {
                if (f.push(h), (e = c.call(d, h, h.depth)) && (n = e.length)) {
                    for (var n, e, k; --n >= 0;) {
                        m.push(k = e[n]), k.parent = h, k.depth = h.depth + 1
                    }
                    b && (h.value = 0), h.children = e
                } else {
                    b && (h.value = +b.call(d, h, h.depth) || 0), delete h.children
                }
            }
            return fD(g, function(q) {
                var p, o;
                a && (p = q.children) && p.sort(a), b && (o = q.parent) && (o.value += q.value)
            }), f
        }
        var a = hm,
            c = eh,
            b = bR;
        return d.sort = function(f) {
            return arguments.length ? (a = f, d) : a
        }, d.children = function(e) {
            return arguments.length ? (c = e, d) : c
        }, d.value = function(e) {
            return arguments.length ? (b = e, d) : b
        }, d.revalue = function(e) {
            return b && (hD(e, function(f) {
                f.children && (f.value = 0)
            }), fD(e, function(f) {
                var g;
                f.children || (f.value = +b.call(d, f, f.depth) || 0), (g = f.parent) && (g.value += f.value)
            })), e
        }, d
    }, bX.layout.partition = function() {
        function f(v, n, g, s) {
            var m = v.children;
            if (v.x = n, v.y = v.depth * s, v.dx = g, v.dy = s, m && (h = m.length)) {
                var h, q, p, k = -1;
                for (g = v.value ? g / v.value : 0; ++k < h;) {
                    f(q = m[k], n, p = q.value * g, s), n += p
                }
            }
        }

        function b(o) {
            var m = o.children,
                k = 0;
            if (m && (g = m.length)) {
                for (var g, h = -1; ++h < g;) {
                    k = Math.max(k, b(m[h]))
                }
            }
            return 1 + k
        }

        function d(h, g) {
            var k = c.call(this, h, g);
            return f(k[0], 0, a[0], a[1] / b(k[0])), k
        }
        var c = bX.layout.hierarchy(),
            a = [1, 1];
        return d.size = function(e) {
            return arguments.length ? (a = e, d) : a
        }, kd(d, c)
    }, bX.layout.pie = function() {
        function g(k) {
            var w, u = k.length,
                m = k.map(function(o, h) {
                    return +c.call(g, o, h)
                }),
                y = +("function" == typeof d ? d.apply(this, arguments) : d),
                r = ("function" == typeof a ? a.apply(this, arguments) : a) - y,
                n = Math.min(Math.abs(r) / u, +("function" == typeof b ? b.apply(this, arguments) : b)),
                q = n * (0 > r ? -1 : 1),
                e = (r - u * q) / bX.sum(m),
                x = bX.range(u),
                t = [];
            return null != f && x.sort(f === dp ? function(o, h) {
                return m[h] - m[o]
            } : function(o, h) {
                return f(k[o], k[h])
            }), x.forEach(function(h) {
                t[h] = {
                    data: k[h],
                    value: w = m[h],
                    startAngle: y,
                    endAngle: y += w * e + q,
                    padAngle: n
                }
            }), t
        }
        var c = Number,
            f = dp,
            d = 0,
            a = hz,
            b = 0;
        return g.value = function(h) {
            return arguments.length ? (c = h, g) : c
        }, g.sort = function(e) {
            return arguments.length ? (f = e, g) : f
        }, g.startAngle = function(e) {
            return arguments.length ? (d = e, g) : d
        }, g.endAngle = function(e) {
            return arguments.length ? (a = e, g) : a
        }, g.padAngle = function(e) {
            return arguments.length ? (b = e, g) : b
        }, g
    };
    var dp = {};
    bX.layout.stack = function() {
        function h(w, u) {
            if (!(o = w.length)) {
                return w
            }
            var n = w.map(function(p, m) {
                    return c.call(h, p, m)
                }),
                y = n.map(function(m) {
                    return m.map(function(p, s) {
                        return [b.call(h, p, s), g.call(h, p, s)]
                    })
                }),
                r = f.call(h, y, u);
            n = bX.permute(n, r), y = bX.permute(y, r);
            var o, q, e, x, t = d.call(h, y, u),
                k = n[0].length;
            for (e = 0; k > e; ++e) {
                for (a.call(h, n[0][e], x = t[e], y[0][e][1]), q = 1; o > q; ++q) {
                    a.call(h, n[q][e], x += y[q - 1][e][1], y[q][e][1])
                }
            }
            return w
        }
        var c = hR,
            f = jU,
            d = im,
            a = dN,
            b = bz,
            g = fY;
        return h.values = function(k) {
            return arguments.length ? (c = k, h) : c
        }, h.order = function(e) {
            return arguments.length ? (f = "function" == typeof e ? e : a7.get(e) || jU, h) : f
        }, h.offset = function(e) {
            return arguments.length ? (d = "function" == typeof e ? e : hE.get(e) || im, h) : d
        }, h.x = function(e) {
            return arguments.length ? (b = e, h) : b
        }, h.y = function(e) {
            return arguments.length ? (g = e, h) : g
        }, h.out = function(e) {
            return arguments.length ? (a = e, h) : a
        }, h
    };
    var a7 = bX.map({
            "inside-out": function(f) {
                var v, k, b = f.length,
                    q = f.map(eY),
                    h = f.map(cf),
                    d = bX.range(b).sort(function(c, a) {
                        return q[c] - q[a]
                    }),
                    p = 0,
                    m = 0,
                    g = [],
                    w = [];
                for (v = 0; b > v; ++v) {
                    k = d[v], m > p ? (p += h[k], g.push(k)) : (m += h[k], w.push(k))
                }
                return w.reverse().concat(g)
            },
            reverse: function(a) {
                return bX.range(a.length).reverse()
            },
            "default": jU
        }),
        hE = bX.map({
            silhouette: function(f) {
                var q, h, b, p = f.length,
                    g = f[0].length,
                    d = [],
                    m = 0,
                    k = [];
                for (h = 0; g > h; ++h) {
                    for (q = 0, b = 0; p > q; q++) {
                        b += f[q][h][1]
                    }
                    b > m && (m = b), d.push(b)
                }
                for (h = 0; g > h; ++h) {
                    k[h] = (m - d[h]) / 2
                }
                return k
            },
            wiggle: function(k) {
                var B, x, b, A, p, d, z, y, m, C = k.length,
                    w = k[0],
                    q = w.length,
                    v = [];
                for (v[0] = y = m = 0, x = 1; q > x; ++x) {
                    for (B = 0, A = 0; C > B; ++B) {
                        A += k[B][x][1]
                    }
                    for (B = 0, p = 0, z = w[x][0] - w[x - 1][0]; C > B; ++B) {
                        for (b = 0, d = (k[B][x][1] - k[B][x - 1][1]) / (2 * z); B > b; ++b) {
                            d += (k[b][x][1] - k[b][x - 1][1]) / z
                        }
                        p += d * k[B][x][1]
                    }
                    v[x] = y -= A ? p / A * z : 0, m > y && (m = y)
                }
                for (x = 0; q > x; ++x) {
                    v[x] -= m
                }
                return v
            },
            expand: function(m) {
                var f, h, g, c = m.length,
                    d = m[0].length,
                    k = 1 / c,
                    b = [];
                for (h = 0; d > h; ++h) {
                    for (f = 0, g = 0; c > f; f++) {
                        g += m[f][h][1]
                    }
                    if (g) {
                        for (f = 0; c > f; f++) {
                            m[f][h][1] /= g
                        }
                    } else {
                        for (f = 0; c > f; f++) {
                            m[f][h][1] = k
                        }
                    }
                }
                for (h = 0; d > h; ++h) {
                    b[h] = 0
                }
                return b
            },
            zero: im
        });
    bX.layout.histogram = function() {
        function f(m, r) {
            for (var k, x, w = [], q = m.map(d, this), y = c.call(this, q, r), v = a.call(this, y, q, r), r = -1, t = q.length, u = v.length - 1, e = b ? 1 : 1 / t;
                ++r < u;) {
                k = w[r] = [], k.dx = v[r + 1] - (k.x = v[r]), k.y = 0
            }
            if (u > 0) {
                for (r = -1; ++r < t;) {
                    x = q[r], x >= y[0] && x <= y[1] && (k = w[bX.bisect(v, x, 1, u) - 1], k.y += e, k.push(m[r]))
                }
            }
            return w
        }
        var b = !0,
            d = Number,
            c = dv,
            a = gk;
        return f.value = function(e) {
            return arguments.length ? (d = e, f) : d
        }, f.range = function(e) {
            return arguments.length ? (c = aT(e), f) : c
        }, f.bins = function(e) {
            return arguments.length ? (a = "number" == typeof e ? function(g) {
                return gH(g, e)
            } : aT(e), f) : a
        }, f.frequency = function(g) {
            return arguments.length ? (b = !!g, f) : b
        }, f
    }, bX.layout.pack = function() {
        function f(r, h) {
            var p = d.call(this, r, h),
                g = p[0],
                q = a[0],
                e = a[1],
                k = null == b ? Math.sqrt : "function" == typeof b ? b : function() {
                    return b
                };
            if (g.x = g.y = 0, fD(g, function(o) {
                    o.r = +k(o.value)
                }), fD(g, g5), c) {
                var m = c * (b ? 1 : Math.max(2 * g.r / q, 2 * g.r / e)) / 2;
                fD(g, function(o) {
                    o.r += m
                }), fD(g, g5), fD(g, function(o) {
                    o.r -= m
                })
            }
            return aB(g, q / 2, e / 2, b ? 1 : 1 / Math.max(2 * g.r / q, 2 * g.r / e)), p
        }
        var b, d = bX.layout.hierarchy().sort(a8),
            c = 0,
            a = [1, 1];
        return f.size = function(e) {
            return arguments.length ? (a = e, f) : a
        }, f.radius = function(g) {
            return arguments.length ? (b = null == g || "function" == typeof g ? g : +g, f) : b
        }, f.padding = function(e) {
            return arguments.length ? (c = +e, f) : c
        }, kd(f, d)
    }, bX.layout.tree = function() {
        function f(c, A) {
            var B = d.call(this, c, A),
                t = B[0],
                o = s(t);
            if (fD(o, k), o.parent.m = -o.z, hD(o, b), g) {
                hD(t, h)
            } else {
                var r = t,
                    a = t,
                    z = t;
                hD(t, function(u) {
                    u.x < r.x && (r = u), u.x > a.x && (a = u), u.depth > z.depth && (z = u)
                });
                var w = p(r, a) / 2 - r.x,
                    e = m[0] / (a.x + p(a, r) / 2 + w),
                    x = m[1] / (z.depth || 1);
                hD(t, function(u) {
                    u.x = (u.x + w) * e, u.y = u.depth * x
                })
            }
            return B
        }

        function s(B) {
            for (var x, z = {
                    A: null,
                    children: [B]
                }, y = [z]; null != (x = y.pop());) {
                for (var v, w = x.children, A = 0, c = w.length; c > A; ++A) {
                    y.push((w[A] = v = {
                        _: w[A],
                        parent: x,
                        children: (v = w[A].children) && v.slice() || [],
                        A: null,
                        a: null,
                        z: 0,
                        m: 0,
                        c: 0,
                        s: 0,
                        t: null,
                        i: A
                    }).a = v)
                }
            }
            return z.children[0]
        }

        function k(v) {
            var c = v.children,
                u = v.parent.children,
                o = v.i ? u[v.i - 1] : null;
            if (c.length) {
                gN(v);
                var a = (c[0].z + c[c.length - 1].z) / 2;
                o ? (v.z = o.z + p(v._, o._), v.m = v.z - a) : v.z = a
            } else {
                o && (v.z = o.z + p(v._, o._))
            }
            v.parent.A = q(v, o, v.parent.A || u[0])
        }

        function b(a) {
            a._.x = a.z + a.parent.m, a.m += a.parent.m
        }

        function q(w, E, B) {
            if (E) {
                for (var a, D = w, y = w, v = E, C = D.parent.children[0], x = D.m, F = y.m, A = v.m, z = C.m; v = aZ(v), D = fk(D), v && D;) {
                    C = fk(C), y = aZ(y), y.a = w, a = v.z + A - D.z - x + p(v._, D._), a > 0 && (cA(bI(v, w, B), w, a), x += a, F += a), A += v.m, x += D.m, z += C.m, F += y.m
                }
                v && !aZ(y) && (y.t = v, y.m += A - F), D && !fk(C) && (C.t = D, C.m += x - z, B = w)
            }
            return B
        }

        function h(a) {
            a.x *= m[0], a.y = a.depth * m[1]
        }
        var d = bX.layout.hierarchy().sort(null).value(null),
            p = e4,
            m = [1, 1],
            g = null;
        return f.separation = function(a) {
            return arguments.length ? (p = a, f) : p
        }, f.size = function(a) {
            return arguments.length ? (g = null == (m = a) ? h : null, f) : g ? null : m
        }, f.nodeSize = function(a) {
            return arguments.length ? (g = null == (m = a) ? null : h, f) : g ? m : null
        }, kd(f, d)
    }, bX.layout.cluster = function() {
        function f(k, p) {
            var e, v = b.call(this, k, p),
                u = v[0],
                m = 0;
            fD(u, function(h) {
                var g = h.children;
                g && g.length ? (h.x = c4(g), h.y = jL(g)) : (h.x = e ? m += d(h, e) : 0, h.y = 0, e = h)
            });
            var w = hw(u),
                t = eM(u),
                q = w.x - d(w, t) / 2,
                r = t.x + d(t, w) / 2;
            return fD(u, a ? function(g) {
                g.x = (g.x - u.x) * c[0], g.y = (u.y - g.y) * c[1]
            } : function(g) {
                g.x = (g.x - q) / (r - q) * c[0], g.y = (1 - (u.y ? g.y / u.y : 1)) * c[1]
            }), v
        }
        var b = bX.layout.hierarchy().sort(null).value(null),
            d = e4,
            c = [1, 1],
            a = !1;
        return f.separation = function(e) {
            return arguments.length ? (d = e, f) : d
        }, f.size = function(e) {
            return arguments.length ? (a = null == (c = e), f) : a ? null : c
        }, f.nodeSize = function(e) {
            return arguments.length ? (a = null != (c = e), f) : a ? c : null
        }, kd(f, b)
    }, bX.layout.treemap = function() {
        function m(o, f) {
            for (var h, g, a = -1, c = o.length; ++a < c;) {
                g = (h = o[a]).value * (0 > f ? 0 : f), h.area = isNaN(g) || 0 >= g ? 0 : g
            }
        }

        function D(u) {
            var r = u.children;
            if (r && r.length) {
                var g, G, F, n = y(u),
                    I = [],
                    t = r.slice(),
                    f = 1 / 0,
                    H = "slice" === x ? n.dx : "dice" === x ? n.dy : "slice-dice" === x ? 1 & u.depth ? n.dy : n.dx : Math.min(n.dx, n.dy);
                for (m(t, n.dx * n.dy / u.value), I.area = 0;
                    (F = t.length) > 0;) {
                    I.push(g = t[F - 1]), I.area += g.area, "squarify" !== x || (G = b(I, H)) <= f ? (t.pop(), f = G) : (I.area -= I.pop().area, C(I, H, n, !1), H = Math.min(n.dx, n.dy), I.length = I.area = 0, f = 1 / 0)
                }
                I.length && (C(I, H, n, !0), I.length = I.area = 0), r.forEach(D)
            }
        }

        function z(g) {
            var h = g.children;
            if (h && h.length) {
                var f, n = y(g),
                    e = h.slice(),
                    p = [];
                for (m(e, n.dx * n.dy / g.value), p.area = 0; f = e.pop();) {
                    p.push(f), p.area += f.area, null != f.z && (C(p, f.z ? n.dx : n.dy, n, !e.length), p.length = p.area = 0)
                }
                h.forEach(z)
            }
        }

        function b(G, h) {
            for (var s, p = G.area, f = 0, g = 1 / 0, F = -1, c = G.length;
                ++F < c;) {
                (s = G[F].area) && (g > s && (g = s), s > f && (f = s))
            }
            return p *= p, h *= h, p ? Math.max(h * f * d / p, p / (h * g * d)) : 1 / 0
        }

        function C(g, I, F, c) {
            var H, p = -1,
                f = g.length,
                G = F.x,
                h = F.y,
                J = I ? A(g.area / I) : 0;
            if (I == F.dx) {
                for ((c || J > F.dy) && (J = F.dy); ++p < f;) {
                    H = g[p], H.x = G, H.y = h, H.dy = J, G += H.dx = Math.min(F.x + F.dx - G, J ? A(H.area / J) : 0)
                }
                H.z = !0, H.dx += F.x + F.dx - G, F.y += J, F.dy -= J
            } else {
                for ((c || J > F.dx) && (J = F.dx); ++p < f;) {
                    H = g[p], H.x = G, H.y = h, H.dx = J, h += H.dy = Math.min(F.y + F.dy - h, J ? A(H.area / J) : 0)
                }
                H.z = !1, H.dy += F.y + F.dy - h, F.x += J, F.dx -= J
            }
        }

        function v(e) {
            var a = k || B(e),
                c = a[0];
            return c.x = 0, c.y = 0, c.dx = q[0], c.dy = q[1], k && B.revalue(c), m([c], c.dx * c.dy / c.value), (k ? z : D)(c), w && (k = a), a
        }
        var k, B = bX.layout.hierarchy(),
            A = Math.round,
            q = [1, 1],
            E = null,
            y = fv,
            w = !1,
            x = "squarify",
            d = 0.5 * (1 + Math.sqrt(5));
        return v.size = function(a) {
            return arguments.length ? (q = a, v) : q
        }, v.padding = function(g) {
            function a(h) {
                var n = g.call(v, h, h.depth);
                return null == n ? fv(h) : bm(h, "number" == typeof n ? [n, n, n, n] : n)
            }

            function f(e) {
                return bm(e, g)
            }
            if (!arguments.length) {
                return E
            }
            var c;
            return y = null == (E = g) ? fv : "function" == (c = typeof g) ? a : "number" === c ? (g = [g, g, g, g], f) : f, v
        }, v.round = function(a) {
            return arguments.length ? (A = a ? Math.round : Number, v) : A != Number
        }, v.sticky = function(a) {
            return arguments.length ? (w = a, k = null, v) : w
        }, v.ratio = function(a) {
            return arguments.length ? (d = a, v) : d
        }, v.mode = function(a) {
            return arguments.length ? (x = a + "", v) : x
        }, kd(v, B)
    }, bX.random = {
        normal: function(c, a) {
            var b = arguments.length;
            return 2 > b && (a = 1), 1 > b && (c = 0),
                function() {
                    var g, f, d;
                    do {
                        g = 2 * Math.random() - 1, f = 2 * Math.random() - 1, d = g * g + f * f
                    } while (!d || d > 1);
                    return c + a * g * Math.sqrt(-2 * Math.log(d) / d)
                }
        },
        logNormal: function() {
            var a = bX.random.normal.apply(bX, arguments);
            return function() {
                return Math.exp(a())
            }
        },
        bates: function(b) {
            var a = bX.random.irwinHall(b);
            return function() {
                return a() / b
            }
        },
        irwinHall: function(a) {
            return function() {
                for (var b = 0, c = 0; a > c; c++) {
                    b += Math.random()
                }
                return b
            }
        }
    }, bX.scale = {};
    var eD = {
        floor: hR,
        ceil: hR
    };
    bX.scale.linear = function() {
        return jw([0, 1], [0, 1], ey, !1)
    };
    var j9 = {
        s: 1,
        g: 1,
        p: 1,
        r: 1,
        e: 1
    };
    bX.scale.log = function() {
        return iF(bX.scale.linear().domain([0, 1]), 10, !0, [1, 10])
    };
    var g2 = bX.format(".0e"),
        aj = {
            floor: function(a) {
                return -Math.ceil(-a)
            },
            ceil: function(a) {
                return -Math.floor(-a)
            }
        };
    bX.scale.pow = function() {
        return kn(bX.scale.linear(), 1, [0, 1])
    }, bX.scale.sqrt = function() {
        return bX.scale.pow().exponent(0.5)
    }, bX.scale.ordinal = function() {
        return fM([], {
            t: "range",
            a: [
                []
            ]
        })
    }, bX.scale.category10 = function() {
        return bX.scale.ordinal().range(i3)
    }, bX.scale.category20 = function() {
        return bX.scale.ordinal().range(aw)
    }, bX.scale.category20b = function() {
        return bX.scale.ordinal().range(aP)
    }, bX.scale.category20c = function() {
        return bX.scale.ordinal().range(e1)
    };
    var i3 = [2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175].map(gX),
        aw = [2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725].map(gX),
        aP = [3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654].map(gX),
        e1 = [3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081].map(gX);
    bX.scale.quantile = function() {
        return d7([], [])
    }, bX.scale.quantize = function() {
        return bP(0, 1, [0, 1])
    }, bX.scale.threshold = function() {
        return hf([0.5], [0, 1])
    }, bX.scale.identity = function() {
        return cH([0, 1])
    }, bX.svg = {}, bX.svg.arc = function() {
        function f() {
            var bl = Math.max(0, +h.apply(this, arguments)),
                br = Math.max(0, +b.apply(this, arguments)),
                bc = d.apply(this, arguments) - fy,
                ce = m.apply(this, arguments) - fy,
                ca = Math.abs(ce - bc),
                cc = bc > ce ? 0 : 1;
            if (bl > br && (bi = br, br = bl, bl = bi), ca >= eP) {
                return q(br, cc) + (bl ? q(bl, 1 - cc) : "") + "Z"
            }
            var bi, ba, ci, bo, ar, K, at, cl, co, au, t, bt, ac = 0,
                al = 0,
                J = [];
            if ((bo = (+k.apply(this, arguments) || 0) / 2) && (ci = g === fg ? Math.sqrt(bl * bl + br * br) : +g.apply(this, arguments), cc || (al *= -1), br && (al = bL(ci / br * Math.sin(bo))), bl && (ac = bL(ci / bl * Math.sin(bo)))), br) {
                ar = br * Math.cos(bc + al), K = br * Math.sin(bc + al), at = br * Math.cos(ce - al), cl = br * Math.sin(ce - al);
                var ai = Math.abs(ce - bc - 2 * al) <= c9 ? 0 : 1;
                if (al && b7(ar, K, at, cl) === cc ^ ai) {
                    var ao = (bc + ce) / 2;
                    ar = br * Math.cos(ao), K = br * Math.sin(ao), at = cl = null
                }
            } else {
                ar = K = 0
            }
            if (bl) {
                co = bl * Math.cos(ce - ac), au = bl * Math.sin(ce - ac), t = bl * Math.cos(bc + ac), bt = bl * Math.sin(bc + ac);
                var be = Math.abs(bc - ce + 2 * ac) <= c9 ? 0 : 1;
                if (ac && b7(co, au, t, bt) === 1 - cc ^ be) {
                    var Q = (bc + ce) / 2;
                    co = bl * Math.cos(Q), au = bl * Math.sin(Q), t = bt = null
                }
            } else {
                co = au = 0
            }
            if ((bi = Math.min(Math.abs(br - bl) / 2, +p.apply(this, arguments))) > 0.001) {
                ba = br > bl ^ cc ? 0 : 1;
                var r = null == t ? [co, au] : null == at ? [ar, K] : hk([ar, K], [t, bt], [at, cl], [co, au]),
                    u = ar - r[0],
                    ae = K - r[1],
                    B = at - r[0],
                    o = cl - r[1],
                    bu = 1 / Math.sin(Math.acos((u * B + ae * o) / (Math.sqrt(u * u + ae * ae) * Math.sqrt(B * B + o * o))) / 2),
                    aa = Math.sqrt(r[0] * r[0] + r[1] * r[1]);
                if (null != at) {
                    var X = Math.min(bi, (br - aa) / (bu + 1)),
                        G = gU(null == t ? [co, au] : [t, bt], [ar, K], br, X, cc),
                        W = gU([at, cl], [co, au], br, X, cc);
                    bi === X ? J.push("M", G[0], "A", X, ",", X, " 0 0,", ba, " ", G[1], "A", br, ",", br, " 0 ", 1 - cc ^ b7(G[1][0], G[1][1], W[1][0], W[1][1]), ",", cc, " ", W[1], "A", X, ",", X, " 0 0,", ba, " ", W[0]) : J.push("M", G[0], "A", X, ",", X, " 0 1,", ba, " ", W[0])
                } else {
                    J.push("M", ar, ",", K)
                }
                if (null != t) {
                    var c = Math.min(bi, (bl - aa) / (bu - 1)),
                        a = gU([ar, K], [t, bt], bl, -c, cc),
                        e = gU([co, au], null == at ? [ar, K] : [at, cl], bl, -c, cc);
                    bi === c ? J.push("L", e[0], "A", c, ",", c, " 0 0,", ba, " ", e[1], "A", bl, ",", bl, " 0 ", cc ^ b7(e[1][0], e[1][1], a[1][0], a[1][1]), ",", 1 - cc, " ", a[1], "A", c, ",", c, " 0 0,", ba, " ", a[0]) : J.push("L", e[0], "A", c, ",", c, " 0 0,", ba, " ", a[0])
                } else {
                    J.push("L", co, ",", au)
                }
            } else {
                J.push("M", ar, ",", K), null != at && J.push("A", br, ",", br, " 0 ", ai, ",", cc, " ", at, ",", cl), J.push("L", co, ",", au), null != t && J.push("A", bl, ",", bl, " 0 ", be, ",", 1 - cc, " ", t, ",", bt)
            }
            return J.push("Z"), J.join("")
        }

        function q(c, a) {
            return "M0," + c + "A" + c + "," + c + " 0 1," + a + " 0," + -c + "A" + c + "," + c + " 0 1," + a + " 0," + c
        }
        var h = fT,
            b = dI,
            p = bx,
            g = fg,
            d = jM,
            m = h3,
            k = eT;
        return f.innerRadius = function(a) {
            return arguments.length ? (h = aT(a), f) : h
        }, f.outerRadius = function(a) {
            return arguments.length ? (b = aT(a), f) : b
        }, f.cornerRadius = function(a) {
            return arguments.length ? (p = aT(a), f) : p
        }, f.padRadius = function(a) {
            return arguments.length ? (g = a == fg ? fg : aT(a), f) : g
        }, f.startAngle = function(a) {
            return arguments.length ? (d = aT(a), f) : d
        }, f.endAngle = function(a) {
            return arguments.length ? (m = aT(a), f) : m
        }, f.padAngle = function(a) {
            return arguments.length ? (k = aT(a), f) : k
        }, f.centroid = function() {
            var c = (+h.apply(this, arguments) + +b.apply(this, arguments)) / 2,
                a = (+d.apply(this, arguments) + +m.apply(this, arguments)) / 2 - fy;
            return [Math.cos(a) * c, Math.sin(a) * c]
        }, f
    };
    var fg = "auto";
    bX.svg.line = function() {
        return gd(hR)
    };
    var aY = bX.map({
        linear: gC,
        "linear-closed": dm,
        step: a6,
        "step-before": eB,
        "step-after": j8,
        basis: eZ,
        "basis-open": fd,
        "basis-closed": aX,
        bundle: cv,
        cardinal: iY,
        "cardinal-open": g0,
        "cardinal-closed": ag,
        monotone: eH
    });
    aY.forEach(function(b, a) {
        a.key = b, a.closed = /-closed$/.test(b)
    });
    var cx = [0, 2 / 3, 1 / 3, 0],
        gK = [0, 1 / 3, 2 / 3, 0],
        bH = [0, 1 / 6, 2 / 3, 1 / 6];
    bX.svg.line.radial = function() {
        var a = gd(fm);
        return a.radius = a.x, delete a.x, a.angle = a.y, delete a.y, a
    }, eB.reverse = j8, j8.reverse = eB, bX.svg.area = function() {
        return bj(hR)
    }, bX.svg.area.radial = function() {
        var a = bj(fm);
        return a.radius = a.x, delete a.x, a.innerRadius = a.x0, delete a.x0, a.outerRadius = a.x1, delete a.x1, a.angle = a.y, delete a.y, a.startAngle = a.y0, delete a.y0, a.endAngle = a.y1, delete a.y1, a
    }, bX.svg.chord = function() {
        function f(t, o) {
            var r = s(this, h, t, o),
                e = s(this, d, t, o);
            return "M" + r.p0 + b(r.r, r.p1, r.a1 - r.a0) + (k(r, e) ? q(r.r, r.p1, r.r, r.p0) : q(r.r, r.p1, e.r, e.p0) + b(e.r, e.p1, e.a1 - e.a0) + q(e.r, e.p1, r.r, r.p0)) + "Z"
        }

        function s(A, v, y, x) {
            var a = v.call(A, y, x),
                c = p.call(A, a, x),
                z = m.call(A, a, x) - fy,
                w = g.call(A, a, x) - fy;
            return {
                r: c,
                a0: z,
                a1: w,
                p0: [c * Math.cos(z), c * Math.sin(z)],
                p1: [c * Math.cos(w), c * Math.sin(w)]
            }
        }

        function k(c, a) {
            return c.a0 == a.a0 && c.a1 == a.a1
        }

        function b(o, a, c) {
            return "A" + o + "," + o + " 0 " + +(c > c9) + ",1 " + a
        }

        function q(u, a, o, c) {
            return "Q 0,0 " + c
        }
        var h = eA,
            d = j6,
            p = fZ,
            m = jM,
            g = h3;
        return f.radius = function(a) {
            return arguments.length ? (p = aT(a), f) : p
        }, f.source = function(a) {
            return arguments.length ? (h = aT(a), f) : h
        }, f.target = function(a) {
            return arguments.length ? (d = aT(a), f) : d
        }, f.startAngle = function(a) {
            return arguments.length ? (m = aT(a), f) : m
        }, f.endAngle = function(a) {
            return arguments.length ? (g = aT(a), f) : g
        }, f
    }, bX.svg.diagonal = function() {
        function d(m, f) {
            var g = a.call(this, m, f),
                h = c.call(this, m, f),
                e = (g.y + h.y) / 2,
                k = [g, {
                    x: g.x,
                    y: e
                }, {
                    x: h.x,
                    y: e
                }, h];
            return k = k.map(b), "M" + k[0] + "C" + k[1] + " " + k[2] + " " + k[3]
        }
        var a = eA,
            c = j6,
            b = ek;
        return d.source = function(f) {
            return arguments.length ? (a = aT(f), d) : a
        }, d.target = function(e) {
            return arguments.length ? (c = aT(e), d) : c
        }, d.projection = function(e) {
            return arguments.length ? (b = e, d) : b
        }, d
    }, bX.svg.diagonal.radial = function() {
        var c = bX.svg.diagonal(),
            a = ek,
            b = c.projection;
        return c.projection = function(d) {
            return arguments.length ? b(fC(a = d)) : a
        }, c
    }, bX.svg.symbol = function() {
        function c(e, d) {
            return (jI.get(a.call(this, e, d)) || gm)(b.call(this, e, d))
        }
        var a = jV,
            b = aC;
        return c.type = function(d) {
            return arguments.length ? (a = aT(d), c) : a
        }, c.size = function(d) {
            return arguments.length ? (b = aT(d), c) : b
        }, c
    };
    var jI = bX.map({
        circle: gm,
        cross: function(b) {
            var a = Math.sqrt(b / 5) / 2;
            return "M" + -3 * a + "," + -a + "H" + -a + "V" + -3 * a + "H" + a + "V" + -a + "H" + 3 * a + "V" + a + "H" + a + "V" + 3 * a + "H" + -a + "V" + a + "H" + -3 * a + "Z"
        },
        diamond: function(c) {
            var a = Math.sqrt(c / (2 * hq)),
                b = a * hq;
            return "M0," + -a + "L" + b + ",0 0," + a + " " + -b + ",0Z"
        },
        square: function(b) {
            var a = Math.sqrt(b) / 2;
            return "M" + -a + "," + -a + "L" + a + "," + -a + " " + a + "," + a + " " + -a + "," + a + "Z"
        },
        "triangle-down": function(c) {
            var a = Math.sqrt(c / c1),
                b = a * c1 / 2;
            return "M0," + b + "L" + a + "," + -b + " " + -a + "," + -b + "Z"
        },
        "triangle-up": function(c) {
            var a = Math.sqrt(c / c1),
                b = a * c1 / 2;
            return "M0," + -b + "L" + a + "," + b + " " + -a + "," + b + "Z"
        }
    });
    bX.svg.symbolTypes = jI.keys();
    var c1 = Math.sqrt(3),
        hq = Math.tan(30 * bw);
    aG.transition = function(g) {
        for (var x, p, b = eJ || ++en, w = c5(g), k = [], d = fp || {
                time: Date.now(),
                ease: eU,
                delay: 0,
                duration: 250
            }, v = -1, q = this.length;
            ++v < q;) {
            k.push(x = []);
            for (var h = this[v], y = -1, m = h.length; ++y < m;) {
                (p = h[y]) && d0(p, y, w, b, d), x.push(p)
            }
        }
        return cN(k, w, b)
    }, aG.interrupt = function(a) {
        return this.each(null == a ? bk : jf(c5(a)))
    };
    var eJ, fp, bk = jf(c5()),
        f1 = [],
        en = 0;
    f1.call = aG.call, f1.empty = aG.empty, f1.node = aG.node, f1.size = aG.size, bX.transition = function(b, a) {
        return b && b.transition ? eJ ? b.transition(a) : b : bX.selection().transition(b)
    }, bX.transition.prototype = f1, f1.select = function(g) {
        var x, p, b, w = this.id,
            k = this.namespace,
            d = [];
        g = i4(g);
        for (var v = -1, q = this.length; ++v < q;) {
            d.push(x = []);
            for (var h = this[v], y = -1, m = h.length; ++y < m;) {
                (b = h[y]) && (p = g.call(b, b.__data__, y, v)) ? ("__data__" in b && (p.__data__ = b.__data__), d0(p, y, k, w, b[k][w]), x.push(p)) : x.push(null)
            }
        }
        return cN(d, k, w)
    }, f1.selectAll = function(m) {
        var F, A, b, E, w, k = this.id,
            C = this.namespace,
            B = [];
        m = jx(m);
        for (var q = -1, G = this.length; ++q < G;) {
            for (var z = this[q], x = -1, y = z.length; ++x < y;) {
                if (b = z[x]) {
                    w = b[C][k], A = m.call(b, b.__data__, x, q), B.push(F = []);
                    for (var d = -1, D = A.length; ++d < D;) {
                        (E = A[d]) && d0(E, d, C, k, w), F.push(E)
                    }
                }
            }
        }
        return cN(B, C, k)
    }, f1.filter = function(f) {
        var q, h, b, p = [];
        "function" != typeof f && (f = i1(f));
        for (var g = 0, d = this.length; d > g; g++) {
            p.push(q = []);
            for (var h = this[g], m = 0, k = h.length; k > m; m++) {
                (b = h[m]) && f.call(b, b.__data__, m, g) && q.push(b)
            }
        }
        return cN(p, this.namespace, this.id)
    }, f1.tween = function(d, a) {
        var c = this.id,
            b = this.namespace;
        return arguments.length < 2 ? this.node()[b][c].tween.get(d) : iN(this, null == a ? function(e) {
            e[b][c].tween.remove(d)
        } : function(e) {
            e[b][c].tween.set(d, a)
        })
    }, f1.attr = function(m, f) {
        function h() {
            this.removeAttribute(b)
        }

        function g() {
            this.removeAttributeNS(b.space, b.local)
        }

        function c(a) {
            return null == a ? h : (a += "", function() {
                var n, o = this.getAttribute(b);
                return o !== a && (n = k(o, a), function(e) {
                    this.setAttribute(b, n(e))
                })
            })
        }

        function d(a) {
            return null == a ? g : (a += "", function() {
                var n, o = this.getAttributeNS(b.space, b.local);
                return o !== a && (n = k(o, a), function(e) {
                    this.setAttributeNS(b.space, b.local, n(e))
                })
            })
        }
        if (arguments.length < 2) {
            for (f in m) {
                this.attr(f, m[f])
            }
            return this
        }
        var k = "transform" == m ? jN : ey,
            b = bX.ns.qualify(m);
        return cg(this, "attr." + m, f, b.local ? d : c)
    }, f1.attrTween = function(f, b) {
        function d(k, h) {
            var g = b.call(this, k, h, this.getAttribute(a));
            return g && function(e) {
                this.setAttribute(a, g(e))
            }
        }

        function c(k, h) {
            var g = b.call(this, k, h, this.getAttributeNS(a.space, a.local));
            return g && function(e) {
                this.setAttributeNS(a.space, a.local, g(e))
            }
        }
        var a = bX.ns.qualify(f);
        return this.tween("attr." + f, a.local ? c : d)
    }, f1.style = function(g, d, c) {
        function a() {
            this.style.removeProperty(g)
        }

        function b(h) {
            return null == h ? a : (h += "", function() {
                var e, k = hY(this).getComputedStyle(this, null).getPropertyValue(g);
                return k !== h && (e = ey(k, h), function(m) {
                    this.style.setProperty(g, e(m), c)
                })
            })
        }
        var f = arguments.length;
        if (3 > f) {
            if ("string" != typeof g) {
                2 > f && (d = "");
                for (c in g) {
                    this.style(c, g[c], d)
                }
                return this
            }
            c = ""
        }
        return cg(this, "style." + g, d, b)
    }, f1.styleTween = function(d, c, b) {
        function a(e, f) {
            var g = c.call(this, e, f, hY(this).getComputedStyle(this, null).getPropertyValue(d));
            return g && function(h) {
                this.style.setProperty(d, g(h), b)
            }
        }
        return arguments.length < 3 && (b = ""), this.tween("style." + d, a)
    }, f1.text = function(a) {
        return cg(this, "text", a, dO)
    }, f1.remove = function() {
        var a = this.namespace;
        return this.each("end.transition", function() {
            var b;
            this[a].count < 2 && (b = this.parentNode) && b.removeChild(this)
        })
    }, f1.ease = function(c) {
        var a = this.id,
            b = this.namespace;
        return arguments.length < 1 ? this.node()[b][a].ease : ("function" != typeof c && (c = bX.ease.apply(bX, arguments)), iN(this, function(d) {
            d[b][a].ease = c
        }))
    }, f1.delay = function(c) {
        var a = this.id,
            b = this.namespace;
        return arguments.length < 1 ? this.node()[b][a].delay : iN(this, "function" == typeof c ? function(f, d, e) {
            f[b][a].delay = +c.call(f, f.__data__, d, e)
        } : (c = +c, function(d) {
            d[b][a].delay = c
        }))
    }, f1.duration = function(c) {
        var a = this.id,
            b = this.namespace;
        return arguments.length < 1 ? this.node()[b][a].duration : iN(this, "function" == typeof c ? function(f, d, e) {
            f[b][a].duration = Math.max(1, c.call(f, f.__data__, d, e))
        } : (c = Math.max(1, c), function(d) {
            d[b][a].duration = c
        }))
    }, f1.each = function(g, c) {
        var f = this.id,
            d = this.namespace;
        if (arguments.length < 2) {
            var a = fp,
                b = eJ;
            try {
                eJ = f, iN(this, function(k, e, h) {
                    fp = k[d][f], g.call(k, k.__data__, e, h)
                })
            } finally {
                fp = a, eJ = b
            }
        } else {
            iN(this, function(e) {
                var h = e[d][f];
                (h.event || (h.event = bX.dispatch("start", "end", "interrupt"))).on(g, c)
            })
        }
        return this
    }, f1.transition = function() {
        for (var g, x, p, b, w = this.id, k = ++en, d = this.namespace, v = [], q = 0, h = this.length; h > q; q++) {
            v.push(g = []);
            for (var x = this[q], y = 0, m = x.length; m > y; y++) {
                (p = x[y]) && (b = p[d][w], d0(p, y, d, k, {
                    time: b.time,
                    ease: b.ease,
                    delay: b.delay + b.duration,
                    duration: b.duration
                })), g.push(p)
            }
        }
        return cN(v, d, k)
    }, bX.svg.axis = function() {
        function f(a) {
            a.each(function() {
                var P, U = bX.select(this),
                    H = this.__chart__ || h,
                    Y = this.__chart__ = h.copy(),
                    W = null == k ? Y.ticks ? Y.ticks.apply(Y, m) : Y.domain() : k,
                    X = null == q ? Y.tickFormat ? Y.tickFormat.apply(Y, m) : hR : q,
                    O = U.selectAll(".tick").data(W, Y),
                    F = O.enter().insert("g", ".domain").attr("class", "tick").style("opacity", bO),
                    Z = bX.transition(O.exit()).style("opacity", bO).remove(),
                    Q = bX.transition(O.order()).style("opacity", 1),
                    t = Math.max(p, 0) + d,
                    B = es(Y),
                    aa = U.selectAll(".domain").data([0]),
                    ac = (aa.enter().append("path").attr("class", "domain"), bX.transition(aa));
                F.append("line"), F.append("text");
                var D, e, V, G, K = F.select("line"),
                    r = Q.select("line"),
                    I = O.select("text").text(X),
                    y = F.select("text"),
                    J = Q.select("text"),
                    u = "top" === b || "left" === b ? -1 : 1;
                if ("bottom" === b || "top" === b ? (P = bY, D = "x", V = "y", e = "x2", G = "y2", I.attr("dy", 0 > u ? "0em" : ".71em").style("text-anchor", "middle"), ac.attr("d", "M" + B[0] + "," + u * g + "V0H" + B[1] + "V" + u * g)) : (P = dw, D = "y", V = "x", e = "y2", G = "x2", I.attr("dy", ".32em").style("text-anchor", 0 > u ? "end" : "start"), ac.attr("d", "M" + u * g + "," + B[0] + "H0V" + B[1] + "H" + u * g)), K.attr(G, u * p), y.attr(V, u * t), r.attr(e, 0).attr(G, u * p), J.attr(D, 0).attr(V, u * t), Y.rangeBand) {
                    var c = Y,
                        o = c.rangeBand() / 2;
                    H = Y = function(s) {
                        return c(s) + o
                    }
                } else {
                    H.rangeBand ? H = Y : Z.call(P, Y, H)
                }
                F.call(P, H, Y), Q.call(P, Y, Y)
            })
        }
        var q, h = bX.scale.linear(),
            b = fE,
            p = 6,
            g = 6,
            d = 3,
            m = [10],
            k = null;
        return f.scale = function(a) {
            return arguments.length ? (h = a, f) : h
        }, f.orient = function(a) {
            return arguments.length ? (b = a in aE ? a + "" : fE, f) : b
        }, f.ticks = function() {
            return arguments.length ? (m = arguments, f) : m
        }, f.tickValues = function(a) {
            return arguments.length ? (k = a, f) : k
        }, f.tickFormat = function(a) {
            return arguments.length ? (q = a, f) : q
        }, f.tickSize = function(a) {
            var c = arguments.length;
            return c ? (p = +a, g = +arguments[c - 1], f) : p
        }, f.innerTickSize = function(a) {
            return arguments.length ? (p = +a, f) : p
        }, f.outerTickSize = function(a) {
            return arguments.length ? (g = +a, f) : g
        }, f.tickPadding = function(a) {
            return arguments.length ? (d = +a, f) : d
        }, f.tickSubdivide = function() {
            return arguments.length && f
        }, f
    };
    var fE = "bottom",
        aE = {
            top: 1,
            right: 1,
            bottom: 1,
            left: 1
        };
    bX.svg.brush = function() {
        function m(a) {
            a.each(function() {
                var g = bX.select(this).style("pointer-events", "all").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)").on("mousedown.brush", t).on("touchstart.brush", t),
                    r = g.selectAll(".background").data([0]);
                r.enter().append("rect").attr("class", "background").style("visibility", "hidden").style("cursor", "crosshair"), g.selectAll(".extent").data([0]).enter().append("rect").attr("class", "extent").style("cursor", "move");
                var e = g.selectAll(".resize").data(C, hR);
                e.exit().remove(), e.enter().append("g").attr("class", function(c) {
                    return "resize " + c
                }).style("cursor", function(c) {
                    return jX[c]
                }).append("rect").attr("x", function(c) {
                    return /[ew]$/.test(c) ? -3 : null
                }).attr("y", function(c) {
                    return /^[ns]/.test(c) ? -3 : null
                }).attr("width", 6).attr("height", 6).style("visibility", "hidden"), e.style("display", m.empty() ? "none" : null);
                var s, p = bX.transition(g),
                    n = bX.transition(r);
                q && (s = es(q), n.attr("x", s[0]).attr("width", s[1] - s[0]), b(p)), E && (s = es(E), n.attr("y", s[0]).attr("height", s[1] - s[0]), D(p)), z(p)
            })
        }

        function z(a) {
            a.selectAll(".resize").attr("transform", function(c) {
                return "translate(" + y[+/e$/.test(c)] + "," + w[+/^s/.test(c)] + ")"
            })
        }

        function b(a) {
            a.select(".extent").attr("x", y[0]), a.selectAll(".extent,.n>rect,.s>rect").attr("width", y[1] - y[0])
        }

        function D(a) {
            a.select(".extent").attr("y", w[0]), a.selectAll(".extent,.e>rect,.w>rect").attr("height", w[1] - w[0])
        }

        function t() {
            function J() {
                32 == bX.event.keyCode && (u || (f = null, F[0] -= y[1], F[1] -= w[1], u = 2), iW())
            }

            function r() {
                32 == bX.event.keyCode && 2 == u && (F[0] += y[1], F[1] += w[1], u = 0, iW())
            }

            function K() {
                var L = bX.mouse(O),
                    v = !1;
                o && (L[0] += o[0], L[1] += o[1]), u || (bX.event.altKey ? (f || (f = [(y[0] + y[1]) / 2, (w[0] + w[1]) / 2]), F[0] = y[+(L[0] < f[0])], F[1] = w[+(L[1] < f[1])]) : f = null), G && H(L, q, 0) && (b(I), v = !0), e && H(L, E, 1) && (D(I), v = !0), v && (z(I), p({
                    type: "brush",
                    mode: u ? "move" : "resize"
                }))
            }

            function H(M, W, R) {
                var L, V, Q = es(W),
                    T = Q[0],
                    N = Q[1],
                    X = F[R],
                    U = R ? w : y,
                    S = U[1] - U[0];
                return u && (T -= X, N -= S + X), L = (R ? d : x) ? Math.max(T, Math.min(N, M[R])) : M[R], u ? V = (L += X) + S : (f && (X = Math.max(T, Math.min(N, 2 * f[R] - L))), L > X ? (V = L, L = X) : V = X), U[0] != L || U[1] != V ? (R ? B = null : k = null, U[0] = L, U[1] = V, !0) : void 0
            }

            function n() {
                K(), I.style("pointer-events", "all").selectAll(".resize").style("display", m.empty() ? "none" : null), bX.select("body").style("cursor", null), g.on("mousemove.brush", null).on("mouseup.brush", null).on("touchmove.brush", null).on("touchend.brush", null).on("keydown.brush", null).on("keyup.brush", null), h(), p({
                    type: "brushend"
                })
            }
            var f, o, O = this,
                P = bX.select(bX.event.target),
                p = A.of(O, arguments),
                I = bX.select(O),
                s = P.datum(),
                G = !/^(n|s)$/.test(s) && q,
                e = !/^(e|w)$/.test(s) && E,
                u = P.classed("extent"),
                h = iP(O),
                F = bX.mouse(O),
                g = bX.select(hY(O)).on("keydown.brush", J).on("keyup.brush", r);
            if (bX.event.changedTouches ? g.on("touchmove.brush", K).on("touchend.brush", n) : g.on("mousemove.brush", K).on("mouseup.brush", n), I.interrupt().selectAll("*").interrupt(), u) {
                F[0] = y[0] - F[0], F[1] = w[0] - F[1]
            } else {
                if (s) {
                    var a = +/w$/.test(s),
                        c = +/^n/.test(s);
                    o = [y[1 - a] - F[0], w[1 - c] - F[1]], F[0] = y[a], F[1] = w[c]
                } else {
                    bX.event.altKey && (f = F.slice())
                }
            }
            I.style("pointer-events", "none").selectAll(".resize").style("display", null), bX.select("body").style("cursor", P.style("cursor")), p({
                type: "brushstart"
            }), K()
        }
        var k, B, A = jq(m, "brushstart", "brush", "brushend"),
            q = null,
            E = null,
            y = [0, 0],
            w = [0, 0],
            x = !0,
            d = !0,
            C = gp[0];
        return m.event = function(a) {
            a.each(function() {
                var g = A.of(this, arguments),
                    c = {
                        x: y,
                        y: w,
                        i: k,
                        j: B
                    },
                    f = this.__chart__ || c;
                this.__chart__ = c, eJ ? bX.select(this).transition().each("start.brush", function() {
                    k = f.i, B = f.j, y = f.x, w = f.y, g({
                        type: "brushstart"
                    })
                }).tween("brush:brush", function() {
                    var n = j2(y, c.x),
                        h = j2(w, c.y);
                    return k = B = null,
                        function(e) {
                            y = c.x = n(e), w = c.y = h(e), g({
                                type: "brush",
                                mode: "resize"
                            })
                        }
                }).each("end.brush", function() {
                    k = c.i, B = c.j, g({
                        type: "brush",
                        mode: "resize"
                    }), g({
                        type: "brushend"
                    })
                }) : (g({
                    type: "brushstart"
                }), g({
                    type: "brush",
                    mode: "resize"
                }), g({
                    type: "brushend"
                }))
            })
        }, m.x = function(a) {
            return arguments.length ? (q = a, C = gp[!q << 1 | !E], m) : q
        }, m.y = function(a) {
            return arguments.length ? (E = a, C = gp[!q << 1 | !E], m) : E
        }, m.clamp = function(a) {
            return arguments.length ? (q && E ? (x = !!a[0], d = !!a[1]) : q ? x = !!a : E && (d = !!a), m) : q && E ? [x, d] : q ? x : E ? d : null
        }, m.extent = function(g) {
            var n, h, a, f, o;
            return arguments.length ? (q && (n = g[0], h = g[1], E && (n = n[0], h = h[0]), k = [n, h], q.invert && (n = q(n), h = q(h)), n > h && (o = n, n = h, h = o), (n != y[0] || h != y[1]) && (y = [n, h])), E && (a = g[0], f = g[1], q && (a = a[1], f = f[1]), B = [a, f], E.invert && (a = E(a), f = E(f)), a > f && (o = a, a = f, f = o), (a != w[0] || f != w[1]) && (w = [a, f])), m) : (q && (k ? (n = k[0], h = k[1]) : (n = y[0], h = y[1], q.invert && (n = q.invert(n), h = q.invert(h)), n > h && (o = n, n = h, h = o))), E && (B ? (a = B[0], f = B[1]) : (a = w[0], f = w[1], E.invert && (a = E.invert(a), f = E.invert(f)), a > f && (o = a, a = f, f = o))), q && E ? [
                [n, a],
                [h, f]
            ] : q ? [n, h] : E && [a, f])
        }, m.clear = function() {
            return m.empty() || (y = [0, 0], w = [0, 0], k = B = null), m
        }, m.empty = function() {
            return !!q && y[0] == y[1] || !!E && w[0] == w[1]
        }, bX.rebind(m, A, "on")
    };
    var jX = {
            n: "ns-resize",
            e: "ew-resize",
            s: "ns-resize",
            w: "ew-resize",
            nw: "nwse-resize",
            ne: "nesw-resize",
            se: "nwse-resize",
            sw: "nesw-resize"
        },
        gp = [
            ["n", "e", "s", "w", "nw", "ne", "se", "sw"],
            ["e", "w"],
            ["n", "s"],
            []
        ],
        jm = jY.format = gL.timeFormat,
        cP = jm.utc,
        ck = cP("%Y-%m-%dT%H:%M:%S.%LZ");
    jm.iso = Date.prototype.toISOString && +new Date("2000-01-01T00:00:00.000Z") ? iq : ck, iq.parse = function(b) {
        var a = new Date(b);
        return isNaN(a) ? null : a
    }, iq.toString = ck.toString, jY.second = ax(function(a) {
        return new iB(1000 * Math.floor(a / 1000))
    }, function(b, a) {
        b.setTime(b.getTime() + 1000 * Math.floor(a))
    }, function(a) {
        return a.getSeconds()
    }), jY.seconds = jY.second.range, jY.seconds.utc = jY.second.utc.range, jY.minute = ax(function(a) {
        return new iB(60000 * Math.floor(a / 60000))
    }, function(b, a) {
        b.setTime(b.getTime() + 60000 * Math.floor(a))
    }, function(a) {
        return a.getMinutes()
    }), jY.minutes = jY.minute.range, jY.minutes.utc = jY.minute.utc.range, jY.hour = ax(function(b) {
        var a = b.getTimezoneOffset() / 60;
        return new iB(3600000 * (Math.floor(b / 3600000 - a) + a))
    }, function(b, a) {
        b.setTime(b.getTime() + 3600000 * Math.floor(a))
    }, function(a) {
        return a.getHours()
    }), jY.hours = jY.hour.range, jY.hours.utc = jY.hour.utc.range, jY.month = ax(function(a) {
        return a = jY.day(a), a.setDate(1), a
    }, function(b, a) {
        b.setMonth(b.getMonth() + a)
    }, function(a) {
        return a.getMonth()
    }), jY.months = jY.month.range, jY.months.utc = jY.month.utc.range;
    var dQ = [1000, 5000, 15000, 30000, 60000, 300000, 900000, 1800000, 3600000, 10800000, 21600000, 43200000, 86400000, 172800000, 604800000, 2592000000, 7776000000, 31536000000],
        c7 = [
            [jY.second, 1],
            [jY.second, 5],
            [jY.second, 15],
            [jY.second, 30],
            [jY.minute, 1],
            [jY.minute, 5],
            [jY.minute, 15],
            [jY.minute, 30],
            [jY.hour, 1],
            [jY.hour, 3],
            [jY.hour, 6],
            [jY.hour, 12],
            [jY.day, 1],
            [jY.day, 2],
            [jY.week, 1],
            [jY.month, 1],
            [jY.month, 3],
            [jY.year, 1]
        ],
        d4 = jm.multi([
            [".%L", function(a) {
                return a.getMilliseconds()
            }],
            [":%S", function(a) {
                return a.getSeconds()
            }],
            ["%I:%M", function(a) {
                return a.getMinutes()
            }],
            ["%I %p", function(a) {
                return a.getHours()
            }],
            ["%a %d", function(a) {
                return a.getDay() && 1 != a.getDate()
            }],
            ["%b %d", function(a) {
                return 1 != a.getDate()
            }],
            ["%B", function(a) {
                return a.getMonth()
            }],
            ["%Y", gO]
        ]),
        bZ = {
            range: function(c, a, b) {
                return bX.range(Math.ceil(c / b) * b, +a, b).map(hI)
            },
            floor: hR,
            ceil: hR
        };
    c7.year = jY.year, jY.scale = function() {
        return km(bX.scale.linear(), c7, d4)
    };
    var dy = c7.map(function(a) {
            return [a[0].utc, a[1]]
        }),
        iz = cP.multi([
            [".%L", function(a) {
                return a.getUTCMilliseconds()
            }],
            [":%S", function(a) {
                return a.getUTCSeconds()
            }],
            ["%I:%M", function(a) {
                return a.getUTCMinutes()
            }],
            ["%I %p", function(a) {
                return a.getUTCHours()
            }],
            ["%a %d", function(a) {
                return a.getUTCDay() && 1 != a.getUTCDate()
            }],
            ["%b %d", function(a) {
                return 1 != a.getUTCDate()
            }],
            ["%B", function(a) {
                return a.getUTCMonth()
            }],
            ["%Y", gO]
        ]);
    dy.year = jY.year.utc, jY.scale.utc = function() {
        return km(bX.scale.linear(), dy, iz)
    }, bX.text = cm(function(a) {
        return a.responseText
    }), bX.json = function(b, a) {
        return gF(b, "application/json", fI, a)
    }, bX.html = function(b, a) {
        return gF(b, "text/html", eq, a)
    }, bX.xml = cm(function(a) {
        return a.responseXML
    }), "function" == typeof define && define.amd ? define(bX) : "object" == typeof module && module.exports && (module.exports = bX), this.d3 = bX
}();
/*!
 * d3pie
 * @author Ben Keen
 * @version 0.1.8
 * @date April 2015
 * @repo http://github.com/benkeen/d3pie
 */
;
! function(d, c) {
    "function" == typeof define && define.amd ? define([], c) : "object" == typeof exports ? module.exports = c(require()) : d.d3pie = c(d)
}(this, function() {
    var B = "d3pie",
        A = "0.1.6",
        z = 0,
        y = {
            header: {
                title: {
                    text: "",
                    color: "#333333",
                    fontSize: 18,
                    font: "arial"
                },
                subtitle: {
                    text: "",
                    color: "#666666",
                    fontSize: 14,
                    font: "arial"
                },
                location: "top-center",
                titleSubtitlePadding: 8
            },
            footer: {
                text: "",
                color: "#666666",
                fontSize: 14,
                font: "arial",
                location: "left"
            },
            size: {
                canvasHeight: 500,
                canvasWidth: 500,
                pieInnerRadius: "0%",
                pieOuterRadius: null
            },
            data: {
                sortOrder: "none",
                ignoreSmallSegments: {
                    enabled: !1,
                    valueType: "percentage",
                    value: null
                },
                smallSegmentGrouping: {
                    enabled: !1,
                    value: 1,
                    valueType: "percentage",
                    label: "Other",
                    color: "#cccccc"
                },
                content: []
            },
            labels: {
                outer: {
                    format: "label",
                    hideWhenLessThanPercentage: null,
                    pieDistance: 30
                },
                inner: {
                    format: "percentage",
                    hideWhenLessThanPercentage: null
                },
                mainLabel: {
                    color: "#333333",
                    font: "arial",
                    fontSize: 10
                },
                percentage: {
                    color: "#dddddd",
                    font: "arial",
                    fontSize: 10,
                    decimalPlaces: 0
                },
                value: {
                    color: "#cccc44",
                    font: "arial",
                    fontSize: 10
                },
                lines: {
                    enabled: !0,
                    style: "curved",
                    color: "segment"
                },
                truncation: {
                    enabled: !1,
                    truncateLength: 30
                },
                formatter: null
            },
            effects: {
                load: {
                    effect: "default",
                    speed: 1000
                },
                pullOutSegmentOnClick: {
                    effect: "bounce",
                    speed: 300,
                    size: 10
                },
                highlightSegmentOnMouseover: !0,
                highlightLuminosity: -0.2
            },
            tooltips: {
                enabled: !1,
                type: "placeholder",
                string: "",
                placeholderParser: null,
                styles: {
                    fadeInSpeed: 250,
                    backgroundColor: "#000000",
                    backgroundOpacity: 0.5,
                    color: "#efefef",
                    borderRadius: 2,
                    font: "arial",
                    fontSize: 10,
                    padding: 4
                }
            },
            misc: {
                colors: {
                    background: null,
                    segments: ["#2484c1", "#65a620", "#7b6888", "#a05d56", "#961a1a", "#d8d23a", "#e98125", "#d0743c", "#635222", "#6ada6a", "#0c6197", "#7d9058", "#207f33", "#44b9b0", "#bca44a", "#e4a14b", "#a3acb2", "#8cc3e9", "#69a6f9", "#5b388f", "#546e91", "#8bde95", "#d2ab58", "#273c71", "#98bf6e", "#4daa4b", "#98abc5", "#cc1010", "#31383b", "#006391", "#c2643f", "#b0a474", "#a5a39c", "#a9c2bc", "#22af8c", "#7fcecf", "#987ac6", "#3d3b87", "#b77b1c", "#c9c2b6", "#807ece", "#8db27c", "#be66a2", "#9ed3c6", "#00644b", "#005064", "#77979f", "#77e079", "#9c73ab", "#1f79a7"],
                    segmentStroke: "#ffffff"
                },
                gradient: {
                    enabled: !1,
                    percentage: 95,
                    color: "#000000"
                },
                canvasPadding: {
                    top: 5,
                    right: 5,
                    bottom: 5,
                    left: 5
                },
                pieCenterOffset: {
                    x: 0,
                    y: 0
                },
                cssPrefix: null
            },
            callbacks: {
                onload: null,
                onMouseoverSegment: null,
                onMouseoutSegment: null,
                onClickSegment: null
            }
        },
        x = {
            initialCheck: function(h) {
                var f = h.cssPrefix,
                    C = h.element,
                    n = h.options;
                if (!window.d3 || !window.d3.hasOwnProperty("version")) {
                    return console.error("d3pie error: d3 is not available"), !1
                }
                if (!(C instanceof HTMLElement || C instanceof SVGElement)) {
                    return console.error("d3pie error: the first d3pie() param must be a valid DOM element (not jQuery) or a ID string."), !1
                }
                if (!/[a-zA-Z][a-zA-Z0-9_-]*$/.test(f)) {
                    return console.error("d3pie error: invalid options.misc.cssPrefix"), !1
                }
                if (!w.isArray(n.data.content)) {
                    return console.error("d3pie error: invalid config structure: missing data.content property."), !1
                }
                if (0 === n.data.content.length) {
                    return console.error("d3pie error: no data supplied."), !1
                }
                for (var m = [], k = 0; k < n.data.content.length; k++) {
                    "number" != typeof n.data.content[k].value || isNaN(n.data.content[k].value) ? console.log("not valid: ", n.data.content[k]) : n.data.content[k].value <= 0 ? console.log("not valid - should have positive value: ", n.data.content[k]) : m.push(n.data.content[k])
                }
                return h.options.data.content = m, !0
            }
        },
        w = {
            addSVGSpace: function(h) {
                var g = h.element,
                    C = h.options.size.canvasWidth,
                    n = h.options.size.canvasHeight,
                    m = h.options.misc.colors.background,
                    k = d3.select(g).append("svg:svg").attr("width", C).attr("height", n);
                return "transparent" !== m && k.style("background-color", function() {
                    return m
                }), k
            },
            whenIdExists: function(g, f) {
                var m = 1,
                    k = 1000,
                    h = setInterval(function() {
                        document.getElementById(g) && (clearInterval(h), f()), m > k && clearInterval(h), m++
                    }, 1)
            },
            whenElementsExist: function(g, f) {
                var m = 1,
                    k = 1000,
                    h = setInterval(function() {
                        for (var b = !0, a = 0; a < g.length; a++) {
                            if (!document.getElementById(g[a])) {
                                b = !1;
                                break
                            }
                        }
                        b && (clearInterval(h), f()), m > k && clearInterval(h), m++
                    }, 1)
            },
            shuffleArray: function(f) {
                for (var e, h, g = f.length; 0 !== g;) {
                    h = Math.floor(Math.random() * g), g -= 1, e = f[g], f[g] = f[h], f[h] = e
                }
                return f
            },
            processObj: function(e, d, f) {
                return "string" == typeof d ? w.processObj(e, d.split("."), f) : 1 === d.length && void 0 !== f ? (e[d[0]] = f, e[d[0]]) : 0 === d.length ? e : w.processObj(e[d[0]], d.slice(1), f)
            },
            getDimensions: function(g) {
                var f = document.getElementById(g),
                    m = 0,
                    k = 0;
                if (f) {
                    var h = f.getBBox();
                    m = h.width, k = h.height
                } else {
                    console.log("error: getDimensions() " + g + " not found.")
                }
                return {
                    w: m,
                    h: k
                }
            },
            rectIntersect: function(e, d) {
                var f = d.x > e.x + e.w || d.x + d.w < e.x || d.y + d.h < e.y || d.y > e.y + e.h;
                return !f
            },
            getColorShade: function(g, f) {
                g = String(g).replace(/[^0-9a-f]/gi, ""), g.length < 6 && (g = g[0] + g[0] + g[1] + g[1] + g[2] + g[2]), f = f || 0;
                for (var m = "#", k = 0; 3 > k; k++) {
                    var h = parseInt(g.substr(2 * k, 2), 16);
                    h = Math.round(Math.min(Math.max(0, h + h * f), 255)).toString(16), m += ("00" + h).substr(h.length)
                }
                return m
            },
            initSegmentColors: function(g) {
                for (var f = g.options.data.content, m = g.options.misc.colors.segments, k = [], h = 0; h < f.length; h++) {
                    k.push(f[h].hasOwnProperty("color") ? f[h].color : m[h])
                }
                return k
            },
            applySmallSegmentGrouping: function(k, h) {
                var F;
                "percentage" === h.valueType && (F = u.getTotalPieSize(k));
                for (var E = [], D = [], C = 0, n = 0; n < k.length; n++) {
                    if ("percentage" === h.valueType) {
                        var m = k[n].value / F * 100;
                        if (m <= h.value) {
                            D.push(k[n]), C += k[n].value;
                            continue
                        }
                        k[n].isGrouped = !1, E.push(k[n])
                    } else {
                        if (k[n].value <= h.value) {
                            D.push(k[n]), C += k[n].value;
                            continue
                        }
                        k[n].isGrouped = !1, E.push(k[n])
                    }
                }
                return D.length && E.push({
                    color: h.color,
                    label: h.label,
                    value: C,
                    isGrouped: !0,
                    groupedData: D
                }), E
            },
            showPoint: function(e, d, f) {
                e.append("circle").attr("cx", d).attr("cy", f).attr("r", 2).style("fill", "black")
            },
            isFunction: function(d) {
                var c = {};
                return d && "[object Function]" === c.toString.call(d)
            },
            isArray: function(b) {
                return "[object Array]" === Object.prototype.toString.call(b)
            }
        },
        v = function() {
            var O, N, M, L, K, J, I = arguments[0] || {},
                H = 1,
                G = arguments.length,
                F = !1,
                E = Object.prototype.toString,
                D = Object.prototype.hasOwnProperty,
                C = {
                    "[object Boolean]": "boolean",
                    "[object Number]": "number",
                    "[object String]": "string",
                    "[object Function]": "function",
                    "[object Array]": "array",
                    "[object Date]": "date",
                    "[object RegExp]": "regexp",
                    "[object Object]": "object"
                },
                g = {
                    isFunction: function(b) {
                        return "function" === g.type(b)
                    },
                    isArray: Array.isArray || function(b) {
                        return "array" === g.type(b)
                    },
                    isWindow: function(b) {
                        return null !== b && b === b.window
                    },
                    isNumeric: function(b) {
                        return !isNaN(parseFloat(b)) && isFinite(b)
                    },
                    type: function(b) {
                        return null === b ? String(b) : C[E.call(b)] || "object"
                    },
                    isPlainObject: function(e) {
                        if (!e || "object" !== g.type(e) || e.nodeType) {
                            return !1
                        }
                        try {
                            if (e.constructor && !D.call(e, "constructor") && !D.call(e.constructor.prototype, "isPrototypeOf")) {
                                return !1
                            }
                        } catch (d) {
                            return !1
                        }
                        var f;
                        for (f in e) {}
                        return void 0 === f || D.call(e, f)
                    }
                };
            for ("boolean" == typeof I && (F = I, I = arguments[1] || {}, H = 2), "object" == typeof I || g.isFunction(I) || (I = {}), G === H && (I = this, --H), H; G > H; H++) {
                if (null !== (O = arguments[H])) {
                    for (N in O) {
                        M = I[N], L = O[N], I !== L && (F && L && (g.isPlainObject(L) || (K = g.isArray(L))) ? (K ? (K = !1, J = M && g.isArray(M) ? M : []) : J = M && g.isPlainObject(M) ? M : {}, I[N] = v(F, J, L)) : void 0 !== L && (I[N] = L))
                    }
                }
            }
            return I
        },
        u = {
            toRadians: function(b) {
                return b * (Math.PI / 180)
            },
            toDegrees: function(b) {
                return b * (180 / Math.PI)
            },
            computePieRadius: function(I) {
                var H = I.options.size,
                    G = I.options.misc.canvasPadding,
                    F = H.canvasWidth - G.left - G.right,
                    E = H.canvasHeight - G.top - G.bottom;
                "pie-center" !== I.options.header.location && (E -= I.textComponents.headerHeight), I.textComponents.footer.exists && (E -= I.textComponents.footer.h), E = 0 > E ? 0 : E;
                var D, C, n = (E > F ? F : E) / 3;
                if (null !== H.pieOuterRadius) {
                    if (/%/.test(H.pieOuterRadius)) {
                        C = parseInt(H.pieOuterRadius.replace(/[\D]/, ""), 10), C = C > 99 ? 99 : C, C = 0 > C ? 0 : C;
                        var m = E > F ? F : E;
                        if ("none" !== I.options.labels.outer.format) {
                            var k = 2 * parseInt(I.options.labels.outer.pieDistance, 10);
                            m - k > 0 && (m -= k)
                        }
                        n = Math.floor(m / 100 * C) / 2
                    } else {
                        n = parseInt(H.pieOuterRadius, 10)
                    }
                }
                /%/.test(H.pieInnerRadius) ? (C = parseInt(H.pieInnerRadius.replace(/[\D]/, ""), 10), C = C > 99 ? 99 : C, C = 0 > C ? 0 : C, D = Math.floor(n / 100 * C)) : D = parseInt(H.pieInnerRadius, 10), I.innerRadius = D, I.outerRadius = n
            },
            getTotalPieSize: function(e) {
                for (var d = 0, f = 0; f < e.length; f++) {
                    d += e[f].value
                }
                return d
            },
            sortPieData: function(e) {
                var d = e.options.data.content,
                    f = e.options.data.sortOrder;
                switch (f) {
                    case "none":
                        break;
                    case "random":
                        d = w.shuffleArray(d);
                        break;
                    case "value-asc":
                        d.sort(function(g, c) {
                            return g.value < c.value ? -1 : 1
                        });
                        break;
                    case "value-desc":
                        d.sort(function(g, c) {
                            return g.value < c.value ? 1 : -1
                        });
                        break;
                    case "label-asc":
                        d.sort(function(g, c) {
                            return g.label.toLowerCase() > c.label.toLowerCase() ? 1 : -1
                        });
                        break;
                    case "label-desc":
                        d.sort(function(g, c) {
                            return g.label.toLowerCase() < c.label.toLowerCase() ? 1 : -1
                        })
                }
                return d
            },
            getPieTranslateCenter: function(b) {
                return "translate(" + b.x + "," + b.y + ")"
            },
            calculatePieCenter: function(m) {
                var k = m.options.misc.pieCenterOffset,
                    G = m.textComponents.title.exists && "pie-center" !== m.options.header.location,
                    F = m.textComponents.subtitle.exists && "pie-center" !== m.options.header.location,
                    E = m.options.misc.canvasPadding.top;
                G && F ? E += m.textComponents.title.h + m.options.header.titleSubtitlePadding + m.textComponents.subtitle.h : G ? E += m.textComponents.title.h : F && (E += m.textComponents.subtitle.h);
                var D = 0;
                m.textComponents.footer.exists && (D = m.textComponents.footer.h + m.options.misc.canvasPadding.bottom);
                var C = (m.options.size.canvasWidth - m.options.misc.canvasPadding.left - m.options.misc.canvasPadding.right) / 2 + m.options.misc.canvasPadding.left,
                    n = (m.options.size.canvasHeight - D - E) / 2 + E;
                C += k.x, n += k.y, m.pieCenter = {
                    x: C,
                    y: n
                }
            },
            rotate: function(H, G, F, E, D) {
                D = D * Math.PI / 180;
                var C = Math.cos,
                    n = Math.sin,
                    m = (H - F) * C(D) - (G - E) * n(D) + F,
                    k = (H - F) * n(D) + (G - E) * C(D) + E;
                return {
                    x: m,
                    y: k
                }
            },
            translate: function(g, f, m, k) {
                var h = u.toRadians(k);
                return {
                    x: g + m * Math.sin(h),
                    y: f - m * Math.cos(h)
                }
            },
            pointIsInArc: function(H, G, F) {
                var E = F.innerRadius()(G),
                    D = F.outerRadius()(G),
                    C = F.startAngle()(G),
                    n = F.endAngle()(G),
                    m = H.x * H.x + H.y * H.y,
                    k = Math.atan2(H.x, -H.y);
                return k = 0 > k ? k + 2 * Math.PI : k, m >= E * E && D * D >= m && k >= C && n >= k
            }
        },
        t = {
            add: function(m, k, G) {
                var F = t.getIncludes(G),
                    E = m.options.labels,
                    D = m.svg.insert("g", "." + m.cssPrefix + "labels-" + k).attr("class", m.cssPrefix + "labels-" + k),
                    C = D.selectAll("." + m.cssPrefix + "labelGroup-" + k).data(m.options.data.content).enter().append("g").attr("id", function(b, a) {
                        return m.cssPrefix + "labelGroup" + a + "-" + k
                    }).attr("data-index", function(d, c) {
                        return c
                    }).attr("class", m.cssPrefix + "labelGroup-" + k).style("opacity", 0),
                    n = {
                        section: k,
                        sectionDisplayType: G
                    };
                F.mainLabel && C.append("text").attr("id", function(b, a) {
                    return m.cssPrefix + "segmentMainLabel" + a + "-" + k
                }).attr("class", m.cssPrefix + "segmentMainLabel-" + k).text(function(e, d) {
                    var f = e.label;
                    return E.formatter ? (n.index = d, n.part = "mainLabel", n.value = e.value, n.label = f, f = E.formatter(n)) : E.truncation.enabled && e.label.length > E.truncation.truncateLength && (f = e.label.substring(0, E.truncation.truncateLength) + "..."), f
                }).style("font-size", E.mainLabel.fontSize + "px").style("font-family", E.mainLabel.font).style("fill", E.mainLabel.color), F.percentage && C.append("text").attr("id", function(b, a) {
                    return m.cssPrefix + "segmentPercentage" + a + "-" + k
                }).attr("class", m.cssPrefix + "segmentPercentage-" + k).text(function(a, f) {
                    var e = s.getPercentage(m, f, m.options.labels.percentage.decimalPlaces);
                    return E.formatter ? (n.index = f, n.part = "percentage", n.value = a.value, n.label = e, e = E.formatter(n)) : e += "%", e
                }).style("font-size", E.percentage.fontSize + "px").style("font-family", E.percentage.font).style("fill", E.percentage.color), F.value && C.append("text").attr("id", function(b, a) {
                    return m.cssPrefix + "segmentValue" + a + "-" + k
                }).attr("class", m.cssPrefix + "segmentValue-" + k).text(function(d, c) {
                    return n.index = c, n.part = "value", n.value = d.value, n.label = d.value, E.formatter ? E.formatter(n, d.value) : d.value
                }).style("font-size", E.value.fontSize + "px").style("font-family", E.value.font).style("fill", E.value.color)
            },
            positionLabelElements: function(h, g, C) {
                t["dimensions-" + g] = [];
                var n = d3.selectAll("." + h.cssPrefix + "labelGroup-" + g);
                n.each(function(F, E) {
                    var D = d3.select(this).selectAll("." + h.cssPrefix + "segmentMainLabel-" + g),
                        b = d3.select(this).selectAll("." + h.cssPrefix + "segmentPercentage-" + g),
                        a = d3.select(this).selectAll("." + h.cssPrefix + "segmentValue-" + g);
                    t["dimensions-" + g].push({
                        mainLabel: null !== D.node() ? D.node().getBBox() : null,
                        percentage: null !== b.node() ? b.node().getBBox() : null,
                        value: null !== a.node() ? a.node().getBBox() : null
                    })
                });
                var m = 5,
                    k = t["dimensions-" + g];
                switch (C) {
                    case "label-value1":
                        d3.selectAll("." + h.cssPrefix + "segmentValue-" + g).attr("dx", function(d, c) {
                            return k[c].mainLabel.width + m
                        });
                        break;
                    case "label-value2":
                        d3.selectAll("." + h.cssPrefix + "segmentValue-" + g).attr("dy", function(d, c) {
                            return k[c].mainLabel.height
                        });
                        break;
                    case "label-percentage1":
                        d3.selectAll("." + h.cssPrefix + "segmentPercentage-" + g).attr("dx", function(d, c) {
                            return k[c].mainLabel.width + m
                        });
                        break;
                    case "label-percentage2":
                        d3.selectAll("." + h.cssPrefix + "segmentPercentage-" + g).attr("dx", function(d, c) {
                            return k[c].mainLabel.width / 2 - k[c].percentage.width / 2
                        }).attr("dy", function(d, c) {
                            return k[c].mainLabel.height
                        })
                }
            },
            computeLabelLinePositions: function(b) {
                b.lineCoordGroups = [], d3.selectAll("." + b.cssPrefix + "labelGroup-outer").each(function(a, d) {
                    return t.computeLinePosition(b, d)
                })
            },
            computeLinePosition: function(O, N) {
                var M, L, K, J, I = s.getSegmentAngle(N, O.options.data.content, O.totalSize, {
                        midpoint: !0
                    }),
                    H = u.rotate(O.pieCenter.x, O.pieCenter.y - O.outerRadius, O.pieCenter.x, O.pieCenter.y, I),
                    G = O.outerLabelGroupData[N].h / 5,
                    F = 6,
                    E = Math.floor(I / 90),
                    D = 4;
                switch (2 === E && 180 === I && (E = 1), E) {
                    case 0:
                        M = O.outerLabelGroupData[N].x - F - (O.outerLabelGroupData[N].x - F - H.x) / 2, L = O.outerLabelGroupData[N].y + (H.y - O.outerLabelGroupData[N].y) / D, K = O.outerLabelGroupData[N].x - F, J = O.outerLabelGroupData[N].y - G;
                        break;
                    case 1:
                        M = H.x + (O.outerLabelGroupData[N].x - H.x) / D, L = H.y + (O.outerLabelGroupData[N].y - H.y) / D, K = O.outerLabelGroupData[N].x - F, J = O.outerLabelGroupData[N].y - G;
                        break;
                    case 2:
                        var C = O.outerLabelGroupData[N].x + O.outerLabelGroupData[N].w + F;
                        M = H.x - (H.x - C) / D, L = H.y + (O.outerLabelGroupData[N].y - H.y) / D, K = O.outerLabelGroupData[N].x + O.outerLabelGroupData[N].w + F, J = O.outerLabelGroupData[N].y - G;
                        break;
                    case 3:
                        var h = O.outerLabelGroupData[N].x + O.outerLabelGroupData[N].w + F;
                        M = h + (H.x - h) / D, L = O.outerLabelGroupData[N].y + (H.y - O.outerLabelGroupData[N].y) / D, K = O.outerLabelGroupData[N].x + O.outerLabelGroupData[N].w + F, J = O.outerLabelGroupData[N].y - G
                }
                "straight" === O.options.labels.lines.style ? O.lineCoordGroups[N] = [{
                    x: H.x,
                    y: H.y
                }, {
                    x: K,
                    y: J
                }] : O.lineCoordGroups[N] = [{
                    x: H.x,
                    y: H.y
                }, {
                    x: M,
                    y: L
                }, {
                    x: K,
                    y: J
                }]
            },
            addLabelLines: function(f) {
                var e = f.svg.insert("g", "." + f.cssPrefix + "pieChart").attr("class", f.cssPrefix + "lineGroups").style("opacity", 0),
                    h = e.selectAll("." + f.cssPrefix + "lineGroup").data(f.lineCoordGroups).enter().append("g").attr("class", f.cssPrefix + "lineGroup"),
                    g = d3.svg.line().interpolate("basis").x(function(b) {
                        return b.x
                    }).y(function(b) {
                        return b.y
                    });
                h.append("path").attr("d", g).attr("stroke", function(a, d) {
                    return "segment" === f.options.labels.lines.color ? f.options.colors[d] : f.options.labels.lines.color
                }).attr("stroke-width", 1).attr("fill", "none").style("opacity", function(a, C) {
                    var n = f.options.labels.outer.hideWhenLessThanPercentage,
                        m = s.getPercentage(f, C, f.options.labels.percentage.decimalPlaces),
                        k = null !== n && n > m || "" === f.options.data.content[C].label;
                    return k ? 0 : 1
                })
            },
            positionLabelGroups: function(d, c) {
                "none" !== d.options.labels[c].format && d3.selectAll("." + d.cssPrefix + "labelGroup-" + c).style("opacity", 0).attr("transform", function(G, F) {
                    var E, D;
                    if ("outer" === c) {
                        E = d.outerLabelGroupData[F].x, D = d.outerLabelGroupData[F].y
                    } else {
                        var C = v(!0, {}, d.pieCenter);
                        if (d.innerRadius > 0) {
                            var h = s.getSegmentAngle(F, d.options.data.content, d.totalSize, {
                                    midpoint: !0
                                }),
                                g = u.translate(d.pieCenter.x, d.pieCenter.y, d.innerRadius, h);
                            C.x = g.x, C.y = g.y
                        }
                        var f = w.getDimensions(d.cssPrefix + "labelGroup" + F + "-inner"),
                            b = f.w / 2,
                            a = f.h / 4;
                        E = C.x + (d.lineCoordGroups[F][0].x - C.x) / 1.8, D = C.y + (d.lineCoordGroups[F][0].y - C.y) / 1.8, E -= b, D += a
                    }
                    return "translate(" + E + "," + D + ")"
                })
            },
            fadeInLabelsAndLines: function(d) {
                var c = "default" === d.options.effects.load.effect ? d.options.effects.load.speed : 1;
                setTimeout(function() {
                    var a = "default" === d.options.effects.load.effect ? 400 : 1;
                    d3.selectAll("." + d.cssPrefix + "labelGroup-outer").transition().duration(a).style("opacity", function(f, k) {
                        var h = d.options.labels.outer.hideWhenLessThanPercentage,
                            g = s.getPercentage(d, k, d.options.labels.percentage.decimalPlaces);
                        return null !== h && h > g ? 0 : 1
                    }), d3.selectAll("." + d.cssPrefix + "labelGroup-inner").transition().duration(a).style("opacity", function(f, k) {
                        var h = d.options.labels.inner.hideWhenLessThanPercentage,
                            g = s.getPercentage(d, k, d.options.labels.percentage.decimalPlaces);
                        return null !== h && h > g ? 0 : 1
                    }), d3.selectAll("g." + d.cssPrefix + "lineGroups").transition().duration(a).style("opacity", 1), w.isFunction(d.options.callbacks.onload) && setTimeout(function() {
                        try {
                            d.options.callbacks.onload()
                        } catch (e) {}
                    }, a)
                }, c)
            },
            getIncludes: function(f) {
                var e = !1,
                    h = !1,
                    g = !1;
                switch (f) {
                    case "label":
                        e = !0;
                        break;
                    case "value":
                        h = !0;
                        break;
                    case "percentage":
                        g = !0;
                        break;
                    case "label-value1":
                    case "label-value2":
                        e = !0, h = !0;
                        break;
                    case "label-percentage1":
                    case "label-percentage2":
                        e = !0, g = !0
                }
                return {
                    mainLabel: e,
                    value: h,
                    percentage: g
                }
            },
            computeOuterLabelCoords: function(b) {
                b.svg.selectAll("." + b.cssPrefix + "labelGroup-outer").each(function(a, d) {
                    return t.getIdealOuterLabelPositions(b, d)
                }), t.resolveOuterLabelCollisions(b)
            },
            resolveOuterLabelCollisions: function(d) {
                if ("none" !== d.options.labels.outer.format) {
                    var c = d.options.data.content.length;
                    t.checkConflict(d, 0, "clockwise", c), t.checkConflict(d, c - 1, "anticlockwise", c)
                }
            },
            checkConflict: function(K, J, I, H) {
                var G, F;
                if (!(1 >= H)) {
                    var E = K.outerLabelGroupData[J].hs;
                    if (!("clockwise" === I && "right" !== E || "anticlockwise" === I && "left" !== E)) {
                        var D = "clockwise" === I ? J + 1 : J - 1,
                            C = K.outerLabelGroupData[J],
                            n = K.outerLabelGroupData[D],
                            f = {
                                labelHeights: K.outerLabelGroupData[0].h,
                                center: K.pieCenter,
                                lineLength: K.outerRadius + K.options.labels.outer.pieDistance,
                                heightChange: K.outerLabelGroupData[0].h + 1
                            };
                        if ("clockwise" === I) {
                            for (G = 0; J >= G; G++) {
                                if (F = K.outerLabelGroupData[G], w.rectIntersect(F, n)) {
                                    t.adjustLabelPos(K, D, C, f);
                                    break
                                }
                            }
                        } else {
                            for (G = H - 1; G >= J; G--) {
                                if (F = K.outerLabelGroupData[G], w.rectIntersect(F, n)) {
                                    t.adjustLabelPos(K, D, C, f);
                                    break
                                }
                            }
                        }
                        t.checkConflict(K, D, I, H)
                    }
                }
            },
            adjustLabelPos: function(m, k, G, F) {
                var E, D, C, n;
                n = G.y + F.heightChange, D = F.center.y - n, E = Math.sqrt(Math.abs(F.lineLength) > Math.abs(D) ? F.lineLength * F.lineLength - D * D : D * D - F.lineLength * F.lineLength), C = "right" === G.hs ? F.center.x + E : F.center.x - E - m.outerLabelGroupData[k].w, m.outerLabelGroupData[k].x = C, m.outerLabelGroupData[k].y = n
            },
            getIdealOuterLabelPositions: function(H, G) {
                var F = d3.select("#" + H.cssPrefix + "labelGroup" + G + "-outer").node();
                if (F) {
                    var E = F.getBBox(),
                        D = s.getSegmentAngle(G, H.options.data.content, H.totalSize, {
                            midpoint: !0
                        }),
                        C = H.pieCenter.x,
                        n = H.pieCenter.y - (H.outerRadius + H.options.labels.outer.pieDistance),
                        m = u.rotate(C, n, H.pieCenter.x, H.pieCenter.y, D),
                        h = "right";
                    D > 180 ? (m.x -= E.width + 8, h = "left") : m.x += 8, H.outerLabelGroupData[G] = {
                        x: m.x,
                        y: m.y,
                        w: E.width,
                        h: E.height,
                        hs: h
                    }
                }
            }
        },
        s = {
            create: function(H) {
                var G = H.pieCenter,
                    F = H.options.colors,
                    E = H.options.effects.load,
                    D = H.options.misc.colors.segmentStroke,
                    C = H.svg.insert("g", "#" + H.cssPrefix + "title").attr("transform", function() {
                        return u.getPieTranslateCenter(G)
                    }).attr("class", H.cssPrefix + "pieChart"),
                    n = d3.svg.arc().innerRadius(H.innerRadius).outerRadius(H.outerRadius).startAngle(0).endAngle(function(a) {
                        return a.value / H.totalSize * 2 * Math.PI
                    }),
                    m = C.selectAll("." + H.cssPrefix + "arc").data(H.options.data.content).enter().append("g").attr("class", H.cssPrefix + "arc"),
                    h = E.speed;
                "none" === E.effect && (h = 0), m.append("path").attr("id", function(a, d) {
                    return H.cssPrefix + "segment" + d
                }).attr("fill", function(a, f) {
                    var c = F[f];
                    return H.options.misc.gradient.enabled && (c = "url(#" + H.cssPrefix + "grad" + f + ")"), c
                }).style("stroke", D).style("stroke-width", 1).transition().ease("cubic-in-out").duration(h).attr("data-index", function(d, c) {
                    return c
                }).attrTween("d", function(a) {
                    var d = d3.interpolate({
                        value: 0
                    }, a);
                    return function(c) {
                        return H.arc(d(c))
                    }
                }), H.svg.selectAll("g." + H.cssPrefix + "arc").attr("transform", function(a, f) {
                    var e = 0;
                    return f > 0 && (e = s.getSegmentAngle(f - 1, H.options.data.content, H.totalSize)), "rotate(" + e + ")"
                }), H.arc = n
            },
            addGradients: function(d) {
                var c = d.svg.append("defs").selectAll("radialGradient").data(d.options.data.content).enter().append("radialGradient").attr("gradientUnits", "userSpaceOnUse").attr("cx", 0).attr("cy", 0).attr("r", "120%").attr("id", function(a, e) {
                    return d.cssPrefix + "grad" + e
                });
                c.append("stop").attr("offset", "0%").style("stop-color", function(a, e) {
                    return d.options.colors[e]
                }), c.append("stop").attr("offset", d.options.misc.gradient.percentage + "%").style("stop-color", d.options.misc.gradient.color)
            },
            addSegmentEventHandlers: function(d) {
                var c = d3.selectAll("." + d.cssPrefix + "arc,." + d.cssPrefix + "labelGroup-inner,." + d.cssPrefix + "labelGroup-outer");
                c.on("click", function() {
                    var a, h = d3.select(this);
                    if (h.attr("class") === d.cssPrefix + "arc") {
                        a = h.select("path")
                    } else {
                        var g = h.attr("data-index");
                        a = d3.select("#" + d.cssPrefix + "segment" + g)
                    }
                    var f = a.attr("class") === d.cssPrefix + "expanded";
                    s.onSegmentEvent(d, d.options.callbacks.onClickSegment, a, f), "none" !== d.options.effects.pullOutSegmentOnClick.effect && (f ? s.closeSegment(d, a.node()) : s.openSegment(d, a.node()))
                }), c.on("mouseover", function() {
                    var a, m, k = d3.select(this);
                    if (k.attr("class") === d.cssPrefix + "arc" ? a = k.select("path") : (m = k.attr("data-index"), a = d3.select("#" + d.cssPrefix + "segment" + m)), d.options.effects.highlightSegmentOnMouseover) {
                        m = a.attr("data-index");
                        var h = d.options.colors[m];
                        a.style("fill", w.getColorShade(h, d.options.effects.highlightLuminosity))
                    }
                    d.options.tooltips.enabled && (m = a.attr("data-index"), q.showTooltip(d, m));
                    var f = a.attr("class") === d.cssPrefix + "expanded";
                    s.onSegmentEvent(d, d.options.callbacks.onMouseoverSegment, a, f)
                }), c.on("mousemove", function() {
                    q.moveTooltip(d)
                }), c.on("mouseout", function() {
                    var a, m, k = d3.select(this);
                    if (k.attr("class") === d.cssPrefix + "arc" ? a = k.select("path") : (m = k.attr("data-index"), a = d3.select("#" + d.cssPrefix + "segment" + m)), d.options.effects.highlightSegmentOnMouseover) {
                        m = a.attr("data-index");
                        var h = d.options.colors[m];
                        d.options.misc.gradient.enabled && (h = "url(#" + d.cssPrefix + "grad" + m + ")"), a.style("fill", h)
                    }
                    d.options.tooltips.enabled && (m = a.attr("data-index"), q.hideTooltip(d, m));
                    var g = a.attr("class") === d.cssPrefix + "expanded";
                    s.onSegmentEvent(d, d.options.callbacks.onMouseoutSegment, a, g)
                })
            },
            onSegmentEvent: function(g, f, m, k) {
                if (w.isFunction(f)) {
                    var h = parseInt(m.attr("data-index"), 10);
                    f({
                        segment: m.node(),
                        index: h,
                        expanded: k,
                        data: g.options.data.content[h]
                    })
                }
            },
            openSegment: function(d, c) {
                d.isOpeningSegment || (d.isOpeningSegment = !0, d3.selectAll("." + d.cssPrefix + "expanded").length > 0 && s.closeSegment(d, d3.select("." + d.cssPrefix + "expanded").node()), d3.select(c).transition().ease(d.options.effects.pullOutSegmentOnClick.effect).duration(d.options.effects.pullOutSegmentOnClick.speed).attr("transform", function(a, E) {
                    var D = d.arc.centroid(a),
                        C = D[0],
                        n = D[1],
                        m = Math.sqrt(C * C + n * n),
                        k = parseInt(d.options.effects.pullOutSegmentOnClick.size, 10);
                    return "translate(" + C / m * k + "," + n / m * k + ")"
                }).each("end", function(b, a) {
                    d.currentlyOpenSegment = c, d.isOpeningSegment = !1, d3.select(this).attr("class", d.cssPrefix + "expanded")
                }))
            },
            closeSegment: function(d, c) {
                d3.select(c).transition().duration(400).attr("transform", "translate(0,0)").each("end", function(a, e) {
                    d3.select(this).attr("class", ""), d.currentlyOpenSegment = null
                })
            },
            getCentroid: function(d) {
                var c = d.getBBox();
                return {
                    x: c.x + c.width / 2,
                    y: c.y + c.height / 2
                }
            },
            getSegmentAngle: function(I, H, G, F) {
                var E, D = v({
                        compounded: !0,
                        midpoint: !1
                    }, F),
                    C = H[I].value;
                if (D.compounded) {
                    E = 0;
                    for (var n = 0; I >= n; n++) {
                        E += H[n].value
                    }
                }
                "undefined" == typeof E && (E = C);
                var m = E / G * 360;
                if (D.midpoint) {
                    var g = C / G * 360;
                    m -= g / 2
                }
                return m
            },
            getPercentage: function(f, e, h) {
                var g = f.options.data.content[e].value / f.totalSize;
                return 0 >= h ? Math.round(100 * g) : (100 * g).toFixed(h)
            }
        },
        r = {
            offscreenCoord: -10000,
            addTitle: function(b) {
                b.svg.selectAll("." + b.cssPrefix + "title").data([b.options.header.title]).enter().append("text").text(function(c) {
                    return c.text
                }).attr({
                    id: b.cssPrefix + "title",
                    "class": b.cssPrefix + "title",
                    x: r.offscreenCoord,
                    y: r.offscreenCoord
                }).attr("text-anchor", function() {
                    var a;
                    return a = "top-center" === b.options.header.location || "pie-center" === b.options.header.location ? "middle" : "left"
                }).attr("fill", function(c) {
                    return c.color
                }).style("font-size", function(c) {
                    return c.fontSize + "px"
                }).style("font-family", function(c) {
                    return c.font
                })
            },
            positionTitle: function(H) {
                var G, F = H.textComponents,
                    E = H.options.header.location,
                    D = H.options.misc.canvasPadding,
                    C = H.options.size.canvasWidth,
                    n = H.options.header.titleSubtitlePadding;
                G = "top-left" === E ? D.left : (C - D.right) / 2 + D.left, G += H.options.misc.pieCenterOffset.x;
                var m = D.top + F.title.h;
                if ("pie-center" === E) {
                    if (m = H.pieCenter.y, F.subtitle.exists) {
                        var k = F.title.h + n + F.subtitle.h;
                        m = m - k / 2 + F.title.h
                    } else {
                        m += F.title.h / 4
                    }
                }
                H.svg.select("#" + H.cssPrefix + "title").attr("x", G).attr("y", m)
            },
            addSubtitle: function(d) {
                var c = d.options.header.location;
                d.svg.selectAll("." + d.cssPrefix + "subtitle").data([d.options.header.subtitle]).enter().append("text").text(function(b) {
                    return b.text
                }).attr("x", r.offscreenCoord).attr("y", r.offscreenCoord).attr("id", d.cssPrefix + "subtitle").attr("class", d.cssPrefix + "subtitle").attr("text-anchor", function() {
                    var b;
                    return b = "top-center" === c || "pie-center" === c ? "middle" : "left"
                }).attr("fill", function(b) {
                    return b.color
                }).style("font-size", function(b) {
                    return b.fontSize + "px"
                }).style("font-family", function(b) {
                    return b.font
                })
            },
            positionSubtitle: function(g) {
                var f, m = g.options.misc.canvasPadding,
                    k = g.options.size.canvasWidth;
                f = "top-left" === g.options.header.location ? m.left : (k - m.right) / 2 + m.left, f += g.options.misc.pieCenterOffset.x;
                var h = r.getHeaderHeight(g);
                g.svg.select("#" + g.cssPrefix + "subtitle").attr("x", f).attr("y", h)
            },
            addFooter: function(b) {
                b.svg.selectAll("." + b.cssPrefix + "footer").data([b.options.footer]).enter().append("text").text(function(c) {
                    return c.text
                }).attr("x", r.offscreenCoord).attr("y", r.offscreenCoord).attr("id", b.cssPrefix + "footer").attr("class", b.cssPrefix + "footer").attr("text-anchor", function() {
                    var a = "left";
                    return "bottom-center" === b.options.footer.location ? a = "middle" : "bottom-right" === b.options.footer.location && (a = "left"), a
                }).attr("fill", function(c) {
                    return c.color
                }).style("font-size", function(c) {
                    return c.fontSize + "px"
                }).style("font-family", function(c) {
                    return c.font
                })
            },
            positionFooter: function(k) {
                var h, E = k.options.footer.location,
                    D = k.textComponents.footer.w,
                    C = k.options.size.canvasWidth,
                    n = k.options.size.canvasHeight,
                    m = k.options.misc.canvasPadding;
                h = "bottom-left" === E ? m.left : "bottom-right" === E ? C - D - m.right : C / 2, k.svg.select("#" + k.cssPrefix + "footer").attr("x", h).attr("y", n - m.bottom)
            },
            getHeaderHeight: function(f) {
                var e;
                if (f.textComponents.title.exists) {
                    var h = f.textComponents.title.h + f.options.header.titleSubtitlePadding + f.textComponents.subtitle.h;
                    e = "pie-center" === f.options.header.location ? f.pieCenter.y - h / 2 + h : h + f.options.misc.canvasPadding.top
                } else {
                    if ("pie-center" === f.options.header.location) {
                        var g = f.options.misc.canvasPadding.bottom + f.textComponents.footer.h;
                        e = (f.options.size.canvasHeight - g) / 2 + f.options.misc.canvasPadding.top + f.textComponents.subtitle.h / 2
                    } else {
                        e = f.options.misc.canvasPadding.top + f.textComponents.subtitle.h
                    }
                }
                return e
            }
        },
        q = {
            addTooltips: function(d) {
                var c = d.svg.insert("g").attr("class", d.cssPrefix + "tooltips");
                c.selectAll("." + d.cssPrefix + "tooltip").data(d.options.data.content).enter().append("g").attr("class", d.cssPrefix + "tooltip").attr("id", function(a, e) {
                    return d.cssPrefix + "tooltip" + e
                }).style("opacity", 0).append("rect").attr({
                    rx: d.options.tooltips.styles.borderRadius,
                    ry: d.options.tooltips.styles.borderRadius,
                    x: -d.options.tooltips.styles.padding,
                    opacity: d.options.tooltips.styles.backgroundOpacity
                }).style("fill", d.options.tooltips.styles.backgroundColor), c.selectAll("." + d.cssPrefix + "tooltip").data(d.options.data.content).append("text").attr("fill", function(a) {
                    return d.options.tooltips.styles.color
                }).style("font-size", function(a) {
                    return d.options.tooltips.styles.fontSize
                }).style("font-family", function(a) {
                    return d.options.tooltips.styles.font
                }).text(function(a, f) {
                    var e = d.options.tooltips.string;
                    return "caption" === d.options.tooltips.type && (e = a.caption), q.replacePlaceholders(d, e, f, {
                        label: a.label,
                        value: a.value,
                        percentage: s.getPercentage(d, f, d.options.labels.percentage.decimalPlaces)
                    })
                }), c.selectAll("." + d.cssPrefix + "tooltip rect").attr({
                    width: function(a, f) {
                        var e = w.getDimensions(d.cssPrefix + "tooltip" + f);
                        return e.w + 2 * d.options.tooltips.styles.padding
                    },
                    height: function(a, f) {
                        var e = w.getDimensions(d.cssPrefix + "tooltip" + f);
                        return e.h + 2 * d.options.tooltips.styles.padding
                    },
                    y: function(a, f) {
                        var e = w.getDimensions(d.cssPrefix + "tooltip" + f);
                        return -(e.h / 2) + 1
                    }
                })
            },
            showTooltip: function(e, d) {
                var f = e.options.tooltips.styles.fadeInSpeed;
                q.currentTooltip === d && (f = 1), q.currentTooltip = d, d3.select("#" + e.cssPrefix + "tooltip" + d).transition().duration(f).style("opacity", function() {
                    return 1
                }), q.moveTooltip(e)
            },
            moveTooltip: function(b) {
                d3.selectAll("#" + b.cssPrefix + "tooltip" + q.currentTooltip).attr("transform", function(a) {
                    var h = d3.mouse(this.parentNode),
                        g = h[0] + b.options.tooltips.styles.padding + 2,
                        f = h[1] - 2 * b.options.tooltips.styles.padding - 2;
                    return "translate(" + g + "," + f + ")"
                })
            },
            hideTooltip: function(d, c) {
                d3.select("#" + d.cssPrefix + "tooltip" + c).style("opacity", function() {
                    return 0
                }), d3.select("#" + d.cssPrefix + "tooltip" + q.currentTooltip).attr("transform", function(a, h) {
                    var g = d.options.size.canvasWidth + 1000,
                        f = d.options.size.canvasHeight + 1000;
                    return "translate(" + g + "," + f + ")"
                })
            },
            replacePlaceholders: function(g, f, m, k) {
                w.isFunction(g.options.tooltips.placeholderParser) && g.options.tooltips.placeholderParser(m, k);
                var h = function() {
                    return function(d) {
                        var c = arguments[1];
                        return k.hasOwnProperty(c) ? k[arguments[1]] : arguments[0]
                    }
                };
                return f.replace(/\{(\w+)\}/g, h(k))
            }
        },
        p = function(d, c) {
            if (this.element = d, "string" == typeof d) {
                var b = d.replace(/^#/, "");
                this.element = document.getElementById(b)
            }
            var a = {};
            v(!0, a, y, c), this.options = a, null !== this.options.misc.cssPrefix ? this.cssPrefix = this.options.misc.cssPrefix : (this.cssPrefix = "p" + z + "_", z++), x.initialCheck(this) && (d3.select(this.element).attr(B, A), this.options.data.content = u.sortPieData(this), this.options.data.smallSegmentGrouping.enabled && (this.options.data.content = w.applySmallSegmentGrouping(this.options.data.content, this.options.data.smallSegmentGrouping)), this.options.colors = w.initSegmentColors(this), this.totalSize = u.getTotalPieSize(this.options.data.content), o.call(this))
        };
    p.prototype.recreate = function() {
        x.initialCheck(this) && (this.options.data.content = u.sortPieData(this), this.options.data.smallSegmentGrouping.enabled && (this.options.data.content = w.applySmallSegmentGrouping(this.options.data.content, this.options.data.smallSegmentGrouping)), this.options.colors = w.initSegmentColors(this), this.totalSize = u.getTotalPieSize(this.options.data.content), o.call(this))
    }, p.prototype.redraw = function() {
        this.element.innerHTML = "", o.call(this)
    }, p.prototype.destroy = function() {
        this.element.innerHTML = "", d3.select(this.element).attr(B, null)
    }, p.prototype.getOpenSegment = function() {
        var d = this.currentlyOpenSegment;
        if (null !== d && "undefined" != typeof d) {
            var c = parseInt(d3.select(d).attr("data-index"), 10);
            return {
                element: d,
                index: c,
                data: this.options.data.content[c]
            }
        }
        return null
    }, p.prototype.openSegment = function(b) {
        b = parseInt(b, 10), 0 > b || b > this.options.data.content.length - 1 || s.openSegment(this, d3.select("#" + this.cssPrefix + "segment" + b).node())
    }, p.prototype.closeSegment = function() {
        var b = this.currentlyOpenSegment;
        b && s.closeSegment(this, b)
    }, p.prototype.updateProp = function(f, e) {
        switch (f) {
            case "header.title.text":
                var h = w.processObj(this.options, f);
                w.processObj(this.options, f, e), d3.select("#" + this.cssPrefix + "title").html(e), ("" === h && "" !== e || "" !== h && "" === e) && this.redraw();
                break;
            case "header.subtitle.text":
                var g = w.processObj(this.options, f);
                w.processObj(this.options, f, e), d3.select("#" + this.cssPrefix + "subtitle").html(e), ("" === g && "" !== e || "" !== g && "" === e) && this.redraw();
                break;
            case "callbacks.onload":
            case "callbacks.onMouseoverSegment":
            case "callbacks.onMouseoutSegment":
            case "callbacks.onClickSegment":
            case "effects.pullOutSegmentOnClick.effect":
            case "effects.pullOutSegmentOnClick.speed":
            case "effects.pullOutSegmentOnClick.size":
            case "effects.highlightSegmentOnMouseover":
            case "effects.highlightLuminosity":
                w.processObj(this.options, f, e);
                break;
            default:
                w.processObj(this.options, f, e), this.destroy(), this.recreate()
        }
    };
    var o = function() {
        this.svg = w.addSVGSpace(this), this.textComponents = {
            headerHeight: 0,
            title: {
                exists: "" !== this.options.header.title.text,
                h: 0,
                w: 0
            },
            subtitle: {
                exists: "" !== this.options.header.subtitle.text,
                h: 0,
                w: 0
            },
            footer: {
                exists: "" !== this.options.footer.text,
                h: 0,
                w: 0
            }
        }, this.outerLabelGroupData = [], this.textComponents.title.exists && r.addTitle(this), this.textComponents.subtitle.exists && r.addSubtitle(this), r.addFooter(this);
        var d = this;
        w.whenIdExists(this.cssPrefix + "footer", function() {
            r.positionFooter(d);
            var a = w.getDimensions(d.cssPrefix + "footer");
            d.textComponents.footer.h = a.h, d.textComponents.footer.w = a.w
        });
        var c = [];
        this.textComponents.title.exists && c.push(this.cssPrefix + "title"), this.textComponents.subtitle.exists && c.push(this.cssPrefix + "subtitle"), this.textComponents.footer.exists && c.push(this.cssPrefix + "footer"), w.whenElementsExist(c, function() {
            if (d.textComponents.title.exists) {
                var a = w.getDimensions(d.cssPrefix + "title");
                d.textComponents.title.h = a.h, d.textComponents.title.w = a.w
            }
            if (d.textComponents.subtitle.exists) {
                var f = w.getDimensions(d.cssPrefix + "subtitle");
                d.textComponents.subtitle.h = f.h, d.textComponents.subtitle.w = f.w
            }
            if (d.textComponents.title.exists || d.textComponents.subtitle.exists) {
                var e = 0;
                d.textComponents.title.exists && (e += d.textComponents.title.h, d.textComponents.subtitle.exists && (e += d.options.header.titleSubtitlePadding)), d.textComponents.subtitle.exists && (e += d.textComponents.subtitle.h), d.textComponents.headerHeight = e
            }
            u.computePieRadius(d), u.calculatePieCenter(d), r.positionTitle(d), r.positionSubtitle(d), d.options.misc.gradient.enabled && s.addGradients(d), s.create(d), t.add(d, "inner", d.options.labels.inner.format), t.add(d, "outer", d.options.labels.outer.format), t.positionLabelElements(d, "inner", d.options.labels.inner.format), t.positionLabelElements(d, "outer", d.options.labels.outer.format), t.computeOuterLabelCoords(d), t.positionLabelGroups(d, "outer"), t.computeLabelLinePositions(d), d.options.labels.lines.enabled && "none" !== d.options.labels.outer.format && t.addLabelLines(d), t.positionLabelGroups(d, "inner"), t.fadeInLabelsAndLines(d), d.options.tooltips.enabled && q.addTooltips(d), s.addSegmentEventHandlers(d)
        })
    };
    return p
});
Travian.ajax = Travian.ajax.wrap(function(b, a) {
    if (!a.url) {
        a.url = "ajax.php"
    }
    return b(a)
});
Travian.Game = {
    currentPage: window.location.href.split("/").pop().split(".php", 2).shift(),
    eventJamHtml: null,
    speed: 1,
    version: 4,
    worldId: null,
    ajaxUpdate: function(b, a) {
        b = $(b);
        a = a || {};
        var c = {
            onRequest: a.onRequest || Travian.emptyFunction,
            onComplete: a.onComplete || Travian.emptyFunction,
            onCancel: a.onCancel || Travian.emptyFunction,
            onSuccess: a.onSuccess || Travian.emptyFunction,
            onFailure: a.onFailure || Travian.emptyFunction,
            onException: a.onException || Travian.emptyFunction
        };
        if (!a.url) {
            a.url = "admin.php"
        }
        if (a.parameters && a.parameters.cmd) {
            a.url = a.url + (a.url.indexOf("?") == -1 ? "?" : "&") + "cmd=" + a.parameters.cmd
        }
        return new Request(Object.merge({}, a, {
            method: "get",
            encoding: "utf-8",
            evalResponse: false,
            evalScripts: false,
            onRequest: function() {
                c.onRequest(this)
            },
            onComplete: function() {
                c.onComplete(this.response.text)
            },
            onCancel: function() {
                c.onCancel(this)
            },
            onSuccess: function() {
                b.set("html", this.response.text);
                c.onSuccess(this.response.text)
            },
            onFailure: function() {
                c.onFailure(this.response.text)
            },
            onException: function() {
                c.onException(this)
            }
        })).send()
    },
    gotoPage: function(c, d, a, b) {
        Travian.ajax({
            data: {
                cmd: d,
                data: {
                    page: c,
                    entries: b
                }
            },
            onSuccess: function(e) {
                $(a).set("html", e.result)
            }
        });
        return this
    }, buyplus:function(id,r){
    var gold = parseInt(document.getElementById("ajaxReplaceableGoldAmount_2").innerHTML); // was gold
    var gold2 = parseInt(document.getElementById("ajaxReplaceableGoldAmount_2").innerHTML);
    var cost;
    switch(id){
        case 6:    cost=parseInt(document.getElementById("costcp").innerHTML); break;
        case 8:    cost=20; break;
        case 9:    cost=5; break;
        case 10:   cost=5; break;
        case 11:   cost=5; break;
        case 12:   cost=5; break;
        case 13:   cost=parseInt(document.getElementById("costres").innerHTML); break;
		case 14:   cost=10; break;
		case 15:   cost=750; break;
		case 16:   cost=0; break;
    }
    if(gold>0 && (gold-cost)>=0){
        Travian.ajax({
            data:{
                cmd:"buyplus&id="+id+"&r="+r
            },
            onSuccess:function(e){
                if(id<13 && id>7){
                    var hours=document.getElementById("time"+id).innerHTML;

                    var plus=parseInt(document.getElementById("plushour").innerHTML);
                    if(hours==''){
                        $("hour"+id).innerHTML=" часоin <b>0</b> минут";
                        $("ost"+id).innerHTML="Осталось: ";
                        $("action"+id).innerHTML="Продлить";
                    }
                    if(hours==''){ hours = 0;}else{hours = parseInt(hours);}
                    var newtime=hours+plus;
                    $("time"+id).innerHTML=newtime;
                }
                if(id==13 && r!=0){
                    location.reload();
                    return;
                }
				if(id==14){
					//$("gold").innerHTML=gold-cost;
                $("ajaxReplaceableGoldAmount_2").innerHTML=gold2-cost;
                    location.reload();
                    return;
                }
				if(id==15){
                    location.reload();
                    return;
                }
				if(id==16){
                    location.reload();
                    return;
                }
                if(id!=14) {
                    $("gold").innerHTML = gold - cost;
                }
                $("ajaxReplaceableGoldAmount_2").innerHTML=gold2-cost;
            }
        })}else{
        location.reload();}
    return this
}, iPopup: function(a, b) {
        ('<iframe class="popup" frameborder="0" id="Frame" src="manual.php?typ=' + b + "&amp;gid=" + a + '" width="475" height="525" scrolling="no" border="0" allowTransparency="true"></iframe>').dialog({
            title: "{allgemein.anleitung}".translate(),
            buttonOk: false,
            enableBackground: false,
            draggable: true,
            fx: {
                options: {
                    duration: 0
                }
            }
        });
        return false
    },
    iPopupUrl: function(a, b) {
        ('<iframe class="popup" frameborder="0" id="Frame" src="' + a + '" width="475" height="500" scrolling="yes" border="0" allowTransparency="true"></iframe>').dialog({
            title: b,
            buttonOk: false,
            enableBackground: false,
            draggable: true,
            fx: {
                options: {
                    duration: 0
                }
            }
        });
        return false
    },
    unitZoom: function(a) {
        ('<div class="zoomTop"></div><div class="zoomMiddle"><img src="img/x.gif" class="unitBig u' + a + 'Big" /></div><div class="zoomBottom"></div>').dialog({
            buttonOk: false
        });
        return false
    },
    showEditVillageDialog: function(e, b, d, c) {
        var a = b + ' <input type="text" id="villageNameInput" name="villageName" value="" maxlength="20" class="text" />';
        a.dialog({
            title: e,
            relativeTo: $("villageName"),
            buttonTextOk: d,
            onOkay: function(f, g) {
                Travian.ajax({
                    data: {
                        cmd: "changeVillageName",
                        name: $("villageNameInput").value,
                        did: c
                    },
                    onSuccess: function(h) {
                        $("villageNameField").innerHTML = h.name
                    }
                })
            },
            onOpen: function(f, g) {
                g.down("#villageNameInput").value = $("villageNameField").get("text")
            }
        });
        return this
    }
};
window.addEvent("domready", function() {
    Travian.TimersAndCounters.init();
    $$("*.dynamic_img").addEvents({
        mouseenter: function() {
            this.addClass("over")
        },
        mouseleave: function() {
            this.removeClass("over");
            this.removeClass("clicked")
        },
        mousedown: function() {
            this.removeClass("over");
            this.addClass("clicked")
        }
    })
});
Travian.Game.Preferences = {
    preferences: {
        WMBlueprints: "[]"
    },
    initialize: function(a) {
        var c = this;
        for (var b in a) {
            if (a.hasOwnProperty(b)) {
                switch (a[b]) {
                    case "true":
                        c.preferences[b] = true;
                        break;
                    case "false":
                        c.preferences[b] = false;
                        break;
                    case "null":
                        c.preferences[b] = null;
                        break;
                    default:
                        c.preferences[b] = a[b]
                }
            }
        }
    },
    get: function(a) {
        if (this.preferences[a] !== undefined) {
            return this.preferences[a]
        }
        return null
    },
    set: function(a, c, b) {
        if (this.preferences[a] != c) {
            this.preferences[a] = c;
            Travian.ajax({
                data: {
                    cmd: "preferences",
                    key: a,
                    value: c
                },
                async: !(b || false)
            })
        }
    }
};
Travian.Game.Layout = {
    states: {
        travian_toggle: ["expanded", "collapsed"]
    },
    goldIsUpdating: false,
    toggleBox: function(d, a, b) {
        var f = a + "_" + b;
        var c = Travian.Game.Preferences.get(f);
        if (c === null) {
            c = this.states[a][0]
        }
        var e = "";
        Array.each(this.states[a], function(g) {
            d.removeClass(g);
            if (g != c) {
                e = g;
                d.addClass(e);
                d.down("button.toggle").setTitle("{" + b + "_" + e + "}".translate())
            }
        });
        Travian.Game.Preferences.set(f, e, false)
    },
    loadLayoutButtonTitle: function(a, c, b) {
        Travian.ajax({
            data: {
                cmd: "getLayoutButtonTitle",
                boxId: c,
                buttonId: b
            },
            onSuccess: function(e) {
                var d = {
                    title: e.newTitle,
                    text: e.newText,
                    unescaped: false
                };
                a.setTip(d);
                Travian.Tip.show(d)
            }
        })
    },
    setInfoboxItemsRead: function() {
        var b = $("sidebarBoxInfobox");
        if (b && b.hasClass("toggleable")) {
            var a = $$("#sidebarBoxInfobox li.unreaded").get("id");
            if (a.length > 0) {
                if (b.hasClass("collapsed") && a.length > 0) {
                    Travian.ajax({
                        data: {
                            cmd: "infoboxSetReaded",
                            infoIds: a
                        },
                        onSuccess: function(c) {
                            $$("#sidebarBoxInfobox li.unreaded").removeClass("unreaded");
                            if (typeof c.messageCounterContent != "undefined") {
                                $$("#sidebarBoxInfobox span.messageShortInfo").set("html", c.messageCounterContent)
                            }
                        }
                    })
                }
            }
        }
    },
    setupInfoboxItemsDeletionWithMessage: function(b, a) {
        $$(".infoboxDeleteButton").each(function(c) {
            c.addEvent("click", function(g) {
                var f = this.get("data-id");
                var d = new Travian.Dialog({
                    buttonTextOk: a,
                    onOkay: function() {
                        Travian.ajax({
                            data: {
                                cmd: "infoboxDelete",
                                id: f
                            }
                        })
                    }
                });
                d.setContent(b);
                d.show();
                return false
            })
        })
    },
    goldButtonAnimation: function(a) {
        if (a === undefined) {
            var a = true
        }
        var b = 30000;
        var g = 60;
        var e = 0;
        var f = "";
        var c = $$("#navigation .gold a");
        var d = function() {
            if (a) {
                var k = g;
                c.removeClass("ani_" + e);
                if (e < 12) {
                    e++;
                    c.addClass("ani_" + e)
                } else {
                    e = 0;
                    k = b
                }
            }
            f = window.setTimeout(d, k)
        };
        var h = function() {
            f = window.setTimeout(d, b);
            $$("#navigation .gold a").addEvent("mouseover", function() {
                clearTimeout(f);
                this.removeClass("ani_" + e);
                e = 0
            });
            $$("#navigation .gold a").addEvent("mouseout", function() {
                f = window.setTimeout(d, b)
            })
        };
        h()
    },
    updateGold: function(b) {
        Travian.Game.Layout.goldIsUpdating = true;
        var a = parseInt($$(".ajaxReplaceableGoldAmount")[0].get("html"));
        Travian.ajax({
            data: {
                cmd: "getGoldAmount"
            },
            onSuccess: function(d) {
                var c = d.goldAmount;
                if (c != a) {
                    $$(".ajaxReplaceableGoldAmount").set("html", c);
                    if (typeof b == "function") {
                        b()
                    } else {
                        if (typeof b == "string" && typeof b.split(".").reduce(function(f, e) {
                                return f[e]
                            }, window) == "function") {
                            b.split(".").reduce(function(f, e) {
                                return f[e]
                            }, window)
                        }
                    }
                }
                Travian.Game.Layout.goldIsUpdating = false
            }
        })
    },
    updateResources: function(a) {
        if (a == undefined) {
            Travian.ajax({
                data: {
                    cmd: "getResources"
                },
                onSuccess: function(c) {
                    Travian.Game.Layout.updateResources(c)
                }
            })
        } else {
            for (var b = 1; b <= 4; b++) {
                resources.storage["l" + b] = parseInt(a["l" + b])
            }
            Travian.TimersAndCounters.init()
        }
    },
    toggleBackgroundOverlay: function() {
        var a = $("backgroundOverlay");
        if (a) {
            a.removeClass("visible");
            setTimeout(function() {
                a.destroy();
                a.dispose()
            }, 500)
        } else {
            a = new Element("div", {
                id: "backgroundOverlay"
            });
            a.inject(document.getElement("body"), "top");
            a.addClass("visible")
        }
    }
};
Travian.Game.InputCoordinates = (function() {
    Element.inject = Element.inject.wrap(function(n, h, m, k) {
        e(Travian.Game.InputCoordinates, h);
        return n(h, m, k)
    });
    Element.prototype.inject = Element.prototype.inject.wrap(function(m, k, h) {
        e(Travian.Game.InputCoordinates, this);
        return m(k, h)
    });
    Element.insert = Element.insert.wrap(function(m, h, k) {
        return e(Travian.Game.InputCoordinates, m(h, k))
    });
    Element.prototype.insert = Element.prototype.insert.wrap(function(k, h) {
        return e(Travian.Game.InputCoordinates, k(h))
    });
    var e = function(k, h) {
        var m = {
            x: null,
            y: null
        };
        $(h).getElements(k.options.selector).each(function(n) {
            if (n.hasClass(k.options.classNames.x)) {
                m.x = n
            }
            if (n.hasClass(k.options.classNames.y)) {
                m.y = n
            }
            if (m.x != null && m.y != null) {
                k.add(m);
                m.x = null;
                m.y = null
            }
        });
        return h
    };
    var d = function(k, h) {
        var m = parseInt(h.value);
        if (m < k.options.range.min) {
            h.value = k.options.range.min;
            m = k.options.range.min
        } else {
            if (m > k.options.range.max) {
                h.value = k.options.range.max;
                m = k.options.range.max
            }
        }
        return m
    };
    var c = function(n, o, m) {
        var q = m.value;
        var p = n.options.splitChars.find(function(r) {
            return q.indexOf(r) != -1
        });
        if (!p) {
            return false
        }
        var k = q.split(p);
        if (k.length <= 1) {
            return false
        }
        var h = [k.shift(), k.join("")].map(function(r) {
            r = f(n, r);
            if (r < n.options.range.min) {
                r = n.options.range.min
            } else {
                if (r > n.options.range.max) {
                    r = n.options.range.max
                }
            }
            return parseInt(r)
        });
        if (typeof h[0] != "number" || typeof h[1] != "number" || h[0].isNaN() || h[1].isNaN()) {
            return false
        }
        o.x.value = h[0];
        o.y.value = h[1];
        return true
    };
    var f = function(h, k) {
        return k.split("").filter(function(n, m) {
            return (n == "-" || !parseInt(n).isNaN())
        }).filter(function(n, m) {
            return !(m >= 1 && n == "-")
        }).join("")
    };
    var a = function(n, h, k, m) {
        if (c(h, k, m)) {
            n.stop();
            return
        }
        m.value = f(h, m.value)
    };
    var b = function(n, h, m, k) {
        if (h.options.passThroughChars[n.code]) {
            return
        }
        if (n.control) {
            return
        }
        if (h.options.validChars[n.code] == "-" && m.value.indexOf("-") != -1 && m.getSelectionStart() != 0) {
            n.stop();
            return
        }
        if (h.options.splitChars[n.code]) {
            if (m.value.length != 0 && parseInt(m.value).isNaN() == false) {
                if (Browser.name == "opera") {
                    m.value = f(h, m.value)
                }(k || Travian.emptyFunction)()
            }
            n.stop();
            return
        } else {
            if (!h.options.validChars[n.code]) {
                n.stop();
                return
            }
        }
    };
    var g = function(q, m, o, p, r, k) {
        if (m.options.passThroughChars[q.code]) {
            return
        }
        if (c(m, o, p)) {
            if (Browser.name == "opera") {
                p.value = f(m, p.value)
            }(r || Travian.emptyFunction)();
            q.stop();
            return
        }
        if (q.control) {
            return
        }
        q.stop();
        var h = (p.value.length >= 1 && m.options.validChars[q.code] == "-");
        h = h || (m.options.splitChars[q.code]);
        h = h || (!m.options.validChars[q.code]);
        if (h) {
            return
        }
        var n = d(m, p);
        if (n.isNaN()) {
            return
        }
        h = n.sgn() == -1 && m.options.range.min.toString().length == n.toString().length;
        h = h || (n.sgn() >= 0 && m.options.range.max.toString().length == n.toString().length);
        if (h) {
            if (Browser.name == "opera") {
                p.value = f(m, p.value)
            }(k || Travian.emptyFunction)();
            return
        }
    };
    return new(new Class({
        Implements: [Options],
        elements: [],
        options: {
            selector: "input[class~=coordinates]",
            classNames: {
                x: "x",
                y: "y"
            },
            range: {
                min: Travian.Defaults.Map.Size.left,
                max: Travian.Defaults.Map.Size.right
            },
            splitChars: $H({
                226: "|",
                188: ",",
                78: ",",
                110: ",",
                190: ".",
                32: " "
            }),
            prefixChars: $H({
                107: "+",
                43: "+",
                109: "-",
                189: "-",
                173: "-"
            }),
            validChars: $H({
                109: "-",
                189: "-",
                173: "-",
                96: "0",
                97: "1",
                98: "2",
                99: "3",
                100: "4",
                101: "5",
                102: "6",
                103: "7",
                104: "8",
                105: "9",
                48: "0",
                49: "1",
                50: "2",
                51: "3",
                52: "4",
                53: "5",
                54: "6",
                55: "7",
                56: "8",
                57: "9"
            }),
            passThroughChars: $H({
                8: String.fromCharCode(8),
                9: String.fromCharCode(9),
                13: String.fromCharCode(13),
                36: String.fromCharCode(36),
                35: String.fromCharCode(35),
                37: String.fromCharCode(37),
                39: String.fromCharCode(39),
                46: String.fromCharCode(46)
            })
        },
        add: function(h) {
            var m = this;
            h = Object.clone(h);
            if (!h.x || !h.y) {
                return this
            }
            if (h.x._inputCoordinates && h.y._inputCoordinates) {
                return this
            }
            h.x._inputCoordinates = true;
            h.y._inputCoordinates = true;
            h.x.removeAttribute("maxlength");
            h.y.removeAttribute("maxlength");
            var k = null;
            h.x.addEvents({
                change: function(n) {
                    a(n, m, h, h.x)
                },
                keydown: function(n) {
                    b(n, m, h.x, function() {
                        h.y.focus()
                    });
                    return
                },
                keyup: function(n) {
                    g(n, m, h, h.x, function() {
                        h.y.focus()
                    }, function() {
                        h.y.focus()
                    })
                }
            });
            h.y.addEvents({
                change: function(n) {
                    a(n, m, h, h.y)
                },
                keydown: function(n) {
                    b(n, m, h.y)
                },
                keyup: function(n) {
                    g(n, m, h, h.y)
                }
            });
            return this
        },
        initialize: function(h) {
            var k = this;
            this.setOptions(h);
            $(document).addEvent("domready", (function() {
                e(k, document.body)
            }))
        }
    }))
})();
Travian.Game.ColorPicker = new Class({
    Implements: [Options, Events],
    options: {
        colors: [],
        defaultColor: -1,
        className: "moocolorcheckbox",
        selectedClassName: "moocolorcheckbox_selected"
    },
    initialize: function(a, b) {
        var c = this;
        this.setOptions(b);
        this.container = $(a);
        this.container.setStyle("overflow", "hidden");
        this.container.addEvents({
            mouseenter: function() {
                c.fireEvent("mouseenter")
            },
            mouseleave: function() {
                c.fireEvent("mouseleave")
            }
        });
        this.draw();
        if (this.options.defaultColor >= 0) {
            this.selectColor(this.options.colors[this.options.defaultColor])
        }
        return this
    },
    addColor: function(a) {
        if (!a) {
            return this
        }
        this.options.colors.include(a);
        this.draw();
        return this.draw()
    },
    removeColor: function(a) {
        if (!a) {
            return this
        }
        this.options.colors.erase(a);
        return this.draw()
    },
    selectColor: function(a) {
        if (!a) {
            return this
        }
        var b = this;
        this.container.getElements("div.moocolorcheckbox-container").each(function(c) {
            if (c.down(".entry").getStyle("background-color").toUpperCase() == a.toUpperCase()) {
                b.fireEvent("change", [a, c]);
                c.addClass(b.options.selectedClassName)
            } else {
                c.removeClass(b.options.selectedClassName)
            }
        });
        return this
    },
    getContainer: function() {
        return this.container
    },
    draw: function() {
        var a = this;
        this.container.empty();
        this.options.colors.each(function(b, c) {
            var e = new Element("div", {
                "class": a.options.className + " moocolorcheckbox-container"
            });
            var d = new Element("div", {
                "class": "entry"
            });
            d.set("html", "&nbsp;").setStyles({
                "background-color": b
            }).inject(e);
            e.setStyles({
                "float": "left",
                cursor: "pointer"
            }).addEvents({
                click: function() {
                    a.selectColor(b)
                },
                mouseenter: function() {
                    a.fireEvent("mouseenter", [e])
                },
                mouseleave: function() {
                    a.fireEvent("mouseleave", [e])
                }
            }).inject(a.container)
        });
        return this
    }
});
Travian.Game.ImagePicker = new Class({
    Implements: [Options, Events],
    options: {
        images: [],
        defaultImage: -1,
        className: "mooimagecheckbox",
        selectedClassName: "mooimagecheckbox_selected"
    },
    initialize: function(a, b) {
        var c = this;
        this.setOptions(b);
        this.container = $(a);
        this.container.setStyle("overflow", "hidden");
        this.container.addEvents({
            mouseenter: function() {
                c.fireEvent("mouseenter")
            },
            mouseleave: function() {
                c.fireEvent("mouseleave")
            }
        });
        this.draw();
        if (this.options.defaultImage >= 0) {
            this.selectImage(this.options.images[this.options.defaultImage])
        }
        return this
    },
    addImage: function(a) {
        if (!a) {
            return this
        }
        this.options.images.include(a);
        this.draw();
        return this.draw()
    },
    removeImage: function(a) {
        if (!a) {
            return this
        }
        this.options.images.erase(a);
        return this.draw()
    },
    selectImage: function(b) {
        if (!b) {
            return this
        }
        var a = this;
        this.container.getElements("div").each(function(c) {
            var d = c.down("img")._src;
            if (d.toUpperCase() == b.toUpperCase()) {
                a.fireEvent("change", [b, c]);
                c.addClass(a.options.selectedClassName)
            } else {
                c.removeClass(a.options.selectedClassName)
            }
        });
        return this
    },
    getContainer: function() {
        return this.container
    },
    draw: function() {
        var a = this;
        this.container.empty();
        this.options.images.each(function(c, b) {
            var d = new Element("div", {
                "class": a.options.className
            });
            d.set("html", '<img src="' + c + '" alt="" />').down("img")._src = c;
            d.setStyles({
                "float": "left",
                cursor: "pointer"
            }).addEvents({
                click: function() {
                    a.selectImage(c)
                },
                mouseenter: function() {
                    a.fireEvent("mouseenter", [d])
                },
                mouseleave: function() {
                    a.fireEvent("mouseleave", [d])
                }
            }).inject(a.container)
        });
        return this
    }
});
Travian.Game.Menu = new Class({
    initialize: function(a) {
        var c = $(a);
        var b = this;
        c.getElements("a").each(function(f) {
            var d = f.getParent(".normal");
            if (!d) {
                return
            }
            if (d.hasClass("gold")) {
                d.addEvents({
                    mouseenter: function(g) {
                        d.toggleClass("hover")
                    },
                    mouseleave: function(g) {
                        d.toggleClass("hover")
                    }
                });
                return
            }
            d.addEvents({
                mouseenter: function(h) {
                    var g = b.getMorphContainer(h);
                    if (typeOf(g._fxMenu) != "null" && g._fxMenu.cancel) {
                        g._fxMenu.cancel()
                    }
                    g._fxMenu = (new Fx.Morph(g, {
                        duration: 200,
                        transition: Fx.Transitions.Sine.easeOut,
                        unit: true
                    })).start({
                        height: 39,
                        "margin-top": 0
                    })
                },
                mouseleave: function(h) {
                    var g = b.getMorphContainer(h);
                    if (typeOf(g._fxMenu) != "null" && g._fxMenu.cancel) {
                        g._fxMenu.cancel()
                    }
                    g._fxMenu = (new Fx.Morph(g, {
                        duration: 200,
                        transition: Fx.Transitions.Sine.easeOut,
                        unit: true
                    })).start({
                        height: 30,
                        "margin-top": 7
                    })
                }
            })
        })
    },
    getMorphContainer: function(b) {
        var a = $(b.target);
        if (a.getParent(".container")) {
            var a = a.getParent(".container")
        }
        return a
    }
});
Travian.Game.SwitchDown=function(a){this.switchDownElement=jQuery(a);var b=this;this.switchDownElement.on("click",function(c){b.switchDownElement.children().toggleClass("hide");c.stopPropagation();return false})};
Travian.Game.AddLine = new Class({
    Implements: [Options, Events],
    options: {
        insertAfterLastEntry: true,
        elements: {
            add: null,
            insert: null,
            table: null,
            template: null
        },
        entryCount: 0,
        maxEntries: false,
        selectors: {
            add: ".addLine.addElement",
            insert: ".addLine.insertElement",
            template: ".addLine.templateElement"
        }
    },
    getEntryCount: function() {
        return this.options.entryCount
    },
    initialize: function(a) {
        var b = this;
        this.setOptions(a);
        if (!this.options.elements.table) {
            throw "Table element for Travian.Game.AddLine is not definied"
        }
        this.options.elements.table = $(this.options.elements.table);
        $w("template add insert").each(function(c) {
            if (!b.options.elements[c]) {
                b.options.elements[c] = b.options.elements.table.down(b.options.selectors[c])
            }
            if (!b.options.elements[c]) {
                throw 'Element "' + c + '" for Travian.Game.AddLine is not definied'
            }
        });
        this.options.elements.add.addClass("addLine removeElement");
        this.options.elements.template = $(this.options.elements.template).cloneNode(true);
        this.options.elements.add.removeClass("addLine removeElement");
        this.options.elements.add.addEvent("click", function(g) {
            var f = null;
            var d = null;
            var c = null;
            g.stop();
            b.fireEvent("addBefore", [b]);
            b.fireEvent("cloneBefore", [b]);
            f = b.options.elements.template.cloneNode(true);
            b.fireEvent("cloneAfter", [b, f]);
            d = f.select("label", "input", "textarea", "button", "select");
            b.fireEvent("insertBefore", [b, f]);
            d.each(function(e) {
                if (e.tagName.toLowerCase() == "input") {
                    if (e.type.toLowerCase() == "checkbox" || e.type.toLowerCase() == "radio") {
                        e.tagName.checked = false
                    } else {
                        if (e.type.toLowerCase() == "text" || e.type.toLowerCase() == "password") {
                            e.tagName.value = ""
                        }
                    }
                } else {
                    if (e.tagName.toLowerCase() == "select") {
                        e.tagName.selectedIndex = -1
                    } else {
                        if (e.tagName.toLowerCase() == "textarea") {
                            e.tagName.value = ""
                        }
                    }
                }
                b.fireEvent("insertInputBefore", [b, f, e])
            });
            b.options.elements.insert.insert({
                after: f.setStyles({
                    opacity: 0
                })
            });
            c = f.down(".addLine.removeElement");
            if (c) {
                c.insert({
                    after: b.options.elements.add
                });
                c.dispose()
            }
            b.options.entryCount++;
            if (b.options.maxEntries !== false && b.options.maxEntries == b.options.entryCount) {
                b.options.elements.add.dispose();
                Travian.Tip.hide()
            }
            d.each(function(e) {
                b.fireEvent("insertInputAfter", [b, f, e])
            });
            new Fx.Morph(f, {
                duration: 400
            }).start({
                opacity: [0, 1]
            });
            b.fireEvent("insertAfter", [b, f]);
            if (b.options.insertAfterLastEntry === true) {
                b.options.elements.insert = f
            }
            b.fireEvent("addAfter", [b, f])
        })
    }
});
Travian.Game.InstantTabs = new Class({
    initialize: function() {
        $$(".instantTabs .tabNavi .container").addEvent("click", function(c) {
            c.preventDefault();
            var b = this;
            var a = 0;
            $$(".instantTabs .tabNavi .container").each(function(d) {
                if (b != null) {
                    if (d === b) {
                        b = null
                    } else {
                        a++
                    }
                }
            });
            $$(".instantTabs .tabNavi .container").removeClass("active");
            this.addClass("active");
            $$(".instantTabs .tabContainer").addClass("hide");
            $$(".instantTabs .tabContainer")[a].removeClass("hide")
        })
    }
});
Travian.Game.AutoCompleter = new Class({
    Extends: Travian.AutoCompleter,
    initialize: function(b, a) {
        this.parent(b, "ajax.php?cmd=autoComplete", a)
    }
});
Travian.Game.AutoCompleter.UserName = new Class({
    Extends: Travian.Game.AutoCompleter,
    initialize: function(a) {
        this.parent(a, {
            multiple: true,
            separator: "; ",
            autoTrim: true,
            allowDupes: false,
            postData: {
                type: "username"
            }
        })
    }
});
Travian.Game.AutoCompleter.VillageName = new Class({
    Extends: Travian.Game.AutoCompleter,
    initialize: function(a) {
        this.parent(a, {
            maxChoices: 20,
            postData: {
                type: "villagename"
            }
        })
    }
});
Travian.Game.Messages = {};
Travian.Game.Messages.Write = {
    recieverElement: undefined,
    addRecipient: function(b) {
        var a = this.recieverElement.get("value").split(";").map(function(c) {
            return c.trim()
        }).filter(function(c) {
            return c !== ""
        });
        a.push(b);
        this.recieverElement.set("value", a.join("; "))
    },
    initialize: function() {
        var c = this;
        this.recieverElement = $("receiver");
        $("ally").addEvent("click", function() {
            c.addRecipient("[ally]")
        });
        new Travian.Game.AutoCompleter.UserName("receiver");
        var a = false;
        var b = false;
        this.recieverElement.up("form").addEvent("submit", function(d) {
            d.stop();
            if (!b) {
                b = true;
                Travian.ajax({
                    data: {
                        cmd: "checkRecipient",
                        recipients: c.recieverElement.get("value").split(";").map(function(e) {
                            return e.trim()
                        })
                    },
                    onSuccess: function() {
                        $("receiver").up("form").submit();
                        a = true;
                        b = false
                    },
                    onComplete: function() {
                        b = false
                    }
                })
            }
        })
    },
    showAddressBook: function(b) {
        var c = true;
        var d = this;
        var a = $("recipient").getElement("input");
        if (this.addressBookDialog) {
            $(b).removeClass("hide");
            this.addressBookDialog.show()
        } else {
            this.addressBookDialog = "".dialog({
                title: "{nachrichten.adressbuch}".translate(),
                buttonTextOk: "{allgemein.save}".translate(),
                submitMethod: "post",
                submitUrl: "messages.php?t=1",
                destroyElement: false,
                onOpen: function(e, f) {
                    e.refreshOnClose = true;
                    $$(".dialog").removeClass("hide");
                    if (!c) {
                        return
                    }
                    c = false;
                    $(b).removeClass("hide");
                    $(b).inject(f);
                    f.getElements("td.pla a").addEvent("click", function(g) {
                        e.refreshOnClose = false;
                        d.addRecipient($(g.target).get("text"));
                        g.stop();
                        e.close()
                    })
                },
                onClose: function() {
                    $$(".dialog").addClass("hide");
                    if (d.addressBookDialog.refreshOnClose && a.get("value") === "" && window.location.href.indexOf("&b=1") > -1) {
                        window.location = d.addressBookDialog.form.action
                    }
                }
            }).dialog
        }
        return this
    }
};
Travian.Game.Notice = new Class({
    maxNotesLength: -1,
    element: $("notice"),
    initialize: function(b, a) {
        if (typeof b === "undefined") {
            b = -1
        }
        this.maxNotesLength = parseInt(b);
        if (typeof a === "undefined") {
            a = $("notice")
        }
        this.element = a;
        var c = this;
        $("send").addEvent("click", function(d) {
            if (!c.DoubleClickPreventer) {
                c.DoubleClickPreventer = new Travian.DoubleClickPreventer();
                c.DoubleClickPreventer.timeout = 250
            }
            if (!c.DoubleClickPreventer.check()) {
                return
            }
            if (!c.checkMaxLength()) {
                d.preventDefault();
                c.showNoticeTooLongMessage()
            }
        })
    },
    showNoticeTooLongMessage: function() {
        Travian.Translation.get("nachrichten.notice_too_long").dialog()
    },
    checkMaxLength: function() {
        if (this.element == null) {
            return false
        }
        if (this.maxNotesLength < 0) {
            return true
        }
        return this.element.value.length <= this.maxNotesLength
    }
});
Travian.Game.BBEditor = (function() {
    var a = function(d, e) {
        var c = d;
        if (d.nodeName.toLowerCase() == "img") {
            d = c.up("button");
            if (!d) {
                d = c.up("a")
            }
        }
        var b = d.className.split(" ").find(function(f) {
            if (f.indexOf(e) == 0) {
                return true
            }
            return false
        });
        if (b) {
            b = b.substr(0, b.length - 1).split("{");
            if (b.length == 2) {
                b = b[1]
            } else {
                b = null
            }
        }
        return b
    };
    return new Class({
        preview: null,
        textArea: null,
        id: null,
        Binds: ["fetchPreview", "showToolbarWindow", "insertTag", "insertSingleTag", "insertSmilieTag", "hideToolbarWindow", "showPreview", "hidePreview"],
        initialize: function(c, b) {
            this.id = c;
            this.textArea = $(c);
            this.toolbar = $(c + "_toolbar");
            this.preview = $(c + "_preview");
            this.preview.setStyle("display", "none");
            this.preview.addClass("preview");
            $(c + "_previewButton").addEvent("click", this.fetchPreview);
            $(c + "_resourceButton").addEvent("click", this.showToolbarWindow);
            $(c + "_smilieButton").addEvent("click", this.showToolbarWindow);
            $(c + "_troopButton").addEvent("click", this.showToolbarWindow);
            $(c).addEvent("click", this.hideToolbarWindow);
            this.addEvent($(c + "_toolbar"), this.insertTag);
            this.addEvent($(c + "_resources"), this.insertTag);
            this.addEvent($(c + "_smilies"), this.insertTag);
            this.addEvent($(c + "_troops"), this.insertTag);
            b = typeof b !== "undefined" ? b : false;
            if (b === true) {
                this.fetchPreview()
            }
        },
        addEvent: function(d, b) {
            var c = d.getChildren();
            for (i = 0; i < c.length; i++) {
                if (a($(c[i]), "bbTag")) {
                    $(c[i]).addEvent("click", b)
                }
            }
        },
        insertTag: function(d) {
            d.stop();
            this.hidePreview();
            if ($(d.target).match("button")) {
                var c = $(d.target)
            } else {
                var c = $(d.target.parentNode)
            }
            var b = a(c, "bbTag");
            switch (a(c, "bbType")) {
                case "d":
                    this.textArea.insertAroundCursor({
                        before: "[" + b + "]",
                        after: "[/" + b + "]"
                    });
                    break;
                case "s":
                    this.textArea.insertAtCursor(b, false);
                    break;
                case "o":
                    this.textArea.insertAtCursor("[" + a(c, "bbTag") + "]", false);
                    break
            }
            this.textArea.scrollTo(this.textArea.selectionStart)
        },
        showToolbarWindow: function(f) {
            f.stop();
            var d = f.target;
            var c = $(this.id + "_" + a(d, "bbWin"));
            var b = true;
            if (c.getStyle("display") == "block") {
                b = false
            }
            this.hideToolbarWindow();
            if (b) {
                c.fade("hide").fade("in");
                c.setStyle("display", "block")
            }
        },
        hideToolbarWindow: function(b) {
            if (b) {
                b.stop()
            }
            var c = $(this.id + "_toolbarWindows").getChildren();
            for (i = 0; i < c.length; i++) {
                $(c[i]).setStyle("display", "none")
            }
        },
        fetchPreview: function(b) {
            if (typeof b !== "undefined") {
                b.stop()
            }
            if (this.textArea.getStyle("display") == "none" || this.textArea.value.length < 1) {
                this.hidePreview();
                return
            }
            $this = this;
            Travian.ajax({
                data: {
                    cmd: "bb",
                    nl2br: 1,
                    target: this.id,
                    text: this.textArea.value
                },
                onSuccess: function(c) {
                    $this.showPreview(c)
                }
            })
        },
        showPreview: function(b) {
            if (b.error === true) {
                alert(b.errorMsg);
                return
            } else {
                this.preview.innerHTML = b.text;
                this.preview.setStyle("display", "block");
                this.textArea.setStyle("display", "none")
            }
        },
        hidePreview: function() {
            this.preview.setStyle("display", "none");
            this.textArea.setStyle("display", "inline")
        }
    })
})();
Travian.Game.GoldToSilver = (function() {
    var a = function(d, c, e) {
        return (e >= 1 && c >= e)
    };
    var b = function(c, d, e) {
        return (e >= 1 && e >= c.options.rateSilverToGold && d >= e)
    };
    return new Class({
        Binds: ["transfer", "transferSilverToGold"],
        Implements: [Options],
        options: {
            elementInputGold: null,
            elementInputSilver: null,
            elementResultGold: null,
            elementResultSilver: null,
            gold: null,
            rateGoldToSilver: null,
            rateSilverToGold: null,
            silver: null,
            lastFocusedElement: null
        },
        initialize: function(c) {
            this.setOptions(c);
            this.options.elementInputGold = $(this.options.elementInputGold);
            this.options.elementInputSilver = $(this.options.elementInputSilver);
            this.options.elementResultGold = $(this.options.elementResultGold);
            this.options.elementResultSilver = $(this.options.elementResultSilver);
            this.options.elementInputGold.addEvent("keyup", this.transfer);
            this.options.elementInputSilver.addEvent("keyup", this.transfer)
        },
        handleFocusChange: function(c) {
            if (this.options.lastFocusedElement != c) {
                if (c != this.options.elementInputGold) {
                    this.options.elementInputGold.value = ""
                } else {
                    this.options.elementInputSilver.value = ""
                }
                this.options.lastFocusedElement = c
            }
        },
        transfer: function(h) {
            this.handleFocusChange(h.target);
            var d = parseInt(this.options.elementInputGold.value);
            var g = parseInt(this.options.elementInputSilver.value);
            var c = this.options.gold;
            var f = this.options.silver;
            if (typeOf(d) == "null" || a(this, c, d) == false) {
                d = 0
            }
            d = Math.floor(d * this.options.rateGoldToSilver) / this.options.rateGoldToSilver;
            f += Math.floor(d * this.options.rateGoldToSilver);
            c -= d;
            if (typeOf(g) == "null" || b(this, f, g) == false) {
                g = 0
            }
            g = Math.floor(g / this.options.rateSilverToGold) * this.options.rateSilverToGold;
            c += Math.floor(g / this.options.rateSilverToGold);
            f -= g;
            c -= this.options.gold;
            f -= this.options.silver;
            if (c > 0) {
                c = "+" + c
            }
            if (f > 0) {
                f = "+" + f
            }
            this.options.elementResultGold.set("html", c);
            this.options.elementResultSilver.set("html", f);
            return this
        }
    })
})();
Travian.Game.RaidList = {
    data: null,
    weAreAdding: false,
    addSlot: function(b, a, d, c) {
        c = c || null;
        Travian.ajax({
            data: {
                cmd: "raidList",
                action: "ActionAddSlotForm",
                listId: b,
                weAreAdding: (Travian.Game.RaidList.weAreAdding ? true : null),
                x: a,
                y: d,
                context: c
            },
            onSuccess: function(e) {
                (e.html).dialog({
                    buttonOk: false,
                    context: "raidAddSlotDialog"
                });
                return true
            }
        })
    },
    addSlotPopupWrapper: function(b, a, c) {
        Travian.Game.RaidList.weAreAdding = true;
        Travian.Game.RaidList.addSlotWrapper(b, a, c)
    },
    editSlotPopupWrapper: function(b, a, c) {
        Travian.Game.RaidList.weAreAdding = false;
        Travian.Game.RaidList.addSlotWrapper(b, a, c)
    },
    addSlotWrapper: function(b, a, d) {
        var c = Travian.WindowManager.getWindows();
        if (c.length > 0 && !!c.getLast()) {
            c.getLast().close()
        }
        Travian.Game.RaidList.addSlot(b, a, d)
    },
    saveSlot: function(b, d, a, c) {
        c = Travian.Game.RaidList.weAreAdding ? null : (c || null);
        Travian.ajax({
            data: {
                cmd: "raidList",
                action: "ActionAddSlot",
                listId: b,
                slotId: c,
                x: d.x,
                y: d.y,
                t1: d.t1,
                t2: d.t2,
                t3: d.t3,
                t4: d.t4,
                t5: d.t5,
                t6: d.t6,
                t7: d.t7,
                t8: d.t8,
                t9: d.t9,
                t10: d.t10
            },
            onSuccess: function(e) {
                Travian.WindowManager.getWindowsByContext("raidAddSlotDialog").pop().close();
                if (a !== false) {
                    var m = null;
                    if (typeof e != "undefined" && typeof e.updatedSlotId != "undefined" && e.updatedSlotId > 0) {
                        m = e.updatedSlotId
                    } else {
                        if (c !== null) {
                            m = c
                        }
                    }
                    var g = m !== null ? "#slot-row-" + m : "";
                    var k = Math.floor(Date.now() / 1000);
                    var f = window.location.href;
                    var h = Travian.parseURL(f);
                    h.searchObject.lid = b;
                    h.searchObject.xx = k;
                    h.hash = g;
                    delete h.searchObject.action;
                    window.location = Travian.composeURL(h)
                }
                return true
            }
        })
    },
    editSlot: function(b, c, a, d) {
        d = d || null;
        Travian.ajax({
            data: {
                cmd: "raidList",
                action: "ActionAddSlotForm",
                listId: b,
                slotId: c,
                pageReload: a,
                context: d
            },
            onSuccess: function(e) {
                (e.html).dialog({
                    buttonOk: false,
                    context: "raidAddSlotDialog"
                });
                return true
            }
        })
    },
    deleteSlot: function(b, a) {
        Travian.ajax({
            data: {
                cmd: "raidList",
                action: "actionDeleteSlot",
                slotId: b
            },
            onSuccess: function() {
                if (a !== false) {
                    window.location.reload()
                } else {
                    Travian.WindowManager.getWindowsByContext("raidAddSlotDialog").pop().close()
                }
                return true
            }
        })
    },
    loadList: function(b, a, e) {
        var d = this;
        var c = $("list" + b);
        c.down(".loading").removeClass("hide");
        Travian.ajax({
            data: {
                cmd: "raidListSlots",
                lid: b,
                sort: a,
                direction: e
            },
            onComplete: function() {
                c.down(".loading").addClass("hide")
            },
            onSuccess: function(f) {
                c.down(".listContent").set("html", f.html);
                c.down(".listContent").removeClass("hide");
                c.down(".openedClosedSwitch").removeClass("switchClosed");
                c.down(".openedClosedSwitch").addClass("switchOpened");
                d.data[b] = f.list;
                c.down("input[name=sort]").value = f.sort;
                c.down("input[name=direction]").value = f.direction
            }
        });
        return this
    },
    showCreateNewList: function() {
        Travian.ajax({
            data: {
                cmd: "raidList",
                action: "actionAddListForm"
            },
            onSuccess: function(a) {
                (a.html).dialog({
                    buttonOk: false
                })
            }
        })
    },
    createNewList: function() {
        var b = $$("#raidListCreate form").serializeForm();
        var c = {
            cmd: "raidList",
            action: "actionAddList"
        };
        var a = Object.merge(b[0], c);
        Travian.ajax({
            data: a,
            onSuccess: function(d) {
                if (d.validation_message) {
                    $$("#raidListCreate #error").set("html", d.validation_message)
                } else {
                    window.location.reload()
                }
            }
        })
    },
    showUpdateList: function(a) {
        Travian.ajax({
            data: {
                cmd: "raidList",
                action: "actionUpdateListForm",
                listId: a
            },
            onSuccess: function(b) {
                (b.html).dialog({
                    buttonOk: false
                })
            }
        })
    },
    updateList: function(a) {
        var c = $$("#raidListCreate form").serializeForm();
        var d = {
            cmd: "raidList",
            action: "actionUpdateList",
            listId: a
        };
        var b = Object.merge(c[0], d);
        Travian.ajax({
            data: b,
            onSuccess: function(e) {
                if (e.validation_message) {
                    $$("#raidListCreate #error").set("html", e.validation_message)
                } else {
                    window.location.reload()
                }
            }
        })
    },
    markAllSlotsOfAListForRaid: function(a, b) {
        Object.each(this.data[a].slots, function(c) {
            c.marked = b
        });
        $("list" + a).getElements(".markSlot").each(function(c) {
            c.checked = b
        });
        this.updateTroopSummaryForAList(a);
        return this
    },
    markSlotForRaid: function(a, b, c, d) {
        this.data[a].slots[b].marked = c;
        if (typeof d == "undefined" || d) {
            this.updateTroopSummaryForAList(a)
        }
        return this
    },
    setData: function(a) {
        this.data = a
    },
    sort: function(a, b) {
        return this.loadList(a, b, this.data[a].directions[b] != "asc" ? "asc" : "desc")
    },
    toggleList: function(a) {
        if (typeof this.data[a] == "undefined") {
            this.loadList(a)
        }
        for (var b in this.data) {
            if (this.data.hasOwnProperty(b)) {
                var c = $("list" + b);
                if (b == a) {
                    Travian.toggleSwitch(c.down(".listContent"), c.down(".openedClosedSwitch"))
                } else {
                    c.down(".listContent").addClass("hide");
                    c.down(".openedClosedSwitch").addClass("switchClosed");
                    c.down(".openedClosedSwitch").removeClass("switchOpened")
                }
            }
        }
        return this
    },
    updateListsVisibility: function(a) {
        var d = $("list" + a),
            f = false,
            e = new Fx.Scroll(window, {
                duration: 100
            }),
            b, c;
        if (d.down(".listContent.hide") === null) {
            f = true
        }
        if (!f) {
            for (b in this.data) {
                if (this.data.hasOwnProperty(b) && b != a) {
                    c = $("list" + b);
                    if (c.down(".listContent.hide") === null) {
                        Travian.toggleSwitch(c.down(".listContent"), c.down(".openedClosedSwitch"))
                    }
                }
            }
        }
        Travian.toggleSwitch(d.down(".listContent"), d.down(".openedClosedSwitch"));
        if (!f) {
            e.toElement(d)
        }
        return this
    },
    updateTroopSummaryForAList: function(b) {
        var c = this;
        var a = $H(this.data[b].slots).inject([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], function(e, f) {
            if (f.marked) {
                for (var d = 1; d <= 10; d++) {
                    e[d] += f.troops[d]
                }
            }
            return e
        });
        $("list" + b).getElements(".troopSelectionValue").each(function(e, d) {
            if (a[d + 1] > 0) {
                e.set("html", '<span class="{alert}">{selected}/{available}'.substitute({
                    selected: a[d + 1],
                    available: c.data[b].troops[d + 1],
                    alert: a[d + 1] > c.data[b].troops[d + 1] ? "alert" : ""
                })).up(".troopSelectionUnit").show()
            } else {
                e.up(".troopSelectionUnit").hide()
            }
        });
        return this
    },
    confirm: function(a) {
        var c = $$("input[name=sort]")[0].get("value");
        var f = $$("input[name=direction]")[0].get("value");
        var e = $$("input[name=lid]")[0].get("value");
        var d = [];
        $$(".markSlot.check:checked").each(function(h) {
            var g = h.get("id");
            g = g.replace("slot", "");
            d.push(g)
        });
        var b = "new";
        if (typeof a !== "undefined") {
            b = "retry"
        }
        new Travian.Dialog.Ajax({
            data: {
                cmd: "raidListCaptcha",
                sort: c,
                direction: f,
                lid: e,
                slots: d,
                attempt: b
            },
            buttonOk: false,
            darkOverlay: true
        })
    }
};
Travian.Game.Reports = {
    editRights: function(b, a) {
        Travian.ajax({
            data: {
                cmd: "reportRightsGet",
                reportId: a.datas.reportId
            },
            onSuccess: function(d) {
                a.datas = Object.merge({}, a.datas || {}, d || {});
                var c = '<div class="reports" id="editRights"><div><input type="checkbox" id="right1" class="check" /> {anonymOpponent}</div><div><input type="checkbox" id="right2" class="check" /> {anonymMyself}</div><div><input type="checkbox" id="right3" class="check" /> {hiddenOwnTroops}</div><div><input type="checkbox" id="right4" class="check" /> {hiddenOtherTroops}</div><div class="description">{description}<br /><textarea id="description"></textarea></div></div>';
                c.substitute(a.text).dialog({
                    relativeTo: b,
                    buttonTextOk: a.text.buttonTextOk,
                    buttonTextCancel: a.text.buttonTextCancel,
                    title: a.text.title,
                    onOpen: function(e, f) {
                        $("right1").checked = a.datas.right1;
                        $("right2").checked = a.datas.right2;
                        $("right3").checked = a.datas.right3;
                        $("right4").checked = a.datas.right4;
                        $("description").innerHTML = a.datas.description
                    },
                    onOkay: function(e, f) {
                        Travian.ajax({
                            data: {
                                cmd: "reportRightsSet",
                                data: Object.merge({}, a.datas, {
                                    right1: $("right1").checked,
                                    right2: $("right2").checked,
                                    right3: $("right3").checked,
                                    right4: $("right4").checked,
                                    description: $("description").value
                                })
                            }
                        })
                    }
                })
            }
        });
        return false
    }
};
var reload_enabled = true;
var auto_reload = getAutoReloadStatus();
var delayTimeForReload = 0;
var resources = {};
Travian.TimersAndCounters = {
    timeCounters: [],
    resourceCounters: {},
    startedAt: Math.floor(Date.now() / 1000),
    pathReload: "reload=auto",
    timeToInt: function(a) {
        var c, b;
        c = a.split(":");
        b = c[0] * 3600 + c[1] * 60 + c[2] * 1;
        return b
    },
    intToTime: function(c, f) {
        var a, e, b, d;
        if (c < (0 - delayTimeForReload - 1)) {
            d = f ? "0:00:0?" : (Travian.Game.eventJamHtml || "0:00:0?")
        } else {
            c = Math.max(0, c);
            a = Math.floor(c / 3600);
            e = Math.floor(c / 60) % 60;
            b = c % 60;
            d = a + ":";
            if (e < 10) {
                d += "0"
            }
            d += e + ":";
            if (b < 10) {
                d += "0"
            }
            d += b
        }
        return d
    },
    init: function() {
        this.initResourcesCounters();
        this.initTimers();
        this.dropReload()
    },
    initTimers: function() {
        this.startedAt = Math.floor(Date.now() / 1000);
        this.timeCounters = [];
        this.initTimersInContext(document)
    },
    initTimer: function(c) {
        var b, a;
        switch (c.getAttribute("counting")) {
            case "down":
                b = c.getAttribute("value").toInt() || 0;
                a = {
                    node: c,
                    value: b,
                    counting: "down",
                    reloadDelay: b < delayTimeForReload ? delayTimeForReload * 1000 : 0,
                    inReload: false
                };
                break;
            default:
                a = {
                    node: c,
                    value: this.timeToInt(c.innerHTML || "00:00:00"),
                    counting: "up",
                    inReload: false
                };
                break
        }
        this.updateTimerValue(a);
        if (a.value > -1) {
            this.timeCounters.push(a)
        }
    },
    initTimersInContext: function(b) {
        var a, c = b.getElementsByClassName("timer");
        for (a = 0; a < c.length; a++) {
            this.initTimer(c[a])
        }
        this.executeTimers()
    },
    updateTimerValue: function(d) {
        var b = Math.floor(Date.now() / 1000) - this.startedAt;
        var a;
        var c = false;
        switch (d.counting) {
            case "down":
                a = d.value - b;
                d.node.innerHTML = this.intToTime(a);
                d.node.setAttribute("value", a);
                if (a < 1) {
                    c = true
                }
                break;
            case "up":
                d.node.innerHTML = this.intToTime((d.value + b) % 86400);
                break
        }
        return c
    },
    executeTimers: function() {
        if (this.timeCounters.length > 0) {
            window.setTimeout("Travian.TimersAndCounters.executeTimers()", 1000)
        }
        for (var a = 0; a < this.timeCounters.length; a++) {
            var b = this.timeCounters[a];
            if (this.updateTimerValue(b) && !b.inReload && window.reload_enabled) {
                b.inReload = true;
                this.processReload(b.reloadDelay)
            }
        }
    },
    initResourcesCounters: function() {
        this.resourceCounters = {};
        this.initResourcesCounter("l1", "lbar1");
        this.initResourcesCounter("l2", "lbar2");
        this.initResourcesCounter("l3", "lbar3");
        this.initResourcesCounter("l4", "lbar4")
    },
    initResourcesCounter: function(a, c) {
        var b = document.getElementById(a);
        try {
            var f = resources.production[a];
            if (f != 0) {
                this.resourceCounters[a] = {
                    startInMs: Date.now(),
                    production: f,
                    initialResources: resources.storage[a],
                    maximumResources: resources.maxStorage[a],
                    minimumResources: 0,
                    tickInMs: Math.max(Math.round(Math.abs(3600000 / f)), 100),
                    bar: document.getElementById(c),
                    node: b
                };
                this.executeCounter(a)
            }
        } catch (d) {}
    },
    executeCounter: function(f) {
        var b = this.resourceCounters[f];
        var a = Date.now() - b.startInMs;
        var e = Math.floor(b.initialResources + a * (b.production / 3600000));
        switch (true) {
            case (e >= b.maximumResources):
                e = b.maximumResources;
                break;
            case (e <= b.minimumResources):
                e = b.minimumResources;
                break;
            default:
                window.setTimeout("Travian.TimersAndCounters.executeCounter('" + f + "')", b.tickInMs)
        }
        var g = new Travian.Formatter({
            forceDecimal: false
        });
        b.node.innerHTML = g.getFormattedNumber(e);
        resources.storage[f] = e;
        var d = b.bar;
        if (d) {
            var c = Math.round(100 * e / b.maximumResources);
            d.removeClass("stockFull");
            if (e >= b.maximumResources) {
                d.addClass("stockFull")
            }
            d.setStyles({
                width: c + "%"
            })
        }
    },
    dropReload: function() {
        var c, b, d, a;
        c = document.location.href;
        b = document.location.hash;
        if (b != "") {
            a = c.indexOf(b);
            c = c.substring(0, a)
        }
        d = c.indexOf(this.pathReload);
        if (d != -1) {
            c = c.substring(0, d - 1) + b;
            window.history.pushState({
                id: c
            }, "", c)
        }
    },
    processReload: function(b) {
        var a;
        switch (auto_reload) {
            case 0:
                a = this.modalReload;
                break;
            case 1:
                a = Travian.WindowManager.checkForModalDialogs() ? this.modalReload : this.plainReload;
                break;
            case 2:
                if (typeof window.customReload == "function") {
                    a = window.customReload
                } else {
                    a = this.modalReload()
                }
                break
        }
        setTimeout(a, b + 1000)
    },
    plainReload: function() {
        window.location.href = window.location.href
    },
    modalReload: function() {
        var c, b, a;
        c = window.location.href;
        b = window.location.hash;
        if (b != "") {
            a = c.indexOf(b);
            c = c.substring(0, a)
        }
        if (c.indexOf(this.pathReload) == -1) {
            if (c.indexOf("?") == -1) {
                c += "?" + this.pathReload
            } else {
                c += "&" + this.pathReload
            }
        }
        document.location.href = c + b
    }
};
Travian.Game.Hero = {};
Travian.Game.Hero.Editor = function() {
    var a = null;
    return new Class({
        unloadIdentifier: null,
        Implements: [Options],
        options: {
            element: null,
            command: null,
            attributes: null,
            urlHeroImage: null,
            elementHeroImage: null
        },
        hideAll: function() {
            var b = this.options.element.getElements(".attributes .container .infoOpen").removeClass("infoOpen");
            b.down(".headline").removeClass("switchOpened").addClass("switchClosed");
            this.options.element.getElements(".attributes .container .details").hide();
            return this
        },
        initialize: function(b) {
            var d = this;
            d.initializeAttributes(b);
            var c = this.options.element.down("#save");
            if (c != null) {
                c.addEvent("click", function(f) {
                    d.sendAction("save", function() {
                        var e = Travian.parseURL(d.options.urlHeroImage);
                        delete(e.searchObject.code);
                        e.searchObject.time = (new Date()).getTime();
                        $$("." + d.options.elementHeroImage).set("src", Travian.composeURI(e))
                    });
                    f.stop()
                })
            }
            var c = this.options.element.down("#random");
            if (c != null) {
                c.removeEvent("click", a);
                a = function(f) {
                    d.sendAction("random");
                    f.stop()
                };
                c.addEvent("click", a)
            }
            this.bindGenderSwitch();
            this.storeAttributesInInput(this.options.attributes)
        },
        initializeAttributes: function(b) {
            var c = this;
            this.setOptions(b);
            this.options.element = $(this.options.element);
            this.hideAll();
            this.options.element.getElements(".attributes .container .info").each(function(d) {
                d.addEvent("click", function(e) {
                    c.showAttribute(d);
                    e.preventDefault()
                })
            });
            this.options.element.getElements(".attributes .container .attribute").addEvent("click", function(f) {
                var g = parseInt(f.target.id.split("attribute_button_")[1]);
                var d = f.target.getParent(".info").id;
                c.options.attributes[d] = g;
                c.sendAction("show");
                f.stop()
            })
        },
        sendAction: function(b, d) {
            if (b == "save") {
                Travian.Form.UnloadHelper.disableSecurity(this.unloadIdentifier)
            } else {
                this.unloadIdentifier = Travian.Form.UnloadHelper.enableSecurity(this.unloadIdentifier)
            }
            var c = this;
            Travian.ajax({
                data: {
                    cmd: this.options.command,
                    action: b,
                    attribs: this.options.attributes
                },
                onSuccess: function(e) {
                    $$(".hero_head .image").set("html", e.html);
                    if (e.attributesHtml) {
                        $("attributesContainer").set("html", e.attributesHtml);
                        c.initializeAttributes(c.options)
                    }
                    c.options.attributes = e.attributes;
                    c.storeAttributesInInput(e.attributes);
                    (d || Travian.emptyFunction)()
                }
            });
            return this
        },
        showAttribute: function(b) {
            var c = b.hasClass("infoOpen");
            this.hideAll();
            if (!c) {
                b.addClass("infoOpen");
                b.down(".headline").removeClass("switchClosed").addClass("switchOpened");
                b.down(".details").show()
            }
            return this
        },
        storeAttributesInInput: function(c) {
            var b = this.options.element.down("input[name=attributes]");
            if (b != null) {
                b.set("value", escape(JSON.encode(c)))
            }
            return this
        },
        switchGender: function(b) {
            if ($(this.options.element).hasClass("genderSwitch")) {
                if (b == "male") {
                    this.options.element.removeClass("female").addClass("male");
                    $("heroEditorActivateMale").addClass("iconActive disabled");
                    $("heroEditorActivateFemale").removeClass("iconActive disabled")
                } else {
                    this.options.element.removeClass("male").addClass("female");
                    $("heroEditorActivateFemale").addClass("iconActive disabled");
                    $("heroEditorActivateMale").removeClass("iconActive disabled")
                }
            }
            this.options.attributes.gender = b;
            this.sendAction("gender")
        },
        bindGenderSwitch: function() {
            var b = this;
            $$("#heroEditorActivateMale, #heroEditorActivateFemale").addEvent("click", function(c) {
                if (this.get("id") == "heroEditorActivateMale" && b.options.element.hasClass("male") == false) {
                    b.switchGender("male")
                } else {
                    if (this.get("id") == "heroEditorActivateFemale" && b.options.element.hasClass("female") == false) {
                        b.switchGender("female")
                    }
                }
                c.stop()
            })
        }
    })
}();
Travian.Game.Hero.Inventory = new Class({
    Implements: [Options],
    dragStatus: false,
    items: [],
    options: {
        a: null,
        c: null,
        gender: "male",
        heroState: {},
        isInVillage: true,
        isDead: false,
        data: [],
        heroBodyHash: false,
        images: "img/hero/items/item{typeId}.png",
        text: {
            moveDialogDescription: "Anzahl der zu verschiebenden Items: {inputField}",
            useDialogDescription: "Anzahl der zu anwendenden Items: {inputField}",
            useOneDialogTitle: "Soll dieser Gegenstand wirklich benutzt werden?",
            buttonOk: "Ok",
            buttonCancel: "Cancel"
        }
    },
    startDrop: false,
    createAndAddItem: function(a) {
        this.items.include(Object.merge({
            placeElement: undefined,
            html_id: "item_" + a.id
        }, a || {}));
        return this
    },
    createDivs: function() {
        var a = this;
        var b = $("placeHolder");
        this.items.each(function(g, d) {
            g.isUseable = (g.slot == "bag" || a.options.isInVillage);
            if (a.options.isDead && !g.isUsableIfDead) {
                g.isUseable = false
            }
            var f = "";
            if (!g.isUseable) {
                if (a.options.isDead) {
                    f = a.options.text.notMoveableTextDead
                } else {
                    f = a.options.text.notMoveableText
                }
                f += "<br />"
            }
            f += g.attributes.join("<br />");
            var e = (new Element("div", {
                id: "item_" + g.id,
                "class": "item " + a.options.gender + "_item_" + g.typeId + " " + (g.isUseable ? "" : "disabled"),
                html: '<div class="amount">' + g.amount + "</div>",
                styles: {
                    position: "relative"
                },
                events: {
                    click: function() {
                        var h = Travian.isMobile() || typeof a.DoubleClickPreventer === "undefined" || !a.DoubleClickPreventer.prevent;
                        if (g.isUseable && h) {
                            if (!Travian.isMobile() || (g.clickedFirstTime && Travian.isMobile())) {
                                Travian.Tip.hide();
                                a.moveToMatchingPlace(this)
                            } else {
                                if (a.startDrop != true) {
                                    a.mark(g.slot)
                                }
                                g.clickedFirstTime = true
                            }
                        }
                    },
                    mouseover: function() {
                        if (g.isUseable) {
                            if (a.startDrop != true) {
                                a.mark(g.slot)
                            }
                        }
                    },
                    mouseout: function() {
                        if (g.isUseable) {
                            if (a.startDrop != true) {
                                a.unMark(g.slot)
                            }
                        }
                    }
                }
            }));
            e.setTip({
                unescaped: true,
                title: "(" + g.amount + ") " + g.name,
                text: f
            });
            e.inject(b);
            e.item = g;
            var c = null;
            if (g.placeId == 0) {
                c = $(g.slot);
                e.addClass("onHero")
            } else {
                c = $("inventory_" + g.placeId)
            }
            a.moveToDrop(e, c.addClass(g.isUseable ? "" : "disabled"), true)
        });
        this.makeDraggable();
        $(this.options.elementHeroBody).src = this.options.urlBodyImage.substitute({
            heroBodyHash: this.options.heroBodyHash
        });
        return this
    },
    dialog: function(a) {
        var d = this;
        var f = a.text;
        var c = a.amount;
        var e = a.amount;
        var b = a.calculate;
        delete(a.text);
        delete(a.amount);
        delete(a.calculate);
        a.onOpen = (a.onOpen || Travian.emptyFunction).wrap(function(m, k, n) {
            var h = n.down("#amount");
            if (h) {
                var g = function(v) {
                    if (b) {
                        var w = 1 + b.bonusPercent / 100;
                        var o = v * Math.round(b.valuePerItem * w);
                        var s = v * b.valuePerItem;
                        var p = o - s;
                        var t = n.down(".displayUseValue");
                        var u = n.down(".displayUseBonusP");
                        var q = n.down(".displayUseBonus");
                        var r = n.down(".displayAfterUse");
                        if (t) {
                            t.set("html", s)
                        }
                        if (u) {
                            u.set("html", b.bonusPercent)
                        }
                        if (q) {
                            q.set("html", p)
                        }
                        if (r) {
                            r.set("html", b.currentValue + o)
                        }
                    }
                };
                h.set("value", c);
                g(c);
                k.makeInputAmountable(h, e, g.bind(d))
            }
            return m(k, n)
        });
        a = Object.merge(a, {
            buttonTextOk: this.options.text.buttonOk,
            buttonTextCancel: this.options.text.buttonCancel
        });
        f.substitute({
            inputField: '<input class="text" id="amount" type="text" value="0" />',
            equipmentBonus: '<span class="displayUseBonusP">0</span>'
        }).dialog(a);
        return this
    },
    executeMovement: function(d, b, a) {
        var c = this;
        if (!c.DoubleClickPreventer) {
            c.DoubleClickPreventer = new Travian.DoubleClickPreventer();
            c.DoubleClickPreventer.timeout = 5000
        }
        if (!c.DoubleClickPreventer.check()) {
            return false
        }
        Travian.ajax({
            data: {
                cmd: "heroInventory",
                id: d,
                drid: b,
                amount: a,
                a: this.options.a,
                c: this.options.c
            },
            onSuccess: function(m) {
                c.options.c = m.checkSum;
                c.options.heroState = Object.merge(c.options.heroState, m.heroState || {});
                if (m.heroBodyHash) {
                    c.options.heroBodyHash = m.heroBodyHash
                }
                c.items.each(function(p, o) {
                    $(p.html_id).dispose()
                });
                c.items = new Array();
                m.items.each(function(p, o) {
                    c.createAndAddItem(p)
                });
                $$(".inventory").each(function(o) {
                    o.dispose()
                });
                var n = m.inventorySize;
                if (m.heroData.freePoints > 0) {
                    $$("div.hero_inventory .attribute .setPoint").show()
                }
                for (var g = 1, f = null; g <= n; g++) {
                    f = new Element("div", {
                        id: "inventory_" + g,
                        "class": "inventory draggable"
                    });
                    f.inject($("itemsToSale").down(".market"), "before")
                }
                c.createDivs();
                var k = $("attributes");
                var h = $$(".heroHealthBarBox");
                var e = $$(".heroXpBarBox");
                $H(m.heroData).each(function(r, p) {
                    var q = k.down("." + p);
                    if (q != null) {
                        var s = q.down(".current");
                        var t = q.down(".progress .bar");
                        var v = q.down(".points");
                        var o = q.getElements(".tooltip");
                        if (q.hasClass("res")) {
                            var u = $("setResource").getElements(".resource label .current");
                            u.each(function(x, w) {
                                x.set("html", r["resourceHero" + w])
                            })
                        }
                        if (q.hasClass("tooltip")) {
                            o.push(q)
                        }
                        if (s && s.down(".value")) {
                            s = s.down(".value")
                        }
                        if (typeof r.current != "undefined" && s) {
                            s.set("html", r.current)
                        }
                        if (typeof r.percent != "undefined" && t) {
                            t.setStyles({
                                width: r.percent + "%"
                            });
                            if (typeof r.backgroundColor != "undefined") {
                                t.setStyles({
                                    backgroundColor: r.backgroundColor
                                })
                            }
                        }
                        if (typeof r.points != "undefined" && v) {
                            if (v.down("input") !== null) {
                                v.down("input").value = r.points
                            } else {
                                v.set("html", r.points)
                            }
                        }
                        if (typeof r.tooltip != "undefined" && o.length) {
                            o.setTipUnescaped(r.tooltip)
                        }
                    }
                });
                if (k.className != "hero-dead") {
                    k.down(".experience").down(".value").set("html", m.heroData.experience.current);
                    if (k.down(".health")) {
                        k.down(".health").down(".value").set("html", m.heroData.health.percent + "%");
                        k.down(".health").down(".bar").setStyles({
                            width: m.heroData.health.percent + "%"
                        })
                    }
                    h.setTitle(m.heroData.health.tooltipSidebar);
                    h.down(".bar").setStyles({
                        width: m.heroData.health.percent + "%"
                    });
                    e.setTitle(m.heroData.experience.tooltipSidebar);
                    e.down(".bar").setStyles({
                        width: m.heroData.experience.percent + "%"
                    })
                }
                if (typeof c.DoubleClickPreventer !== "undefined") {
                    c.DoubleClickPreventer.cancelTimer()
                }
                c.dragStatus = false;
                if (c.options.afterRequestCallback[m.itemTypeId]) {
                    c.options.afterRequestCallback[m.itemTypeId](c, c.options, a, m)
                }
            }
        });
        return this
    },
    findFirstFreeInventory: function() {
        var a = null;
        $$(".inventory").each(function(b) {
            if (b.getChildren().length == 0 && a == null) {
                a = b
            }
        });
        return a
    },
    initialize: function(a) {
        var b = this;
        this.setOptions(a);
        this.options.data.each(function(c) {
            b.createAndAddItem(c)
        });
        this.createDivs()
    },
    isInventoryId: function(a) {
        return a.substr(0, 9) == "inventory"
    },
    makeDraggable: function() {
        var c = this;
        var a = $("drag_cont");
        var b = $$(".draggable");
        var d = $("text");
        $$(".item").each(function(e) {
            if (e.item.isUseable == false) {
                return
            }
            if (!Travian.isMobile()) {
                new Drag.Move(e, {
                    droppables: b,
                    container: a,
                    handle: e,
                    onDrop: function(f, g) {
                        Travian.Tip.hide();
                        if (c.startDrop == true) {
                            if (f.item.slot != "bag" && f.item.placeId == 0) {
                                f.addClass("onHero")
                            }
                            if (!g) {
                                c.moveToDrop(f, f.item.placeElement)
                            } else {
                                if (g.id == f.item.slot || c.isInventoryId(g.id)) {
                                    f.addClass("highlight");
                                    (function() {
                                        f.removeClass("highlight")
                                    }).delay(500);
                                    c.unMark(g);
                                    if (f.item.placeElement != g) {
                                        c.moveToDrop(f, g)
                                    } else {
                                        c.moveToDrop(f, f.item.placeElement)
                                    }
                                } else {
                                    c.moveToDrop(f, f.item.placeElement)
                                }
                            }
                            c.startDrop = false;
                            f.removeClass("whileDragging")
                        }
                        if ($$("body")[0].hasClass("ie6") || $$("body")[0].hasClass("ie7")) {
                            f.getParents().each(function(h) {
                                if (h.id == "bodyOptions" || h.id == "hero_inventory") {
                                    h.setStyles({
                                        zIndex: 0,
                                        position: "static"
                                    })
                                }
                            })
                        }
                        return true
                    },
                    onLeave: function(f, g) {},
                    onEnter: function(f, g) {
                        if (g.id == f.item.slot || g.id.substr(0, 9) == "inventory") {
                            c.mark(g)
                        }
                    },
                    onStart: function(f) {
                        c.startDrop = true;
                        c.dragStatus = true;
                        f.addClass("whileDragging").removeClass("onHero");
                        if ($$("body")[0].hasClass("ie6") || $$("body")[0].hasClass("ie7")) {
                            f.getParents().each(function(g) {
                                if (g.id == "bodyOptions" || g.id == "hero_inventory") {
                                    g.setStyles({
                                        zIndex: 1,
                                        position: "relative"
                                    })
                                }
                            })
                        }
                    }
                })
            }
        });
        return this
    },
    mark: function(a) {
        $(a).addClass("heroMarked");
        return this
    },
    moveItem: function(c, a, b) {
        if (b) {
            this.executeMovement(c.item.id, a.id, b)
        } else {
            Element.dispose(c).inject(a)
        }
        this.resetItemDrop(c);
        c.item.placeElement = a;
        return this
    },
    moveToDrop: function(g, d, b) {
        var h = this;
        var c = null;
        var f = {
            title: "",
            text: "",
            executeAfterOkay: true,
            show: true,
            onOpen: Travian.emptyFunction,
            onOkay: Travian.emptyFunction,
            onCancel: Travian.emptyFunction,
            relativeTo: g,
            amount: g.item.amount
        };
        var a = false;
        var e = function() {
            if (!f.executeAfterOkay) {
                h.resetItemDrop(g);
                return
            }
            var k;
            if (b) {
                k = false
            } else {
                if (a == true) {
                    k = ($("amount") != undefined) ? $("amount").value : 1
                } else {
                    k = g.item.amount
                }
            }
            h.moveItem(g, d, k)
        };
        if (b != true && !this.isInventoryId(d.id) && ((g.item.instant && g.item.amount == 1) || g.item.amount > 1)) {
            if (this.options.useOneDialogTitleCallbacks[g.item.typeId]) {
                f = Object.merge(f, this.options.useOneDialogTitleCallbacks[g.item.typeId](g.item, this.options, f) || {})
            }
            a = true;
            if (f.title == "") {
                f.title = g.item.name
            }
            if (f.text == "") {
                if (g.item.instant) {
                    if (g.item.amount == 1) {
                        f.text = this.options.text.useOneDialogTitle
                    } else {
                        f.text = this.options.text.useDialogDescription
                    }
                } else {
                    f.text = this.options.text.moveDialogDescription
                }
            }
            if (f.show) {
                f.onOkay = (f.onOkay || Travian.emptyFunction).wrap(function(m, k, n) {
                    e(k, n);
                    return m(k, n)
                });
                f.onCancel = (f.onCancel || Travian.emptyFunction).wrap(function(m, k, n) {
                    h.moveToDrop(g, g.item.placeElement, true);
                    return m(k, n)
                });
                this.dialog(f)
            }
        } else {
            e()
        }
        return this
    },
    moveToMatchingPlace: function(b) {
        if (this.dragStatus == false) {
            var c = b.item.slot;
            if (b.item.placeElement == $(c)) {
                var a = this.findFirstFreeInventory();
                this.moveToDrop(b, a)
            } else {
                this.moveToDrop(b, $(c))
            }
            this.unMark(c)
        } else {
            this.dragStatus = false
        }
        return this
    },
    resetItemDrop: function(a) {
        a.setStyles({
            left: 0,
            top: 0
        });
        return this
    },
    unMark: function(a) {
        $(a).removeClass("heroMarked");
        return this
    }
});
Travian.Game.Hero.SilverExchange = new Class({
    Implements: [Options, Events],
    options: {
        exchangeOptions: {
            directionType: "SilverToGold",
            showExchangeTypeElement: null,
            inputElement: null,
            resultValueElements: [],
            inputValueElements: [],
            baseMultiplier: 1,
            maxAmount: null,
            submitButton: null,
            submitButton2: null,
            handleMaxFunction: null,
            submitButtonClickListener: null
        },
        messages: {
            notEnoughGold: null,
            autoCorrect: null,
            disabledSubmitTooltip: null,
            enabledSubmitTooltip: null,
            maxAmountTooltip: null
        },
        maxAmountChangedFunction: null
    },
    isWaiting: false,
    lastUseTimestamp: 0,
    initialize: function(a) {
        this.setOptions(a);
        if (this.options.exchangeOptions.showExchangeTypeElement) {
            this.assignListenerToShowExchangeType(this.options.exchangeOptions.showExchangeTypeElement)
        }
        if (this.options.exchangeOptions.submitButton && this.options.exchangeOptions.directionType == "SilverToGold") {
            var b = this;
            this.options.exchangeOptions.submitButton.addEvent("click", function(c) {
                b.sendAction(this);
                c.stop()
            })
        }
        if (this.options.exchangeOptions.inputElement) {
            this.assignListenerToExchangeInput(this.options.exchangeOptions.inputElement)
        }
    },
    assignListenerToExchangeInput: function(a) {
        var c = this;
        var b = function(d) {
            c.hideAllMessages();
            if (c.options.exchangeOptions.submitButton && c.options.exchangeOptions.submitButton2) {
                c.options.exchangeOptions.submitButton2.addClass("hide");
                c.options.exchangeOptions.submitButton.removeClass("hide")
            }
            return c.updateExchangeValue(d)
        };
        a.filterInput({
            regex: /^[1-9][0-9]{0,6}$/,
            success: b
        });
        return this
    },
    updateExchangeValue: function(g) {
        this.setLastUseTimestamp();
        var d = this.options.exchangeOptions;
        var b = parseInt(g, 10) || 0;
        var f = 0;
        var c = "enabledSubmitTooltip";
        var a = d.handleMaxFunction;
        var e = true;
        if (d.maxAmount !== null && "function" == typeof a && b > d.maxAmount) {
            f = a.call(this, b);
            c = "maxAmountTooltip";
            this.updateElementsTooltip(d.submitButton, "maxAmountTooltip");
            if (d.submitButton2) {
                this.updateElementsTooltip(d.submitButton2, "maxAmountTooltip")
            }
            $$("#silverExchange .exchangeType" + this.options.exchangeOptions.directionType + " input")[0].set("value", b);
            e = false
        } else {
            f = b
        }
        f = Math.floor(f * d.baseMultiplier);
        if (d.submitButton && f == 0) {
            this.disableElement(d.submitButton);
            c = "disabledSubmitTooltip";
            if (d.submitButton2) {
                this.disableElement(d.submitButton2)
            }
        } else {
            if (d.submitButton) {
                this.enableElement(d.submitButton);
                if (d.submitButton2) {
                    this.enableElement(d.submitButton2)
                }
            }
        }
        this.updateElementsTooltip(d.submitButton, c);
        if (d.submitButton2) {
            this.updateElementsTooltip(d.submitButton2, c)
        }
        this.setElementsValue(d.resultValueElements, f);
        this.setElementsValue(d.inputValueElements, b);
        return e
    },
    setElementsValue: function(c, b) {
        if (typeof(c) == "object" && (c instanceof Array)) {
            for (var a = 0; a < c.length; a++) {
                c[a].element.set(c[a].setType, b)
            }
        }
        return this
    },
    assignListenerToShowExchangeType: function(b) {
        var c = this;
        var a = function(d) {
            c.switchToExchangeType();
            d.stop()
        };
        b.addEvent("click", a);
        return this
    },
    switchToExchangeType: function() {
        this.setLastUseTimestamp();
        this.inactivateEach("#silverExchange .directionButtons .directionButton");
        this.activate(this.options.exchangeOptions.showExchangeTypeElement);
        this.inactivateEach("#silverExchange .exchangeType");
        this.activate($$("#silverExchange .exchangeType" + this.options.exchangeOptions.directionType)[0]);
        this.hideAllMessages();
        this.updateExchangeValue($$("#silverExchange .exchangeType" + this.options.exchangeOptions.directionType + " input")[0].get("value"));
        return this
    },
    inactivateEach: function(a) {
        Array.each($$(a), function(b) {
            b.removeClass("active");
            b.addClass("disabled")
        })
    },
    activate: function(a) {
        a.addClass("active");
        a.removeClass("disabled");
        return this
    },
    showMessageByKey: function(a) {
        var b = this.options.messages[a];
        this.showMessage(b);
        return this
    },
    showMessage: function(b) {
        var a = '<span class="' + b.type + '">' + b.message + "</span>";
        $$("#silverExchange .exchangeMessageLine").set("html", a);
        return this
    },
    hideAllMessages: function() {
        $$("#silverExchange .exchangeMessageLine").set("html", "<span>&nbsp;</span>");
        return this
    },
    updateElementsTooltip: function(a, b) {
        if (this.options.messages[b] && this.options.messages[b].message) {
            a.setTip(this.options.messages[b].message)
        }
    },
    sendAction: function(c) {
        var g = this;
        g.setLastUseTimestamp();
        if (this.isButtonInactive(c)) {
            return false
        }
        if (this.isWaiting === true) {
            return false
        }
        this.isWaiting = true;
        this.disableElement(c);
        var b = $$("#silverExchange .exchangeType input.text");
        b.each(this.disableElement);
        var d = new Date().getTime();
        var f = this.options.exchangeOptions.directionType;
        var e = b.filter("input[class^=silverInput]")[0].get("value");
        var a = b.filter("input[class^=goldInput]")[0].get("value");
        Travian.ajax({
            data: {
                cmd: "silverExchange",
                exTyp: f,
                s: e,
                g: a
            },
            onSuccess: function(h) {
                if (h.errorMessage) {
                    g.setError(h)
                } else {
                    var m = Math.max(0, 500 - (new Date().getTime() - d));
                    var k = function(n) {
                        if (n.message) {
                            g.isWaiting = false;
                            g.hideAllMessages();
                            g.overrideGoldAndSilver(n.oldGold, n.oldSilver, n.newGold, n.newSilver);
                            g.enableElement(c);
                            b.each(this.enableElement);
                            if (g.options.exchangeOptions.directionType == "SilverToGold") {
                                g.options.exchangeOptions.maxAmount = n.newSilver
                            } else {
                                g.options.exchangeOptions.maxAmount = n.newGold
                            }
                            if (g.options.maxAmountChangedFunction === "function") {
                                g.options.maxAmountChangedFunction.call(this, {
                                    oldGold: n.oldGold,
                                    oldSilver: n.oldSilver,
                                    newGold: n.newGold,
                                    newSilver: n.newSilver
                                })
                            }
                            g.fireEvent("changeMaxAmounts", {
                                oldGold: n.oldGold,
                                oldSilver: n.oldSilver,
                                newGold: n.newGold,
                                newSilver: n.newSilver
                            });
                            g.updateExchangeValue($$("#silverExchange .exchangeType" + g.options.exchangeOptions.directionType + " input")[0].get("value"));
                            g.showMessage(n.message);
                            var o = Travian.parseURL(window.location.href);
                            g.updateHeroAuctionContent(o.searchObject.action, {
                                filter: o.searchObject.filter,
                                page: o.searchObject.page
                            })
                        }
                    }.delay(m, g, h)
                }
            }
        });
        return this
    },
    setMaxAmounts: function(a) {
        if (this.options.exchangeOptions.directionType == "SilverToGold") {
            this.options.exchangeOptions.maxAmount = a.newSilver
        } else {
            this.options.exchangeOptions.maxAmount = a.newGold
        }
        return this
    },
    disableElement: function(a) {
        a.addClass("disabled");
        return this
    },
    enableElement: function(a) {
        a.removeClass("disabled");
        return this
    },
    isButtonInactive: function(a) {
        return a.hasClass("disabled")
    },
    overrideGoldAndSilver: function(a, d, g, f) {
        if (g === undefined && f === undefined) {
            return this
        }
        var b;
        var c;
        var e = function(k) {
            if (this.type == "gold") {
                b = parseInt(a);
                c = parseInt(g)
            } else {
                b = parseInt(d);
                c = parseInt(f)
            }
            var h = k.get("html");
            var m = new Travian.Formatter({
                forceDecimal: false
            });
            h = m.removeNonDigits(h);
            itemDiff = b - h;
            k.set("html", c + itemDiff)
        };
        $$(".ajaxReplaceableSilverAmountDiff").each(e, {
            type: "silver"
        });
        $$(".ajaxReplaceableGoldAmountDiff").each(e, {
            type: "gold"
        });
        $$(".ajaxReplaceableSilverAmount").each(function(h) {
            h.set("html", f)
        });
        $$(".ajaxReplaceableGoldAmount").each(function(h) {
            h.set("html", g)
        });
        return this
    },
    setLastUseTimestamp: function() {
        window.lastTimestampUseSilverExchange = new Date().getTime()
    },
    updateHeroAuctionContent: function(e, a) {
        var c = a || {};
        var d = {
            cmd: "heroAuctionContent",
            action: e
        };
        for (var b in c) {
            if (c.hasOwnProperty(b) && !d[b]) {
                d[b] = c[b]
            }
        }
        Travian.ajax({
            data: d,
            onSuccess: function(f) {
                if (f.html) {
                    $$("#auction").set("html", f.html);
                    Travian.TimersAndCounters.initTimers()
                }
            }
        })
    }
});
Travian.Game.Hero.HorseToggle = {
    waitingForResponse: false,
    init: function() {
        $$("#horseToggleBox > div button").addEvent("mouseover", function() {
            var a = $(this).up().up().up();
            if (a.hasClass("inactive")) {
                a.addClass("hover")
            }
        });
        $$("#horseToggleBox > div button").addEvent("mouseout", function() {
            var a = $(this).up().up().up();
            if (a.hasClass("inactive")) {
                a.removeClass("hover")
            }
        });
        $$("#horseToggleBox > div button").addEvent("click", function() {
            if (Travian.Game.Hero.HorseToggle.waitingForResponse) {
                return false
            }
            var a = $(this).up().up().up();
            if (a.hasClass("inactive")) {
                var b = $$("#horseToggleBox > div.inactive");
                var c = $$("#horseToggleBox > div.active");
                b.getElements(".button button")[0].addClass("disabled");
                Travian.Game.Hero.HorseToggle.waitingForResponse = true;
                Travian.ajax({
                    data: {
                        cmd: "horseToggle"
                    },
                    onSuccess: function(e) {
                        if (e.changed) {
                            var d = $$(".speed .powervalue .current")[0];
                            if (d) {
                                d.set("html", e.newSpeed)
                            }
                            $$("#heroSpeedValueNumber").set("html", e.newSpeed);
                            b.removeClass("inactive").addClass("active");
                            c.removeClass("active").addClass("inactive");
                            window.fireEvent("domAltered", $$("#horseToggleBox > div.inactive"));
                            window.fireEvent("domAltered", $$("#horseToggleBox > div.active"))
                        }
                        b.getElements(".button button")[0].removeClass("disabled");
                        Travian.Game.Hero.HorseToggle.waitingForResponse = false
                    }
                })
            }
        })
    }
};
Travian.Game.Hero.Properties = {};
Travian.Game.Hero.Properties.PropertyForm = new Class({
    Extends: Travian.Form,
    unloadIdentifier: null,
    onDirty: function(d) {
        var c = this.elements.saveHeroAttributes.getInput();
        var b = $$(".heroAttributesFormMessage");
        if (d) {
            b.removeClass("hide");
            c.removeClass("disabled").disabled = false;
            this.unloadIdentifier = Travian.Form.UnloadHelper.enableSecurity(this.unloadIdentifier)
        } else {
            b.addClass("hide");
            c.addClass("disabled").disabled = true;
            Travian.Form.UnloadHelper.disableSecurity(this.unloadIdentifier)
        }
        if (typeof this.elements.resetHeroAttributes !== "undefined") {
            var a = this.elements.resetHeroAttributes.getInput();
            a.disabled = a.hasClass("disabled")
        }
        return this
    },
    onClick: function(a) {
        switch (a.getName()) {
            case "saveHeroAttributes":
                this.saveHeroAttributes();
                break;
            case "resetHeroAttributes":
                this.resetHeroAttributes();
                break;
            default:
                return
        }
        return this
    },
    saveHeroAttributes: function() {
        var a = {
            cmd: "heroSetAttributes",
            resource: this.elements.resource.getValue(),
            attackBehaviour: this.elements.attackBehaviour.getValue()
        };
        if (this.elements.properties !== undefined) {
            a.attributes = this.elements.properties.getPropertyValues()
        }
        Travian.Form.UnloadHelper.disableSecurity(this.unloadIdentifier);
        Travian.ajax({
            data: a
        })
    },
    resetHeroAttributes: function() {
        Travian.ajax({
            data: {
                cmd: "heroResetAttributes"
            }
        })
    }
});
Travian.Game.Hero.PropertySetter = new Class({
    Extends: Travian.Form.Element,
    options: {
        availablePoints: 0,
        element: null,
        selectorBtnMinus: ".pointsValueSetter.sub a",
        selectorBtnPlus: ".pointsValueSetter.add a",
        elementAvailablePoints: null
    },
    getAvailablePoints: function() {
        return this.options.availablePoints - this.getSettedPoints()
    },
    getPropertyValues: function() {
        return this.options.attributes.inject({}, function(b, a) {
            b[a.getId()] = a.getSettedPoints();
            return b
        })
    },
    isDirty: function() {
        return this.getSettedPoints() > 0
    },
    initialize: function(b, a) {
        var c = this;
        this.parent(b);
        this.options = Object.append(this.options, a || {});
        this.options.attributes.each(function(d) {
            d.setPropertySetter(c)
        });
        this.options.element = $(this.options.element);
        this.options.elementAvailablePoints = $(this.options.elementAvailablePoints);
        this.update()
    },
    getSettedPoints: function() {
        return this.options.attributes.inject(0, function(b, a) {
            return b + a.getSettedPoints()
        })
    },
    update: function() {
        this.options.attributes.each(function(a) {
            a.updateButtons()
        });
        this.options.elementAvailablePoints.set("html", this.getAvailablePoints());
        this.onChange();
        return this
    }
});
Travian.Game.Hero.PropertySetter.Attribute = new Class({
    Implements: [Options],
    options: {
        id: null,
        element: null,
        value: null,
        usedPoints: null,
        maxPoints: null,
        elementBtnMinus: ".pointsValueSetter.sub a",
        elementBtnPlus: ".pointsValueSetter.add a",
        elementInput: ".points input",
        elementProgressBar: ".progress .bar.setted",
        elementValue: ".current .value"
    },
    propertySetter: null,
    settedPoints: 0,
    addPoint: function(a) {
        if (typeOf(a) == "null") {
            a = 1
        }
        if (a < 0) {
            a = 0
        }
        return this.setSettedPoints(this.getSettedPoints() + a)
    },
    calculateValue: function() {
        return 0
    },
    getId: function() {
        return this.options.id
    },
    getMaxPoints: function() {
        return this.options.maxPoints
    },
    getPropertySetter: function() {
        if (this.propertySetter == null) {
            throw "missing propertySetter in Travian.Game.Hero.PropertySetter.Attribute"
        }
        return this.propertySetter
    },
    getSettedPoints: function() {
        return this.settedPoints
    },
    getTotalPoints: function() {
        return this.settedPoints + this.options.usedPoints
    },
    initialize: function(b) {
        var f = this;
        this.setOptions(b);
        this.options.element = $(this.options.element);
        this.options.elementBtnMinus = this.options.element.down(this.options.elementBtnMinus);
        this.options.elementBtnPlus = this.options.element.down(this.options.elementBtnPlus);
        this.options.elementInput = this.options.element.down(this.options.elementInput);
        this.options.elementProgressBar = this.options.element.down(this.options.elementProgressBar);
        this.options.elementValue = this.options.element.down(this.options.elementValue);
        var h = null;
        var a = false;
        var c = function(k, m) {
            m.stop();
            if (a == false) {
                f[k + "Point"]()
            }
            a = false;
            return false
        };
        var e = function(k) {
            k.stop();
            if (h) {
                clearInterval(h)
            }
            k.target.removeClass("click");
            return false
        };
        var g = function(k, m) {
            m.stop();
            if (h) {
                clearInterval(h)
            }
            a = true;
            m.target.addClass("click");
            $(document.body).removeEvent("mouseup", e);
            $(document.body).addEvent("mouseup", e);
            f[k + "Point"]();
            h = f[k + "Point"].periodical(200, f);
            return false
        };
        var d = function(n) {
            var k = null;
            var m = (n.wheel > 0 ? 1 : -1);
            n.stop();
            if (h) {
                clearInterval(h)
            }
            f.setSettedPoints(f.getSettedPoints() + m);
            if (m > 0) {
                k = f.options.elementBtnPlus;
                f.options.elementBtnMinus.removeClass("click")
            } else {
                k = f.options.elementBtnMinus;
                f.options.elementBtnPlus.removeClass("click")
            }
            k.addClass("click");
            h = (function() {
                k.removeClass("click")
            }).delay(100);
            return false
        };
        this.options.elementBtnMinus.addEvents({
            click: c.curry("sub"),
            mousedown: g.curry("sub"),
            mousewheel: d
        });
        this.options.elementBtnPlus.addEvents({
            click: c.curry("add"),
            mousedown: g.curry("add"),
            mousewheel: d
        });
        this.options.elementInput.addEvents({
            change: function(m) {
                var k = parseInt(f.options.elementInput.value);
                if (isNaN(k)) {
                    k = f.getTotalPoints()
                }
                f.setSettedPoints(k - f.options.usedPoints)
            },
            mousewheel: d
        })
    },
    setPropertySetter: function(a) {
        this.propertySetter = a;
        return this
    },
    setSettedPoints: function(b) {
        b = parseInt(b);
        if (isNaN(b)) {
            b = this.settedPoints
        }
        if (b < 0) {
            b = 0
        }
        if (b > this.getMaxPoints() - this.options.usedPoints) {
            b = this.getMaxPoints() - this.options.usedPoints
        }
        var a = this.getPropertySetter().getAvailablePoints();
        if (this.settedPoints < b && a < b - this.settedPoints) {
            b = this.settedPoints + a
        }
        this.settedPoints = b;
        return this.update()
    },
    subPoint: function(a) {
        if (typeOf(a) == "null") {
            a = 1
        }
        if (a < 0) {
            a = 0
        }
        return this.setSettedPoints(this.getSettedPoints() - a)
    },
    update: function() {
        this.options.elementValue.set("html", this.calculateValue());
        this.options.elementInput.value = this.options.usedPoints + this.getSettedPoints();
        this.options.elementProgressBar.setStyles({
            width: Math.max(0, Math.min(100, Math.round(100 / Math.min(this.getMaxPoints() + 4, 100) * this.getSettedPoints()))) + "%"
        });
        this.getPropertySetter().update();
        return this
    },
    updateButtons: function() {
        if (this.getTotalPoints() >= this.getMaxPoints() || this.getPropertySetter().getAvailablePoints() == 0) {
            this.options.elementBtnPlus.addClass("disabled")
        } else {
            this.options.elementBtnPlus.removeClass("disabled")
        }
        if (this.getSettedPoints() == 0) {
            this.options.elementBtnMinus.addClass("disabled")
        } else {
            this.options.elementBtnMinus.removeClass("disabled")
        }
        return this
    }
});
Travian.Game.Hero.PropertySetter.Attribute.Power = new Class({
    Extends: Travian.Game.Hero.PropertySetter.Attribute,
    options: {
        valueOfItems: 0,
        valueBonus: 0
    },
    calculateValue: function() {
        return 100 + this.getTotalPoints() * this.options.valueBonus + this.options.valueOfItems
    }
});
Travian.Game.Hero.PropertySetter.Attribute.OffBonus = new Class({
    Extends: Travian.Game.Hero.PropertySetter.Attribute,
    calculateValue: function() {
        return Math.round(this.getTotalPoints() * 0.2 * 10) / 10 + "%"
    }
});
Travian.Game.Hero.PropertySetter.Attribute.DefBonus = new Class({
    Extends: Travian.Game.Hero.PropertySetter.Attribute,
    calculateValue: function() {
        return Math.round(this.getTotalPoints() * 0.2 * 10) / 10 + "%"
    }
});
Travian.Game.Hero.PropertySetter.Attribute.ProductionPoints = new Class({
    Extends: Travian.Game.Hero.PropertySetter.Attribute,
    calculateValue: function() {
        return this.getTotalPoints()
    },
    options: {
        pointWorth: [6, 20, 20, 20, 20]
    },
    elementResources: [],
    getPossibleBonusProductionForResource: function(a) {
        if (a === 0) {
            return this.calculateValue() * this.options.pointWorth[0] * Travian.Game.speed
        }
        if (a <= 4) {
            return this.calculateValue() * this.options.pointWorth[a] * Travian.Game.speed
        }
        return 0
    },
    initialize: function(a) {
        var d = $("setResource");
        var c = Object.append(this.options, a || {});
        this.parent(c);
        if (d) {
            for (var b = 0; b <= 4; b++) {
                this.elementResources[b] = d.down('label[for="resourceHero' + b + '"] .current')
            }
        }
    },
    update: function() {
        var a = this;
        this.elementResources.each(function(c, b) {
            if (c) {
                c.set("html", a.getPossibleBonusProductionForResource(b))
            }
        });
        return this.parent()
    }
});
Travian.Game.Hero.PropertySetter.Attribute.RegenBonus = new Class({
    Extends: Travian.Game.Hero.PropertySetter.Attribute,
    calculateValue: function() {
        return Math.round(this.getTotalPoints() * 0.5 * 10) / 10 + "%"
    }
});
Travian.Game.Vid = new Class({
    active: null,
    initialize: function(b) {
        var a = this;
        a.active = b;
        a.setActive(b);
        a.showDescription(b);
        $$(".container .vid").addEvents({
            mouseover: function(c) {
                a.highlight($(c.target).get("id"))
            },
            mouseout: function(c) {
                a.unhighlight()
            },
            click: function(c) {
                a.setActive($(c.target).get("id"))
            }
        })
    },
    highlight: function(a) {
        $$(".container ." + a).addClass(a + "Highlight");
        this.showDescription(a)
    },
    unhighlight: function() {
        $$(".container .vid").removeClass("vid1Highlight").removeClass("vid2Highlight").removeClass("vid3Highlight");
        this.showDescription(this.active)
    },
    showDescription: function(a) {
        $$(".container .description.").hide();
        $$(".container .description." + a).show()
    },
    setActive: function(a) {
        this.active = a;
        $$('form input[name="vid"]').set("value", a.substring(3, 4));
        $$(".container .vid").removeClass("vid1Active").removeClass("vid2Active").removeClass("vid3Active");
        $$(".container ." + a).addClass(a + "Active")
    }
});
Travian.Game.Sector = new Class({
    active: null,
    initialize: function(b) {
        var a = this;
        a.setActive(b);
        $$("#sector .map .sector .highlight").addEvents({
            mouseover: function(c) {
                var d = $(c.target).up(".sector").get("id");
                if (d != a.active && !$(c.target).hasClass("disabled")) {
                    $(c.target).addClass("hover")
                }
            },
            mouseout: function(c) {
                $(c.target).removeClass("hover")
            },
            click: function(c) {
                if (!$(c.target).hasClass("disabled")) {
                    var d = $(c.target).up(".sector").get("id");
                    $(c.target).removeClass("hover");
                    a.setActive(d)
                }
            }
        });
        $$('#sector form select[name="sector"]').addEvent("change", function(c) {
            var d = $(c.target).get("value");
            a.setActive(d)
        })
    },
    show: function(a) {
        $$(".vid .description.").hide();
        $$(".vid .description." + a).show()
    },
    setActive: function(b) {
        this.active = b;
        $$("#sector .map .sector .highlight").removeClass("active");
        $$("#sector .map .sector." + b + " .highlight").addClass("active");
        var a = $$('#sector form select[name="sector"]');
        if (a.get("value") != b) {
            a.set("value", b)
        }
    }
});
Travian.Game.WelcomeScreen = {
    dialog: null,
    show: function() {
        Travian.Game.WelcomeScreen.dialog = new Travian.Dialog.Ajax({
            data: {
                cmd: "welcomeScreen"
            },
            context: "welcomeScreen",
            buttonOk: false,
            darkOverlay: true,
            buttonCancel: false,
            overlayCancel: false
        })
    },
    showIntroductionScreen: function() {
        Travian.Game.WelcomeScreen.dialog = new Travian.Dialog.Ajax({
            data: {
                cmd: "welcomeScreen",
                introduction: true
            },
            context: "introductionScreen",
            buttonOk: false,
            darkOverlay: true,
            buttonCancel: true,
            overlayCancel: true,
            cssClass: "white introductionScreen"
        })
    },
    bindEvents: function() {
        var a = $$(".welcomeScreen")[0];
        $$(".welcomeScreen .startPlaying").addEvent("click", function() {
            Travian.Game.WelcomeScreen.dialog.close()
        });
        $$(".welcomeScreen .previewVideoContainer").addEvent("click", function() {
            var b;
            if (!a.hasClass("heroItemsEnabled")) {
                b = '<iframe width="568" height="320" src="https://www.youtube.com/embed/bOtcpFmtO04?rel=0&amp;showinfo=0&amp;autoplay=1" frameborder="0" allowfullscreen></iframe>'
            } else {
                b = '<iframe width="568" height="320" src="https://www.youtube.com/embed/fkcrmCTv0d4?rel=0&amp;showinfo=0&amp;autoplay=1" frameborder="0" allowfullscreen></iframe>'
            }
            $$(".welcomeScreen .previewVideoContainer").set("html", b);
            $$(".welcomeScreen .welcomeScreenHeader .overlay").addClass("active")
        });
        $$(".welcomeScreen .readMore, .welcomeScreen .readLess").addEvent("click", function() {
            Travian.Game.WelcomeScreen.toggleState()
        });
        $$(".welcomeScreen .feature").addEvent("click", function() {
            Travian.Game.WelcomeScreen.extend()
        })
    },
    toggleState: function() {
        var a = $$(".welcomeScreen")[0];
        if (a.hasClass("extended")) {
            Travian.Game.WelcomeScreen.collapse()
        } else {
            Travian.Game.WelcomeScreen.extend()
        }
    },
    extend: function() {
        var a = $$(".welcomeScreen")[0];
        if (!a.hasClass("extended")) {
            a.addClass("extended")
        }
        setTimeout(function() {
            Travian.Game.WelcomeScreen.dialog.updatePosition(500)
        }, 1000)
    },
    collapse: function() {
        var a = $$(".welcomeScreen")[0];
        if (a.hasClass("extended")) {
            a.removeClass("extended")
        }
        setTimeout(function() {
            Travian.Game.WelcomeScreen.dialog.updatePosition(500)
        }, 1000)
    }
};
Travian.Game.Activation = new Class({
    arrowShapes: {
        tribe1: "",
        tribe2: "",
        tribe3: "",
        tribe4: "",
        tribe5: ""
    },
    basicShape: "M10 10 V230 H[ARROW_POSITION] l20 20 l20 -20 H530 V10 Z",
    initialize: function() {
        var a = this;
        a.createArrowShapes();
        a.updateArrowPositions();
        a.bindEvents()
    },
    bindEvents: function() {
        var a = this;
        $$('#tribeSelectors input[name="vid"]').addEvent("change", function() {
            a.updateArrowPositions()
        })
    },
    createArrowShapes: function() {
        var c = this;
        var a = $$("#tribeSelectors label")[0].getComputedSize({
            styles: ["margin"]
        });
        var g = a.totalWidth;
        var f = $$('#tribeSelectors input[name="vid"]').length;
        var e = $$("#tribeSelectors")[0].getSize().x;
        var d = (e - f * g) / 2;
        for (var b = 0; b < f; b++) {
            c.arrowShapes["tribe" + (b + 1)] = c.basicShape.replace("[ARROW_POSITION]", d + b * g + g / 3.3333)
        }
    },
    updateArrowPositions: function() {
        var c = this;
        var b = $$('#tribeSelectors input[name="vid"]');
        if ($$("body.rtl").length > 0) {
            console.log("rtl detected!");
            b.reverse()
        }
        for (var a = 0; a < b.length; a++) {
            if (b[a].checked === true) {
                TweenLite.to($$("#presentation svg .inner, #presentation svg .outer"), 0.25, {
                    morphSVG: c.arrowShapes["tribe" + (a + 1)]
                })
            }
        }
    }
});
Travian.Game.Overlay = {
    elementsForOverlay: [{
        groupID: "mainPage",
        x1: null,
        x2: null,
        y1: null,
        y2: null,
        offsetX1: 0,
        offsetX2: 7,
        offsetY1: 0,
        offsetY2: 0,
        members: [{
            selector: "#logo",
            x1: null,
            x2: null,
            y1: null,
            y2: null
        }]
    }, {
        groupID: "villageSwitch",
        x1: null,
        x2: null,
        y1: null,
        y2: null,
        offsetX1: 0,
        offsetX2: 5,
        offsetY1: -5,
        offsetY2: -5,
        helperOffsetRTLX2: 4,
        members: [{
            selector: "#n1",
            x1: null,
            x2: null,
            y1: null,
            y2: null
        }, {
            selector: "#n2",
            x1: null,
            x2: null,
            y1: null,
            y2: null
        }]
    }, {
        groupID: "mainNavigation",
        x1: null,
        x2: null,
        y1: null,
        y2: null,
        offsetX1: 0,
        offsetX2: 8,
        offsetY1: -5,
        offsetY2: 0,
        helperOffsetRTLX2: -2,
        members: [{
            selector: "#n3",
            x1: null,
            x2: null,
            y1: null,
            y2: null
        }, {
            selector: "#n4",
            x1: null,
            x2: null,
            y1: null,
            y2: null
        }, {
            selector: "#n5",
            x1: null,
            x2: null,
            y1: null,
            y2: null
        }, {
            selector: "#n6",
            x1: null,
            x2: null,
            y1: null,
            y2: null
        }]
    }, {
        groupID: "premiumFeatures",
        x1: null,
        x2: null,
        y1: null,
        y2: null,
        offsetX1: 0,
        offsetX2: 0,
        offsetY1: -25,
        offsetY2: -7,
        helperOffsetY1: 1,
        helperOffsetY2: -1,
        helperOffsetRTLX2: 14,
        members: [{
            selector: "#n7",
            x1: null,
            x2: null,
            y1: null,
            y2: null
        }, {
            selector: "#goldSilver",
            x1: null,
            x2: null,
            y1: null,
            y2: null
        }]
    }, {
        groupID: "outOfGame",
        x1: null,
        x2: null,
        y1: null,
        y2: null,
        offsetX1: 70,
        offsetX2: 70,
        offsetY1: 0,
        offsetY2: 0,
        helperOffsetRTLX2: -71,
        members: [{
            selector: "#outOfGame",
            x1: null,
            x2: null,
            y1: null,
            y2: null
        }]
    }, {
        groupID: "villageResources",
        x1: null,
        x2: null,
        y1: null,
        y2: null,
        offsetX1: 0,
        offsetX2: 10,
        offsetY1: -5,
        offsetY2: 10,
        helperOffsetY1: -4,
        helperOffsetRTLX2: -6,
        members: [{
            selector: "#stockBarWarehouseWrapper",
            x1: null,
            x2: null,
            y1: null,
            y2: null
        }, {
            selector: "#stockBarResource1",
            x1: null,
            x2: null,
            y1: null,
            y2: null
        }, {
            selector: "#stockBarResource2",
            x1: null,
            x2: null,
            y1: null,
            y2: null
        }, {
            selector: "#stockBarResource3",
            x1: null,
            x2: null,
            y1: null,
            y2: null
        }]
    }, {
        groupID: "villageCrop",
        x1: null,
        x2: null,
        y1: null,
        y2: null,
        offsetX1: 0,
        offsetX2: 10,
        offsetY1: -5,
        offsetY2: 10,
        helperOffsetY1: -4,
        helperOffsetRTLX2: -6,
        members: [{
            selector: "#stockBarGranaryWrapper",
            x1: null,
            x2: null,
            y1: null,
            y2: null
        }, {
            selector: "#stockBarResource4",
            x1: null,
            x2: null,
            y1: null,
            y2: null
        }, {
            selector: "#stockBarFreeCropWrapper",
            x1: null,
            x2: null,
            y1: null,
            y2: null
        }]
    }, {
        groupID: "sidebarBoxHero",
        x1: null,
        x2: null,
        y1: null,
        y2: null,
        offsetX1: 0,
        offsetX2: 7,
        offsetY1: -75,
        offsetY2: 12,
        members: [{
            selector: "#sidebarBoxHero",
            x1: null,
            x2: null,
            y1: null,
            y2: null
        }]
    }, {
        groupID: "sidebarBoxAlliance",
        x1: null,
        x2: null,
        y1: null,
        y2: null,
        offsetX1: 0,
        offsetX2: 7,
        offsetY1: -14,
        offsetY2: 0,
        members: [{
            selector: "#sidebarBoxAlliance",
            x1: null,
            x2: null,
            y1: null,
            y2: null
        }, {
            selector: "#sidebarBoxAllianceNoNews",
            x1: null,
            x2: null,
            y1: null,
            y2: null
        }]
    }, {
        groupID: "sidebarBoxInfobox",
        x1: null,
        x2: null,
        y1: null,
        y2: null,
        offsetX1: 0,
        offsetX2: 7,
        offsetY1: -3,
        offsetY2: 0,
        members: [{
            selector: "#sidebarBoxInfobox",
            x1: null,
            x2: null,
            y1: null,
            y2: null
        }]
    }, {
        groupID: "sidebarBoxLinklist",
        x1: null,
        x2: null,
        y1: null,
        y2: null,
        offsetX1: 0,
        offsetX2: 7,
        offsetY1: -20,
        offsetY2: 0,
        members: [{
            selector: "#sidebarBoxLinklist",
            x1: null,
            x2: null,
            y1: null,
            y2: null
        }]
    }, {
        groupID: "sidebarBoxActiveVillage",
        x1: null,
        x2: null,
        y1: null,
        y2: null,
        offsetX1: 0,
        offsetX2: 7,
        offsetY1: -20,
        offsetY2: 10,
        members: [{
            selector: "#sidebarBoxActiveVillage",
            x1: null,
            x2: null,
            y1: null,
            y2: null
        }]
    }, {
        groupID: "sidebarBoxVillagelist",
        x1: null,
        x2: null,
        y1: null,
        y2: null,
        offsetX1: 0,
        offsetX2: 7,
        offsetY1: -16,
        offsetY2: 0,
        members: [{
            selector: "#sidebarBoxVillagelist",
            x1: null,
            x2: null,
            y1: null,
            y2: null
        }]
    }, {
        groupID: "sidebarBoxQuestmaster",
        x1: null,
        x2: null,
        y1: null,
        y2: null,
        offsetX1: 0,
        offsetX2: 7,
        offsetY1: -121,
        offsetY2: 0,
        members: [{
            selector: "#sidebarBoxQuestmaster",
            x1: null,
            x2: null,
            y1: null,
            y2: null
        }]
    }, {
        groupID: "sidebarBoxDailyquests",
        x1: null,
        x2: null,
        y1: null,
        y2: null,
        offsetX1: 0,
        offsetX2: 7,
        offsetY1: -15,
        offsetY2: 0,
        helperOffsetY1: -15,
        members: [{
            selector: "#sidebarBoxDailyquests",
            x1: null,
            x2: null,
            y1: null,
            y2: null
        }]
    }, {
        groupID: "sidebarBoxWheelOfFortune",
        x1: null,
        x2: null,
        y1: null,
        y2: null,
        offsetX1: 0,
        offsetX2: 7,
        offsetY1: -10,
        offsetY2: 0,
        members: [{
            selector: "#sidebarBoxWheelOfFortune",
            x1: null,
            x2: null,
            y1: null,
            y2: null
        }]
    }],
    texts: null,
    canvas: null,
    readingDirection: "ltr",
    readingDirectionFrom: "left",
    readingDirectionTo: "right",
    scrollOffsetX: 0,
    onClose: Travian.emptyFunction,
    createOverlay: function() {
        var e = this;
        var d = jQuery(document);
        var c = d.width();
        var a = d.height();
        var b = jQuery('<div id="overlayUI" style="width: ' + c + "px; height: " + a + 'px;"><canvas id="overlayUICanvas" width="' + c + '" height="' + a + '"></canvas><div class="overlayContent"><div class="overlaySubcontent"><p class="overlayTitle">' + e.texts.defaultTitle + '</p><p class="overlayDescription">' + e.texts.defaultDescription + '</p><a class="overlayCloseLink" href="#" onclick="Travian.Game.Overlay.closeOverlay();">' + e.texts.closeLink + "</a></div></div>").fadeOut(1);
        jQuery("body").prepend(b);
        b.fadeIn(200);
        jQuery(e.elementsForOverlay).each(function(f, g) {
            e.addDarkBackground(g);
            jQuery(g.members).each(function(i, h) {
                jQuery(h.selector).addClass("overlayUIAffected")
            })
        });
        e.scrollOffsetX = (e.readingDirection === "rtl" ? Math.abs(c - jQuery(window).width()) : 0)
    },
    handleOverlay: function() {
        var e = this;
        var a = jQuery("#overlayUI");
        var g = jQuery("#overlayUICanvas");
        this.canvas = g[0].getContext("2d");
        var c = a.width();
        var i = a.height();
        this.canvas.width = c;
        this.canvas.height = i;
        e.drawCanvas(0, 0);
        var f = a.find(".overlayTitle");
        var h = a.find(".overlayDescription");
        var d = a.find(".overlayCloseLink");
        var b;
        a.on("mousemove.travianOverlay", function(j) {
            e.drawCanvas(j.pageX, j.pageY);
            b = false;
            jQuery(e.elementsForOverlay).each(function(k, l) {
                if (l.x1 !== null) {
                    if (j.pageX >= l.x1 && j.pageX <= l.x2 && j.pageY >= l.y1 && j.pageY <= l.y2) {
                        b = true;
                        f.html(e.texts[l.groupID + "Title"]);
                        h.html(e.texts[l.groupID + "Description"]);
                        d.addClass("hide")
                    }
                }
            });
            if (!b) {
                f.html(e.texts.defaultTitle);
                h.html(e.texts.defaultDescription);
                d.removeClass("hide")
            }
        })
    },
    drawCanvas: function(b, a) {
        var c = this;
        c.canvas.clearRect(0, 0, c.canvas.width, c.canvas.height);
        this.canvas.beginPath();
        this.canvas.fillStyle = "rgba(0,0,0,0.85)";
        this.canvas.fillRect(0, 0, this.canvas.width, this.canvas.height);
        this.canvas.closePath();
        jQuery(this.elementsForOverlay).each(function(d, e) {
            if (e.x1 !== null) {
                if (b >= e.x1 && b <= e.x2 && a >= e.y1 && a <= e.y2) {
                    c.canvas.clearRect(e.x1 + c.scrollOffsetX, e.y1, (e.x2 - e.x1), (e.y2 - e.y1));
                    c.canvas.strokeStyle = "rgba(255,255,255,0.3)"
                } else {
                    c.canvas.strokeStyle = "rgba(255,255,255,1)"
                }
                c.canvas.lineWidth = 1;
                c.canvas.strokeRect(e.x1 + c.scrollOffsetX, e.y1, (e.x2 - e.x1), (e.y2 - e.y1))
            }
        })
    },
    getElementDimensions: function() {
        var a, e, c, b, f, d;
        jQuery(this.elementsForOverlay).each(function(g, h) {
            c = h.x1;
            b = h.x2;
            f = h.y1;
            d = h.y2;
            jQuery(h.members).each(function(i, j) {
                a = jQuery(j.selector);
                if (a.length > 0) {
                    e = a.offset();
                    e.top = parseInt(e.top);
                    e.left = parseInt(e.left);
                    j.x1 = e.left;
                    j.x2 = e.left + a.width();
                    j.y1 = e.top;
                    j.y2 = e.top + a.height();
                    if (c === null || j.x1 < c) {
                        c = j.x1
                    }
                    if (b === null || j.x2 > b) {
                        b = j.x2
                    }
                    if (f === null || j.y1 < c) {
                        f = j.y1
                    }
                    if (d === null || j.y2 > d) {
                        d = j.y2
                    }
                }
            });
            if (c !== null && b !== null && f !== null && d !== null) {
                h.x1 = c - 4 + h.offsetX1;
                h.x2 = b - 4 + h.offsetX2;
                h.y1 = f + h.offsetY1;
                h.y2 = d + h.offsetY2
            }
        })
    },
    addDarkBackground: function(g) {
        var f = this;
        var e, h;
        var b = (this.readingDirection === "rtl" && typeof g.helperOffsetRTLX1 !== "undefined" ? g.helperOffsetRTLX1 : 0);
        var a = (this.readingDirection === "rtl" && typeof g.helperOffsetRTLX2 !== "undefined" ? g.helperOffsetRTLX2 : 0);
        var c = (this.readingDirection === "rtl" ? 1 : 0);
        jQuery(g.members).each(function(i, j) {
            h = jQuery(j.selector);
            if (h.length > 0) {
                if (typeof e === "undefined") {
                    e = h
                } else {
                    if (f.readingDirection === "ltr" && h.offset().left < e.offset().left) {
                        e = h
                    }
                    if (f.readingDirection === "rtl" && h.offset().left > e.offset().left) {
                        e = h
                    }
                }
            }
        });
        if (typeof e !== "undefined" && e.length > 0) {
            var d = jQuery('<div class="overlayUIBackgroundHelper"></div>').css({
                "background-color": "rgba(0,0,0,0.85)",
                position: "absolute",
                width: (g.x2 - g.x1),
                height: (g.y2 - g.y1),
                "margin-left": (typeof g.helperOffsetX1 !== "undefined" ? g.helperOffsetX1 : g.offsetX1) - 4 + b,
                "margin-right": (typeof g.helperOffsetX2 !== "undefined" ? g.helperOffsetX2 : g.offsetX2) + a - 10 * c,
                "margin-top": (typeof g.helperOffsetY1 !== "undefined" ? g.helperOffsetY1 : g.offsetY1),
                "margin-bottom": (typeof g.helperOffsetY2 !== "undefined" ? g.helperOffsetY2 : g.offsetY2),
                "z-index": -1
            }).fadeOut(1);
            e.prepend(d);
            d.fadeIn(200)
        }
    },
    removeAllBackgroundHelpers: function() {
        jQuery(".overlayUIBackgroundHelper").fadeOut(200);
        jQuery(".overlayUIAffected").removeClass("overlayUIAffected");
        setTimeout(function() {
            jQuery(".overlayUIBackgroundHelper").remove()
        }, 250)
    },
    handleResize: function() {
        var a = this;
        jQuery(window).on("resize.travianOverlay", function() {
            a.closeOverlay();
            setTimeout(function() {
                a.openOverlay()
            }, 300)
        })
    },
    openOverlay: function() {
        var a = this;
        Travian.ajax({
            data: {
                cmd: "overlay"
            },
            onSuccess: function(b) {
                a.texts = b.texts;
                if (jQuery("body").hasClass("rtl")) {
                    a.readingDirection = "rtl";
                    a.readingDirectionFrom = "right";
                    a.readingDirectionTo = "left"
                }
                a.getElementDimensions();
                a.createOverlay();
                a.handleOverlay();
                a.handleResize()
            }
        })
    },
    closeOverlay: function() {
        var a = jQuery("#overlayUI");
        a.fadeOut(200);
        this.removeAllBackgroundHelpers();
        setTimeout(function() {
            a.remove()
        }, 250);
        jQuery(window).off("resize.travianOverlay");
        a.off("mousemove.travianOverlay");
        jQuery(this.elementsForOverlay).each(function(b, c) {
            c.x1 = null;
            c.x2 = null;
            c.y1 = null;
            c.y2 = null
        });
        Travian.Game.Overlay.onClose()
    }
};

Travian.Game.Highlight = new Class({
    Implements: [Options],
    options: {
        cssHighlighted: "highlighted on",
        element: null,
        renderer: "rectangle",
        rendererOptions: {}
    },
    active: false,
    renderer: null,
    activate: function() {
        if (this.active === false) {
            this.active = true;
            this.renderer.activate();
            this.getElement().addClass(this.options.cssHighlighted)
        }
        return this
    },
    deactivate: function() {
        if (this.active === true) {
            this.active = false;
            this.getElement().removeClass(this.options.cssHighlighted);
            this.renderer.deactivate()
        }
        return this
    },
    getElement: function() {
        return this.options.element
    },
    initialize: function(a) {
        var b = this;
        this.setOptions(a);
        this.options.element = $(this.options.element);
        if (this.options.element === null) {
            throw "missing element for highlighting!"
        }
        if (typeof Travian.Game.Highlight.Renderer[this.options.renderer.capitalize()] === "undefined") {
            throw 'unknown renderer "' + this.options.renderer.capitalize() + '" defined!'
        }
        this.renderer = new Travian.Game.Highlight.Renderer[this.options.renderer.capitalize()](this.options.rendererOptions, this)
    },
    toggle: function() {
        if (this.active) {
            return this.deactivate()
        }
        return this.activate()
    }
});
Travian.Game.Highlight.Renderer = new Class({
    Implements: [Options],
    options: {},
    parentContainer: null,
    activate: function() {
        return this
    },
    deactivate: function() {
        return this
    },
    getElement: function() {
        return this.parentContainer.getElement()
    },
    initialize: function(a, b) {
        this.parentContainer = b;
        this.setOptions(a);
        if (this.parentContainer === null) {
            throw "missing parent container of type Travian.Game.Highlight"
        }
    }
});
Travian.Game.Highlight.Renderer.Rectangle = (function() {
    var a = function(f) {
        var k = f.getElement().getCoordinates();
        if (f._lastCoordinates && f._lastCoordinates.left == k.left && f._lastCoordinates.top == k.top && f._lastCoordinates.width == k.width && f._lastCoordinates.height == k.height && f._lastCoordinates.right == k.right && f._lastCoordinates.bottom == k.bottom) {
            return
        }
        var c = f.getElementLeft();
        var m = f.getElementTopLeft();
        var h = f.getElementTop();
        var d = f.getElementTopRight();
        var n = f.getElementRight();
        var g = f.getElementBottomLeft();
        var b = f.getElementBottom();
        var e = f.getElementBottomRight();
        if (Browser.name == "firefox") {
            k.left += 1
        }
        c.show().setStyles({
            left: k.left - c.getSize().x,
            top: k.top,
            height: k.height
        });
        m.show().setStyles({
            left: k.left - m.getSize().x,
            top: k.top - m.getSize().y
        });
        h.show().setStyles({
            left: k.left,
            top: k.top - h.getSize().y,
            width: k.width
        });
        d.show().setStyles({
            left: k.right,
            top: k.top - d.getSize().y
        });
        n.show().setStyles({
            left: k.right,
            top: k.top,
            height: k.height
        });
        e.show().setStyles({
            left: k.right,
            top: k.bottom
        });
        b.show().setStyles({
            left: k.left,
            top: k.bottom,
            width: k.width
        });
        g.show().setStyles({
            left: k.left - g.getSize().x,
            top: k.bottom
        });
        f._lastCoordinates = k
    };
    return new Class({
        Extends: Travian.Game.Highlight.Renderer,
        elements: {
            left: null,
            topLeft: null,
            top: null,
            topRight: null,
            right: null,
            bottomLeft: null,
            bottom: null,
            bottomRight: null
        },
        invalidTypes: ["area"],
        options: {
            cssClassLeft: "highlighted rectangle left",
            cssClassTopLeft: "highlighted rectangle top left",
            cssClassTop: "highlighted rectangle top",
            cssClassTopRight: "highlighted rectangle top right",
            cssClassRight: "highlighted rectangle right",
            cssClassBottomLeft: "highlighted rectangle bottom left",
            cssClassBottom: "highlighted rectangle bottom",
            cssClassBottomRight: "highlighted rectangle bottom right",
            zIndex: 6000
        },
        timer: null,
        activate: function() {
            clearInterval(this.timer);
            a(this);
            this.timer = a.periodical(50, null, [this]);
            return this
        },
        deactivate: function() {
            clearInterval(this.timer);
            this.getElementLeft().hide();
            this.getElementTopLeft().hide();
            this.getElementTop().hide();
            this.getElementTopRight().hide();
            this.getElementRight().hide();
            this.getElementBottomLeft().hide();
            this.getElementBottom().hide();
            this.getElementBottomRight().hide();
            this._lastCoordinates = null;
            return this
        },
        getElementBottom: function() {
            if (this.elements.bottom === null) {
                this.elements.bottom = $(new Element("div", {
                    "class": this.options.cssClassBottom
                })).hide().setStyles({
                    position: "absolute",
                    left: 0,
                    top: 0,
                    zIndex: this.options.zIndex
                });
                document.body.insert({
                    bottom: this.elements.bottom
                })
            }
            return this.elements.bottom
        },
        getElementBottomLeft: function() {
            if (this.elements.bottomLeft === null) {
                this.elements.bottomLeft = $(new Element("div", {
                    "class": this.options.cssClassBottomLeft
                })).hide().setStyles({
                    position: "absolute",
                    left: 0,
                    top: 0,
                    zIndex: this.options.zIndex
                });
                document.body.insert({
                    bottom: this.elements.bottomLeft
                })
            }
            return this.elements.bottomLeft
        },
        getElementBottomRight: function() {
            if (this.elements.bottomRight === null) {
                this.elements.bottomRight = $(new Element("div", {
                    "class": this.options.cssClassBottomRight
                })).hide().setStyles({
                    position: "absolute",
                    left: 0,
                    top: 0,
                    zIndex: this.options.zIndex
                });
                document.body.insert({
                    bottom: this.elements.bottomRight
                })
            }
            return this.elements.bottomRight
        },
        getElementLeft: function() {
            if (this.elements.left === null) {
                this.elements.left = $(new Element("div", {
                    "class": this.options.cssClassLeft
                })).hide().setStyles({
                    position: "absolute",
                    left: 0,
                    top: 0,
                    zIndex: this.options.zIndex
                });
                document.body.insert({
                    bottom: this.elements.left
                })
            }
            return this.elements.left
        },
        getElementTop: function() {
            if (this.elements.top === null) {
                this.elements.top = $(new Element("div", {
                    "class": this.options.cssClassTop
                })).hide().setStyles({
                    position: "absolute",
                    left: 0,
                    top: 0,
                    zIndex: this.options.zIndex
                });
                document.body.insert({
                    bottom: this.elements.top
                })
            }
            return this.elements.top
        },
        getElementTopLeft: function() {
            if (this.elements.topLeft === null) {
                this.elements.topLeft = $(new Element("div", {
                    "class": this.options.cssClassTopLeft
                })).hide().setStyles({
                    position: "absolute",
                    left: 0,
                    top: 0,
                    zIndex: this.options.zIndex
                });
                document.body.insert({
                    bottom: this.elements.topLeft
                })
            }
            return this.elements.topLeft
        },
        getElementTopRight: function() {
            if (this.elements.topRight === null) {
                this.elements.topRight = $(new Element("div", {
                    "class": this.options.cssClassTopRight
                })).hide().setStyles({
                    position: "absolute",
                    left: 0,
                    top: 0,
                    zIndex: this.options.zIndex
                });
                document.body.insert({
                    bottom: this.elements.topRight
                })
            }
            return this.elements.topRight
        },
        getElementRight: function() {
            if (this.elements.right === null) {
                this.elements.right = $(new Element("div", {
                    "class": this.options.cssClassRight
                })).hide().setStyles({
                    position: "absolute",
                    left: 0,
                    top: 0,
                    zIndex: this.options.zIndex
                });
                document.body.insert({
                    bottom: this.elements.right
                })
            }
            return this.elements.right
        },
        initialize: function(b, c) {
            this.parent(b, c);
            if (this.invalidTypes.indexOf(this.getElement().tagName.toLowerCase()) != -1) {
                throw "invalid tag type for rectangle-highlighting!"
            }
        }
    })
})();
Travian.Game.Highlight.Renderer.Image = new Class({
    Extends: Travian.Game.Highlight.Renderer,
    elements: {
        background: null,
        placeholder: null
    },
    options: {
        borderSurround: 4,
        cssBackground: "highlighted background"
    },
    validTypes: ["div", "span", "a", "li", "img", "input", "button"],
    activate: function() {
        var c = this.getElement();
        var b = c.getSize();
        var a = c.hasClass("colorLayer") ? 2 : 0;
        c.insert({
            before: this.getElementBackground().setStyles({
                position: "absolute",
                left: c.offsetLeft - this.options.borderSurround - a,
                right: "auto",
                top: c.offsetTop - this.options.borderSurround - a,
                width: b.x + 2 * this.options.borderSurround,
                height: b.y + 2 * this.options.borderSurround
            }).show().dispose()
        });
        return this
    },
    deactivate: function() {
        this.getElementBackground().hide();
        return this
    },
    getElementBackground: function() {
        if (this.elements.background === null) {
            var a = this.getElement();
            this.elements.background = $(a.cloneNode(false)).hide().addClass(this.options.cssBackground);
            a.insert({
                before: this.elements.background
            })
        }
        return this.elements.background
    },
    initialize: function(a, b) {
        this.parent(a, b);
        if (this.validTypes.indexOf(this.getElement().tagName.toLowerCase()) === -1) {
            throw "invalid tag type for image-highlighting!"
        }
    }
});
Travian.AdventureList = new Class({
    openDurationsCalulator: function() {
        $("durationCalculations").toggleClass("hide");
        if (!$("durationCalculations").hasClass("hide")) {
            this.calculateDurations()
        }
    },
    calculateDurations: function() {
        var a = $("adventureListForm");
        var b = $("changeVillage").value;
        Travian.ajax({
            data: {
                cmd: "calculateDurationsForAdventure",
                adventureKids: $("adventureListForm").select("input[name*=adventureKid]").inject([], function(d, c) {
                    d.push(c.value);
                    return d
                }),
                currentKidAndDid: b,
                originalWalkTimes: $("adventureListForm").select("input[name*=adventureWalktimeOriginalVillage]").inject([], function(d, c) {
                    d.push(c.value);
                    return d
                })
            },
            onSuccess: function(c) {
                if (c.noAdventures == false) {
                    Object.each(c.responseArray, function(e, d) {
                        $(d).set("html", e)
                    })
                }
            }
        })
    }
});
Travian.Game.Marketplace = new Class({
    merchantsAvailable: 0,
    capacityPerMerchant: 0,
    merchantCapacity: 0,
    merchantsMax: 0,
    initialize: function(a) {
        this.merchantsAvailable = Math.max(a.merchantsAvailable, 0);
        this.capacityPerMerchant = a.capacityPerMerchant;
        this.merchantCapacity = this.merchantsAvailable * this.capacityPerMerchant;
        this.autoCompleter = a.autoCompleter;
        this.merchantsMax = a.merchantsMax;
        this.updateAutoCompleter()
    },
    refresh: function(a) {
        this.merchantsAvailable = Math.max(a, 0);
        this.merchantCapacity = this.merchantsAvailable * this.capacityPerMerchant;
        $("merchantCapacityValue").set("html", this.merchantCapacity);
        $$(".merchantsAvailable").set("html", this.merchantsAvailable);
        this.visualizeMerchantCapacity()
    },
    enableAllLinks: function() {
        var a;
        for (a = 1; a <= 4; a++) {
            linkToUpdate = $("addRessourcesLink" + a);
            linkToUpdate.removeClass("notClickable");
            linkToUpdate.disabled = false
        }
    },
    enableAllInputFields: function() {
        var a = 0;
        for (a = 1; a < 5; a++) {
            $("r" + a).removeClass("disabled");
            $("r" + a).readOnly = 0
        }
    },
    disableAllLinks: function() {
        var a;
        for (a = 1; a <= 4; a++) {
            linkToUpdate = $("addRessourcesLink" + a);
            linkToUpdate.addClass("notClickable");
            linkToUpdate.disabled = true
        }
    },
    disableAllInputFields: function() {
        var a = 0;
        for (a = 1; a < 5; a++) {
            $("r" + a).addClass("disabled");
            $("r" + a).readOnly = 1
        }
    },
    setNotice: function(a) {
        if (a.notice && a.formular) {
            $("note").set("html", a.notice);
            $$(".destination").set("html", a.formular);
            this.enableAllLinks();
            this.enableAllInputFields();
            var b = 1;
            for (b = 1; b < 5; b++) {
                $("r" + b).set("value", "")
            }
            if (a.button) {
                $("button").set("html", a.button)
            }
            $$(".run_dropdown").removeClass("hide")
        }
    },
    setError: function(a) {
        if (a.errorMessage) {
            $("prepareError").set("html", a.errorMessage);
            $("note").set("html", "")
        }
    },
    sendRessources: function() {
        var a = this;
        Travian.ajax({
            data: {
                cmd: "prepareMarketplace",
                t: $("t").get("value"),
                id: $("id").get("value"),
                a: $("a").get("value"),
                sz: $("sz").get("value"),
                kid: $("kid").get("value"),
                c: $("c").get("value"),
                x2: $("x2") ? $("x2").get("value") : 1,
                r1: $("r1").get("value"),
                r2: $("r2").get("value"),
                r3: $("r3").get("value"),
                r4: $("r4").get("value")
            },
            onSuccess: function(b) {
                if (b.errorMessage) {
                    a.setError(b)
                } else {
                    if (b.notice) {
                        $$(".run_dropdown").removeClass("hide");
                        $$("div .destination").set("html", b.formular);
                        a.setNotice(b);
                        a.reloadMarketPlace();
                        Travian.TimersAndCounters.initResourcesCounters();
                        a.updateAutoCompleter()
                    }
                }
            }
        })
    },
    prepare: function() {
        var b = this;
        var a = $("marketSend");
        x2 = 1;
        if ($("x2")) {
            if ($("x2").get("type") == "checkbox") {
                x2 = $("x2").get("checked") ? 2 : 1
            } else {
                x2 = $("x2").get("value")
            }
        }
        Travian.ajax({
            data: {
                cmd: "prepareMarketplace",
                r1: $("r1").get("value"),
                r2: $("r2").get("value"),
                r3: $("r3").get("value"),
                r4: $("r4").get("value"),
                dname: $("enterVillageName").get("value"),
                x: $("xCoordInput").get("value"),
                y: $("yCoordInput").get("value"),
                id: $("id").get("value"),
                t: $("t").get("value"),
                x2: x2
            },
            onSuccess: function(c) {
                if (c.errorMessage) {
                    b.setError(c)
                } else {
                    if (c.formular) {
                        b.disableAllLinks();
                        b.disableAllInputFields();
                        $$(".destination").set("html", c.formular);
                        $$(".run_dropdown").addClass("hide");
                        $("prepareError").set("html", "");
                        $("note").set("html", "");
                        $("r1").focus()
                    }
                }
                if (c.button) {
                    $("button").set("html", '<div id="prepareError" class="error">' + $("prepareError").get("html") + "</div>" + c.button + '<div class="clear"></div>')
                }
                return false
            }
        })
    },
    goBack: function() {
        var a = this;
        this.enableAllLinks();
        this.enableAllInputFields();
        Travian.ajax({
            data: {
                cmd: "marketPlaceGoBack",
                kid: $("kid").get("value"),
                x2: $("x2") ? $("x2").get("value") : 1,
                dname: $("dname") ? $("dname").get("value") : ""
            },
            onSuccess: function(b) {
                $$("div .destination").set("html", b.formular);
                $$("div #button").set("html", '<div id="prepareError" class="error"></div>' + b.button + '<div class="clear"></div>');
                $$(".run_dropdown").removeClass("hide");
                a.updateAutoCompleter()
            }
        })
    },
    reloadMarketPlace: function() {
        var a = this;
        Travian.ajax({
            data: {
                cmd: "reloadMarketplace"
            },
            onSuccess: function(b) {
                $("merchantsOnTheWayFormular").set("html", b.merchantsOnTheWay);
                Travian.Game.Layout.updateResources(b.storage);
                a.refresh(b.merchantsAvailable)
            }
        })
    },
    visualizeMerchantCapacity: function() {
        this.merchantCapacity = this.merchantsAvailable * this.capacityPerMerchant;
        var a = this.summarizeInput();
        this.setSelectedRessourcesInfo(a);
        this.setNotEnoughMerchantsError(a);
        this.updateLinks()
    },
    validateAndVisualizeMerchantCapacity: function(a) {
        this.validateResources(a);
        this.visualizeMerchantCapacity()
    },
    validateResources: function(d) {
        var b = this.getValue(d);
        var e = this.clipToStorageMaximum(d, b);
        var a = b + e;
        var c = b;
        if (b > a) {
            c = a
        }
        this.setValue(d, c)
    },
    validateTradeRouteResources: function(a) {
        var c = Math.max(0, this.getValue(a));
        this.setValue(a, c);
        var f = this.summarizeInput();
        var b = this.merchantsMax * this.capacityPerMerchant;
        var g = {};
        var e = $("tradeSaveButton");
        var d = $("tradeRouteError");
        if (f > b) {
            g = {
                MERCHANTS_NEEDED: Math.ceil(f / this.capacityPerMerchant),
                MERCHANTS_AVAILABLE: this.merchantsMax
            };
            d.set("html", "{notEnoughMerchants}".translate().substitute(g, /\\?\[([^\[\]]+)\]/g));
            d.addClass("error");
            e.disabled = 1;
            e.addClass("disabled")
        } else {
            d.set("html", "");
            d.removeClass("error");
            e.disabled = 0;
            e.removeClass("disabled")
        }
    },
    validateTradeRouteResourcesSanity: function() {
        for (var a = 1; a <= 4; a++) {
            var b = Math.max(0, this.getValue(a));
            this.setValue(a, b)
        }
        var d = this.summarizeInput();
        if (d == 0) {
            var c = $("tradeRouteError");
            c.set("html", "{resourcesNumberInvalid}".translate());
            c.addClass("error");
            return false
        }
        return true
    },
    rearrangeButtons: function() {},
    furtherMerchantsAvailable: function() {
        var b = this.summarizeInput();
        var a = this.merchantCapacity - b;
        if (a >= 0) {
            return true
        } else {
            return false
        }
    },
    updateLinks: function() {
        var a = null;
        var c = 0;
        var b;
        for (b = 1; b <= 4; b++) {
            a = $("addRessourcesLink" + b);
            c = this.getValueToAddToRessources(b);
            if (c == 0) {
                a.addClass("notClickable")
            } else {
                a.removeClass("notClickable")
            }
        }
    },
    addRessources: function(c) {
        if ($("addRessourcesLink" + c).disabled) {
            return
        }
        var b = this.getValueToAddToRessources(c);
        var a = this.getValue(c);
        if (b != 0) {
            this.setValue(c, b + a)
        }
        this.visualizeMerchantCapacity()
    },
    getValueToAddToRessources: function(d) {
        var a = 0;
        var c = this.summarizeInput();
        var b = this.merchantCapacity - c;
        if (b > 0) {
            if (b < this.capacityPerMerchant) {
                a = b
            } else {
                if (b >= this.capacityPerMerchant) {
                    a = this.capacityPerMerchant
                }
            }
        } else {
            if (b == 0) {
                a = 0
            } else {
                a = b
            }
        }
        a = this.clipToStorageMaximum(d, a);
        return a
    },
    clipToStorageMaximum: function(d, b) {
        var c = this.getStorageFor(d);
        var a = this.getValue(d);
        if (b > 0) {
            b = Math.min(b, (c - a))
        } else {
            if ((a + b) > c) {
                b = c - a
            }
        }
        return b
    },
    getStorageFor: function(a) {
        var b = "l" + (a);
        return window.resources.storage[b]
    },
    setValue: function(b, a) {
        var c = parseInt(a);
        if (!isNaN(c)) {
            $("r" + b).set("value", Math.max(c, 0))
        }
    },
    setSelectedRessourcesInfo: function(a) {
        $("sumResources").set("html", a);
        if (a > this.merchantCapacity) {
            $("sumResources").addClass("notEnoughMerchants")
        } else {
            $("sumResources").removeClass("notEnoughMerchants")
        }
    },
    setNotEnoughMerchantsError: function(d) {
        var g = {};
        var e = this.getNeededMerchants(d);
        var f = jQuery("#prepareError");
        var c = null;
        jQuery("#merchantsNeededNumber").html(e);
        if (jQuery(".prepare").length > 0) {
            c = jQuery(".prepare").first()
        }
        if (e > this.merchantsAvailable) {
            g = {
                MERCHANTS_NEEDED: e,
                MERCHANTS_AVAILABLE: this.merchantsAvailable
            };
            f.addClass("error").html(Travian.Helpers.substitute(Travian.Translation.translate("{notEnoughMerchants}"), g, /\\?\[([^\[\]]+)\]/g));
            c.addClass("disabled").attr("disabled", true);
            jQuery("#note").html("");
            jQuery("#merchantsNeeded").addClass("error");
            jQuery(".merchantCapacity").addClass("error");
            jQuery("#sumResources").addClass("error")
        } else {
            jQuery("#merchantsNeeded").removeClass("error");
            jQuery(".merchantCapacity").removeClass("error");
            jQuery("#sumResources").removeClass("error");
            if (f.length > 0) {
                f.html("")
            } else {
                var b = jQuery("#button").html();
                jQuery("#button").html('<div id="prepareError" class="error"></div>' + b + '<div class="clear"></div>')
            }
            c.removeClass("disabled").attr("disabled", false)
        }
    },
    getNeededMerchants: function(a) {
        return Math.ceil(a / this.capacityPerMerchant)
    },
    getValue: function(b) {
        var a = parseInt($("r" + b).get("value"));
        if (!isNaN(a)) {
            return a
        }
        return 0
    },
    summarizeInput: function() {
        var b = 0;
        for (var a = 1; a <= 4; a++) {
            id = "r".concat(a);
            b += this.getValue(a)
        }
        return b
    },
    updateAutoCompleter: function() {
        var a = "enterVillageName";
        if (this.autoCompleter && $(a) !== null) {
            new Travian.Game.AutoCompleter.VillageName(a)
        }
        return this
    }
});
Travian.Game.Marketplace.getPreferences = function() {
    var c = Travian.Game.Preferences.get("tradeRoutesOrder");
    var b, a;
    if (c != null) {
        b = c.charAt(0);
        a = c.charAt(1)
    } else {
        b = "2";
        a = "a"
    }
    return {
        sortingColumn: b,
        sortingOrder: a
    }
};
Travian.Game.Marketplace.toggleSorting = function(c) {
    var b = Travian.Game.Marketplace.getPreferences();
    var a;
    if (c == b.sortingColumn) {
        a = b.sortingColumn + (b.sortingOrder == "a" ? "d" : "a")
    } else {
        a = c + "a"
    }
    Travian.Game.Preferences.set("tradeRoutesOrder", a, true)
};
Travian.Game.Marketplace.onLoad = function() {
    var a = Travian.Game.Marketplace.getPreferences();
    $$("a.sorting#sorting" + a.sortingColumn).addClass(a.sortingOrder == "a" ? "asc" : "desc")
};
Travian.Game.Marketplace.ExchangeResources = {
    overall: null,
    max123: null,
    max4: null,
    initialize: function(b, a) {
        this.max123 = b;
        this.max4 = a
    },
    calculateRest: function() {
        resObj = document.getElementsByName("m2[]");
        this.overall = 0;
        for (i = 0; i < resObj.length; i++) {
            var a = "";
            for (j = 0; j < resObj[i].value.length; j++) {
                if ((resObj[i].value.charAt(j) >= "0") && (resObj[i].value.charAt(j) <= "9")) {
                    a = a + resObj[i].value.charAt(j)
                }
            }
            if (a == "") {
                a = "0";
                newRes = 0;
                resObj[i].value = ""
            } else {
                newRes = parseInt(a) || 0;
                if ((i < 3) && (newRes > this.max123)) {
                    newRes = this.max123
                }
                if ((i == 3) && (newRes > this.max4)) {
                    newRes = this.max4
                }
                resObj[i].value = newRes
            }
            dif = newRes - (parseInt(document.getElementById("org" + i).innerHTML) || 0);
            newHTML = dif;
            if (dif > 0) {
                newHTML = "+" + dif
            }
            document.getElementById("diff" + i).innerHTML = newHTML;
            this.overall += newRes
        }
        document.getElementById("newsum").innerHTML = this.overall;
        rest = (parseInt(document.getElementById("org4").innerHTML) || 0) - this.overall;
        document.getElementById("remain").innerHTML = rest;
        this.testSum()
    },
    fillup: function(a) {
        resObj = document.getElementsByName("m2[]");
        if (a < 3) {
            resObj[a].value = this.max123
        } else {
            resObj[a].value = this.max4
        }
        this.calculateRest()
    },
    portion: function(c) {
        var b = [];
        var a = $$("input[name=m2\\[\\]]");
        Array.each(a, function(f, e) {
            b.push(f.get("value"))
        });
        var d = this;
        Travian.ajax({
            data: {
                cmd: "exchangeResources",
                did: c,
                desired: b
            },
            onSuccess: function(e) {
                Array.each(a, function(g, f) {
                    g.set("value", e.distributed[f]);
                    $$("table#npc #org" + f).set("text", e.resources[f]);
                    $$("table#npc input#m1\\[" + f + "\\]]").set("value", e.resources[f])
                });
                $$("table#npc #org4").set("text", Array.sum(e.resources));
                d.calculateRest()
            }
        })
    },
    testSum: function() {
        if (document.getElementById("remain").innerHTML != 0) {
            document.getElementById("submitText").style.display = "block";
            document.getElementById("submitButton").style.display = "none"
        } else {
            document.getElementById("submitText").style.display = "none";
            document.getElementById("submitButton").style.display = "block"
        }
        Travian.adjustButtonDisableState()
    },
    toggleTradeRoutes: function(c, b) {
        var a = b.get("checked") ? 1 : 0;
        Travian.ajax({
            data: {
                cmd: "toggleTradeRoutes",
                routeId: c,
                enabled: a
            }
        });
        return false
    }
};
Travian.Game.RallyPoint = {
    initialize: function(a) {
        a.getElements("input[type=text]").each(function(b) {
            b.addEvents({
                keydown: function(c) {
                    var d = c.event.keyCode,
                        f = c.event.ctrlKey,
                        e = c.event.metaKey;
                    if (d == 8 || d == 46 || (d == 65 && (f === true || e === true)) || (d == 67 && (f === true || e === true)) || (d == 88 && (f === true || e === true)) || (d == 86 && (f === true || e === true)) || (d >= 35 && d <= 39) || (d == 9) || (d == 13)) {
                        return true
                    }
                    if (!(((d >= 48 && d <= 57) || (d >= 96 && d <= 105)))) {
                        c.preventDefault()
                    }
                },
                input: function(d) {
                    var c = parseInt(b.get("value").replace(/^0+/, "")) || 0;
                    if (isNaN(c) || c === 0 || c < 0) {
                        c = ""
                    }
                    b.set("value", c)
                }
            })
        })
    }
};
Travian.Game.AllianceMembers = new Class({
    Extends: Travian.Dialog.Ajax,
    options: {
        data: {},
        saveOnUnload: false
    },
    initialize: function(a) {
        this.parent(a);
        this.request()
    },
    request: function() {
        var a = this;
        Travian.ajax({
            data: this.options.data,
            onSuccess: function(b) {
                if (b.close || b.html == "") {
                    a.close();
                    Travian.WindowManager.closeAllWindows();
                    window.location.reload()
                } else {
                    a.setContent(b.html).setTitle(b.title).setInfoIcon(b.infoIcon).updateCssClass(b.cssClass);
                    a.show()
                }
            },
            onFailure: function(c, b) {
                $("playerNotePopupError").innerHTML = b
            }
        });
        return this
    },
    isAjax: function() {
        return true
    },
    reload: function() {
        this.request()
    }
});
Travian.Game.AllianceDonation = {
    dialog: null,
    bonusSelected: false,
    getDonationParams: function(a) {
        this.calculateSum(a);
        return {
            bid: $("bid").value,
            did: $("did").value,
            r1: $(a + "1").value,
            r2: $(a + "2").value,
            r3: $(a + "3").value,
            r4: $(a + "4").value,
            amount: this.toNaturalNumber($(a + "Sum").innerText)
        }
    },
    wasGoldUsed: function(a) {
        return ["donate_gold", "donate_gold_confirm"].indexOf(a) != -1
    },
    calculateSum: function(a) {
        var c = 0;
        for (var b = 1; b <= 4; b++) {
            c += this.toNaturalNumber($(a + b).value)
        }
        $(a + "Sum").innerText = c.toString();
        this.checkAndChangeScalingPopup(a, c);
        this.checkButtonState(a)
    },
    updateBID: function(a) {
        $("bid").value = a
    },
    checkButtonState: function(b) {
        var g = this;
        var c = $(b + "Sum").innerText != 0;
        var f = false;
        var h = document.getElementsByName("bonus");
        for (var e = 0; e < h.length; e++) {
            if (h[e].checked) {
                f = true;
                $("bonusNotSelectedMessage").hide();
                this.updateBID(h[e].value);
                break
            }
        }
        var k = $("limitReached").value == 1;
        var d = c && f && !k;
        if (!f) {
            this.updateBID(null)
        }
        g.bonusSelected = f;
        if ($("gold").value == 1) {
            var a = $("canTriple").value != 0;
            if (d && a) {
                $("donate_gold").removeClass("disabled")
            } else {
                $("donate_gold").addClass("disabled")
            }
        }
        if (d) {
            $("donate_green").removeClass("disabled")
        } else {
            $("donate_green").addClass("disabled")
        }
    },
    fillUp: function(b, c, a) {
        if (b.disabled != true) {
            c = Math.max(c, 0);
            b.value = c;
            this.checkAndChange(b, c, a)
        }
    },
    checkAndChange: function(c, d, a) {
        var b = Math.min(this.toNaturalNumber(c.value), d);
        if (c.value !== b.toString()) {
            c.value = b
        }
        this.calculateSum(a)
    },
    toNaturalNumber: function(a) {
        a = parseInt(a);
        if (isNaN(a)) {
            a = 0
        }
        if (a < 0) {
            a = 0
        }
        return a
    },
    donate: function(a, c, b) {
        var d = $("donate_gold_confirm");
        if (c != "donate_gold") {
            $$("#contributeButtons button").addClass("disabled");
            if (d) {
                d.addClass("disabled")
            }
        }
        $$(".bonus-donation-response").removeClass("visible");
        Travian.ajax({
            data: {
                cmd: "donateResources",
                params: b,
                action: c
            },
            onSuccess: function(e) {
                if (e.html !== "") {
                    Travian.Game.AllianceDonation.showDialog(e.html)
                } else {
                    Travian.Game.AllianceDonation.closeDialog()
                }
                var g = Travian.Game.AllianceDonation.wasGoldUsed(c);
                var f = Travian.Game.AllianceDonation.getResourceAnimationSpeed(b.amount, g);
                if (e.newTotal > 0) {
                    Travian.Game.AllianceDonation.refreshDailyDonation(e.newTotal, c, b.amount, g);
                    Travian.Game.AllianceDonation.refreshProgressBarTitle(e.limit - e.newTotal)
                }
                if (e.reload === true) {
                    Travian.Game.AllianceDonation.countDownResources(b.amount, false);
                    setTimeout(function() {
                        Travian.Game.AllianceDonation.refreshDonationForm(e.limitReached);
                        $$(".bonus-donation-response")[0].innerHTML = e.responseText;
                        Travian.Game.AllianceDonation.refreshAllianceBonusOverview()
                    }, f)
                }
                if (e.goldChanged === true) {
                    Travian.Game.Layout.updateGold()
                }
                if (e.resourcesChanged === true) {
                    Travian.Game.Layout.updateResources()
                }
            },
            onFailure: function(e) {
                Travian.Game.AllianceDonation.checkButtonState("donate");
                Travian.Game.AllianceDonation.showErrorDialog(e.responseText);
                return false
            }
        })
    },
    closeDialog: function() {
        if (this.dialog !== null) {
            this.dialog.close()
        }
    },
    showDialog: function(a) {
        var b = this;
        this.closeDialog();
        this.dialog = new Travian.Dialog({
            buttonOk: false,
            type: Travian.Dialog.DIALOG_TYPE_MODAL,
            onClose: function() {
                b.checkButtonState("donate")
            }
        });
        this.dialog.setContent(a);
        this.dialog.show()
    },
    showErrorDialog: function(a) {
        var c = this;
        var b = new Travian.Dialog({
            buttonOk: true,
            type: Travian.Dialog.DIALOG_TYPE_MODAL,
            onClose: function() {
                c.closeDialog();
                c.refreshDonationForm(true);
                c.refreshDonationLimitBar();
                c.refreshAllianceBonusOverview()
            }
        });
        b.setContent(a);
        b.show()
    },
    showScaleDown: function(b) {
        var a = document.getElementById(b).innerHTML;
        this.showDialog(a);
        this.scaleDown("scale")
    },
    scaleDown: function(a) {
        var d = parseInt($("leftResources").value);
        var f = parseInt($("multiplicationFactor").value);
        d = parseInt(d / f);
        var g = 0;
        var c = new Array(5);
        var h = new Array(5);
        for (var e = 1; e <= 4; e++) {
            h[e] = this.toNaturalNumber($(a + e).value);
            c[e] = h[e];
            g += c[e]
        }
        if (g == 0) {
            this.closeDialog()
        }
        if (d >= g) {
            this.closeDialog()
        }
        var k = d / g;
        g = 0;
        for (e = 1; e <= 4; e++) {
            if (c[e] > 0) {
                c[e] = Math.floor(c[e] * k);
                g += c[e]
            }
        }
        var b = d - g;
        while (b > 0) {
            for (e = 1; e <= 4 && b > 0; e++) {
                if (h[e] > 0) {
                    c[e]++;
                    b--
                }
            }
        }
        for (e = 1; e <= 4; e++) {
            $(a + e).value = c[e];
            $("donate" + e).value = c[e]
        }
        $(a + "Sum").innerText = d.toString();
        $("donateSum").innerText = d.toString();
        this.checkAndChangeScalingPopup(a, d);
        setTimeout(function() {
            Travian.Game.AllianceDonation.changeScaleButton(true)
        }, 250)
    },
    checkAndChangeScalingPopup: function(b, a) {
        var e = $(b + "SumMultiplied");
        var d = a;
        if (e) {
            d = this.toNaturalNumber(e.dataset.multiplicator) * a;
            e.innerText = d.toString()
        }
        if (b === "scale") {
            var c = this.toNaturalNumber($("resourcesUntilLimit").dataset.limit);
            this.changeScaleButton((c >= d))
        }
    },
    changeScaleButton: function(a) {
        if (a) {
            $("buttonScale").hide();
            $("scale").addClass("disabled");
            $$(".bonus-scaleDown").addClass("scaled");
            $("buttonDonate").show()
        } else {
            $("buttonDonate").hide();
            $("scale").removeClass("disabled");
            $$(".bonus-scaleDown").removeClass("scaled");
            $("buttonScale").show()
        }
    },
    donateScaled: function(c, a) {
        var b = this.getDonationParams(a);
        this.closeDialog();
        this.donate(a, c.id, b)
    },
    refreshGoldConfirmation: function() {
        var a = $("donate_gold");
        a.addClass("disabled");
        var b = Travian.Game.AllianceDonation.getDonationParams("donate");
        Travian.Game.AllianceDonation.donate("donate", a.id, b)
    },
    refreshDonationForm: function(c) {
        var a = $("contributionForm"),
            b = this;
        if (!a) {
            return
        }
        setTimeout(function() {
            $$("#contributionForm input:checked").set("checked", false)
        }, 100);
        Travian.ajax({
            data: {
                cmd: "donationForm"
            },
            onSuccess: function(d) {
                a.innerHTML = d.form;
                window.fireEvent("domAltered", $$("#contributionForm"));
                if (c) {
                    Travian.TimersAndCounters.init()
                }
                $$(".bonus-donation-response").addClass("visible");
                b.initBonusIcons();
                Travian.Tip.refresh();
                b.bonusSelected = false;
                b.initContributeDisabledAction()
            }
        })
    },
    refreshDonationLimitBar: function() {
        var a = $("myDailyContributionLimit");
        if (!a) {
            return
        }
        a.addClass("hidden");
        Travian.ajax({
            data: {
                cmd: "donationLimitBar"
            },
            onSuccess: function(b) {
                a.innerHTML = b.limitBar;
                window.fireEvent("domAltered", $$("#myDailyContributionLimit"));
                Travian.Tip.refresh();
                a.removeClass("hidden")
            }
        })
    },
    refreshAllianceBonusOverview: function() {
        var a = $("allianceBonusOverview"),
            b = this;
        if (!a) {
            return
        }
        Travian.ajax({
            data: {
                cmd: "allianceBonusOverview"
            },
            onSuccess: function(c) {
                a.innerHTML = c.overview;
                b.initBonusOverview();
                Travian.Tip.refresh()
            }
        })
    },
    refreshDailyDonation: function(c, k, p, h) {
        var e = $("donatedToday");
        var n = $("dailyContributionTitleText");
        var t = $("dailyContributionTitleArrow");
        var a = parseInt(e.value);
        var g = parseInt($("dailyLimit").value);
        var m = Math.min(100, ((c / g) * 100));
        var o = "lightGreen";
        if (k == "donate_gold" || k == "donate_gold_confirm") {
            o = "gold"
        }
        t.addClass(o);
        var f = this.getResourceAnimationSpeed(p, h);
        var q = 20;
        p = h ? p * 3 : p;
        var s = Math.round(p / q);
        var d = f / q;
        t.style.transition = "width " + f + "ms, opacity 500ms";
        t.style.width = m.toString() + "%";
        var b = 1;
        var r = setInterval(function() {
            a = a + s;
            if (a < c) {
                n.innerHTML = " " + a + " / " + g + " "
            }
            if (b == q) {
                n.innerHTML = " " + c + " / " + g + " ";
                t.removeClass(o);
                clearInterval(r)
            }
            b++
        }, d);
        if (m == 100) {
            $$(".bonus-donation-response").addClass("white");
            t.style.width = "100%";
            $("limitReached").value = 1;
            setTimeout(function() {
                t.addClass("complete");
                n.addClass("complete").removeClass("white");
                $$(".bonus-donation-response").addClass("complete")
            }, f + 500)
        }
        e.value = c
    },
    countDownResources: function(g, c) {
        var b = this.getResourceAnimationSpeed(g, c);
        var h = 20;
        var d = [];
        var f = [];
        $$("#contributeButtons button").addClass("disabled");
        var e = 0;
        $$(".resourceInput input").each(function(n) {
            var o = parseInt(n.value);
            d[e] = o;
            var m = o / h;
            if (m < 1) {
                m = 1
            }
            f[e] = m;
            e++
        });
        var a = 1;
        var k = setInterval(function() {
            for (var m = 0; m < d.length; m++) {
                var o = d[m] - f[m];
                if (o > 0) {
                    d[m] = o;
                    $$(".resourceInput input")[m].value = parseInt(o)
                }
            }
            if (a == h) {
                for (var n = 0; n < d.length; n++) {
                    $$(".resourceInput input")[n].value = 0
                }
                clearInterval(k)
            }
            a++
        }, b / h)
    },
    getResourceAnimationSpeed: function(f, a) {
        var e = 500;
        var b = 2000;
        if (a) {
            f = f * 3
        }
        var c = parseInt($("dailyLimit").value);
        var d = e + f * (b - e) / c;
        d = Math.max(e, Math.min(b, d));
        return d
    },
    initBonusIcons: function() {
        $$("#contributionBox #bonusSelection .bonusButtonRound").removeEvent("click");
        $$("#contributionBox #bonusSelection .bonusButtonRound").addEvent("click", function(c) {
            c.preventDefault();
            var b = $(this),
                a = "bonusBox" + b.attributes["data-index"].value;
            if ($(a).down(".bonusInfo").hasClass("hide")) {
                $(a).down("button").fireEvent("click")
            }(new Fx.Scroll(window, {
                duration: 250,
                onComplete: function() {}
            })).toElement(a)
        })
    },
    initBonusOverview: function() {
        var a = $$(".bonusCollapse");
        var b;
        try {
            b = JSON.decode(Travian.Game.Preferences.get("allianceBonusesOverview") || "{}")
        } catch (c) {
            b = {}
        }
        if (a) {
            a.forEach(function(d) {
                d.addEvent("click", function(m) {
                    var h = $$(this).get("ref");
                    var k = h[0];
                    var f = $$(this).getChildren("img.openedClosedSwitch")[0];
                    if (k && f) {
                        var g = $$(".bonusInfo." + k);
                        Travian.toggleSwitch(g[0], f[0]);
                        b[k] = b[k] ? !b[k] : true;
                        Travian.Game.Preferences.set("allianceBonusesOverview", JSON.stringify(b))
                    }
                })
            })
        }
    },
    playLevelUpRewardAnimation: function(f, b, c, a) {
        var d = $("backgroundOverlay");
        if (!d) {
            Travian.Game.Layout.toggleBackgroundOverlay();
            d = $("backgroundOverlay");
            var e = $("bonusLevelUpRewardTemplate").innerHTML;
            d.appendHTML(e, "top");
            $$(".bonusLevelUpReward .bonusRepresentation > div")[0].addClass(f);
            $$(".bonusLevelUpReward .banner .description p")[0].set("html", c);
            $$(".bonusLevelUpReward .banner .description p")[1].set("html", a);
            setTimeout(function() {
                $$(".stoneDisplay")[0].addClass("visible");
                $$(".stoneDisplayHeader")[0].addClass("visible");
                $$(".banner")[0].addClass("visible");
                $$(".swords")[0].addClass("visible").addClass("locked");
                setTimeout(function() {
                    $$(".bonusRepresentation .stage1")[0].addClass("visible");
                    setTimeout(function() {
                        $$(".bonusRepresentation .glow")[0].addClass("visible");
                        setTimeout(function() {
                            $$(".bonusRepresentation .stage2")[0].addClass("visible");
                            setTimeout(function() {
                                $$(".bonusRepresentation .stage1")[0].removeClass("visible");
                                $$(".bonusRepresentation .glow")[0].removeClass("visible");
                                $$(".banner")[0].addClass("enlarged");
                                setTimeout(function() {
                                    $$(".stoneDisplayHeader .level1 .glow")[0].addClass("visible");
                                    $$(".stoneDisplayHeader .level1 .star")[0].addClass("visible");
                                    setTimeout(function() {
                                        $$(".stoneDisplayHeader .level1 .glow")[0].removeClass("visible")
                                    }, 150);
                                    if (b >= 2) {
                                        setTimeout(function() {
                                            $$(".stoneDisplayHeader .level2 .glow")[0].addClass("visible");
                                            $$(".stoneDisplayHeader .level2 .star")[0].addClass("visible");
                                            setTimeout(function() {
                                                $$(".stoneDisplayHeader .level2 .glow")[0].removeClass("visible")
                                            }, 150);
                                            if (b >= 3) {
                                                setTimeout(function() {
                                                    $$(".stoneDisplayHeader .level3 .glow")[0].addClass("visible");
                                                    $$(".stoneDisplayHeader .level3 .star")[0].addClass("visible");
                                                    setTimeout(function() {
                                                        $$(".stoneDisplayHeader .level3 .glow")[0].removeClass("visible")
                                                    }, 250);
                                                    if (b >= 4) {
                                                        setTimeout(function() {
                                                            $$(".stoneDisplayHeader .level4 .glow")[0].addClass("visible");
                                                            $$(".stoneDisplayHeader .level4 .star")[0].addClass("visible");
                                                            setTimeout(function() {
                                                                $$(".stoneDisplayHeader .level4 .glow")[0].removeClass("visible")
                                                            }, 250);
                                                            if (b >= 5) {
                                                                setTimeout(function() {
                                                                    $$(".stoneDisplayHeader .level5 .glow")[0].addClass("visible");
                                                                    $$(".stoneDisplayHeader .level5 .star")[0].addClass("visible");
                                                                    setTimeout(function() {
                                                                        $$(".stoneDisplayHeader .level5 .glow")[0].removeClass("visible")
                                                                    }, 250)
                                                                }, 500)
                                                            }
                                                        }, 500)
                                                    }
                                                }, 500)
                                            }
                                        }, 500)
                                    }
                                    setTimeout(function() {
                                        $$(".bonusRepresentation .glow")[0].addClass("step2");
                                        $$(".bonusRepresentation .glow")[0].addClass("visible");
                                        setTimeout(function() {
                                            $$(".bonusRepresentation .glow")[0].removeClass("visible");
                                            $$(".banner")[0].removeClass("enlarged");
                                            $$(".bonusLevelUpReward")[0].addClass("faded");
                                            setTimeout(function() {
                                                Travian.Game.Layout.toggleBackgroundOverlay()
                                            }, 750)
                                        }, 750)
                                    }, (2800 - (5 - b) * 500))
                                }, 1250)
                            }, 100)
                        }, 300)
                    }, 800)
                }, 750)
            }, 250)
        }
    },
    refreshProgressBarTitle: function(c) {
        var a = $$("div.progressBarDailyLimit")[0];
        var b = a.getAttribute("data-tooltip").match(/(^.*)(\[AMOUNT\])(.*$)/);
        a.title = b[1] + c + b[3];
        Travian.Tip.refresh()
    },
    initContributeDisabledAction: function() {
        var a = this;
        $$("#contributeButtons button").addEvent("click", function() {
            a.calculateSum("donate");
            if (!a.bonusSelected && parseInt($("donateSum").innerText) > 0) {
                $("bonusNotSelectedMessage").show()
            }
        })
    }
};
Travian.Game.AllianceLeave = new Class({
    Extends: Travian.Dialog.Ajax,
    options: {
        data: {},
        saveOnUnload: false
    },
    initialize: function(a) {
        this.parent(a)
    },
    request: function() {
        var a = this;
        Travian.ajax({
            data: this.options.data,
            onSuccess: function(b) {
                if (b.close || b.html == "") {
                    a.close();
                    Travian.WindowManager.closeAllWindows();
                    window.location.reload()
                } else {
                    a.setContent(b.html).setTitle(b.title).setInfoIcon(b.infoIcon).updateCssClass(b.cssClass);
                    a.show()
                }
            },
            onFailure: function(c, b) {
                $("allianceLeavePopupError").innerHTML = b;
                return false
            }
        });
        return this
    },
    isAjax: function() {
        return true
    },
    reload: function() {
        this.request()
    }
});
Travian.Game.PaymentWizard = new Class({
    Extends: Travian.Dialog.Ajax,
    options: {
        data: {
            cmd: "paymentWizard",
            goldProductId: "",
            goldProductLocation: "",
            location: "",
            activeTab: "buyGold",
            formData: {}
        },
        keepOpen: true,
        buttonCancel: true,
        buttonOk: false,
        context: "paymentWizard",
        cssClass: "brown",
        draggable: false,
        infoIcon: true,
        saveOnUnload: false,
        scroll: false,
        type: this.DIALOG_TYPE_MODAL,
        topHeaderOffset: 45,
        preview: {
            enabled: true,
            contentElement: "paymentWizardV2ContentPreview",
            title: "",
            infoIcon: "",
            dialogCSSClass: "brown",
            resultCached: false,
            onShow: function(a) {
                if (typeof a.options.preview.resultCached !== "undefined" && a.options.preview.resultCached === true) {
                    a.setContent(document.getElementById(a.options.preview.contentElement).get("html"));
                    document.getElementById(a.options.preview.contentElement).set("html", "");
                    window.fireEvent("shopUIV2RestorePreview");
                    a.reload()
                } else {
                    a.reload();
                    document.getElementById(a.options.preview.contentElement).set("html", "")
                }
            }
        },
        darkOverlay: true,
        overlayCancel: false,
        resizeDialogIfOverflow: false,
        useCallback: false,
        callback: Travian.emptyFunction(),
        callbackScope: null,
        onClose: function(b) {
            Travian.Game.PaymentWizardEventListener.PaymentWizardObject = null;
            if (this.options.useCallback === true && typeof this.options.callback == "function") {
                this.options.callback({
                    scope: this.options.callbackScope
                })
            }
            fireEvent("paymentWizardOnCloseEvent");
            Travian.Game.Layout.updateGold(this.options.callback);
            if (this.options.data.activeTab == "buyGold" && this.options.preview.enabled) {
                var a = document.getElementById("dialogContent").get("html");
                document.getElementById(this.options.preview.contentElement).set("html", a);
                Travian.Game.PaymentWizardEventListener.preview.resultCached = true
            }
        },
        onOpen: null
    },
    initialize: function(b) {
        this.parent(Object.merge({}, this.options, b || {}));
        var c = this;
        var a = function(e) {
            var d = $$(e.target).getParents(".tabButton")[0].get("class")[0].split(" ");
            if (d[1] == "pros") {
                c.options.callback = null
            }
            c.options.data.activeTab = d[1];
            c.reload();
            e.stop();
            return false
        };
        this.addEvent("open", function(d) {
            var e = $("paymentWizard");
            $$("#paymentWizard .header .tabButton").each(function(f) {
                f.removeEvents();
                f.addEvent("click", a)
            }, this);
            $$("#paymentWizard .header li").each(function(f) {
                if (f.hasClass("active")) {
                    return false
                }
                f.set("morph", {
                    duration: 200,
                    transition: Fx.Transitions.Sine.easeOut,
                    fps: 60
                });
                f.addEvent("mouseover", function() {
                    f.morph({
                        marginTop: -8,
                        height: 40
                    })
                });
                f.addEvent("mouseout", function() {
                    f.morph({
                        marginTop: -1,
                        height: 33
                    })
                })
            });
            if (e) {
                $$("#paymentWizard .iconButton.info").setTitle(Travian.Translation.get("paymentWizard.infoButtonLabel"));
                c.updateInfoButton({
                    buttonTextInfo: Travian.Translation.get("paymentWizard.infoButtonLabel"),
                    infoIcon: function() {
                        window.open($("paymentWizard").getElement(".paymentWizardAnswersLink").get("value"))
                    }
                })
            }
            if (c.options.data.activeTab == "buyGold" || c.options.data.activeTab == "") {
                c.initializeBuyGoldTab()
            } else {
                if (c.options.data.activeTab == "pros") {
                    c.initializeProsTab()
                } else {
                    if (c.options.data.activeTab == "earnGold") {
                        c.initializeEarnGoldTab()
                    }
                }
            }
            if (c.options.onOpen && (typeof c.options.onOpen === "function")) {
                c.options.onOpen()
            }
        });
        return this
    },
    initializeBuyGoldTab: function() {
        var k = this;
        var b = $$("#paymentWizard .contentWrapper .infoArea");
        var f = $$("#paymentWizard .contentWrapper .contentArea");
        var h = function(o, p) {
            if (!o.hasClass(p)) {
                o = o.up("." + p)
            }
            return o
        };
        var c = function(p) {
            var o = b.getElement(".buyGoldLocation")[0];
            k.options.data.goldProductLocation = o.options[o.selectedIndex].value;
            k.options.data.goldProductId = "";
            k.reload();
            p.stop();
            return false
        };
        var a = function(o) {
            b.getElements(".buyGoldInfoStep.locationStep").each(function(p) {
                p.hide()
            });
            b.down(".buyGoldInfoStep.locationStep.buyGoldFormStep").show();
            o.stop();
            return false
        };
        var e = function(o) {
            k.options.data.goldProductId = "";
            k.reload();
            o.stop();
            return false
        };
        var d = function(p) {
            var o = h($(p.target), "goldProduct");
            if (o != null) {
                var q = o.down(".goldProductId").get("data-voucher");
                if (q) {
                    voucherPopup();
                    p.stop();
                    return false
                }
                k.options.data.goldProductId = o.down(".goldProductId").get("value");
                k.reload()
            }
            p.stop();
            return false
        };
        var n = function(r) {
            var p = h($(r.target), "providerLink");
            if (p != null) {
                var s, t;
                var o = p.down(".providerId").get("value");
                try {
                    s = p.down(".popupWidth").get("value")
                } catch (q) {
                    s = 800
                }
                try {
                    t = p.down(".popupHeight").get("value")
                } catch (q) {
                    t = 600
                }
                k.options.useCallback = true;
                k.openProvider(k.options.data.goldProductId, o, s, t)
            }
            r.stop();
            return false
        };
        var m = function(p) {
            if (!k.DoubleClickPreventer) {
                k.DoubleClickPreventer = new Travian.DoubleClickPreventer();
                k.DoubleClickPreventer.timeout = 2000
            }
            if (!k.DoubleClickPreventer.check()) {
                p.stop();
                return false
            }
            var q = f.down(".paymentOpenOffersResult")[0];
            if (q) {
                q.destroy()
            }
            var o = $(p.target);
            o.hide();
            footerItem = o.up(".footerItem");
            if (o.hasClass("ordersHide") === true) {
                footerItem.down(".ordersShow").show();
                f.down(".buyGoldContent").show();
                f.down(".openOffers").hide();
                p.stop();
                return false
            }
            footerItem.down(".ordersHide").show();
            f.down(".buyGoldContent").hide();
            f.down(".openOffers").show();
            Travian.ajax({
                data: {
                    cmd: "paymentWizardOpenOffers"
                },
                onSuccess: function(s) {
                    var r = f.down(".openOffers")[0];
                    r.empty();
                    if (s.noResult === false) {
                        r.set("html", s.html)
                    } else {
                        r.set("html", s.errorMsg)
                    }
                }
            });
            p.stop();
            return false
        };
        if (b.down(".buyGoldLocation")[0] != null) {
            b.down(".buyGoldLocation")[0].addEvent("change", c)
        }
        if (b.down("a")[0] != null) {
            b.down("a")[0].addEvent("click", a)
        }
        var g = b.down(".changeGoldProduct");
        if (g[0] != null) {
            g[0].addEvent("click", e)
        }
        Array.each(f.getElements(".goldProduct"), function(o) {
            o.addEvent("click", d)
        });
        Array.each(f.getElements(".paymentProvider"), function(o) {
            o.addEvent("click", n)
        });
        Array.each(b.getElements(".openOrdersLink"), function(o) {
            o.addEvent("click", m)
        });
        return this
    },
    updatePosition: function(c, b) {
        var a = this.calculatePosition();
        this.setPosition({
            x: a.left,
            y: a.top
        }, c)
    },
    initializeEarnGoldTab: function() {
        var g = this;
        var f = $$("#paymentWizard.earnGold .contentWrapper .earnGoldPage")[0].getParent();
        var b = function(k) {
            if (!k || k == "") {
                k = "earnGoldOverview"
            }
            f.getChildren().hide();
            f.getChildren("." + k).show();
            return this
        };
        var e = function(m) {
            var o = undefined;
            var n = $$(m.target).get("class")[0].split(" ");
            for (var k = 0; k < n.length; k++) {
                if (n[k].indexOf("earnGold") == 0) {
                    o = n[k];
                    break
                }
            }
            b(o);
            m.stop();
            return false
        };
        f.up("#paymentWizard").getElements("a.showEarnGoldPage").addEvent("click", e);
        var c = function(n) {
            var m = f.getElement(".receiverLines").getChildren().length;
            if (m < 6) {
                var k = "{earnGoldContentMailSendReceiverCount}".translate().replace("[RECEIVER_COUNT]", m + 1);
                var p = new Element("div.receiverLine[text=" + k + "]");
                var o = new Element("input.text[type=text][name=receiver[]]");
                p.adopt(o);
                f.getElement(".receiverLines").adopt(p);
                if (m >= 5) {
                    f.getElement(".receiverLinkLine").hide()
                }
            }
            n.stop();
            return false
        };
        f.getElements(".earnGoldAddLink").addEvent("click", c);
        f.getElements(".earnGoldSendMailCancel").addEvent("click", function() {
            g.options.data.formData = {};
            g.options.data.location = "";
            g.reload()
        });
        f.getElements(".earnGoldSendMailSubmit").addEvent("click", function() {
            var k = {};
            k.receiver = f.getElements(".receiverLines input").get("value");
            k.message = f.getElements(".earnGoldSendMailMessage")[0].get("value");
            g.options.data.formData = k;
            g.options.data.location = "earnGoldMailSend";
            g.reload()
        });
        var d = false;
        var a = function(k) {
            if (d) {
                return this
            }
            d = true;
            Travian.ajax({
                data: {
                    cmd: "paymentWizardAdvertisedPersons",
                    page: k
                },
                onSuccess: function(m) {
                    if (m.errorMessage) {
                        g.setError(m)
                    } else {
                        if (m.html) {
                            d = false;
                            f.getElement(".earnGoldAdvertisedPersonsList").set("html", m.html);
                            f.getElements(".paginator a").addEvent("click", function(o) {
                                var n = $$(o.target)[0];
                                if (n.get("tag") != "a") {
                                    n = n.up("a")
                                }
                                k = n.get("href").toString().split("=")[1];
                                a(k);
                                o.stop();
                                return false
                            })
                        }
                    }
                }
            });
            return this
        };
        var h = f.getElement("a.showEarnGoldPage.earnGoldDrumUps");
        if (h != null) {
            h.addEvent("click", function(k) {
                a()
            })
        }
        b(g.options.data.location)
    },
    initializeProsTab: function() {
        var b = this;
        var a = $("featureCollectionWrapper");
        a.select(".prosButton").each(function(e) {
            e.removeEvent("click");
            e.addEvent("click", function(f) {
                b.options.useCallback = true;
                b.options.callback = function() {
                    window.location.href = window.location.href;
                    window.location.reload()
                };
                b.requestSend = true;
                if (this.hasClass("productionboostWood")) {
                    window.fireEvent("startWayOfPayment", ["productionboostWood", "paymentWizard"])
                } else {
                    if (this.hasClass("productionboostClay")) {
                        window.fireEvent("startWayOfPayment", ["productionboostClay", "paymentWizard"])
                    } else {
                        if (this.hasClass("productionboostIron")) {
                            window.fireEvent("startWayOfPayment", ["productionboostIron", "paymentWizard"])
                        } else {
                            if (this.hasClass("productionboostCrop")) {
                                window.fireEvent("startWayOfPayment", ["productionboostCrop", "paymentWizard"])
                            } else {
                                if (this.hasClass("plus")) {
                                    window.fireEvent("startWayOfPayment", ["plus", "paymentWizard"])
                                } else {
                                    if (this.hasClass("goldclub")) {
                                        window.fireEvent("startWayOfPayment", ["goldclub", "paymentWizard"])
                                    }
                                }
                            }
                        }
                    }
                }
                return false
            })
        });
        a.select(".checkbox").each(function(e) {
            e.removeEvent("click");
            e.addEvent("click", function(f) {
                if (this.hasClass("prolongProductionboostWood")) {
                    return b.toggleAutoprolong("productionboostWood", "productionBoost")
                } else {
                    if (this.hasClass("prolongProductionboostClay")) {
                        return b.toggleAutoprolong("productionboostClay", "productionBoost")
                    } else {
                        if (this.hasClass("prolongProductionboostIron")) {
                            return b.toggleAutoprolong("productionboostIron", "productionBoost")
                        } else {
                            if (this.hasClass("prolongProductionboostCrop")) {
                                return b.toggleAutoprolong("productionboostCrop", "productionBoost")
                            } else {
                                if (this.hasClass("prolongPlus")) {
                                    return b.toggleAutoprolong("plus", "plus")
                                }
                            }
                        }
                    }
                }
                f.stop();
                return false
            })
        });
        var c = function(e) {
            $("paymentWizard").getElements(e).hide()
        };
        var d = "";
        a.getElements(".feature").addEvent("mouseover", function(g) {
            var e = this.getElements(".premiumFeatureName")[0];
            if (!e || e.length == 0) {
                g.stop();
                return false
            }
            var f = e.get("value");
            if (!f || f == b.lastFeatureName) {
                g.stop();
                return false
            }
            var h = $("paymentWizard");
            h.getElements(".infoArea .premiumFeature").hide();
            h.getElements(".contentArea .feature .dynamicContent").hide();
            this.getElement(".dynamicContent").show();
            h.getElements(".infoArea .premiumFeature").filter("." + f).show();
            b.lastFeatureName = f
        });
        Travian.TimersAndCounters.initTimersInContext(a)
    },
    toggleAutoprolong: function(d, a) {
        var c = this;
        var b = new Object();
        b.cmd = "premiumFeature";
        b.featureKey = d;
        b.toggleAutoprolong = 1;
        Travian.ajax({
            data: b,
            onSuccess: function(e) {
                c.reload()
            }
        })
    },
    openProvider: function(b, a, c, d) {
        window.open("/tgpay.php?product=" + b + "&provider=" + a, "tgpay", "scrollbars=yes,status=yes,resizable=yes,toolbar=yes,width=" + c + ",height=" + d)
    }
});
var shopUIV2;

function ShopUIV2() {
    this.allowSlidePackages = true;
    this.allowSlidePaymentMethods = true;
    this.goldPackagesPages = [];
    this.goldPackagesPagesSize = 0;
    this.paymentMethodsPages = [];
    this.paymentMethodsPageSize = 0;
    this.selectedPaymentMethod = false;
    this.rtl = false;
    this.initialize = function() {
        var b = this;
        if ($$(".paymentWizardDirectionRTL").length > 0) {
            this.rtl = true
        }
        b.slidingContentInnerPackage = $$("#packageSlider .slidingContentInner")[0];
        b.slidingContentOuterPackage = $$("#packageSlider .slidingContentOuter")[0];
        b.slidingContentOuterWidthPackage = b.slidingContentOuterPackage.getDimensions();
        b.slidingContentOuterWidthPackage = parseInt(b.slidingContentOuterWidthPackage.x);
        b.slidingContentInnerPackage.set("tween", {
            duration: 500,
            transition: "linear",
            link: "cancel",
            onComplete: function() {
                b.allowSlidePackages = true
            }
        });
        b.slidingContentInnerPaymentMethods = $$("#paymentMethodsSlider .slidingContentInner")[0];
        b.slidingContentOuterPaymentMethods = $$("#paymentMethodsSlider .slidingContentOuter")[0];
        b.slidingContentOuterWidthPaymentMethods = b.slidingContentOuterPaymentMethods.getDimensions();
        b.slidingContentOuterWidthPaymentMethods = parseInt(b.slidingContentOuterWidthPaymentMethods.x);
        b.slidingContentInnerPaymentMethods.set("tween", {
            duration: 500,
            transition: "linear",
            link: "cancel",
            onComplete: function() {
                b.allowSlidePaymentMethods = true
            }
        });
        var a = 0;
        $$("#packageSlider .productsPage").each(function(d) {
            b.goldPackagesPages[a] = d;
            if (b.goldPackagesPagesSize == 0) {
                var c = d.getStyle("width");
                c = parseInt(c.replace("px", ""));
                b.goldPackagesPagesSize = c
            }
            a++
        });
        b.initializePaymentMethods();
        setTimeout(function() {
            b.packageSliderButtonCheck();
            b.paymentMethodsSliderButtonCheck();
            b.bindEvents();
            b.updateResultBox();
            setTimeout(function() {
                $$("#packageSlider .package.hideForLoading").removeClass("hideForLoading")
            }, 500)
        }, 250)
    };
    this.initializePaymentMethods = function() {
        var b = this;
        $$("#paymentMethodsSlider .loading")[0].removeClass("hide");
        if (typeof $$(".package.selected input.goldProductId")[0] === "undefined") {
            return
        }
        var a = parseInt($$(".package.selected input.goldProductId")[0].get("value"));
        $$("#paymentMethodsSlider .slidingContent")[0].empty();
        b.updateResultBox();
        Travian.ajax({
            data: {
                cmd: "paymentProviders",
                selectedPackage: a
            },
            onSuccess: function(d) {
                if (typeof $$("#paymentMethodsSlider .slidingContent")[0] === "undefined") {
                    return false
                }
                $$("#paymentMethodsSlider .slidingContent")[0].set("html", d.html);
                if (!b.rtl) {
                    b.slidingContentInnerPaymentMethods.setStyle("margin-left", 0)
                } else {
                    b.slidingContentInnerPaymentMethods.setStyle("margin-right", 0)
                }
                b.paymentMethodsPages = [];
                b.paymentMethodsPageSize = 0;
                var c = 0;
                $$(".methodsPage").each(function(f) {
                    b.paymentMethodsPages[c] = f;
                    if (b.paymentMethodsPageSize == 0) {
                        var e = f.getStyle("width");
                        e = parseInt(e.replace("px", ""));
                        b.paymentMethodsPageSize = e
                    }
                    c++
                });
                $$("#paymentMethodsSlider .methodItem").each(function(g) {
                    g.addEvent("click", b.methodItemClickEvent);
                    if (b.selectedPaymentMethod !== false) {
                        if (parseInt(g.getChildren()[0].get("value")) == b.selectedPaymentMethod) {
                            $$("#paymentMethodsSlider .methodItem").removeClass("selected");
                            g.addClass("selected");
                            for (var e = 0; e < b.paymentMethodsPages.length; e++) {
                                if (b.paymentMethodsPages[e] == g.getParent()) {
                                    var f = e * b.paymentMethodsPageSize;
                                    if (f == 0) {
                                        f = 1
                                    }
                                    b.allowSlidePaymentMethods = false;
                                    $$("#paymentMethodsSlider .methodsPage").removeClass("visible").addClass("hidden");
                                    b.paymentMethodsPages[e].removeClass("hidden").addClass("visible");
                                    if (!b.rtl) {
                                        b.slidingContentInnerPaymentMethods.tween("margin-left", f * -1)
                                    } else {
                                        b.slidingContentInnerPaymentMethods.tween("margin-right", f * -1)
                                    }
                                    b.updateResultBox()
                                }
                            }
                        }
                    }
                });
                b.paymentMethodsSliderButtonCheck();
                $$("#paymentMethodsSlider .loading")[0].addClass("hide")
            }
        })
    };
    this.packageSliderButtonCheck = function() {
        var a = this;
        if (typeof a.goldPackagesPages[0] != "undefined") {
            if (a.goldPackagesPages[0].hasClass("visible")) {
                if (!$$("#packageSlider .slideArea.area1")[0].hasClass("inactive")) {
                    $$("#packageSlider .slideArea.area1")[0].addClass("inactive")
                }
            } else {
                $$("#packageSlider .slideArea.area1")[0].removeClass("inactive")
            }
            if (a.goldPackagesPages[a.goldPackagesPages.length - 1].hasClass("hidden")) {
                if ($$("#packageSlider .slideArea.area2")[0].hasClass("inactive")) {
                    $$("#packageSlider .slideArea.area2")[0].removeClass("inactive")
                }
            } else {
                $$("#packageSlider .slideArea.area2")[0].addClass("inactive")
            }
        }
    };
    this.paymentMethodsSliderButtonCheck = function() {
        var a = this;
        if (typeof a.paymentMethodsPages[0] != "undefined") {
            if (a.paymentMethodsPages[0].hasClass("visible")) {
                if (!$$("#paymentMethodsSlider .slideArea.area1")[0].hasClass("inactive")) {
                    $$("#paymentMethodsSlider .slideArea.area1")[0].addClass("inactive")
                }
            } else {
                $$("#paymentMethodsSlider .slideArea.area1")[0].removeClass("inactive")
            }
            if (a.paymentMethodsPages[a.paymentMethodsPages.length - 1].hasClass("hidden")) {
                if ($$("#paymentMethodsSlider .slideArea.area2")[0].hasClass("inactive")) {
                    $$("#paymentMethodsSlider .slideArea.area2")[0].removeClass("inactive")
                }
            } else {
                $$("#paymentMethodsSlider .slideArea.area2")[0].addClass("inactive")
            }
        }
    };
    this.bindEvents = function() {
        var a = this;
        $$("#packageSlider .slideArea.area1").addEvent("click", function() {
            a.packageSlideLeft()
        });
        $$("#packageSlider .slideArea.area2").addEvent("click", function() {
            a.packageSlideRight()
        });
        $$("#packageSlider .package").addEvent("click", function() {
            if (!this.hasClass("selected")) {
                $$(".package").removeClass("selected");
                this.addClass("selected");
                a.initializePaymentMethods()
            }
        });
        $$("#phonePackages .package").addEvent("click", function() {
            if (!this.hasClass("selected")) {
                $$(".package").removeClass("selected");
                this.addClass("selected");
                a.initializePaymentMethods()
            }
        });
        $$("#paymentMethodsSlider .slideArea.area1").addEvent("click", function() {
            a.paymentMethodsSlideLeft()
        });
        $$("#paymentMethodsSlider .slideArea.area2").addEvent("click", function() {
            a.paymentMethodsSlideRight()
        });
        $$("#paymentMethodsSlider .methodItem").addEvent("click", a.methodItemClickEvent);
        $$("#paymentMethodsSlider").addEvent("click", function() {
            a.updateResultBox();
            a.saveSelectedPaymentMethod()
        });
        $$("#overview .resultBox .activeButton").addEvent("click", function() {
            a.buyNowAction()
        });
        $$(".buyGoldLocation").addEvent("change", function() {
            a.changeLocation()
        });
        $$("#vouchers .package").addEvent("click", function() {
            voucherPopup()
        });
        window.addEvent("shopUIV2RestorePreview", function() {
            $$("#paymentMethodsSlider .loading")[0].removeClass("hide");
            $$("#packageSlider .slidingContentInner")[0].set("html", "");
            $$("#paymentMethodsSlider .slidingContentInner")[0].set("html", "");
            $$("#phonePackages .package").destroy();
            $$("#vouchers .package").destroy();
            $$("#packageSlider .slideArea > div").removeClass("active").addClass("inactive");
            $$("#paymentMethodsSlider .slideArea > div").removeClass("active").addClass("inactive");
            $$(".resultBox .goldUnits").set("html", "");
            $$(".resultBox #goldBalanceNew").set("html", "");
            $$(".resultBox #priceToPay").set("html", "")
        })
    };
    this.methodItemClickEvent = function() {
        if (!this.hasClass("inactive") && !this.hasClass("defect")) {
            $$("#paymentMethodsSlider .methodItem").removeClass("selected");
            this.addClass("selected")
        }
    };
    this.updateResultBox = function() {
        if (typeof $$(".package.selected .goldUnits")[0] === "undefined") {
            return
        }
        $$(".resultBox #packageGoldAmount .goldUnits")[0].set("html", $$(".package.selected .goldUnits")[0].get("html"));
        $$(".resultBox #goldBalanceNew")[0].set("html", (parseInt($$(".package.selected .goldUnits")[0].get("html")) + parseInt($$(".accountBalance span")[0].get("html"))));
        $$(".resultBox #priceToPay")[0].set("html", $$(".package.selected .price")[0].get("html"));
        if ($$("#paymentMethodsSlider .methodItem.selected")[0]) {
            $$(".resultBox .inactiveButton").addClass("hide");
            $$(".resultBox .activeButton").removeClass("hide")
        } else {
            $$(".resultBox .activeButton").addClass("hide");
            $$(".resultBox .inactiveButton").removeClass("hide")
        }
    };
    this.saveSelectedPaymentMethod = function() {
        var a = this;
        if ($$("#paymentMethodsSlider .methodItem.selected")[0]) {
            a.selectedPaymentMethod = parseInt($$("#paymentMethodsSlider .methodItem.selected input.providerId")[0].get("value"))
        }
    };
    this.packageSlideLeft = function() {
        var g = this;
        if (g.allowSlidePackages) {
            var f = "";
            var a = "";
            var b = false;
            for (var c = g.goldPackagesPages.length - 1; c >= 0; c--) {
                if (g.goldPackagesPages[c].hasClass("visible")) {
                    f = g.goldPackagesPages[c];
                    b = true
                }
                if (b && g.goldPackagesPages[c].hasClass("hidden")) {
                    a = g.goldPackagesPages[c];
                    break
                }
            }
            if (a != "") {
                var e = 0;
                if (!g.rtl) {
                    e = g.slidingContentInnerPackage.getStyle("margin-left")
                } else {
                    e = g.slidingContentInnerPackage.getStyle("margin-right")
                }
                e = parseInt(e.replace("px", ""));
                var d = (e + g.goldPackagesPagesSize);
                if (d == 0) {
                    d = 1
                }
                f.removeClass("visible").addClass("hidden");
                a.removeClass("hidden").addClass("visible");
                g.allowSlidePackages = false;
                if (!g.rtl) {
                    g.slidingContentInnerPackage.tween("margin-left", d)
                } else {
                    g.slidingContentInnerPackage.tween("margin-right", d)
                }
            }
        }
        g.packageSliderButtonCheck()
    };
    this.packageSlideRight = function() {
        var g = this;
        if (g.allowSlidePackages) {
            var f = "";
            var a = "";
            var b = false;
            for (var c = 0; c < g.goldPackagesPages.length; c++) {
                if (g.goldPackagesPages[c].hasClass("visible")) {
                    f = g.goldPackagesPages[c];
                    b = true
                }
                if (g.goldPackagesPages[c].hasClass("hidden")) {
                    if (b) {
                        a = g.goldPackagesPages[c];
                        break
                    }
                }
            }
            if (a != "") {
                var e = 0;
                if (!g.rtl) {
                    e = g.slidingContentInnerPackage.getStyle("margin-left")
                } else {
                    e = g.slidingContentInnerPackage.getStyle("margin-right")
                }
                e = parseInt(e.replace("px", "")) * -1;
                var d = (e + g.goldPackagesPagesSize) * -1;
                f.removeClass("visible").addClass("hidden");
                a.removeClass("hidden").addClass("visible");
                g.allowSlidePaymentMethods = false;
                if (!g.rtl) {
                    g.slidingContentInnerPackage.tween("margin-left", d)
                } else {
                    g.slidingContentInnerPackage.tween("margin-right", d)
                }
            }
        }
        g.packageSliderButtonCheck()
    };
    this.paymentMethodsSlideLeft = function() {
        var g = this;
        if (g.allowSlidePaymentMethods) {
            var f = "";
            var a = "";
            var b = false;
            for (var c = g.paymentMethodsPages.length - 1; c >= 0; c--) {
                if (g.paymentMethodsPages[c].hasClass("visible")) {
                    f = g.paymentMethodsPages[c];
                    b = true
                }
                if (b && g.paymentMethodsPages[c].hasClass("hidden")) {
                    a = g.paymentMethodsPages[c];
                    break
                }
            }
            if (a != "") {
                var e = 0;
                if (!g.rtl) {
                    e = g.slidingContentInnerPaymentMethods.getStyle("margin-left")
                } else {
                    e = g.slidingContentInnerPaymentMethods.getStyle("margin-right")
                }
                e = parseInt(e.replace("px", ""));
                var d = (e + g.paymentMethodsPageSize);
                if (d == 0) {
                    d = 1
                }
                f.removeClass("visible").addClass("hidden");
                a.removeClass("hidden").addClass("visible");
                g.allowSlidePaymentMethods = false;
                if (!g.rtl) {
                    g.slidingContentInnerPaymentMethods.tween("margin-left", d)
                } else {
                    g.slidingContentInnerPaymentMethods.tween("margin-right", d)
                }
            }
        }
        g.paymentMethodsSliderButtonCheck()
    };
    this.paymentMethodsSlideRight = function() {
        var g = this;
        if (g.allowSlidePaymentMethods) {
            var f = "";
            var a = "";
            var b = false;
            for (var c = 0; c < g.paymentMethodsPages.length; c++) {
                if (g.paymentMethodsPages[c].hasClass("visible")) {
                    f = g.paymentMethodsPages[c];
                    b = true
                }
                if (g.paymentMethodsPages[c].hasClass("hidden")) {
                    if (b) {
                        a = g.paymentMethodsPages[c];
                        break
                    }
                }
            }
            if (a != "") {
                var e = 0;
                if (!g.rtl) {
                    e = g.slidingContentInnerPaymentMethods.getStyle("margin-left")
                } else {
                    e = g.slidingContentInnerPaymentMethods.getStyle("margin-right")
                }
                e = parseInt(e.replace("px", "")) * -1;
                var d = (e + g.paymentMethodsPageSize) * -1;
                f.removeClass("visible").addClass("hidden");
                a.removeClass("hidden").addClass("visible");
                g.allowSlidePaymentMethods = false;
                if (!g.rtl) {
                    g.slidingContentInnerPaymentMethods.tween("margin-left", d)
                } else {
                    g.slidingContentInnerPaymentMethods.tween("margin-right", d)
                }
            }
        }
        g.paymentMethodsSliderButtonCheck()
    };
    this.buyNowAction = function() {
        if ($$("#overview .resultBox .inactiveButton.hide")[0]) {
            var e = parseInt($$(".package.selected input.goldProductId")[0].get("value"));
            var b = parseInt($$("#paymentMethodsSlider .methodItem.selected input.providerId")[0].get("value"));
            var d = 800;
            var f = 600;
            if ($$("#paymentMethodsSlider .methodItem.selected input.popupWidth")[0]) {
                d = $$("#paymentMethodsSlider .methodItem.selected input.popupWidth")[0]
            }
            if ($$("#paymentMethodsSlider .methodItem.selected input.popupHeight")[0]) {
                f = $$("#paymentMethodsSlider .methodItem.selected input.popupHeight")[0]
            }
            var a = (screen.width - d) / 2;
            var c = (screen.height - f) / 2;
            window.open("/tgpay.php?product=" + e + "&provider=" + b, "tgpay", "scrollbars=yes,status=yes,resizable=yes,toolbar=yes,width=" + d + ",height=" + f + ",left=" + a + ",top=" + c)
        }
    };
    this.changeLocation = function() {
        var b = $$("select.buyGoldLocation")[0].getSelected()[0].get("value");
        var a = (new Overlay(document.body, {
            opacity: 0.8,
            duration: 250
        })).open();
        Travian.Game.PaymentWizardEventListener.PaymentWizardObject && Travian.Game.PaymentWizardEventListener.PaymentWizardObject.close();
        window.fireEvent("startPaymentWizard", {
            data: {
                cmd: "paymentWizard",
                goldProductId: "",
                goldProductLocation: b,
                location: "",
                activeTab: "buyGold",
                formData: {}
            },
            onOpen: function() {
                a.close().dispose()
            }
        })
    };
    this.selectPackage = function(e) {
        var d = this;
        var f = $$(".package input[value=" + e + "]")[0];
        e = f.getParent();
        var a = e.getParent();
        if (a.id != "phonePackages") {
            if (a.hasClass("hidden")) {
                for (var b = 0; b < d.goldPackagesPages.length; b++) {
                    if (d.goldPackagesPages[b] == a) {
                        var c = b * d.goldPackagesPagesSize;
                        if (c == 0) {
                            c = 1
                        }
                        d.allowSlidePackages = false;
                        $$("#packageSlider .productsPage").removeClass("visible").addClass("hidden");
                        d.goldPackagesPages[b].removeClass("hidden").addClass("visible");
                        if (!d.rtl) {
                            d.slidingContentInnerPackage.tween("margin-left", c * -1)
                        } else {
                            d.slidingContentInnerPackage.tween("margin-right", c * -1)
                        }
                    }
                }
            }
        }
        $$(".package").removeClass("selected");
        e.addClass("selected")
    }
}
Travian.Game.VideoFeature = new Class({
    Extends: Travian.Dialog.Ajax,
    options: {
        data: {
            cmd: "adSalesVideo"
        },
        keepOpen: false,
        buttonCancel: true,
        buttonOk: false,
        context: "contractWrapper",
        cssClass: "brown premiumFeaturePackage premiumFeaturePlus",
        draggable: false,
        infoIcon: true,
        saveOnUnload: false,
        scroll: false,
        type: this.DIALOG_TYPE_MODAL,
        darkOverlay: true,
        overlayCancel: true,
        resizeDialogIfOverflow: false,
        useCallback: false,
        callback: Travian.emptyFunction(),
        callbackScope: null,
        onClose: function(a) {
            Travian.Game.VideoFeatureEventListener.VideoFeatureObject = null;
            if (this.options.useCallback === true && typeof this.options.callback == "function") {
                this.options.callback({
                    scope: this.options.callbackScope
                })
            }
            window.fireEvent("VideoDialogOnCloseEvent")
        }
    },
    initialize: function(a) {
        this.parent(Object.merge({}, this.options, a || {}))
    },
    request: function() {
        var a = this;
        this.options.data.context = this.context;
        Travian.ajax({
            data: this.options.data,
            onSuccess: function(b) {
                a.setContent(b.html);
                a.show();
                a.updateInfoButton({
                    buttonTextInfo: Travian.Translation.get("videoFeature.infoButtonLabel"),
                    infoIcon: function() {
                        window.open($("videoFeature").getElement(".videoFeatureAnswersLink").get("value"))
                    }
                })
            }
        });
        return this
    },
    close: function() {
        if (typeof this.requestSend !== "undefined" && this.requestSend === true) {
            return window.location.reload()
        }
        window.reload_enabled = true;
        this.parent()
    }
});
Travian.Game.MoreGames = new Class({
    Implements: [Events],
    activeCounterElement: null,
    activeCounter: 0,
    autoHoverDelay: 3000,
    timeoutId: 0,
    elements: null,
    options: {
        countOfGamesToShow: 0
    },
    initialize: function(a) {
        this.options = Object.merge(this.options, a);
        this.elements = $$("div.moreGames .game.game-image");
        if (this.options.countOfGamesToShow) {
            this.events().toggleChildren(this.activeCounter).autoHover()
        }
    },
    autoHover: function() {
        var a = this;
        if (this.timeoutId) {
            clearTimeout(a.timeoutId)
        }
        this.timeoutId = (function() {
            a.toggleChildren(a.activeCounter);
            a.toggleChildren((a.activeCounter + 1) % a.options.countOfGamesToShow);
            a.autoHover()
        }).delay(this.autoHoverDelay);
        return this
    },
    events: function() {
        var a = this;
        this.elements.each(function(c, b) {
            c.addEvents({
                mouseenter: function(d) {
                    clearTimeout(a.timeoutId);
                    if (b == a.activeCounter) {
                        return
                    }
                    if (a.activeCounterElement) {
                        a.toggleChildren(a.activeCounter)
                    }
                    a.toggleChildren(b)
                },
                mouseleave: function(d) {
                    a.autoHover()
                }
            })
        });
        return this
    },
    toggleChildren: function(a) {
        this.activeCounter = a;
        this.activeCounterElement = this.elements[a];
        this.activeCounterElement.select("img").each(function(b) {
            b.toggleClass("hide")
        });
        return this
    }
});
Travian.Game.VideoFeatureEventListener = new(new Class({
    VideoFeatureObject: null,
    initialize: function() {
        this.DoubleClickPreventer = new Travian.DoubleClickPreventer();
        this.DoubleClickPreventer.timeout = 1000;
        this.bindEvents()
    },
    bindEvents: function() {
        var a = this;
        window.addEvent("showVideoWindow", function(b) {
            if (undefined === a.VideoFeatureObject || null === a.VideoFeatureObject) {
                if (!a.DoubleClickPreventer.check()) {
                    return false
                }
                a.VideoFeatureObject = a.startVideoDialog(b)
            } else {
                a.VideoFeatureObject.options = Object.merge({}, a.VideoFeatureObject.options, b || {});
                a.VideoFeatureObject.reload()
            }
        });
        window.addEvent("startVideo", function(b) {
            if (!a.DoubleClickPreventer.check()) {
                return false
            }
            a.addEvent(window, "message", function(c) {
                a.onMessage(c, b)
            });
            a.startVideo(b)
        })
    },
    addEvent: function(c, a, b) {
        if (c.addEventListener) {
            c.addEventListener(a, b, false)
        } else {
            if (c.attachEvent) {
                c.attachEvent("on" + a, b)
            }
        }
    },
    onMessage: function(f, d) {
        if (f.origin == "http://media.oadts.com" || f.origin == "https://media.oadts.com") {
            var b = f.data;
            if (b == "videoStart") {
                Travian.ajax({
                    data: {
                        cmd: "adSalesVideo",
                        action: "start",
                        vrid: d.vrid
                    },
                    onSuccess: function(e) {}
                })
            } else {
                if (b == "noVideo") {} else {
                    if (b == "videoEnds") {} else {
                        if (b.indexOf("videoEnds:") == 0) {
                            var a = b.replace("videoEnds:", ""),
                                c = a.indexOf(":");
                            Travian.ajax({
                                data: {
                                    cmd: "adSalesVideo",
                                    action: "build",
                                    vrid: a.substring(0, c),
                                    hash: a.substring(c + 1)
                                },
                                onSuccess: function(e) {}
                            })
                        } else {}
                    }
                }
            }
        }
    },
    startVideoDialog: function(a) {
        window.reload_enabled = false;
        return new Travian.Game.VideoFeature(a)
    },
    startVideo: function(a) {
        if (typeof a != typeof undefined && typeof a.url != typeof undefined) {
            $("videoOverlay").hide();
            $("videoArea").set("src", a.url).show()
        }
    }
}));
Travian.Game.PaymentWizardEventListener = new(new Class({
    PaymentWizardObject: null,
    preview: {
        enabled: false
    },
    initialize: function() {
        this.DoubleClickPreventer = new Travian.DoubleClickPreventer();
        this.DoubleClickPreventer.timeout = 2000;
        this.bindEvents()
    },
    bindEvents: function() {
        var a = this;
        window.addEvent("startPaymentWizard", function(b) {
            b.preview = a.preview;
            if (undefined === a.PaymentWizardObject || null === a.PaymentWizardObject) {
                if (!a.DoubleClickPreventer.check()) {
                    return false
                }
                a.PaymentWizardObject = a.startPaymentWizard(b)
            } else {
                a.PaymentWizardObject.options = Object.merge({}, a.PaymentWizardObject.options, b || {});
                a.PaymentWizardObject.reload()
            }
        });
        window.addEvent("paymentWizardFillPreview", function(b, d, c) {
            a.preview.enabled = b;
            a.preview.title = d;
            a.preview.infoIcon = c
        })
    },
    startPaymentWizard: function(a) {
        return new Travian.Game.PaymentWizard(a)
    }
}));
Travian.Game.WayOfPaymentEventListener = new(new Class({
    WayOfPaymentObject: null,
    initialize: function() {
        this.DoubleClickPreventer = new Travian.DoubleClickPreventer();
        this.DoubleClickPreventer.timeout = 500;
        this.bindEvents()
    },
    bindEvents: function() {
        var a = this;
        window.addEvent("buttonClicked", function(c, b) {
            if (typeof b.wayOfPayment == "object" && a.DoubleClickPreventer.check()) {
                a.WayOfPaymentObject = a.startWayOfPayment(b.wayOfPayment.featureKey, b.wayOfPayment.context, b.wayOfPayment.dataCallback, b.wayOfPayment.confirmPopup, b.wayOfPayment.closeAllDialogs)
            }
        });
        window.addEvent("startWayOfPayment", function(f, d, e, b, c) {
            if (!a.DoubleClickPreventer.check()) {
                return false
            }
            a.WayOfPaymentObject = a.startWayOfPayment(f, d, e, b, c)
        })
    },
    startWayOfPayment: function(e, c, d, a, b) {
        return new Travian.Game.WayOfPayment(e, c, d, a, b)
    }
}));
Travian.Game.ButtonEventListener = new(new Class({
    initialize: function() {
        this.DoubleClickPreventer = new Travian.DoubleClickPreventer();
        this.bindEvents()
    },
    bindEvents: function() {
        var a = this;
        window.addEvent("buttonClicked", function(c, b) {
            $(c.id).blur();
            if (typeof b.dialog == "object" && b.dialog && a.DoubleClickPreventer.check()) {
                return new Travian.Dialog.Ajax(b.dialog)
            }
            if (typeof b.plusDialog == "object" && b.plusDialog && a.DoubleClickPreventer.check()) {
                return new Travian.Game.PlusDialog(b.plusDialog)
            }
            if (typeof b.productionBoostDialog == "object" && b.productionBoostDialog && a.DoubleClickPreventer.check()) {
                return new Travian.Game.ProductionBoostDialog(b.productionBoostDialog)
            }
            if (typeof b.reportSpamMessagesDialog == "object" && b.reportSpamMessagesDialog && a.DoubleClickPreventer.check()) {
                return new Travian.Game.ReportSpamMessagesDialog(b.reportSpamMessagesDialog)
            }
            if (typeof b.goldclubDialog == "object" && b.goldclubDialog && a.DoubleClickPreventer.check()) {
                return new Travian.Game.GoldclubDialog(b.goldclubDialog)
            }
            if (typeof b.questButtonTipsToggle != "undefined" && b.questButtonTipsToggle) {
                if (typeof b.questButtonActivateTips != "undefined" && b.questButtonActivateTips && typeof b.questButtonDeactivateTips != "undefined" && b.questButtonDeactivateTips) {
                    return Travian.Game.Quest.toggleHighlights(undefined, b.questButtonActivateTips, b.questButtonDeactivateTips)
                }
            }
            if (typeof b.questButtonGainReward != "undefined" && b.questButtonGainReward) {
                return Travian.Game.Quest.rewardButtonClick(b.questId)
            }
            if (typeof b.questButtonNext != "undefined" && b.questButtonNext) {
                return Travian.Game.Quest.nextButtonClick(b.questId)
            }
            if (typeof b.questButtonSkipTutorial != "undefined" && b.questButtonSkipTutorial) {
                return Travian.Game.Quest.skipButtonClick()
            }
            if (typeof b.questButtonOverview != "undefined" && b.questButtonOverview) {
                return Travian.Game.Quest.openTodoListDialog()
            }
            if (typeof b.questButtonOverviewAchievements != "undefined" && b.questButtonOverviewAchievements) {
                return Travian.Game.Quest.openTodoListDialog("", true)
            }
            if (typeof b.questButtonCloseOverlay != "undefined" && b.questButtonCloseOverlay) {
                return Travian.Game.Quest.closeDialog()
            }
            if (typeof b.overlay != "undefined" && b.overlay && a.DoubleClickPreventer.check()) {
                return Travian.Game.Overlay.openOverlay()
            }
            if (typeof b.villageDialog != "undefined" && b.villageDialog && a.DoubleClickPreventer.check()) {
                return Travian.Game.showEditVillageDialog(b.villageDialog.title, b.villageDialog.description, b.villageDialog.saveText, b.villageDialog.villageId)
            }
            if (typeof b.redirectUrl != "undefinded" && b.redirectUrl && a.DoubleClickPreventer.check()) {
                window.location.href = b.redirectUrl;
                return false
            }
            if (typeof b.redirectUrlExternal != "undefinded" && b.redirectUrlExternal && a.DoubleClickPreventer.check()) {
                window.open(b.redirectUrlExternal);
                return false
            }
        });
        window.addEvent("tabClicked", function(c, b) {
            if (typeof b.dialog == "object" && b.dialog && a.DoubleClickPreventer.check()) {
                return new Travian.Dialog.Ajax(b.dialog)
            }
            if (typeof b.plusDialog == "object" && b.plusDialog && a.DoubleClickPreventer.check()) {
                return new Travian.Game.PlusDialog(b.plusDialog)
            }
            if (typeof b.goldclubDialog == "object" && b.goldclubDialog && a.DoubleClickPreventer.check()) {
                return new Travian.Game.GoldclubDialog(b.goldclubDialog)
            }
        })
    }
}));
Travian.Game.WayOfPayment = new Class({
    featureKey: null,
    context: null,
    confirmPopup: null,
    closeAllDialogs: null,
    initialize: function(f, c, d, a, b) {
        if (typeof f == "undefined") {
            throw ("Feature Key must not be empty!")
        }
        var e = {};
        if (typeof d == "string" && typeof this[d] == "function") {
            e = this[d]()
        }
        if (typeof d == "string" && typeof d.split(".").reduce(function(h, g) {
                return h[g]
            }, window) == "function") {
            e = d.split(".").reduce(function(h, g) {
                return h[g]
            }, window)()
        }
        if (typeof d == "function") {
            e = d()
        }
        this.featureKey = f;
        this.context = c;
        this.confirmPopup = a;
        this.closeAllDialogs = b;
        if (typeof a !== "undefined" && typeof a === "object") {
            this.checkConfirmation(e)
        } else {
            this.bookPremiumFeature(e)
        }
    },
    checkConfirmation: function(a) {
        var b = this;
        Travian.ajax({
            data: {
                cmd: "getGoldAmount"
            },
            onSuccess: function(d) {
                var c = d.goldAmount;
                var e = a.coins;
                if (c > 0 && e <= c) {
                    b.showCustomConfirmationPopup(b.confirmPopup, a)
                } else {
                    b.bookPremiumFeature(a)
                }
            }
        })
    },
    showCustomConfirmationPopup: function(a, b) {
        new Travian.Dialog.Ajax({
            buttonOk: false,
            data: {
                cmd: a.name,
                goldAmount: b.coins
            },
            context: this.context,
            elementFocus: a.options["elementFocus"] || "spendGold_confirm_btn"
        })
    },
    bookPremiumFeature: function(a) {
        var b = {
            cmd: "premiumFeature",
            featureKey: this.featureKey,
            context: this.context
        };
        if (typeof a != "undefined") {
            var b = Object.merge({}, a, b)
        }
        var c = this;
        Travian.ajax({
            data: b,
            onSuccess: function(d) {
                if (typeof d.functionToCall != "undefined") {
                    if (typeof c[d.functionToCall] == "function") {
                        c[d.functionToCall](d.options, d.context)
                    } else {
                        if (typeof window[d.functionToCall] == "function") {
                            window[d.functionToCall](d.options, d.context)
                        }
                    }
                }
            }
        })
    },
    renderDialog: function(a) {
        var b = a.dialogOptions;
        var c = a.html;
        if (Travian.WindowManager.getWindowsByContext("convertGoldPopup")) {
            Travian.WindowManager.closeByContext("convertGoldPopup")
        }
        if (typeof this.closeAllDialogs !== "undefined" && this.closeAllDialogs !== null && this.closeAllDialogs) {
            Travian.WindowManager.closeAllWindows()
        }
        a.context = this.featureKey;
        $dialog = new Travian.Dialog(b);
        $dialog.setContent(c);
        $dialog.show();
        return $dialog
    },
    closeDialog: function(a, b) {
        Travian.WindowManager.closeByContext(b)
    },
    hideDialog: function(a, b) {
        Travian.WindowManager.hideByContext(b)
    },
    unhideDialog: function(a, b) {
        Travian.WindowManager.showByContext(b)
    },
    reloadDialog: function(a, b) {
        if (b == null && undefined != a.scope) {
            b = a.scope.context
        }
        Travian.WindowManager.reloadWindowsByContext(b)
    },
    reloadUrl: function() {
        if ($$("body")[0].hasClass("ie6") || $$("body")[0].hasClass("ie7") || $$("body")[0].hasClass("ie8")) {
            window.location.reload()
        } else {
            window.location.href = window.location.href.split("#")[0]
        }
    },
    openPaymentWizard: function(c, a) {
        var b;
        var d = Travian.emptyFunction;
        if (typeof c.goldProductId != "undefined") {
            b = c.goldProductId
        }
        if (typeof c.callback != "undefined" && typeof c.callback == "function") {
            d = c.callback
        }
        if (typeof c.callback == "string" && typeof c.callback.split(".").reduce(function(f, e) {
                return f[e]
            }, window) == "function") {
            d = c.callback.split(".").reduce(function(f, e) {
                return f[e]
            }, window)
        }
        this.closeDialog(c, "smallestPackage");
        window.fireEvent("startPaymentWizard", {
            data: {
                goldProductId: b,
                activeTab: "buyGold"
            },
            callback: d,
            callbackScope: this
        })
    },
    openPaymentWizardWithProsTab: function() {
        window.fireEvent("startPaymentWizard", {
            data: {
                activeTab: "pros"
            }
        })
    }
});
Travian.Game.PlusDialog = new Class({
    Extends: Travian.Dialog.Ajax,
    options: {
        data: {
            cmd: "plusPopup"
        },
        saveOnUnload: false,
        cssClass: "brown premiumFeaturePackage premiumFeaturePlus",
        buttonOk: false,
        context: "plus",
        darkOverlay: true,
        overlayCancel: false,
        featureMarkup: function(b, a, c) {
            return ['<div class="featureImage ' + c + '"></div>', '<div class="featureContent">', '<h3 class="featureTitle">' + b + "</h3>", '<div class="featureText">' + a + "</div>", "</div>", '<div class="clear"></div>'].join("")
        }
    },
    request: function() {
        var a = this;
        this.options.data.context = this.context;
        Travian.ajax({
            data: this.options.data,
            onSuccess: function(b) {
                a.setContent(a.createContent(a, b));
                a.show()
            }
        });
        return this
    },
    initialize: function(a) {
        this.parent(Object.merge({}, this.options, a || {}))
    },
    createContent: function(m, f) {
        var a = new Element("div", {
            "class": "paymentPopupDialogWrapper"
        });
        var b = new Element("h1");
        var k = new Element("span", {
            html: f.title,
            "class": "headlineText"
        });
        b.insert(k);
        var d = new Element("span", {
            html: f.gold,
            "class": "goldWrapper"
        });
        b.insert(d);
        b.insert(new Element("div", {
            "class": "clear"
        }));
        var o = new Element("h2", {
            html: f.subHeadLine,
            "class": "subHeadline"
        });
        var q = new Element("div", {
            "class": "goldButtonWrapper"
        });
        var r = new Element("div", {
            html: f.goldButton
        });
        var g = new Element("div", {
            html: f.buttonSubtitle,
            "class": "buttonSubTitle"
        });
        q.insert(r);
        q.insert(g);
        var p = new Element("h3", {
            html: f.plusPopupButtonExtraFeatures,
            "class": "extraFeatures"
        });
        var h = new Element("div");
        var e = new Element("div", {
            "class": "furtherFeatures"
        });
        Object.each(f.features, function(s, v) {
            if (v == m.options.featureKey) {
                var u = new Element("div", {
                    "class": "feature featureInfo",
                    html: m.options.featureMarkup(s.title, s.text, v)
                });
                h.insert(u)
            } else {
                var t = new Element("div", {
                    "class": "feature featureInfo",
                    html: m.options.featureMarkup(s.title, s.text, v)
                });
                e.insert(t)
            }
        });
        var c = new Element("p", {
            html: f.furtherInfos,
            "class": "furtherInfos"
        });
        a.insert(b);
        a.insert(h);
        a.insert(o);
        a.insert(q);
        a.insert(p);
        a.insert(e);
        a.insert(c);
        var n = this;
        r.addEvent("click", function() {
            n.goldButtonClicked()
        });
        return a
    },
    goldButtonClicked: function() {
        this.requestSend = true;
        window.fireEvent("startWayOfPayment", ["plus", "plus"]);
        return false
    },
    close: function() {
        if (typeof this.requestSend !== "undefined" && this.requestSend === true) {
            return window.location.reload()
        }
        this.parent()
    }
});
Travian.Game.GoldclubDialog = new Class({
    Extends: Travian.Dialog.Ajax,
    options: {
        data: {
            cmd: "goldclubPopup"
        },
        cssClass: "brown premiumFeaturePackage premiumFeatureGoldclub",
        buttonOk: false,
        context: "goldclub",
        darkOverlay: true,
        overlayCancel: false,
        saveOnUnload: false,
        featureMarkup: function(b, a, c) {
            return ['<div class="featureImage ' + c + '"></div>', '<div class="featureContent">', '<h3 class="featureTitle">' + b + "</h3>", '<div class="featureText">' + a + "</div>", "</div>", '<div class="clear"></div>'].join("")
        }
    },
    request: function() {
        var a = this;
        this.options.data.context = this.context;
        Travian.ajax({
            data: this.options.data,
            onSuccess: function(b) {
                a.setContent(a.createContent(a, b));
                a.show()
            }
        });
        return this
    },
    initialize: function(a) {
        this.parent(Object.merge({}, this.options, a || {}))
    },
    createContent: function(n, g) {
        var a = new Element("div", {
            "class": "paymentPopupDialogWrapper"
        });
        var b = new Element("h1");
        var m = new Element("span", {
            html: g.title,
            "class": "headlineText"
        });
        b.insert(m);
        var d = new Element("span", {
            html: g.gold,
            "class": "goldWrapper"
        });
        b.insert(d);
        b.insert(new Element("div", {
            "class": "clear"
        }));
        var p = new Element("h2", {
            html: g.subHeadLine,
            "class": "subHeadline"
        });
        var q = new Element("div", {
            "class": "goldButtonWrapper"
        });
        var r = new Element("div", {
            html: g.goldButton
        });
        var h = new Element("div", {
            html: g.buttonSubtitle,
            "class": "buttonSubTitle"
        });
        q.insert(r);
        q.insert(h);
        var f = new Element("h3", {
            html: g.goldclubPopupButtonExtraFeatures,
            "class": "extraFeatures"
        });
        var k = new Element("div");
        var e = new Element("div", {
            "class": "furtherFeatures"
        });
        Object.each(g.features, function(s, v) {
            if (v == n.options.featureKey) {
                var u = new Element("div", {
                    "class": "feature featureInfo",
                    html: n.options.featureMarkup(s.title, s.text, v)
                });
                k.insert(u)
            } else {
                var t = new Element("div", {
                    "class": "feature featureInfo",
                    html: n.options.featureMarkup(s.title, s.text, v)
                });
                e.insert(t)
            }
        });
        var c = new Element("p", {
            html: g.furtherInfos,
            "class": "furtherInfos"
        });
        a.insert(b);
        a.insert(k);
        a.insert(p);
        a.insert(q);
        a.insert(f);
        a.insert(e);
        a.insert(c);
        var o = this;
        r.addEvent("click", function() {
            o.goldButtonClicked()
        });
        return a
    },
    goldButtonClicked: function() {
        this.requestSend = true;
        window.fireEvent("startWayOfPayment", ["goldclub", "goldclub"]);
        return false
    }
});
Travian.Game.ProductionBoostDialog = new Class({
    Extends: Travian.Dialog.Ajax,
    options: {
        data: {
            cmd: "productionBoostPopup"
        },
        cssClass: "brown premiumFeatureProductionBoost",
        buttonOk: false,
        context: "productionBoost",
        darkOverlay: true,
        overlayCancel: false,
        saveOnUnload: false,
        featureMarkup: function(d, f, b, a, c, e) {
            return ['<div class="featureImage ' + d + '"></div>', '<div class="featureContent">', '<h3 class="featureTitle productionBoostTitle">' + f + "</h3>", '<div class="featureRemainingTime productionBoostSubtitle subtitle ' + a + '">' + b + "</div>", '<div class="featureButton productionBoostButtonPos">' + c + "</div>", '<div class="featureDuration featureRenewal productionBoostButtonSubtitle subtitle">' + e + "</div>", "</div>", '<div class="clear"></div>'].join("")
        }
    },
    request: function() {
        var a = this;
        this.options.data.context = this.context;
        Travian.ajax({
            data: this.options.data,
            onSuccess: function(b) {
                a.setContent(a.createContent(a, b));
                a.bindElements();
                a.show()
            }
        });
        return this
    },
    initialize: function(a) {
        var b = this;
        this.parent(Object.merge({}, this.options, a || {}))
    },
    toggleAutoprolong: function(d, a) {
        var c = this;
        var b = new Object();
        b.cmd = "premiumFeature";
        b.featureKey = d;
        b.toggleAutoprolong = 1;
        Travian.ajax({
            data: b,
            onSuccess: function(e) {
                Travian.WindowManager.reloadWindowsByContext(a)
            },
            onFailure: function(e) {
                c.reload()
            }
        })
    },
    createContent: function(d, f) {
        var h = new Element("div", {
            "class": "paymentPopupDialogWrapper"
        });
        var g = new Element("h1", {
            html: f.title,
            "class": "headline"
        });
        var b = new Element("span", {
            html: f.gold,
            "class": "goldWrapper"
        });
        g.insert(b);
        var a = new Element("h3", {
            html: f.productionBoostChooseText,
            "class": "subHeadline"
        });
        var e = new Element("div", {
            "class": "featureCollection",
            id: "featureCollectionWrapper"
        });
        Object.each(f.features, function(m, k) {
            var n = new Element("div", {
                "class": "feature featureBooking",
                html: d.options.featureMarkup(k, m.title, m.subtitle, m.subtitleClassExtension, m.button, m.buttonSubtitle)
            });
            e.insert(n)
        });
        var c = new Element("p", {
            html: f.furtherInfos,
            "class": "furtherInfos"
        });
        h.insert(g);
        h.insert(a);
        h.insert(e);
        h.insert(c);
        return h
    },
    bindElements: function() {
        var a = this;
        $("featureCollectionWrapper").select(".productionBoostButton").each(function(b) {
            b.removeEvent("click");
            b.addEvent("click", function(c) {
                a.requestSend = true;
                if (this.hasClass("wood")) {
                    window.fireEvent("startWayOfPayment", ["productionboostWood", "productionBoost"])
                } else {
                    if (this.hasClass("clay")) {
                        window.fireEvent("startWayOfPayment", ["productionboostClay", "productionBoost"])
                    } else {
                        if (this.hasClass("iron")) {
                            window.fireEvent("startWayOfPayment", ["productionboostIron", "productionBoost"])
                        } else {
                            if (this.hasClass("crop")) {
                                window.fireEvent("startWayOfPayment", ["productionboostCrop", "productionBoost"])
                            }
                        }
                    }
                }
                return false
            })
        });
        $("featureCollectionWrapper").select(".checkbox").each(function(b) {
            b.removeEvent("click");
            b.addEvent("click", function(c) {
                if (this.hasClass("prolongProductionboostWood")) {
                    return a.toggleAutoprolong("productionboostWood", "productionBoost")
                } else {
                    if (this.hasClass("prolongProductionboostClay")) {
                        return a.toggleAutoprolong("productionboostClay", "productionBoost")
                    } else {
                        if (this.hasClass("prolongProductionboostIron")) {
                            return a.toggleAutoprolong("productionboostIron", "productionBoost")
                        } else {
                            if (this.hasClass("prolongProductionboostCrop")) {
                                return a.toggleAutoprolong("productionboostCrop", "productionBoost")
                            } else {
                                if (this.hasClass("prolongPlus")) {
                                    return a.toggleAutoprolong("plus", "plus")
                                }
                            }
                        }
                    }
                }
                return false
            })
        })
    },
    close: function() {
        if (typeof this.requestSend !== "undefined" && this.requestSend === true) {
            return window.location.reload()
        }
        this.parent()
    }
});
Travian.Game.GoldTransferDialog = new Class({
    Extends: Travian.Dialog.Ajax,
    options: {
        data: {
            cmd: "goldTransfer"
        },
        saveOnUnload: false
    },
    request: function() {
        var a = this;
        this.options.data.context = this.context;
        Travian.ajax({
            data: this.options.data,
            onSuccess: function(b) {
                if (b.showDialog == true) {
                    a.setContent(a.createContent(a, b));
                    a.show();
                    return true
                } else {
                    window.location.href = window.location.href;
                    window.location.reload()
                }
            }
        });
        return this
    },
    initialize: function(a, c, b) {
        this.options.data.code = c;
        this.options.data.messageId = a;
        this.options.data.accept = b ? 1 : 0;
        this.options.data.refuse = b ? 0 : 1;
        this.parent(Object.merge({}, this.options, {}))
    },
    createContent: function(b, a) {
        return a.statusText
    },
    close: function() {
        window.location.href = window.location.href;
        window.location.reload()
    }
});
var wheelOfFortune;

function WheelOfFortune() {
    this.sufficientGold = true;
    this.prizeClass = "no_image";
    this.prizeDescription = "";
    this.idleAnimationRunning = true;
    this.requestIdleAnimationToggle = false;
    this.idleAnimationStep = 1;
    var a = function() {
        var b = this;
        this.third = {
            name: "pot_idle",
            next: null
        };
        this.second = {
            name: "pot_idle",
            next: b.third
        };
        this.first = {
            name: "pot_move",
            next: b.second
        };
        this.third.next = this.first;
        this.current = this.first
    };
    this.animationStep = new a();
    this.lightningAnimationRunning = false;
    this.requestLightningAnimationToggle = false;
    this.lightningAnimationStep = 1;
    this.showPrizeAnimationFinished = true;
    this.wheelButtonsEnabled = true;
    this.ajaxCallRunning = false;
    this.wheelPrizeElement = $("wheelPrize");
    this.newWheelPrizeElementPosition = 0;
    this.wheelButtons = $$("#wheelDescription button");
    this.direction = "ltr";
    this.initialize = function() {
        var f = this;
        this.bindEvents();
        this.startButtonValidation();
        this.startAnimations();
        if ($(document.body).hasClass("ltr")) {
            f.direction = "ltr"
        } else {
            f.direction = "rtl"
        }
        var b;
        var g;
        var d;
        var e;
        if (f.direction == "ltr") {
            b = $$(".wheelOfFortune .inventoryTab")[0].getPosition(true);
            e = $$(".wheelOfFortune .wheelTab")[0].getPosition(true);
            g = b.x - e.x;
            d = $$(".wheelOfFortune .inventoryTab")[0].getSize().x;
            f.newWheelPrizeElementPosition = -293 + g + (d - 80) / 2
        } else {
            d = $$(".wheelOfFortune .inventoryTab")[0].getSize().x;
            var c = $$(".wheelOfFortune .wheelTab")[0].getSize().x;
            f.newWheelPrizeElementPosition = -293 + c + (d - 80) / 2
        }
        wheelOfFortune = this
    };
    this.startAnimations = function() {
        var b = this;
        setInterval(function() {
            if (b.idleAnimationRunning) {
                var d = $("wheelAnimation");
                d.set("class", "wheelOfFortune " + b.animationStep.current.name + " pot_" + b.idleAnimationStep);
                b.idleAnimationStep++;
                if (b.idleAnimationStep == 17) {
                    b.idleAnimationStep = 1;
                    b.animationStep.current = b.animationStep.current.next;
                    if (b.requestIdleAnimationToggle) {
                        d.set("class", "wheelOfFortune " + b.animationStep.current.name + " pot_17");
                        b.animationStep.current = b.animationStep.first;
                        b.showPrizeAnimationFinished = false;
                        b.idleAnimationRunning = !b.idleAnimationRunning;
                        b.requestLightningAnimationToggle = true;
                        b.requestIdleAnimationToggle = false;
                        setTimeout(function() {
                            $("wheelPrizeBox").set("class", "wheelOfFortune prize_2");
                            setTimeout(function() {
                                $("wheelPrize").set("class", "wheelOfFortune winningPage " + b.prizeClass);
                                if (b.prizeClass == "npc_merchant_voucher_x5") {
                                    $("npc_merchant_voucher_x5_text").removeClass("hide")
                                }
                                var e = $("wheelPrizeDescription");
                                e.set("html", b.prizeDescription);
                                e.set("class", "wheelOfFortune wheelPrizeDescription");
                                $("wheelPrizeBoxRays").set("class", "wheelOfFortune rays_2");
                                setTimeout(function() {
                                    b.showPrizeAnimationFinished = true
                                }, 500)
                            }, 500)
                        }, 1000)
                    }
                }
            } else {
                if (b.requestIdleAnimationToggle) {
                    if (b.sufficientGold) {
                        b.showPrizeAnimationFinished = false;
                        b.requestLightningAnimationToggle = true;
                        b.requestIdleAnimationToggle = false;
                        setTimeout(function() {
                            $("wheelPrizeBox").set("class", "wheelOfFortune prize_2");
                            setTimeout(function() {
                                $("wheelPrize").set("class", "wheelOfFortune winningPage " + b.prizeClass);
                                if (b.prizeClass == "npc_merchant_voucher_x5") {
                                    $("npc_merchant_voucher_x5_text").removeClass("hide")
                                }
                                var e = $("wheelPrizeDescription");
                                e.set("html", b.prizeDescription);
                                e.set("class", "wheelOfFortune wheelPrizeDescription");
                                $("wheelPrizeBoxRays").set("class", "wheelOfFortune rays_2");
                                setTimeout(function() {
                                    b.showPrizeAnimationFinished = true
                                }, 500)
                            }, 500)
                        }, 1000)
                    } else {
                        b.requestIdleAnimationToggle = false;
                        b.idleAnimationRunning = true;
                        $("wheelPrizeBox").set("class", "wheelOfFortune prize_1");
                        $("wheelPrizeBoxRays").set("class", "wheelOfFortune rays_1");
                        $("wheelPrize").set("class", "wheelOfFortune winningPage no_image");
                        $("npc_merchant_voucher_x5_text").addClass("hide");
                        var c = $("wheelPrizeDescription");
                        c.set("html", "");
                        c.set("class", "wheelOfFortune wheelPrizeDescription hidden")
                    }
                }
            }
        }, 100);
        setInterval(function() {
            if (b.lightningAnimationRunning) {
                if (b.lightningAnimationStep == 1) {
                    $("wheelPrizeBox").set("class", "wheelOfFortune prize_1");
                    $("wheelPrizeBoxRays").set("class", "wheelOfFortune rays_1");
                    $("wheelPrize").set("class", "wheelOfFortune winningPage no_image");
                    $("npc_merchant_voucher_x5_text").addClass("hide");
                    var c = $("wheelPrizeDescription");
                    c.set("html", "");
                    c.set("class", "wheelOfFortune wheelPrizeDescription hidden")
                }
                $("wheelClickAnimation").set("class", "wheelOfFortune lightning_" + b.lightningAnimationStep);
                b.lightningAnimationStep++;
                if (b.lightningAnimationStep == 14) {
                    b.lightningAnimationRunning = false;
                    b.lightningAnimationStep = 1
                }
            } else {
                if (b.requestLightningAnimationToggle) {
                    b.lightningAnimationRunning = !b.lightningAnimationRunning;
                    b.requestLightningAnimationToggle = false
                }
            }
        }, 50)
    };
    this.startButtonValidation = function() {
        var b = this;
        setInterval(function() {
            b.wheelButtonsEnabled = true;
            if (b.wheelPrizeElement.hasClass("fly") || b.wheelPrizeElement.hasClass("fall")) {
                b.wheelButtonsEnabled = false
            }
            if (b.lightningAnimationRunning) {
                b.wheelButtonsEnabled = false
            }
            if (b.requestIdleAnimationToggle || b.requestLightningAnimationToggle) {
                b.wheelButtonsEnabled = false
            }
            if (!b.showPrizeAnimationFinished) {
                b.wheelButtonsEnabled = false
            }
            if (b.ajaxCallRunning) {
                b.wheelButtonsEnabled = false
            }
            b.wheelButtons.removeClass("disabled");
            if (!b.wheelButtonsEnabled) {
                b.wheelButtons.addClass("disabled")
            }
        }, 10)
    };
    this.bindEvents = function() {
        var b = this;
        $$("#wheelDescription #premiumSpin button").addEvent("click", function() {
            b.showPrizeAnimationFinished = false;
            var d = parseInt($$(".ajaxReplaceableGoldAmount").get("html"));
            var c = parseInt($$("#premiumSpin.wheelOfFortune .goldValue").get("html"));
            if (d >= c) {
                b.ajaxCallRunning = true
            } else {
                b.sufficientGold = false;
                b.showPrizeAnimationFinished = true;
                if (!b.idleAnimationRunning) {
                    b.requestIdleAnimationToggle = true
                }
            }
        });
        $$("#wheelDescription #freeSpin button").addEvent("click", function() {
            b.ajaxCallRunning = true;
            b.showPrizeAnimationFinished = false
        });
        $$(".wheelOfFortune #wheelContainer").addEvent("click", function(c) {
            if (c.target.id != "wheelPrizeBox" && c.target.id != "freeSpin" && c.target.id != "premiumSpin" && c.target.id != "wheelPrize" && c.target.id != "wheelPrizeDescription" && c.target.id != "npc_merchant_voucher_x5_text" && !c.target.hasClass("button-content") && !c.target.hasClass("goldValue") && !c.target.hasClass("goldIcon") && !c.target.hasClass("goldBig") && !c.target.hasClass("greenBig")) {
                b.flyPrizeToInventory()
            }
        })
    };
    this.showWonPrize = function(f, e, d, c) {
        var b = this;
        b.ajaxCallRunning = false;
        b.requestIdleAnimationToggle = true;
        b.prizeClass = f;
        b.prizeDescription = e;
        $$(".ajaxReplaceableGoldAmount").set("html", d);
        if (c) {
            if ($$("#wheelDescription #freeSpin").hasClass("hide")) {
                $$("#wheelDescription #premiumSpin").addClass("hide");
                $$("#wheelDescription #freeSpin").removeClass("hide")
            }
        } else {
            if ($$("#wheelDescription #premiumSpin").hasClass("hide")) {
                $$("#wheelDescription #freeSpin").addClass("hide");
                $$("#wheelDescription #premiumSpin").removeClass("hide")
            }
        }
    };
    this.flyPrizeToInventory = function() {
        var b = this;
        if (!b.wheelPrizeElement.hasClass("no_image") && !b.ajaxCallRunning && b.showPrizeAnimationFinished) {
            $("npc_merchant_voucher_x5_text").addClass("hide");
            $("wheelPrizeBox").set("class", "wheelOfFortune prize_1");
            $("wheelPrizeBoxRays").set("class", "wheelOfFortune rays_1");
            b.wheelPrizeElement.addClass("fly");
            if (b.direction == "ltr") {
                b.wheelPrizeElement.setStyle("margin-left", b.newWheelPrizeElementPosition + "px")
            } else {
                b.wheelPrizeElement.setStyle("margin-right", b.newWheelPrizeElementPosition + "px")
            }
            $$(".wheelOfFortune .inventoryTab").removeClass("normal").addClass("active");
            setTimeout(function() {
                b.wheelPrizeElement.addClass("fall");
                setTimeout(function() {
                    $$(".wheelOfFortune .inventoryTab").removeClass("active").addClass("normal");
                    setTimeout(function() {
                        b.wheelPrizeElement.setStyle("display", "none");
                        setTimeout(function() {
                            b.wheelPrizeElement.set("class", "wheelOfFortune winningPage no_image");
                            if (b.direction == "ltr") {
                                b.wheelPrizeElement.setStyle("margin-left", "-61px")
                            } else {
                                b.wheelPrizeElement.setStyle("margin-right", "-61px")
                            }
                        }, 50);
                        setTimeout(function() {
                            b.wheelPrizeElement.setStyle("display", "block");
                            b.idleAnimationRunning = true
                        }, 250)
                    }, 1)
                }, 1000)
            }, 1250)
        }
    }
}
Travian.Game.WheelOfFortuneInventory = new Class({
    options: {
        callable: {
            updatePrizeExplanation: function(c, b, a) {},
            getContainer: function(b, a) {
                return a
            }
        }
    },
    isFunction: function(a) {
        return !!(a && a.constructor && a.call && a.apply)
    },
    initialize: function(a) {
        this.options = Object.merge(this.options, this.options, a || {});
        this.prizeId = a.prizeId;
        this.maxAmount = parseInt(a.maxAmount);
        this.prizeName = a.prizeName;
        this.isSingleUse = a.isSingleUse;
        this.confirmEnabled = a.confirmEnabled;
        this.translations = a.translations;
        if (this.isSingleUse) {
            this.maxAmount = 1
        }
    },
    showApplyPrizeForm: function() {
        var d = this;
        if (this.alreadyOpen) {
            return
        }
        this.alreadyOpen = true;
        var a = this.getContainer(this.prizeId);
        var c = a.get("html");
        var b = c.dialog({
            relativeTo: $("content"),
            elementFocus: "totalPrizeAmount",
            buttonTextOk: this.translations.buttonOkText,
            buttonOk: true,
            keepOpen: true,
            onOpen: function(f, g) {
                var e = $("totalPrizeAmount");
                e.set("value", d.maxAmount);
                d.updatePrizeExplanation(d.maxAmount);
                if (!d.isSingleUse) {
                    f.makeInputAmountable(e, d.maxAmount, d.updatePrizeExplanation.bind(d))
                }
                if (!d.confirmEnabled) {
                    f.toggleFormState(true)
                }
            },
            onOkay: function(e, f) {
                Travian.ajax({
                    data: {
                        cmd: "usePrize",
                        amount: d.getSubmitAmount(),
                        prize_id: d.prizeId
                    }
                })
            },
            onClose: function(e, f) {
                d.alreadyOpen = false
            }
        })
    },
    updatePrizeExplanation: function(b) {
        var a = this.prizeName;
        var c = this.translations.confirmationText;
        c = c.replace("[AMOUNT]", b).replace("[PRIZE_NAME]", a);
        $("prizeExplanation").set("html", c);
        if (this.isFunction(this.options.callable.updatePrizeExplanation)) {
            this.options.callable.updatePrizeExplanation(this, b, a)
        }
    },
    getContainer: function() {
        var a = new Element("div", {
            id: "usePrizePopup"
        });
        if (this.prizeId != "gold_small" && this.prizeId != "gold_large") {
            a.appendChild(new Element("div", {
                html: this.translations.applyToVillageText
            }))
        }
        if (!this.isSingleUse) {
            a.appendChild(new Element("span", {
                html: this.translations.amountText
            }));
            a.appendChild(new Element("input", {
                id: "totalPrizeAmount",
                styles: {
                    width: "100px"
                }
            }))
        } else {
            a.appendChild(new Element("input", {
                id: "totalPrizeAmount",
                type: "hidden"
            }))
        }
        a.appendChild(new Element("div", {
            html: "",
            id: "prizeExplanation"
        }));
        if (this.isFunction(this.options.callable.getContainer)) {
            a = this.options.callable.getContainer(this, a)
        }
        return a
    },
    getSubmitAmount: function() {
        var a = parseInt($("totalPrizeAmount").get("value").replace(/^0+/, "")) || 0;
        if (a <= this.maxAmount && a > 0) {
            return a
        }
        return this.maxAmount
    }
});
Travian.Game.Quest = new(new Class({
    Implements: [Options],
    options: {
        isTutorial: false,
        listData: {},
        tutorialData: {},
        dialogListData: {},
        highlightSelectors: {},
        tipsTurnoffAjaxTrigger: false
    },
    highlightObjects: [],
    toggleStatus: false,
    init: function() {
        var a = false;
        if (Travian.Game.Preferences.get("highlightsToggle") !== false) {
            a = true
        }
        this.toggleHighlights(a, false, false)
    },
    dialog: {
        quest: null,
        achievement: null
    },
    mentorClick: function(a) {
        if (Travian.WindowManager.getWindowsByContext("quest").length > 0) {
            Travian.WindowManager.closeByContext("quest")
        } else {
            if (this.options.isTutorial == true) {
                if (typeof a == "undefined" || a == "") {
                    throw ("Keine ID zur Darstellung an den Questdialog Ã¼bergeben!")
                }
                this.openInformationDialog(a, this.options.tutorialData.answersLink, null)
            } else {
                this.openTodoListDialog(this.options.dialogListData.answersLink)
            }
        }
    },
    rewardButtonClick: function(b) {
        Travian.WindowManager.closeByContext("quest");
        var a = {
            cmd: "quest",
            questTutorialId: b,
            action: "reward"
        };
        if (b.search(/DailyQuest/) != -1) {
            a = {
                cmd: "dailyquests",
                questId: b,
                action: "reward"
            }
        }
        new Travian.ajax({
            data: a
        })
    },
    skipButtonClick: function() {
        new Travian.ajax({
            data: {
                cmd: "quest",
                action: "skip"
            }
        })
    },
    nextButtonClick: function(a) {
        new Travian.ajax({
            data: {
                cmd: "quest",
                questTutorialId: a,
                action: "next"
            }
        })
    },
    createHighlights: function() {
        var d = this;
        this.highlightObjects.each(function(e) {
            e.deactivate()
        });
        this.highlightObjects = [];
        for (var b = 0; b < this.options.highlightSelectors.length; b++) {
            var c = this.options.highlightSelectors[b];
            var a = $$(c.selector);
            if (a.length > 0) {
                a.each(function(f) {
                    var g = 1000;
                    if (c.selector.match(/^\.dialog/)) {
                        g = Travian.WindowManager.getCurrentZIndex() + 2
                    }
                    var e = new Travian.Game.Highlight({
                        element: f,
                        renderer: c.renderer,
                        rendererOptions: {
                            zIndex: g
                        }
                    });
                    d.highlightObjects.push(e);
                    if (d.toggleStatus) {
                        e.activate()
                    }
                });
                break
            }
        }
    },
    toggleHighlights: function(c, e, b) {
        if (typeof c === "undefined") {
            this.toggleStatus = !this.toggleStatus
        } else {
            this.toggleStatus = (c)
        }
        var d = this;
        Travian.Game.Preferences.set("highlightsToggle", this.toggleStatus, false);
        var a = $("questTutorialLightBulb");
        if (a) {
            if (this.toggleStatus) {
                a.addClass("bulbActive").removeClass("bulbWhite");
                if (b) {
                    a.setTip(b);
                    Travian.Tip.show(b)
                }
            } else {
                a.removeClass("bulbActive").addClass("bulbWhite");
                if (e) {
                    a.setTip(e);
                    Travian.Tip.show(e)
                }
            }
        }
        if (this.options.tipsTurnoffAjaxTrigger && this.toggleStatus === false) {
            new Travian.ajax({
                data: {
                    cmd: "quest",
                    action: "tipsOff"
                }
            })
        }
        if (this.highlightObjects.length == 0 && this.options.highlightSelectors.length > 0) {
            this.createHighlights()
        }
        this.highlightObjects.each(function(f) {
            if (d.toggleStatus) {
                f.activate()
            } else {
                f.deactivate()
            }
        })
    },
    openInformationDialog: function(f, a, b) {
        if (!b) {
            b = null
        }
        var c = (this.options.isTutorial ? "tutorial" : "quest");
        var e = "quest";
        if (f.search(/Achievement/) != -1 || f.search(/DailyQuest/) != -1) {
            e = "achievement"
        }
        var d = this;
        if (this.dialog[e] === null) {
            Travian.WindowManager.closeByContext("quest");
            this.dialog[e] = new Travian.Dialog.Ajax({
                resizeDialogIfOverflow: false,
                data: {
                    cmd: "quest",
                    questTutorialId: f,
                    action: b
                },
                context: e,
                buttonOk: false,
                enableBackground: this.options.isTutorial,
                darkOverlay: this.options.isTutorial,
                draggable: true,
                savePositionForSession: {
                    preferenceKey: "QuestDialogPosition"
                },
                saveOnUnload: true,
                overlayCancel: false,
                infoIcon: a,
                cssClass: "white questInformation " + f + " " + c,
                preventFormSubmit: true,
                buttonTextInfo: Travian.Translation.get("answers." + f.toLowerCase() + "_title") || "Answers",
                topHeaderOffset: (e === "achievement" ? 40 : 0),
                onClose: function() {
                    if (!d.toggleStatus) {
                        d.highlightObjects.each(function(g) {
                            g.deactivate()
                        })
                    }
                    d.dialog[e] = null;
                    if (d.options.isTutorial) {
                        if (d.options.tutorialData.id === "Tutorial_01") {
                            Travian.Game.Preferences.set("firstTutorialClosed", true, false)
                        }
                    }
                },
                fx: {
                    options: {
                        duration: 0
                    }
                }
            })
        } else {
            if (f.search(/DailyQuest/) != -1) {
                this.dialog[e].options.data.cmd = "dailyquests";
                this.dialog[e].options.data.questId = f
            } else {
                this.dialog[e].options.data.cmd = "quest";
                this.dialog[e].options.data.questTutorialId = f
            }
            this.dialog[e].displayButtonOk(false);
            this.dialog[e].options.data.action = b;
            this.dialog[e].options.infoIcon = a;
            this.dialog[e].options.buttonTextInfo = Travian.Translation.get("answers." + f.toLowerCase() + "_title") || "Answers";
            this.dialog[e].request()
        }
        this.dialog[e].wrapper.down("form").removeEvent("submit");
        this.dialog[e].wrapper.down("form").addEvent("submit", function(g) {
            g.stop();
            return false
        })
    },
    openTodoListDialog: function(k, g) {
        var f = this;
        var d = "quest";
        var h = "quest";
        var e = false;
        var b = "";
        var a = false;
        var c = true;
        if (typeof g !== "undefined" && g !== null) {
            d = "dailyquests";
            h = "achievement";
            e = true;
            b = Travian.Translation.get("allgemein.close");
            a = true;
            c = false
        }
        if (this.dialog[h] === null) {
            Travian.WindowManager.closeByContext(d);
            this.dialog[h] = new Travian.Dialog.Ajax({
                resizeDialogIfOverflow: false,
                data: {
                    cmd: d
                },
                context: h,
                buttonOk: e,
                buttonTextOk: b,
                buttonCloseOnClickOk: a,
                enableBackground: false,
                draggable: true,
                infoIcon: k,
                savePositionForSession: {
                    preferenceKey: "QuestDialogAchievementPosition"
                },
                saveOnUnload: c,
                overlayCancel: false,
                cssClass: "white questTodoList",
                preventFormSubmit: true,
                topHeaderOffset: (h === "achievement" ? 40 : 0),
                onClose: function() {
                    f.dialog[h] = null
                },
                fx: {
                    options: {
                        duration: 0
                    }
                }
            })
        } else {
            this.dialog[h].options.data.cmd = d;
            this.dialog[h].displayButtonOk(e);
            this.dialog[h].options.data.questId = null;
            this.dialog[h].options.data.questTutorialId = null;
            this.dialog[h].options.infoIcon = null;
            this.dialog[h].options.data.action = null;
            this.dialog[h].request()
        }
    },
    bindDialogTodoListDelegation: function() {
        var b = this;
        var a = $("questTodoListDialog");
        a.addEvent("click:relay(a.quest)", function(f, d) {
            f.stop();
            var c = d.get("data-questId");
            var e = d.get("data-category");
            alert($("questTodoListDialog"));
            b.openInformationDialog(c, b.options.listData[e].quests[c].answersLink, null)
        })
    },
    bindListDelegation: function(c) {
        var b = this;
        var a;
        if (typeof c === "undefined" || c == null) {
            a = $("mentorTaskList")
        } else {
            a = $(c)
        }
        if (!a.hasClass("notClickable")) {
            a.addEvent("click:relay(a.quest)", function(g, e) {
                g.stop();
                var d = e.get("data-questId");
                var f = e.get("data-category");
                b.openInformationDialog(d, b.options.listData[f].quests[d].answersLink)
            })
        }
    },
    bindListDelegationDeg:function(a){var b=this;a.on("click",function(f){f.stopPropagation();var d=jQuery(f.delegateTarget);
var c=d.attr("data-questId");var e=d.attr("data-category");if(e&&c){b.openInformationDialog(c,b.options.listData[e].quests[c].answersLink)}})},
    initializeQuests: function() {
        if (this.options.isTutorial && this.options.tutorialData.id === "Tutorial_01" && Travian.Game.Preferences.get("firstTutorialClosed") !== true) {
            if (Travian.WindowManager.getWindowsByContext("quest").length == 0) {
                this.openInformationDialog(this.options.tutorialData.id, this.options.tutorialData.answersLink, null)
            }
        }
    },
    addListData: function(b) {
        if (typeof b !== "undefined" && b != null) {
            for (var a in b) {
                if (b.hasOwnProperty(a)) {
                    this.options.listData[a] = b[a]
                }
            }
        }
    },
    animateQuestMaster: function() {
        var a = $$("#questmasterButton .animation");
        var d = 0;
        var f = 15;
        var e = 30;
        var c = 5000;
        var b = function() {
            if (d == 0) {
                a.addClass("animate")
            }
            if (d == f) {
                a.removeClass("frame" + d);
                a.removeClass("animate");
                d = 0;
                window.setTimeout(b, c)
            } else {
                a.removeClass("frame" + d);
                d++;
                a.addClass("frame" + d);
                window.setTimeout(b, e)
            }
        };
        b()
    },
    closeDialog: function() {
        if (this.dialog.quest !== null) {
            this.dialog.quest.close()
        }
    }
}))();
Travian.Game.ReportSpamMessagesDialog = new(new Class({
    reportSpam: function(c, h, f, b, a) {
        var g = '<select size="1" id="spamReason">';
        for (var e in a) {
            g += '<option value="' + e + '">' + a[e] + "</option>"
        }
        g += '</select><br/><br/><span class="notice">' + b + "</span>";
        var d = new Travian.Dialog({
            title: h,
            keepOpen: true,
            buttonTextOk: f,
            onOpen: function() {
                d.disableForm()
            },
            onOkay: function() {
                var k = $("spamReason");
                if (null !== k) {
                    Travian.ajax({
                        data: {
                            cmd: "reportSpamMessage",
                            messageId: c,
                            spamReason: $("spamReason").getSelected().get("value")[0]
                        },
                        onSuccess: function(m) {
                            if (undefined !== m.reportingSuccessful && m.reportingSuccessful) {
                                d.setContent(m.reportingSuccessful);
                                $$(".dialog button .button-container .button-content .text").set("html", m.closeButtonText);
                                $("reportSpam").addClass("disabled").set("onclick", "");
                                d.enableForm();
                                $$(".dialog form").addEvent("submit", function(n) {
                                    n.stop();
                                    d.close()
                                })
                            }
                        }
                    })
                }
            }
        });
        d.setContent(g);
        d.show();
        $(d).addEvent("change:relay(#spamReason)", function() {
            var k = this.getSelected().get("value")[0] == "not_chosen";
            d.toggleFormState(k)
        })
    }
}));

function http_request(url, callback, method, post_data) {
    if (method === undefined) {
        method = "GET"
    }
    var httprid;
    if (window.XMLHttpRequest) {
        httprid = new XMLHttpRequest()
    } else {
        if (window.ActiveXObject) {
            try {
                httprid = new ActiveXObject("Msxml2.XMLHTTP")
            } catch (e) {
                try {
                    httprid = new ActiveXObject("Microsoft.XMLHTTP")
                } catch (e) {}
            }
        } else {
            throw "Can not create XMLHTTP-instance"
        }
    }
    httprid.onreadystatechange = function() {
        if (httprid.readyState == 4) {
            if (httprid.status == 200) {
                var content_type = httprid.getResponseHeader("Content-Type");
                content_type = content_type.substr(0, content_type.indexOf(";"));
                switch (content_type) {
                    case "application/json":
                        callback((httprid.responseText == "" ? null : eval("(" + httprid.responseText + ")")));
                        break;
                    case "text/plain":
                    case "text/html":
                        callback(httprid.responseText);
                        break;
                    default:
                        throw "Illegal content type"
                }
            } else {
                throw "An error has occurred during request"
            }
        }
    };
    httprid.open(method, url, true);
    if (method == "POST") {
        httprid.setRequestHeader("Content-Type", "application/x-www-form-urlencoded; charset=utf-8");
        var parameters = encode_querystring(post_data)
    } else {
        var parameters = null
    }
    httprid.send(parameters)
}

function encode_querystring(b) {
    var a = "";
    var d = true;
    for (var c in b) {
        a += (d ? "" : "&") + c + "=" + window.encodeURI(b[c]);
        if (d) {
            d = false
        }
    }
    return a
}
Travian.AttackSymbol = {
    attackSysbolState: [],
    getAttackSymbolState: function(d) {
        var c = this.attackSysbolState[d];
        if (!c) {
            var a = $("markSymbol_" + d).get("class");
            var b = parseInt(a.replace(/[^0-9]/gi, ""));
            c = {
                type: b,
                oldType: b
            };
            Travian.AttackSymbol.attackSysbolState[d] = c
        }
        return c
    },
    drawAttackSymbol: function(b) {
        var a = Travian.AttackSymbol.getAttackSymbolState(b);
        $("markSymbol_" + b).set("class", "markAttack markAttack" + a.type)
    },
    markAttackSymbol: function(b) {
        var a = Travian.AttackSymbol.getAttackSymbolState(b);
        a.type++;
        if (a.type == 4) {
            a.type = 0
        }
        Travian.AttackSymbol.drawAttackSymbol(b);
        Travian.ajax({
            data: {
                cmd: "markIncomingAttacks",
                data: {
                    id: b,
                    state: a.type
                }
            },
            onSuccess: function(c) {
                if (c.result == false) {
                    a.type = a.oldType;
                    Travian.AttackSymbol.drawAttackSymbol(b)
                } else {
                    a.oldType = a.type
                }
            }
        })
    }
};
Travian.Game.Village = new(new Class({
    toggleBuildingLevels: function() {
        var b = $("lswitch"),
            a;
        b.toggleClass("lswitchMinus").toggleClass("lswitchPlus");
        a = b.hasClass("lswitchPlus");
        if (a) {
            Travian.Game.Preferences.set("t4level", 1, false)
        } else {
            Travian.Game.Preferences.set("t4level", null, false)
        }
        if (a) {
            $$("#levels div:only-child").each(function(e) {
                if (!e.hasClass("labelLayer")) {
                    return true
                }
                var d = e.get("text"),
                    c = e.getParent();
                e.destroy();
                c.set("text", d).removeClass("colorLayer")
            })
        } else {
            $$("#levels div").each(function(c) {
                var e = c.get("text"),
                    d = new Element("div.labelLayer");
                d.set("text", e);
                c.addClass("colorLayer").set("text", "").grab(d)
            })
        }
    }
}));
Travian.TabManager = new Class({
    initialize: function() {
        var a = window.location.hash.trim();
        if (a !== "") {
            this.applyAnchor(a)
        }
    },
    applyAnchor: function(a) {
        var b = a.split("-"),
            c = b[0].substring(1);
        delete b[0];
        if (b.length && this.handlers[c] !== undefined) {
            return this.handlers[c](b.join(""))
        }
    },
    handlers: {
        payment: function(a) {
            window.fireEvent("startPaymentWizard", {
                data: {
                    activeTab: a
                }
            })
        }
    }
});
Travian.Game.Vacation = {
    dialog: null,
    updateVacationTime: function(d, b) {
        var c = parseInt(Date.now()) + parseInt(d) * 86400000,
            a = function(g, m) {
                var e = function(q) {
                        return (q < 10) ? "0" + q : q
                    },
                    f = new Date(g.getTime() + g.getTimezoneOffset() * 60000 + m * 1000),
                    o = e(f.getDate()),
                    k = e(f.getMonth() + 1),
                    n = e(f.getFullYear() % 100),
                    h = e(f.getHours()),
                    p = e(f.getMinutes());
                return o + "." + k + "." + n + ", " + h + ":" + p
            };
        $("vacationTime").innerHTML = a(new Date(c), b)
    },
    closeDialog: function() {
        if (this.dialog !== null) {
            this.dialog.close()
        }
    },
    showDialog: function(a) {
        this.closeDialog();
        this.dialog = new Travian.Dialog({
            buttonOk: false,
            type: Travian.Dialog.DIALOG_TYPE_MODAL
        });
        this.dialog.setContent(a);
        this.dialog.show()
    },
    openConfirmation: function() {
        Travian.ajax({
            data: {
                cmd: "vacationModeConfirmation",
                params: $("dayInput").value
            },
            onSuccess: function(a) {
                if (a.html !== "") {
                    Travian.Game.Vacation.showDialog(a.html)
                } else {
                    Travian.Game.Vacation.closeDialog()
                }
            }
        })
    }
};
Travian.Game.Map = (function() {
    var a = 0;
    return {
        Containers: null,
        debug: false,
        version: 1,
        getNewId: function() {
            a++;
            return "mapId" + a
        },
        isMapPositionInRect: function(c, b) {
            if (c.x0 <= b.x && c.y0 <= b.y && b.x <= c.x1 && b.y <= c.y1) {
                return true
            }
            return false
        },
        isPositionInRect: function(c, b) {
            return (c.x0 <= b.x && c.y0 <= b.y && b.x <= c.x1 && b.y <= c.y1)
        },
        register: function(b) {
            if (this.debug) {
                if (this.Containers === null) {
                    this.Containers = []
                }
                this.Containers.push(b)
            }
        },
        remapShortParameters: function(b) {
            if (typeof b.x !== "undefined" && typeof b.y !== "undefined") {
                b.position = {
                    x: b.x,
                    y: b.y
                };
                delete(b.x);
                delete(b.y)
            }
            if (typeof b.s !== "undefined") {
                b.symbols = b.s;
                delete(b.s)
            }
            if (typeof b.c !== "undefined") {
                b.title = b.c;
                delete(b.c)
            }
            if (typeof b.t !== "undefined") {
                b.text = b.t;
                delete(b.t)
            }
            if (typeof b.u !== "undefined") {
                b.uid = b.u;
                delete(b.u)
            }
            if (typeof b.d !== "undefined") {
                b.did = b.d;
                delete(b.d)
            }
            if (typeof b.a !== "undefined") {
                b.aid = b.a;
                delete(b.a)
            }
            return b
        },
        wrapCoordinate: function(f, e) {
            var d = Travian.Defaults.Map.Size;
            var c = ((f - d.left) % d.width + d.width) % d.width + d.left;
            var b = ((e - d.bottom) % d.height + d.height) % d.height + d.bottom;
            return {
                $x: c,
                $y: b
            }
        },
        xy2id: function(d, c) {
            var e = this.wrapCoordinate(d, c);
            var b = Travian.Defaults.Map.Size;
            return (b.top - e.$y) * b.width + (e.$x - b.left) + 1
        }
    }
})();
Travian.Game.Map.Base = new Class({
    contextMenu: null,
    id: null,
    globalProperties: ["cookie", "dataStore", "transition", "updater", "contextMenu"],
    element: null,
    options: null,
    parentContainer: null,
    transition: null,
    classType: "Travian.Game.Map.Base",
    updater: null,
    destroy: function() {
        if (this.element) {
            this.element.destroy()
        }
    },
    getMapCoordinates: function() {
        if (!this.position || !this.transition) {
            return null
        }
        return this.transition.translateToMap(this.position)
    },
    initialize: function(a, c) {
        a = Travian.Game.Map.remapShortParameters(a);
        var b = this;
        this.options = Object.merge({}, a);
        Object.each(this.options, function(e, d) {
            b[d] = e
        });
        if (this.id === null) {
            this.id = Travian.Game.Map.getNewId()
        }
        if (c) {
            this.parentContainer = c;
            this.globalProperties.each(function(d) {
                if (b.parentContainer[d]) {
                    b[d] = b.parentContainer[d]
                }
            });
            if (c.classType === "Travian.Game.Map.Container") {
                this.mapContainer = c
            } else {
                if (c.mapContainer) {
                    this.mapContainer = this.parentContainer.mapContainer
                }
            }
        }
    },
    isMapPositionInRect: function(a) {
        if (!this.mapCoordinates || !a) {
            return false
        }
        var b = Object.clone(this.mapCoordinates);
        if (!b.right) {
            b.right = b.x
        }
        if (!b.top) {
            b.top = b.y
        }
        return (b.x <= a.x && b.y <= a.y && a.x <= b.right && a.y <= b.top)
    },
    isPositionInRect: function(a) {
        return Travian.Game.Map.isPositionInRect({
            x0: this.position.x,
            y0: this.position.y,
            x1: this.position.x + this.position.width,
            y1: this.position.y + this.position.height
        }, a)
    },
    render: function(a) {
        a = a || {};
        if (!a.nodeType) {
            a.nodeType = "div"
        }
        this.element = (new Element(a.nodeType)).disableSelection();
        return this
    }
});
Travian.Game.Map.Container = (function() {
    var a = function(c) {
        var f = false;
        var b = false;
        var m = null;
        var g = {
            count: 0,
            shift: false,
            control: false,
            alt: false,
            keys: {},
            fn: null
        };
        var d = {
            moved: false,
            x: null,
            y: null,
            target: null
        };
        Object.each(c.keyboard, function(p, o) {
            if (typeof c.keyboard[o] === "string") {
                c.keyboard[o] = {
                    fn: c.keyboard[o]
                }
            }
            c.keyboard[o] = Object.append({
                on: ["keydown", "keyup"],
                periodical: 1
            }, c.keyboard[o]);
            if (typeof c.keyboard[o].fn === "string") {
                g.keys[o] = false
            }
        });
        var n = c.containerRender.getStyle("cursor");
        var k = function(q, o, r, p) {
            if (!c.isEventsEnabled()) {
                return
            }
            if (c.containerViewSize.x <= o && c.containerViewSize.y <= r && o <= c.containerViewSize.right && r <= c.containerViewSize.bottom && p === c.containerMover && !q.rightClick) {
                f = true;
                b = false;
                m = {
                    x: o,
                    y: r
                };
                q.stop()
            }
        };
        var e = function(p, o, r) {
            if (c.containerViewSize.x <= o && c.containerViewSize.y <= r && o <= c.containerViewSize.right && r <= c.containerViewSize.bottom) {
                c.currentMousePosition.browserAbsolute.x = o;
                c.currentMousePosition.browserAbsolute.y = r;
                c.currentMousePosition.browser.x = o - c.containerSize.x - c.elementSize.x;
                c.currentMousePosition.browser.y = r - c.containerSize.y - c.elementSize.y;
                c.currentMousePosition.map = c.transition.translateToMap(c.currentMousePosition.browser, {})
            } else {
                c.currentMousePosition.browserAbsolute.x = null;
                c.currentMousePosition.browserAbsolute.y = null;
                c.currentMousePosition.browser.x = null;
                c.currentMousePosition.browser.y = null;
                c.currentMousePosition.map.x = null;
                c.currentMousePosition.map.y = null
            }
            if (!f) {
                return
            }
            if (!c.isEventsEnabled()) {
                return
            }
            var q = {
                x: o - m.x,
                y: -(r - m.y)
            };
            m = {
                x: o,
                y: r
            };
            b = true;
            c.containerRender.setStyles({
                cursor: "move"
            });
            c.move(q);
            p.stop()
        };
        var h = function(p, o, r) {
            if (!c.isEventsEnabled()) {
                return
            }
            if (o !== null && r !== null && c.containerViewSize.x <= o && c.containerViewSize.y <= r && o <= c.containerViewSize.right && r <= c.containerViewSize.bottom && !p.rightClick && !b && f && !Travian.WindowManager.checkOpenWindowByContext("map")) {
                var q = c.transition.translateToMap({
                    x: o - c.containerViewSize.x - c.elementSize.x,
                    y: r - c.containerViewSize.y - c.elementSize.y
                }, {});
                if (c.tileDisplayInformation.type === "dialog") {
                    new Travian.Dialog.Ajax(Object.merge({}, c.tileDisplayInformation.optionsDialog, {
                        context: "map",
                        stickToUrlOnRestore: true,
                        data: {
                            x: q.x,
                            y: q.y
                        },
                        onOpen: function(t, s) {
                            $(s).getElements('a[href^="karte.php"]').addEvent("click", function(v) {
                                v.stop();
                                var u = new URI(v.target.href);
                                c.moveTo({
                                    x: parseInt(u.getData("x")),
                                    y: parseInt(u.getData("y"))
                                });
                                t.close();
                                return false
                            })
                        }
                    }))
                } else {
                    Travian.popup(c.tileDisplayInformation.optionsPopup.url.substitute(q), c.tileDisplayInformation.optionsPopup.windowOptions)
                }
            }
            c.containerRender.setStyles({
                cursor: n
            });
            if (b) {
                p.stop();
                c.updateBrowserURL(c.transition.getPointOfCenterInView())
            }
            f = false;
            b = false
        };
        $(document).addEvents({
            selectstart: function(o) {
                if (!c.isEventsEnabled()) {
                    return
                }
                if (!b) {
                    return
                }
                o.stop();
                return false
            },
            dragstart: function(o) {
                if (!c.isEventsEnabled()) {
                    return
                }
                if (!b) {
                    return
                }
                o.stop();
                return false
            },
            mousedown: function(o) {
                c.mouseDownLastCoordinates.x = o.event.clientX;
                c.mouseDownLastCoordinates.y = o.event.clientY;
                k(o, o.page.x, o.page.y, o.target)
            },
            mousemove: function(o) {
                if ((Browser.name === "chrome" || Browser.name === "safari") && (o.event.clientX === c.mouseDownLastCoordinates.x && o.event.clientY === c.mouseDownLastCoordinates.y)) {
                    return false
                }
                e(o, o.page.x, o.page.y)
            },
            mouseup: function(o) {
                h(o, o.page.x, o.page.y)
            },
            mousewheel: function(o) {
                if (!c.isEventsEnabled()) {
                    return
                }
                if (c.containerViewSize.x <= o.page.x && c.containerViewSize.y <= o.page.y && o.page.x <= c.containerViewSize.right && o.page.y <= c.containerViewSize.bottom && o.target === c.containerMover) {
                    var p = c.transition.translateToMap({
                        x: o.page.x - c.containerViewSize.x - c.elementSize.x,
                        y: o.page.y - c.containerViewSize.y - c.elementSize.y
                    }, {});
                    if (o.wheel < 0) {
                        c.zoomOut(p)
                    } else {
                        if (o.wheel > 0) {
                            c.zoomIn(p)
                        }
                    }
                    o.stop()
                }
            },
            touchstart: function(o) {
                d.moved = false;
                d.x = o.event.touches[0].pageX;
                d.y = o.event.touches[0].pageY;
                d.target = o.event.touches[0].target;
                k(o, d.x, d.y, d.target)
            },
            touchmove: function(o) {
                d.moved = true;
                d.x = o.event.touches[0].pageX;
                d.y = o.event.touches[0].pageY;
                d.target = o.event.touches[0].target;
                e(o, d.x, d.y)
            },
            touchend: function(o) {
                h(o, d.x, d.y)
            },
            keydown: function(o) {
                if (!c.isEventsEnabled()) {
                    return
                }
                if (o.shift) {
                    g.shift = true
                }
                if (o.control) {
                    g.control = true
                }
                if (o.alt) {
                    g.alt = true
                }
                if (g.keys[o.code] === false && o.target.nodeName.toLowerCase() !== "input") {
                    if (c.keyboard[o.code].on.contains("keydown") === false) {
                        return
                    }
                    g.count++;
                    g.keys[o.code] = true;
                    o.stop();
                    if (!g.fnTimer) {
                        g.fn = (function() {
                            Object.each(g.keys, function(s, q) {
                                if (s) {
                                    if (!c.keyboard[q]) {
                                        return
                                    }
                                    var u = c.keyboard[q].fn;
                                    if (u === false || !c[u]) {
                                        return
                                    }
                                    var r = "";
                                    if (u.substring(0, 4) === "move") {
                                        r = "normal";
                                        var p = c.keyboard.speed.slow;
                                        var t = c.keyboard.speed.fast;
                                        if (g[p] && !g[t]) {
                                            r = "slow"
                                        } else {
                                            if (!g[p] && g[t]) {
                                                r = "fast"
                                            }
                                        }
                                    } else {
                                        if (u.substring(0, 4) === "zoom") {
                                            r = null
                                        }
                                    }
                                    c[u](r)
                                }
                            })
                        });
                        if (c.keyboard[o.code].periodical === 0) {
                            g.fn()
                        } else {
                            if (c.keyboard[o.code].periodical > 0) {
                                g.fnTimer = g.fn.periodical(c.keyboard[o.code].periodical)
                            }
                        }
                    }
                }
            },
            keyup: function(o) {
                if (!c.isEventsEnabled()) {
                    return
                }
                if (!o.shift) {
                    g.shift = false
                }
                if (!o.control) {
                    g.control = false
                }
                if (!o.alt) {
                    g.alt = false
                }
                if (g.keys[o.code]) {
                    if (c.keyboard[o.code].on.contains("keyup") === false) {
                        return
                    }
                    g.count--;
                    g.keys[o.code] = false;
                    o.stop();
                    if (g.count === 0 && g.fnTimer) {
                        clearInterval(g.fnTimer);
                        g.fnTimer = null;
                        c.updateBrowserURL(c.transition.getPointOfCenterInView())
                    }
                }
            }
        })
    };
    return new Class({
        Extends: Travian.Game.Map.Base,
        blocks: null,
        classType: "Travian.Game.Map.Container",
        containerRender: null,
        containerSize: null,
        containerViewSize: null,
        currentMousePosition: {
            browserAbsolute: {
                x: null,
                y: null
            },
            browser: {
                x: null,
                y: null
            },
            map: {
                x: null,
                y: null
            }
        },
        element: null,
        elementSize: null,
        eventsEnabled: true,
        gridDisplayed: true,
        loading: false,
        forcedUpdates: 0,
        mouseDownLastCoordinates: {
            x: null,
            y: null
        },
        savedURL: {},
        addSymbol: function(b) {
            var c = this.blocks.find(function(d) {
                return d.isMapPositionInRect(b.position)
            });
            if (c) {
                c.addSymbol(b)
            }
            return this
        },
        deleteSymbol: function(b) {
            var c = this.blocks.find(function(d) {
                return d.isMapPositionInRect(b.position)
            });
            if (c) {
                c.deleteSymbol(b)
            }
            return this
        },
        disableEvents: function() {
            this.eventsEnabled = false;
            return this
        },
        enableEvents: function() {
            this.eventsEnabled = true;
            return this
        },
        forceUpdateBlocksLayer: function(b) {
            this.forcedUpdates = this.forcedUpdates + 1;
            this.blocks.each(function(c) {
                c.forceUpdateLayer(b)
            });
            return this
        },
        forceUpdateBlocksSymbols: function(c, b) {
            this.blocks.each(function(d) {
                d.forceUpdateSymbols(c, b)
            });
            return this
        },
        getContentForTooltip: function(b) {
            var c = this.blocks.find(function(d) {
                return d.isPositionInRect(b)
            });
            return c ? c.getContentForTooltip(b) : false
        },
        hideGrid: function() {
            this.cookie.set("grid", false);
            this.gridDisplayed = false;
            return this.updateGrid()
        },
        setContainerSizes: function(b) {
            this.containerViewSize = {
                x: b.x,
                y: b.y,
                width: b.width,
                height: b.height,
                right: b.x + b.width,
                bottom: b.y + b.height
            };
            this.containerSize = {
                x: this.containerViewSize.x,
                y: this.containerViewSize.y,
                width: Math.ceil(this.containerViewSize.width / this.blockSize.width) * this.blockSize.width,
                height: Math.ceil(this.containerViewSize.height / this.blockSize.height) * this.blockSize.height,
                right: this.containerViewSize.x + Math.ceil(this.containerViewSize.width / this.blockSize.width) * this.blockSize.width,
                bottom: this.containerViewSize.y + Math.ceil(this.containerViewSize.height / this.blockSize.height) * this.blockSize.height
            }
        },
        positionChange: function() {
            var c = Object.append(this.containerRender.getDimensions({
                computeSize: true
            }), this.containerRender.getPosition());
            var b = {
                x: this.containerViewSize.x - c.x,
                y: this.containerViewSize.y - c.y
            };
            this.setContainerSizes(c);
            this.miniMap.containerPosition = this.miniMap.container.getPosition();
            this.transition.containerPositionChange(b)
        },
        initialize: function(b) {
            var d = this;
            this.loading = true;
            if (typeof b === "undefined") {
                b = Travian.Game.Map.Options.Default
            }
            this.parent(b);
            this.onMove = this.onMove || Travian.emptyFunction;
            this.onCreate = this.onCreate || Travian.emptyFunction;
            this.onRender = this.onRender || Travian.emptyFunction;
            this.onZoom = this.onZoom || Travian.emptyFunction;
            Travian.Game.Map.register(this);
            this.cookie = new Hash.Cookie(this.id);
            this.containerRender = this.container = $(this.container);
            this.containerRender._map = this;
            var e = Object.append(this.containerRender.getDimensions({
                computeSize: true
            }), this.containerRender.getPosition());
            this.setContainerSizes(e);
            this.globalProperties.each(function(f) {
                if (Travian.Game.Map[f.capitalize()]) {
                    d[f] = new Travian.Game.Map[f.capitalize()](d[f] || {}, d)
                }
            });
            if (this.data.elements) {
                this.dataStore.setMultiple(Travian.Game.Map.DataStore.TYPE_TILE, this.data.elements)
            }
            var c = this.cookie.get("grid");
            if (c !== null) {
                this.gridDisplayed = c
            }
            this.onCreate(this);
            this.savedURL = Travian.parseURL(window.location.href);
            this.render();
            window.addEvents({
                resize: this.positionChange.bind(this)
            })
        },
        invalidateBlockVersionCache: function() {
            Object.each(this.blocks, function(b) {
                b.invalidateVersionCache()
            });
            return this
        },
        isEventsEnabled: function() {
            return this.eventsEnabled
        },
        updateBrowserURL: function(b) {
            this.savedURL.searchObject = Object.merge(this.savedURL.searchObject, b);
            window.history.replaceState(this.savedURL, document.title, Travian.composeURI(this.savedURL))
        },
        move: function(b) {
            this.transition.move(b);
            if (this.blocks !== null) {
                Object.each(this.blocks, function(c) {
                    c.move(b)
                })
            }
            if (this.loading) {
                if (!this.blockInitialDelta) {
                    this.blockInitialDelta = {
                        x: 0,
                        y: 0
                    }
                }
                this.blockInitialDelta.x += b.x;
                this.blockInitialDelta.y += b.y
            }
            this.onMove(this, b);
            return this
        },
        moveDown: function(b) {
            if (typeof b === "string") {
                b = this.speeds[b]
            }
            if (!b) {
                return
            }
            return this.move({
                x: 0,
                y: b
            })
        },
        moveLeft: function(b) {
            if (typeof b === "string") {
                b = this.speeds[b]
            }
            if (!b) {
                return
            }
            return this.move({
                x: b,
                y: 0
            })
        },
        moveLeftDown: function(b) {
            if (typeof b === "string") {
                b = this.speeds[b]
            }
            if (!b) {
                return
            }
            return this.move({
                x: b,
                y: b
            })
        },
        moveLeftUp: function(b) {
            if (typeof b === "string") {
                b = this.speeds[b]
            }
            if (!b) {
                return
            }
            return this.move({
                x: b,
                y: -b
            })
        },
        moveRight: function(b) {
            if (typeof b === "string") {
                b = this.speeds[b]
            }
            if (!b) {
                return
            }
            return this.move({
                x: -b,
                y: 0
            })
        },
        moveRightDown: function(b) {
            if (typeof b === "string") {
                b = this.speeds[b]
            }
            if (!b) {
                return
            }
            return this.move({
                x: -b,
                y: b
            })
        },
        moveRightUp: function(b) {
            if (typeof b === "string") {
                b = this.speeds[b]
            }
            if (!b) {
                return
            }
            return this.move({
                x: -b,
                y: -b
            })
        },
        moveTo: function(c) {
            var b = this.transition.translateToBrowser({
                x: Math.floor(c.x),
                y: Math.floor(c.y)
            });
            b.x += this.blockSize.width / this.transition.elementsPerBlock.x / 2;
            b.y += this.blockSize.height / this.transition.elementsPerBlock.y / 2;
            b.x += (this.containerSize.width - this.containerViewSize.width) / 2;
            b.y += (this.containerSize.height - this.containerViewSize.height) / 2;
            this.updateBrowserURL(c);
            return this.move({
                x: this.elementSize.width / 2 - b.x,
                y: -(this.elementSize.height / 2 - b.y)
            })
        },
        moveUp: function(b) {
            if (typeof b === "string") {
                b = this.speeds[b]
            }
            if (!b) {
                return
            }
            return this.move({
                x: 0,
                y: -b
            })
        },
        render: function() {
            this.container = new Element("div", {
                styles: {
                    overflow: "hidden",
                    position: "relative",
                    left: 0,
                    top: 0,
                    width: "100%",
                    height: "100%",
                    right: 0,
                    bottom: 0
                }
            }).disableSelection().inject(this.containerRender, "top").set("oncontextmenu", "return (false);");
            this.elementSize = {
                x: -this.blockSize.width * this.blockOverflow,
                y: -this.blockSize.height * this.blockOverflow,
                width: this.containerSize.width + this.blockSize.width * this.blockOverflow * 2,
                height: this.containerSize.height + this.blockSize.height * this.blockOverflow * 2
            };
            this.parent({
                nodeType: "div"
            }).element.setStyles({
                position: "absolute",
                left: this.elementSize.x,
                top: this.elementSize.y,
                width: this.elementSize.width,
                height: this.elementSize.height
            }).inject(this.container, "top");
            this.containerMover = new Element("div", {
                styles: {
                    overflow: "hidden",
                    position: "absolute",
                    left: 0,
                    top: 0,
                    width: this.containerViewSize.width,
                    height: this.containerViewSize.height,
                    zIndex: 100,
                    backgroundColor: Browser.name === "ie" ? "#FFFFFF" : "transparent",
                    opacity: Browser.name === "ie" ? 0.001 : 1
                }
            }).disableSelection().inject(this.container, "after");
            this.onRender(this);
            this.moveTo(this.mapInitialPosition);
            this.renderBlocks();
            if (this.gridDisplayed) {
                this.showGrid()
            }
            a(this);
            this.loading = false;
            return this
        },
        renderBlocks: function() {
            if (this.blocks) {
                return this
            }
            this.blocks = [];
            var c = Math.ceil(this.elementSize.width / this.blockSize.width);
            var b = Math.ceil(this.elementSize.height / this.blockSize.height);
            var e = {
                x: 0,
                y: 0
            };
            var g = null;
            var m = null;
            var d = null;
            if (this.blockInitialDelta) {
                e = Object.clone(this.blockInitialDelta);
                delete(this.blockInitialDelta)
            }
            for (var h = 0, f = 0; h < b; h++) {
                for (var k = 0; k < c; k++) {
                    g = Travian.Game.Map.Layer.Block.getCorrectPosition({
                        x: k * this.blockSize.width + e.x,
                        y: h * this.blockSize.height - e.y,
                        width: this.blockSize.width,
                        height: this.blockSize.height
                    }, this).position;
                    m = this.transition.translateToMap(g, {});
                    d = {
                        id: f++,
                        version: 0
                    };
                    if (this.data.blocks[m.x] && this.data.blocks[m.x][m.y] && this.data.blocks[m.x][m.y][m.right] && this.data.blocks[m.x][m.y][m.right][m.top]) {
                        d = Object.merge(d, this.data.blocks[m.x][m.y][m.right][m.top])
                    }
                    this.blocks.push(new Travian.Game.Map.Layer.Block(Object.merge({}, this.options.block, {
                        id: d.id,
                        symbolTypes: this.symbolTypes,
                        position: g,
                        mapCoordinates: m,
                        version: d.version
                    }), this))
                }
            }
            return this
        },
        showGrid: function() {
            this.cookie.set("grid", true);
            this.gridDisplayed = true;
            return this.updateGrid()
        },
        toggleGrid: function() {
            var b = "showGrid";
            if (this.gridDisplayed === true) {
                b = "hideGrid"
            }
            return this[b]()
        },
        toggleMiniMap: function() {
            return this.miniMap.animate()
        },
        toggleOutline: function() {
            return this.outline.animate()
        },
        updateGrid: function() {
            var c = this;
            var b = c.gridDisplayed ? this.grid[this.transition.zoomLevel] : false;
            this.element.select(".imageMark").each(function(d) {
                d.setStyles({
                    backgroundColor: "transparent",
                    backgroundImage: b !== false ? "url(" + b + ")" : "none",
                    backgroundPosition: "left top",
                    backgroundRepeat: "repeat"
                })
            });
            return this
        },
        updateSymbolData: function(b) {
            var c = this.blocks.find(function(d) {
                return d.isMapPositionInRect(b.position)
            });
            if (c) {
                c.updateSymbolData(b)
            }
            return this
        },
        zoom: function(d, c) {
            var b = this.transition.zoomLevel;
            if (this.transition.zoom(d)) {
                this.savedURL.searchObject.zoom = this.transition.zoomLevel;
                this.onZoom(this);
                if (T4_feature_flags.territory && b === 3 || this.transition.zoomLevel === 3) {
                    this.dataStore.removeAllOfType(Travian.Game.Map.DataStore.TYPE_TOOLTIP)
                }
                this.moveTo(c);
                if (this.gridDisplayed) {
                    this.updateGrid()
                }
            }
            return this
        },
        zoomIn: function(b) {
            if (!b) {
                b = this.transition.getPointOfCenterInView()
            }
            return this.zoom(-1, b)
        },
        zoomOut: function(b) {
            if (!b) {
                b = this.transition.getPointOfCenterInView()
            }
            return this.zoom(1, b)
        }
    })
})();
Travian.Game.Map.Transition = (function() {
    var a = [];
    var d = function(g, f) {
        var e = false;
        do {
            e = false;
            if (Math.round(g.x) > f.border.right) {
                g.x = f.border.left + (g.x - f.border.right) - 1;
                e = true
            } else {
                if (Math.round(g.x) < f.border.left) {
                    g.x = f.border.right - (f.border.left - g.x) + 1;
                    e = true
                }
            }
            if (Math.round(g.right) > f.border.right) {
                g.right = f.border.left + (g.right - f.border.right) - 1;
                e = true
            } else {
                if (Math.round(g.right) < f.border.left) {
                    g.right = f.border.right - (f.border.left - g.right) + 1;
                    e = true
                }
            }
            if (Math.round(g.y) > f.border.top) {
                g.y = f.border.bottom + (g.y - f.border.top) - 1;
                e = true
            } else {
                if (Math.round(g.y) < f.border.bottom) {
                    g.y = f.border.top - (f.border.bottom - g.y) + 1;
                    e = true
                }
            }
            if (Math.round(g.top) > f.border.top) {
                g.top = f.border.bottom + (g.top - f.border.top) - 1;
                e = true
            } else {
                if (Math.round(g.top) < f.border.bottom) {
                    g.top = f.border.top - (f.border.bottom - g.top) + 1;
                    e = true
                }
            }
        } while (e);
        return g
    };
    var b = function(e) {
        e.elementsPerBlock = e.zoomOptions.sizes[e.zoomLevel - 1];
        e.pixelPerTile = {
            x: e.mapContainer.blockSize.width / e.elementsPerBlock.x,
            y: e.mapContainer.blockSize.height / e.elementsPerBlock.y
        };
        e.elementsInView = {
            x: e.elementsPerBlock.x * e.mapContainer.containerSize.width / e.mapContainer.blockSize.width,
            y: e.elementsPerBlock.y * e.mapContainer.containerSize.height / e.mapContainer.blockSize.height
        }
    };
    var c = function(h, f) {
        var g = {
            x: h.mapContainer.containerSize.x + h.mapContainer.elementSize.x,
            y: h.mapContainer.containerSize.y + h.mapContainer.elementSize.y
        };
        var e = h.mapContainer.blockSize.height / h.elementsPerBlock.y;
        return {
            x: (f.x - h.positionOrigin.map.x) * h.pixelPerTile.x + h.positionOrigin.browser.x - g.x,
            y: (h.positionOrigin.map.y - f.y) * h.pixelPerTile.y - e - g.y + h.positionOrigin.browser.y
        }
    };
    return new Class({
        Extends: Travian.Game.Map.Base,
        classType: "Travian.Game.Map.Transition",
        elementsPerBlock: null,
        pixelPerTile: null,
        zoomLevel: null,
        zoomOptions: null,
        border: null,
        mapContainer: null,
        getPointOfCenterInView: function() {
            var e = {
                x: this.mapContainer.containerViewSize.x + this.mapContainer.containerViewSize.width / 2,
                y: this.mapContainer.containerViewSize.y + this.mapContainer.containerViewSize.height / 2
            };
            e.x -= this.mapContainer.containerSize.x;
            e.y -= this.mapContainer.containerSize.y;
            e.x -= this.mapContainer.elementSize.x;
            e.y -= this.mapContainer.elementSize.y;
            return this.translateToMap(e, {})
        },
        initialize: function(e, g) {
            var f = this;
            this.parent(e, g);
            this.onMove = this.onMove || Travian.emptyFunction;
            this.onCreate = this.onCreate || Travian.emptyFunction;
            this.onZoom = this.onZoom || Travian.emptyFunction;
            this.zoomLevel = this.zoomOptions.level;
            this.zoomOptions.sizes.each(function(k, h) {
                if (typeof k === "number") {
                    f.zoomOptions.sizes[h] = {
                        x: Math.floor(f.zoomOptions.sizes[h] * f.mapContainer.blockSize.width / f.mapContainer.containerSize.width),
                        y: Math.floor(f.zoomOptions.sizes[h] * f.mapContainer.blockSize.height / f.mapContainer.containerSize.height)
                    }
                }
            });
            this.positionOrigin = {
                browser: {
                    x: this.mapContainer.containerSize.x,
                    y: this.mapContainer.containerSize.y + this.mapContainer.containerSize.height
                },
                map: {
                    x: 0,
                    y: 0
                }
            };
            b(this);
            this.onCreate(this)
        },
        containerPositionChange: function(e) {
            this.positionOrigin.browser.x -= e.x;
            this.positionOrigin.browser.y += e.y
        },
        move: function(e) {
            this.positionOrigin.browser.x += e.x;
            this.positionOrigin.browser.y -= e.y;
            this.onMove(this, e);
            return this
        },
        registerCallbackOnZoom: function(e) {
            a.push(e);
            return this
        },
        translateToBrowser: function(f) {
            var g = {
                x: this.mapContainer.containerSize.x + this.mapContainer.elementSize.x,
                y: this.mapContainer.containerSize.y + this.mapContainer.elementSize.y
            };
            var e = this.mapContainer.blockSize.height / this.elementsPerBlock.y;
            return {
                x: (f.x - this.positionOrigin.map.x) * this.pixelPerTile.x + this.positionOrigin.browser.x - g.x,
                y: (this.positionOrigin.map.y - f.y) * this.pixelPerTile.y - e - g.y + this.positionOrigin.browser.y
            }
        },
        translateToMap: function(g, h) {
            h = Object.merge({
                round: true,
                correct: true
            }, h || {});
            var k = {
                x: this.mapContainer.containerSize.x + this.mapContainer.elementSize.x,
                y: this.mapContainer.containerSize.y + this.mapContainer.elementSize.y
            };
            var f = this.mapContainer.blockSize.height / this.elementsPerBlock.y;
            if (typeof g.height !== "undefined") {
                f = g.height
            }
            var e = null;
            if (h.round) {
                e = {
                    x: Math.floor((g.x + k.x - this.positionOrigin.browser.x) / this.pixelPerTile.x) + this.positionOrigin.map.x,
                    y: this.positionOrigin.map.y - Math.floor((g.y + f + (k.y - this.positionOrigin.browser.y)) / this.pixelPerTile.y)
                }
            } else {
                e = {
                    x: ((g.x + k.x - this.positionOrigin.browser.x) / this.pixelPerTile.x) + this.positionOrigin.map.x - 1,
                    y: this.positionOrigin.map.y - ((g.y + f + (k.y - this.positionOrigin.browser.y)) / this.pixelPerTile.y)
                }
            }
            if (g.width) {
                e.right = e.x + g.width / this.pixelPerTile.x - 1
            }
            if (g.height) {
                e.top = e.y + g.height / this.pixelPerTile.y - 1
            }
            if (h.correct) {
                e = d(e, this)
            }
            return e
        },
        zoom: function(f) {
            var e = this;
            if (f === 0 || (f < 0 && this.zoomLevel + f < 1) || (f > 0 && this.zoomLevel + f > this.zoomOptions.sizes.length)) {
                return false
            }
            this.zoomLevel += f;
            b(this);
            this.onZoom(this);
            a.each(function(g) {
                g(e)
            });
            return true
        }
    })
})();
Travian.Game.Map.Transition.Precision = 2;
Travian.Game.Map.Updater = (function() {
    var c = window.location.href.split("/").slice(0, -1).join("/") + "/";
    var b = function(g) {
        if (g.objects.ajax.getLength() <= 0) {
            return false
        }
        g.updateWorking(1);
        var f = [];
        g.objects.ajax.each(function(k) {
            var h = k.getRequestData();
            if (h !== false) {
                f.push(h)
            }
        });
        g.requestObject.multiple = Travian.ajax({
            url: g.url,
            data: Object.merge({}, g.parameters.multiple, {
                data: f,
                zoomLevel: g.transition.zoomLevel
            }),
            onSuccess: function(h) {
                g.updateWorking(-1);
                g.setContentDataAndRefresh(h);
                d(g)
            },
            onFailure: function(h) {
                g.updateWorking(-1);
                g.setContentDataAndRefresh(h);
                d(g)
            }
        });
        return true
    };
    var a = function(h, g) {
        h.updateWorking(1);
        var f = {
            x0: g.position.x + h.options.positionOptions.areaAroundPosition[h.transition.zoomLevel].left,
            y0: g.position.y + h.options.positionOptions.areaAroundPosition[h.transition.zoomLevel].bottom,
            x1: g.position.x + h.options.positionOptions.areaAroundPosition[h.transition.zoomLevel].right,
            y1: g.position.y + h.options.positionOptions.areaAroundPosition[h.transition.zoomLevel].top
        };
        if (h.requestObject.position) {
            h.requestObject.position.cancel();
            h.requestObject.position = null;
            h.updateWorking(-1)
        }
        h.requestObject.position = Travian.ajax({
            url: h.url,
            data: Object.merge({}, h.parameters.position, {
                data: Object.merge({}, g.position, {
                    zoomLevel: h.transition.zoomLevel,
                    ignorePositions: h.dataStore.getPositionsOfData(g.dataStoreType).inject([], function(m, k) {
                        if (Travian.Game.Map.isMapPositionInRect(f, k)) {
                            m.push(Travian.Game.Map.xy2id(k.x, k.y))
                        }
                        return m
                    })
                })
            }),
            onSuccess: function(k) {
                h.updateWorking(-1);
                (g.onSuccess || Travian.emptyFunction)(k)
            },
            onFailure: function(k) {
                h.updateWorking(-1);
                (g.onFailure || Travian.emptyFunction)(k)
            }
        })
    };
    var e = function(g, f) {
        f.element.src = f.srcUrl;
        if (f.finishedLoading) {
            f.finishedLoading()
        }
        delete(g.loadings[f.blockContainer.updaterId][f.updaterId]);
        if (g.loadings[f.blockContainer.updaterId].getLength() == 0) {
            f.blockContainer.layers.loading.hide()
        }
        g.requestCountImages--;
        g.updateWorking(-1);
        d(g)
    };
    var d = function(f) {
        if (f.requestCountImages >= f.maxRequestCount) {
            return
        }
        if (f.objects.images.getLength() == 0) {
            return
        }
        f.objects.images.sort(function(m, k) {
            var h = m.getPriority();
            var g = k.getPriority();
            if (h < g) {
                return -1
            } else {
                if (h > g) {
                    return 1
                }
            }
            return 0
        }).some(function(k, h) {
            var g = e.pass([f, k]);
            delete(f.objects.images[k.updaterId]);
            f.requestCountImages++;
            f.updateWorking(1);
            if (k.element.src.replace(c, "") == k.srcUrl) {
                g.delay(1)
            } else {
                if (!k.imageLoader) {
                    k.imageLoader = $(new Image()).addEvent("load", g)
                }
                k.refreshSrcUrl();
                k.imageLoader.src = k.srcUrl
            }
            return f.requestCountImages >= f.maxRequestCount
        })
    };
    return new Class({
        Extends: Travian.Game.Map.Base,
        lastRequestPosition: {
            x: null,
            y: null
        },
        loadings: {},
        requestCount: 0,
        requestCountImages: 0,
        requestDelayId: {
            multiple: null,
            position: null
        },
        requestImages: $H({}),
        requestObject: {
            multiple: null,
            position: null
        },
        objects: null,
        classType: "Travian.Game.Map.Updater",
        initialize: function(f, g) {
            this.parent(f, g);
            this.objects = {
                ajax: $H({}),
                images: $H({})
            };
            this.elementWorking = $(this.elementWorking)
        },
        register: function(g, f) {
            var h = this;
            if (!this.objects[g]) {
                return this
            }
            if (!f.updaterId) {
                f.updaterId = Travian.Game.Map.getNewId()
            }
            if (!this.objects[g][f.updaterId]) {
                this.objects[g][f.updaterId] = f
            }
            if (g == "images") {
                if (!f.blockContainer.updaterId) {
                    f.blockContainer.updaterId = Travian.Game.Map.getNewId()
                }
                if (!this.loadings[f.blockContainer.updaterId]) {
                    this.loadings[f.blockContainer.updaterId] = $H({})
                }
                this.loadings[f.blockContainer.updaterId][f.updaterId] = true;
                f.blockContainer.layers.loading.show()
            }
            this.request();
            return this
        },
        request: function() {
            var f = this;
            if (this.requestObject.multiple && this.requestObject.multiple.cancel) {
                this.requestObject.multiple.cancel();
                this.requestObject.multiple = null;
                this.updateWorking(-1)
            }
            if (this.requestDelayId.multiple) {
                clearTimeout(this.requestDelayId.multiple);
                this.requestDelayId.multiple = null
            }
            this.requestDelayId.multiple = (function() {
                if (b(f) === false) {
                    d(f)
                }
            }).delay(this.requestDelayTime.multiple);
            return this
        },
        requestPosition: function(f) {
            var g = this;
            if (this.lastRequestPosition.x == f.position.x && this.lastRequestPosition.y == f.position.y) {
                return this
            }
            this.lastRequestPosition.x = f.position.x;
            this.lastRequestPosition.y = f.position.y;
            if (this.requestObject.position && this.requestObject.position.cancel) {
                this.requestObject.position.cancel();
                this.requestObject.position = null;
                this.updateWorking(-1)
            }
            if (this.requestDelayId.position) {
                clearTimeout(this.requestDelayId.position);
                this.requestDelayId.position = null
            }
            this.requestDelayId.position = (function() {
                a(g, f)
            }).delay(this.requestDelayTime.position);
            return this
        },
        setContentDataAndRefresh: function(f) {
            var g = this;
            if (f.blocks) {
                Object.each(f.blocks, function(k, h) {
                    Object.each(k, function(m, n) {
                        Object.each(m, function(p, o) {
                            Object.each(p, function(t, r) {
                                var q = {
                                    x: h,
                                    y: n,
                                    right: o,
                                    top: r
                                };
                                var s = Object.merge({}, g.dataStore.get(Travian.Game.Map.DataStore.TYPE_BLOCKS, q, "block") || {}, t);
                                g.dataStore.push({
                                    type: Travian.Game.Map.DataStore.TYPE_BLOCKS,
                                    position: q,
                                    index: "block",
                                    data: s
                                })
                            })
                        })
                    })
                });
                this.mapContainer.invalidateBlockVersionCache()
            }
            if (f.elements) {
                this.dataStore.setMultiple(Travian.Game.Map.DataStore.TYPE_TILE, f.elements)
            }
            this.objects.ajax.each(function(h) {
                if (h.refreshContent) {
                    h.refreshContent()
                }
                delete(g.objects.ajax[h.updaterId])
            });
            return this
        },
        updateWorking: function(f) {
            this.requestCount += f;
            if (this.requestCount < 0) {
                this.requestCount = 0
            }
            if (this.elementWorking) {
                if (this.requestCount > 0) {
                    this.elementWorking.setStyles({
                        visibility: "visible"
                    })
                } else {
                    this.elementWorking.setStyles({
                        visibility: "hidden"
                    })
                }
                this.elementWorking.set("html", this.requestCount)
            }
            return this
        }
    })
})();
Travian.Game.Map.ContextMenu = new Class({
    Implements: [Options, Events],
    options: {
        actions: {},
        menu: "contextmenu",
        stopEvent: true,
        targets: "body",
        trigger: "contextmenu",
        offsets: {
            x: 0,
            y: 0
        },
        onShow: Travian.emptyFunction,
        onHide: Travian.emptyFunction,
        onClick: Travian.emptyFunction,
        fadeSpeed: 200
    },
    classType: "Travian.Game.Map.ContextMenu",
    parentContainer: null,
    mapPosition: null,
    addAction: function(b) {
        var d = this;
        var c = false;
        b.element = $(b.element);
        if (b.element && !c) {
            var a = b.element.down("a");
            if (a) {
                a.addEvent("click", function(f) {
                    b.fn(d, d.mapPosition, d.contentData)
                });
                this.actions.push(b)
            } else {
                b.element.hide()
            }
        }
        return this
    },
    disable: function() {
        this.options.disabled = true;
        return this
    },
    disableItem: function(a) {
        this.menu.getElements("a[href$=" + a + "]").addClass("disabled");
        return this
    },
    enable: function() {
        this.options.disabled = false;
        return this
    },
    enableItem: function(a) {
        this.menu.getElements("a[href$=" + a + "]").removeClass("disabled");
        return this
    },
    execute: function(b, a) {
        if (this.options.actions[b]) {
            this.options.actions[b](a, this)
        }
        return this
    },
    hide: function() {
        if (this.shown) {
            this.fx.start(0);
            this.parentContainer.enableEvents();
            this.fireEvent("hide");
            this.shown = false
        }
        return this
    },
    initialize: function(a, c) {
        var b = this;
        this.setOptions(a);
        this.parentContainer = c;
        this.menu = document.id(this.options.menu);
        this.targets = $$(this.options.targets);
        this.fx = new Fx.Tween(this.menu, {
            property: "opacity",
            duration: this.options.fadeSpeed,
            onComplete: function() {
                b.menu.setStyles({
                    display: b.shown ? "block" : "none"
                })
            }
        });
        this.hide().startListener();
        /*
        this.menu.setStyles({
            position: "absolute",
            top: "-900000px",
            display: "block"
        });
        $(a.menu).dispose().inject(document.body);*/
        this.actions = [];
        a.actions.each(function(d) {
            b.addAction(d)
        });
        this.targets.each(function(d) {
            d.addEvent(b.options.trigger, function(f) {
                b.mapPosition = b.parentContainer.transition.translateToMap({
                    x: f.page.x - b.parentContainer.containerSize.x - b.parentContainer.elementSize.x,
                    y: f.page.y - b.parentContainer.containerSize.y - b.parentContainer.elementSize.y
                });
                b.update()
            })
        })
    },
    show: function() {
        this.fx.start(1);
        this.parentContainer.disableEvents();
        this.fireEvent("show");
        this.shown = true;
        return this
    },
    startListener: function() {
        var a = this;
        this.targets.each(function(b) {
            b.addEvent(a.options.trigger, function(c) {
                if (c.target == a.parentContainer.containerMover && !a.options.disabled) {
                    if (a.options.stopEvent) {
                        c.stop()
                    }
                    a.options.element = document.id(b);
                    a.menu.setStyles({
                        top: (c.page.y + a.options.offsets.y),
                        left: (c.page.x + a.options.offsets.x),
                        position: "absolute"
                    });
                    a.show()
                }
            })
        });
        /*
        this.menu.getElements("a").each(function(b) {
            b.addEvent("click", function(c) {
                if (!b.hasClass("disabled")) {
                    a.execute(b.get("href").split("#")[1], document.id(a.options.element));
                    a.fireEvent("click", [b, c])
                }
            })
        });*/
        document.id(document.body).addEvent("click", function() {
            a.hide()
        });
        return this
    },
    update: function() {
        var a = this;
        if (this.options.disabled || !this.shown) {
            return this
        }
        this.contentData = this.parentContainer.dataStore.get(Travian.Game.Map.DataStore.TYPE_TOOLTIP, this.mapPosition);
        this.actions.each(function(b) {
            if (a.contentData != null && b.shouldDisplay(a.contentData)) {
                b.element.show()
            } else {
                b.element.hide()
            }
        });
        Object.each(this.options.separators, function(d) {
            var c = a.menu.down(d.selector);
            if (!c) {
                return
            }
            var b = 0;
            d.elements.each(function(e) {
                var f = a.menu.down(e);
                if (!f) {
                    return
                }
                if (f.isDisplayed()) {
                    b++
                }
                return
            });
            c[b > 0 ? "show" : "hide"]().getPrevious()[b > 0 ? "show" : "hide"]()
        });
        return this
    }
});
Travian.Game.Map.DataStore = (function() {
    var f = 0;
    var e = function(g) {
        Object.each(g.options.useStorageForType, function(k, h) {
            if (k) {
                Travian.Storage.set("mapDataContainer." + h, g.data[h], g.options.persistentStorage)
            }
        })
    };
    var c = function(k, o, g) {
        var m = g.x;
        var p = g.y;
        var h = typeof g.right != "undefined" ? g.right : m;
        var n = typeof g.top != "undefined" ? g.top : p;
        if (!k.data[o]) {
            k.data[o] = {
                all: $H()
            }
        }
        if (!k.data[o][m]) {
            k.data[o][m] = {}
        }
        if (!k.data[o][m][p]) {
            k.data[o][m][p] = {}
        }
        if (!k.data[o][m][p][h]) {
            k.data[o][m][p][h] = {}
        }
        if (!k.data[o][m][p][h][n]) {
            k.data[o][m][p][h][n] = {}
        }
        if (!k.data[o][m][p][h][n].id) {
            f++;
            k.data[o][m][p][h][n].id = f
        }
        k.data[o][m][p][h][n].position = g;
        return k.data[o][m][p][h][n]
    };
    var b = function(k, o, g) {
        var m = g.x;
        var p = g.y;
        var h = typeof g.right != "undefined" ? g.right : m;
        var n = typeof g.top != "undefined" ? g.top : p;
        if (!k.data[o]) {
            return null
        }
        if (!k.data[o][m]) {
            return null
        }
        if (!k.data[o][m][p]) {
            return null
        }
        if (!k.data[o][m][p][h]) {
            return null
        }
        if (!k.data[o][m][p][h][n]) {
            return null
        }
        if (d(k, k.data[o][m][p][h][n], o)) {
            return null
        }
        return k.data[o][m][p][h][n]
    };
    var d = function(g, k, h) {
        return k.time !== false && (new Date()).getTime() - k.time > g.cachingTimeForType[h]
    };
    var a = new Class({
        Extends: Travian.Game.Map.Base,
        classType: "Travian.Game.Map.DataStore",
        data: null,
        get: function(k, g, h) {
            var m = b(this, k, g);
            if (m == null) {
                return null
            }
            if (typeof h != "undefined") {
                if (m.data[h]) {
                    return m.data[h]
                }
                return null
            }
            return m.data
        },
        getDataForArea: function(m, h, p) {
            var n = this;
            var g = [];
            var o = null;
            var k = Object.clone(h);
            if (!this.data[m] || !this.data[m].all) {
                return g
            }
            if (k.x > k.right) {
                k.right += this.parentContainer.transition.border.width
            }
            if (k.y > k.top) {
                k.top += this.parentContainer.transition.border.height
            }
            this.data[m].all.each(function(q) {
                var r = {
                    x: q.position.x,
                    y: q.position.y
                };
                if (k.x > r.x) {
                    r.x += n.parentContainer.transition.border.width
                }
                if (k.y > r.y) {
                    r.y += n.parentContainer.transition.border.height
                }
                if (d(n, q, m) === false && k.x <= r.x && r.x <= k.right && k.y <= r.y && r.y <= k.top) {
                    if (p) {
                        Object.each(q.data, function(s) {
                            g.push(s)
                        })
                    } else {
                        g.push(q.data)
                    }
                }
            });
            return g
        },
        getPositionsOfData: function(g) {
            var h = this;
            if (!this.data[g] || !this.data[g].all) {
                return []
            }
            return this.data[g].all.inject([], function(m, k) {
                if (d(h, k, g) === false) {
                    m.push(k.position)
                }
                return m
            })
        },
        initialize: function(g, k) {
            var h = this;
            this.parent(g, k);
            this.data = {};
            Object.each(this.options.clearStorageForType, function(n, m) {
                if (n) {
                    Travian.Storage.clear("mapDataContainer." + m, h.options.persistentStorage)
                }
            });
            this.options.useStorageForType = $H(this.options.useStorageForType).inject($H(), function(o, p, m) {
                if (p) {
                    o[m] = true;
                    h.data[m] = Travian.Storage.get("mapDataContainer." + m, h.options.persistentStorage) || {};
                    if (!h.data[m].all) {
                        h.data[m].all = $H({})
                    } else {
                        h.data[m].all = $H(h.data[m].all);
                        var n = h.data[m].all.getKeys().max();
                        if (n > f) {
                            f = n
                        }
                    }
                }
                return o
            })
        },
        push: function(g) {
            if (typeof g.time == "undefined") {
                g.time = (new Date()).getTime()
            }
            if (g.time == -1) {
                g.time = false
            }
            g = Travian.Game.Map.remapShortParameters(g);
            var h = c(this, g.type, g.position);
            if (!h.data) {
                h.data = {}
            }
            h.data[g.index] = g.data;
            h.time = g.time;
            this.data[g.type].all[h.id] = h;
            return this
        },
        refresh: function(g) {
            var h = b(this, g.type, g.position);
            if (h != null) {
                if (typeof g.time == "undefined") {
                    g.time = (new Date()).getTime()
                }
                if (g.time == -1) {
                    g.time = false
                }
                h.time = g.time
            }
            return this
        },
        remove: function(k, g, h) {
            var m = b(this, k, g);
            if (m == null) {
                return this
            }
            if (typeof h != "undefined") {
                if (m.data[h]) {
                    delete(m.data[h])
                }
                return this
            }
            m.time = 0;
            return this
        },
        removeAllOfType: function(g) {
            if (this.data[g] !== undefined) {
                delete(this.data[g])
            }
        },
        saveDataToStorage: function() {
            e(this);
            return this
        },
        set: function(g) {
            var h = this;
            if (typeof g.time == "undefined") {
                g.time = (new Date()).getTime()
            }
            if (g.time == -1) {
                g.time = false
            }
            g = Travian.Game.Map.remapShortParameters(g);
            var k = c(this, g.type, g.position);
            k.data = g.data;
            k.time = g.time;
            this.data[g.type].all[k.id] = k;
            if (g.data.symbols) {
                g.data.symbols.each(function(n, m) {
                    if (!n.dataId) {
                        n.dataId = n.type + "-" + m
                    }
                    n = Travian.Game.Map.remapShortParameters(n);
                    if (!n.position) {
                        n.position = g.position
                    }
                    h.push({
                        type: Travian.Game.Map.DataStore.TYPE_SYMBOL,
                        position: g.position,
                        data: n,
                        index: n.dataId,
                        time: false
                    })
                })
            }
            return this
        },
        setMultiple: function(h, g, m) {
            var k = this;
            g.each(function(n) {
                n = Travian.Game.Map.remapShortParameters(n);
                k.set({
                    type: h,
                    position: n.position,
                    data: n,
                    time: m
                })
            });
            e(this);
            return this
        }
    });
    a.TYPE_BLOCKS = "blocks";
    a.TYPE_SYMBOL = "symbol";
    a.TYPE_TILE = "tile";
    a.TYPE_TOOLTIP = "tooltip";
    return a
})();
Travian.Game.Map.Tips = {
    lastText: "",
    lastTitle: "",
    tooltipHtml: '<span class="xCoord">({x}</span><span class="pi">|</span><span class="yCoord">{y})</span><span class="clear"></span>',
    render: function(c, a) {
        var b = this;
        a.setTitle({
            title: "",
            text: ""
        }).addEvents({
            mousemove: function(g) {
                var f = {
                    x: g.page.x - c.containerSize.x - c.elementSize.x,
                    y: g.page.y - c.containerSize.y - c.elementSize.y
                };
                var d = c.getContentForTooltip(f, g);
                if (d === false) {
                    d = {
                        title: "",
                        text: b.tooltipHtml.substitute(c.transition.translateToMap(f))
                    }
                }
                if (b.lastText !== d.text || b.lastTitle !== d.title) {
                    d.unescaped = true;
                    Travian.Tip.show(d);
                    b.lastText = d.text;
                    b.lastTitle = d.title
                }
            }
        });
        return this
    }
};
Travian.Game.Map.Rulers = (function() {
    var b = function(g, f) {
        f += g.delta.x[g.transition.zoomLevel];
        if (f < g.transition.border.left) {
            f = g.transition.border.right - (g.transition.border.left - f) + 1
        } else {
            if (f > g.transition.border.right) {
                f = g.transition.border.left + (f - g.transition.border.right) - 1
            }
        }
        return f
    };
    var a = function(g, f) {
        f += g.delta.y[g.transition.zoomLevel];
        if (f < g.transition.border.bottom) {
            f = g.transition.border.top - (g.transition.border.bottom - f) + 1
        } else {
            if (f > g.transition.border.top) {
                f = g.transition.border.bottom + (f - g.transition.border.top) - 1
            }
        }
        return f
    };
    var e = function(f) {
        f.elements.moverX.setStyles({
            backgroundImage: "url(" + f.imgSource.x.substitute({
                zoomLevel: f.transition.zoomLevel
            }) + ")"
        });
        f.elements.moverY.setStyles({
            backgroundImage: "url(" + f.imgSource.y.substitute({
                zoomLevel: f.transition.zoomLevel
            }) + ")"
        })
    };
    var d = function(o) {
        if (o.elements.coordinates) {
            o.elements.coordinates.x.invoke("dispose");
            o.elements.coordinates.y.invoke("dispose")
        }
        o.elements.coordinates = {
            x: [],
            y: []
        };
        var p = o.transition.elementsInView.x + o.transition.elementsPerBlock.x * 2;
        var n = o.steps.x[o.transition.zoomLevel];
        for (var f = 0, g = null, k = null; f < p; f += n) {
            g = (new Element("div", {
                "class": "coordinate zoom" + o.transition.zoomLevel,
                styles: {
                    position: "absolute",
                    left: f * o.mapContainer.blockSize.width / o.transition.elementsPerBlock.x,
                    top: 0,
                    width: n * o.mapContainer.blockSize.width / o.transition.elementsPerBlock.x,
                    height: o.containerSize.height
                }
            })).inject(o.elements.moverX, "bottom");
            g.rulerLeft = f * o.mapContainer.blockSize.width / o.transition.elementsPerBlock.x;
            k = g.getDimensions({
                computeSize: true
            });
            g.setStyles({
                width: k.width - k["padding-left"] - k["padding-right"],
                height: k.height - k["padding-top"] - k["padding-bottom"]
            });
            o.elements.coordinates.x[f] = g
        }
        var m = o.transition.elementsInView.y + o.transition.elementsPerBlock.y * 2;
        var h = o.steps.y[o.transition.zoomLevel];
        for (f = 0, g = null, k = null; f < m; f += h) {
            g = (new Element("div", {
                "class": "coordinate zoom" + o.transition.zoomLevel,
                styles: {
                    position: "absolute",
                    left: 0,
                    top: f * o.mapContainer.blockSize.height / o.transition.elementsPerBlock.y,
                    width: o.containerSize.width,
                    height: h * o.mapContainer.blockSize.height / o.transition.elementsPerBlock.y
                }
            })).inject(o.elements.moverY, "bottom");
            g.rulerTop = f * o.mapContainer.blockSize.height / o.transition.elementsPerBlock.y;
            k = g.getDimensions({
                computeSize: true
            });
            if (k.height - k["padding-top"] - k["padding-bottom"] > 0) {
                g.setStyles({
                    width: k.width - k["padding-left"] - k["padding-right"],
                    height: k.height - k["padding-top"] - k["padding-bottom"]
                })
            } else {
                g.setStyles({
                    height: 0
                })
            }
            o.elements.coordinates.y[f] = g
        }
        c(o, true, true)
    };
    var c = function(k, g, f) {
        var h = false;
        do {
            h = false;
            if (k.position.x < -2 * k.mapContainer.blockSize.width) {
                k.position.x += k.mapContainer.blockSize.width * 1;
                g = true;
                h = true
            }
            if (k.position.x > 0) {
                k.position.x += k.mapContainer.blockSize.width * -1;
                g = true;
                h = true
            }
            if (k.position.y < -2 * k.mapContainer.blockSize.height) {
                k.position.y += k.mapContainer.blockSize.height * 1;
                f = true;
                h = true
            }
            if (k.position.y > 0) {
                k.position.y += k.mapContainer.blockSize.height * -1;
                f = true;
                h = true
            }
        } while (h);
        k.elements.moverX.setStyles({
            left: k.position.x
        });
        k.elements.moverY.setStyles({
            top: k.position.y
        });
        if (g && k.elements.coordinates) {
            k.elements.coordinates.x.each(function(o, m) {
                if (o) {
                    var n = k.transition.translateToMap({
                        x: k.position.x + o.rulerLeft - k.mapContainer.elementSize.x,
                        y: 0
                    });
                    o.set("html", b(k, n.x))
                }
            })
        }
        if (f && k.elements.coordinates) {
            k.elements.coordinates.y.each(function(n) {
                if (n) {
                    var m = k.transition.translateToMap({
                        x: 0,
                        y: k.position.y + n.rulerTop - k.mapContainer.elementSize.y
                    });
                    n.set("html", a(k, m.y))
                }
            })
        }
    };
    return new Class({
        Extends: Travian.Game.Map.Base,
        classType: "Travian.Game.Map.Rulers",
        destroy: function() {
            this.elements.containerX.dispose();
            this.elements.containerY.dispose();
            return this
        },
        initialize: function(f, g) {
            if (!f.direction) {
                f.direction = $(document.body).getStyle("direction")
            }
            this.parent(f, g);
            this.position = {
                x: 0,
                y: 0
            }
        },
        render: function() {
            var f = this;
            this.position = {
                x: this.mapContainer.blockSize.width,
                y: this.mapContainer.blockSize.height
            };
            Object.each(this.mapContainer.blocks, function(g) {
                if (f.position.x > g.position.x) {
                    f.position.x = g.position.x
                }
                if (f.position.y > g.position.y) {
                    f.position.y = g.position.y
                }
            });
            this.elements = {
                containerX: (new Element("div")).addClass(this.cls.x).inject(this.mapContainer.containerRender, "bottom").setStyles({
                    position: "absolute",
                    left: 0,
                    right: 0,
                    width: this.mapContainer.containerViewSize.width,
                    overflow: "hidden"
                }),
                containerY: (new Element("div")).addClass(this.cls.y).inject(this.mapContainer.containerRender, "bottom").setStyles({
                    position: "absolute",
                    top: 0,
                    bottom: 0,
                    height: this.mapContainer.containerViewSize.height,
                    overflow: "hidden"
                })
            };
            this.containerSize = {
                width: this.elements.containerY.getDimensions({
                    computeSize: true
                }).width,
                height: this.elements.containerX.getDimensions({
                    computeSize: true
                }).height
            };
            this.elements.containerX.setStyles({
                height: this.containerSize.height
            });
            if (this.direction.toLowerCase() === "ltr") {
                this.elements.containerY.setStyles({
                    left: -this.containerSize.width
                })
            } else {
                if (this.direction.toLowerCase() === "rtl") {
                    this.elements.containerY.setStyles({
                        right: -this.containerSize.width
                    })
                }
            }
            this.elements.moverX = new Element("div", {
                styles: {
                    position: "absolute",
                    left: 0,
                    top: 0,
                    width: this.mapContainer.containerSize.width + 2 * this.mapContainer.blockSize.width,
                    height: "100%",
                    backgroundPosition: "left top",
                    backgroundColor: "transparent",
                    backgroundRepeat: "repeat-x"
                }
            }).inject(this.elements.containerX, "bottom");
            this.elements.moverY = new Element("div", {
                styles: {
                    position: "absolute",
                    left: 0,
                    top: 0,
                    width: "100%",
                    height: this.mapContainer.containerSize.height + 2 * this.mapContainer.blockSize.height,
                    backgroundPosition: "left top",
                    backgroundColor: "transparent",
                    backgroundRepeat: "repeat-y"
                }
            }).inject(this.elements.containerY, "bottom");
            e(this);
            d(this);
            c(this);
            return this
        },
        move: function(f) {
            this.position.x += f.x;
            this.position.y -= f.y;
            c(this);
            return this
        },
        zoom: function() {
            e(this);
            d(this);
            c(this);
            return this
        }
    })
})();
Travian.Game.Map.MiniMap = (function() {
    var c = Travian.emptyFunction;
    if (Browser.name === "opera") {
        c = function(e) {
            var d = e.elements.background.getStyle("bottom");
            e.elements.background.setStyles({
                bottom: 0
            });
            (function() {
                e.elements.background.setStyles({
                    bottom: d
                })
            }).delay(0.1)
        }
    }
    var b = function(m) {
        var f = m.transition.translateToMap({
            x: -m.mapContainer.elementSize.x,
            y: -m.mapContainer.elementSize.y
        }, {});
        var k = m.transition.translateToMap({
            x: 0,
            y: 0,
            width: m.mapContainer.containerViewSize.width,
            height: m.mapContainer.containerViewSize.height
        }, {
            round: false,
            correct: false
        });
        k.width = k.right - k.x;
        k.height = k.top - k.y;
        var h = {
            x: m.containerSize.width / m.transition.border.width,
            y: m.containerSize.height / m.transition.border.height
        };
        m.position.width = k.width * h.x;
        m.position.height = k.height * h.y;
        m.position.x = f.x * h.x;
        m.position.x += m.containerSize.width / 2;
        m.position.y = f.y * h.y;
        m.position.y += m.containerSize.height / 2;
        var g = {
            x: m.position.x - m.elementSize["border-left-width"],
            y: m.position.y - m.elementSize["border-top-width"] - m.elementSize["border-bottom-width"],
            width: m.position.width + m.elementSize["border-left-width"] + m.elementSize["border-right-width"],
            height: m.position.height + m.elementSize["border-top-width"] + m.elementSize["border-bottom-width"]
        };
        if (g.width >= m.containerSize.width) {
            g.x = -1
        }
        if (g.height >= m.containerSize.height) {
            g.y = -1
        }
        m.element.setStyles({
            left: g.x,
            bottom: g.y,
            width: g.width,
            height: g.height
        });
        var e = Object.clone(g);
        var d = false;
        if (g.width >= m.containerSize.width) {
            d = true
        } else {
            if (g.x < 0) {
                g.x += m.containerSize.width;
                d = true
            } else {
                if (g.x + g.width > m.containerSize.width) {
                    g.x -= m.containerSize.width;
                    d = true
                }
            }
        }
        if (g.height >= m.containerSize.height) {
            d = true
        } else {
            if (g.y < 0) {
                g.y += m.containerSize.height;
                d = true
            } else {
                if (g.y + g.height > m.containerSize.height) {
                    g.y -= m.containerSize.height;
                    d = true
                }
            }
        }
        m.elementHelpers[0].setStyles({
            left: g.x,
            bottom: g.y,
            width: g.width,
            height: g.height,
            display: d ? "block" : "none"
        });
        m.elementHelpers[1].setStyles({
            left: e.x,
            bottom: g.y,
            width: g.width,
            height: g.height,
            display: (g.x < 0 && g.y < 0 && g.x + g.width > 0 && g.y + g.height > 0) ? "block" : "none"
        });
        m.elementHelpers[2].setStyles({
            left: g.x,
            bottom: e.y,
            width: g.width,
            height: g.height,
            display: (g.x < 0 && g.y < 0 && g.x + g.width > 0 && g.y + g.height > 0) ? "block" : "none"
        })
    };
    var a = function(g, f) {
        var d = {
            x: f.containerSize.width / f.transition.border.width,
            y: f.containerSize.height / f.transition.border.height
        };
        return {
            x: Math.floor((g.page.x - f.containerPosition.x) / d.x - Math.abs(f.transition.border.left)),
            y: -Math.floor((g.page.y - f.containerPosition.y) / d.y - Math.abs(f.transition.border.bottom))
        }
    };
    return new Class({
        Extends: Travian.Game.Map.Base,
        classType: "Travian.Game.Map.MiniMap",
        expanded: false,
        animate: function() {
            var d = this;
            if (this.elements.headlineExpander._fx && this.elements.headlineExpander._fx.cancel) {
                this.elements.headlineExpander._fx.cancel()
            }
            if (this.elements.headlineExpander.hasClass("expand")) {
                this.expanded = true;
                this.cookie.set("minimap-expanded", true);
                this.elements.headlineExpander.removeClass("expand").addClass("collapse");
                this.elements.headlineExpander._fx = (new Fx.Morph(this.elements.container, {
                    onComplete: function() {
                        c(d)
                    }
                })).start({
                    height: [this.elements.container.getSize().y, this.elements.container._height.max]
                });
                this.parentContainer.outline.update(this.elements.container.getSize().y - this.elements.container._height.max)
            } else {
                this.expanded = false;
                this.cookie.set("minimap-expanded", false);
                this.elements.headlineExpander.removeClass("collapse").addClass("expand");
                this.elements.headlineExpander._fx = (new Fx.Morph(this.elements.container, {
                    onComplete: function() {
                        c(d)
                    }
                })).start({
                    height: [this.elements.container.getSize().y, this.elements.container._height.min]
                });
                this.parentContainer.outline.update(this.elements.container.getSize().y - this.elements.container._height.min)
            }
            return this
        },
        getContentForTooltip: function(d, g) {
            var f = a(g, this);
            return {
                text: this.tooltipHtml.substitute(f)
            }
        },
        initialize: function(d, e) {
            this.parent(d, e);
            this.position = {
                x: 0,
                y: 0,
                width: 0,
                height: 0
            }
        },
        render: function() {
            var f = this;
            this.container = $(this.container).setStyles({
                overflow: "hidden"
            }).disableSelection().addEvent("click", function(h) {
                f.mapContainer.moveTo(a(h, f))
            });
            this.parent({
                nodeType: "div"
            }).element.addClass("view").setStyles({
                position: "absolute",
                zIndex: 3
            }).inject(this.container, "bottom");
            (new Element("div", {
                "class": "inner",
                styles: {
                    height: "100%",
                    opacity: 0.25,
                    width: "100%"
                }
            })).inject(this.element, "bottom");
            this.elementHelpers = [];
            for (var e = 0; e < 3; e++) {
                var d = (new Element("div", {
                    "class": "view",
                    styles: {
                        position: "absolute",
                        zIndex: 3,
                        display: "none"
                    }
                })).inject(this.container, "bottom");
                (new Element("div", {
                    "class": "inner",
                    styles: {
                        height: "100%",
                        opacity: 0.25,
                        width: "100%"
                    }
                })).inject(d, "bottom");
                this.elementHelpers.push(d)
            }
            this.containerSize = this.container.getDimensions({
                computeSize: !(Browser.name === "chrome" || Browser.name === "safari")
            });
            this.containerPosition = this.container.getPosition();
            this.elementSize = this.element.getDimensions({
                computeSize: true
            });
            if (this.showToolTip) {
                Travian.Game.Map.Tips.render(this, this.container.down("img"))
            }
            b(this);
            this.elements = {
                container: $(this.containerContent),
                headline: $(this.containerContent).down(".headline"),
                headlineExpander: $(this.containerContent).down(".headline").down(".iconButton"),
                background: $(this.containerContent).down(".background")
            };
            this.elements.headlineExpander.addClass(this.cookie.get("minimap-expanded") === true ? "collapse" : "expand");
            var g = function() {
                f.elements.container._height = {
                    max: f.elements.container.getSize().y,
                    min: f.elements.headline.getSize().y + parseInt(f.elements.headline.getStyle("margin-top")) + parseInt(f.elements.headline.getStyle("margin-bottom"))
                };
                if (f.elements.container._height.min < 0) {
                    f.elements.container._height.min = 0
                }
                if (f.elements.container._height.max < 0) {
                    f.elements.container._height.max = 0
                }
                if (f.cookie.get("minimap-expanded") !== true) {
                    f.elements.container.setStyles({
                        height: f.elements.container._height.min
                    });
                    c(f)
                }
                f.elements.headline.addEvent("click", function(h) {
                    f.animate()
                })
            };
            if (Browser.name === "chrome" || Browser.name === "safari") {
                g.delay(300)
            } else {
                g()
            }
        },
        move: function() {
            b(this);
            return this
        },
        zoom: function() {
            b(this);
            return this
        }
    })
})();
Travian.Game.Map.Toolbar = new Class({
    Extends: Travian.Game.Map.Base,
    classType: "Travian.Game.Map.Toolbar",
    initialize: function(a, b) {
        this.parent(a, b)
    },
    render: function() {
        var c = this;
        var a = null;
        this.element = $(this.element);
        this.zoomIn = this.element.down(".zoomIn").addEvent("click", function(d) {
            c.mapContainer.zoomIn()
        });
        this.zoomOut = this.element.down(".zoomOut").addEvent("click", function(d) {
            c.mapContainer.zoomOut()
        });
        var b = function() {
            c.zoomDropDownDataContainer._dropped = false;
            c.zoomDropDownDataContainer.setStyles({
                height: c.zoomDropDownDataContainer._styleBackup.height
            });
            c.zoomDropDownEntries.each(function(d) {
                if (d.hasClass("selected")) {
                    d.addClass("display")
                }
                d.addClass("hide").removeClass("selected")
            });
            c.zoomDropDownEntries[c.transition.zoomLevel - 1].removeClass("hide").addClass("display")
        };
        this.zoomDropDownDataContainer = this.element.down(".dropdown .dataContainer");
        this.zoomDropDownEntries = this.zoomDropDownDataContainer.getElements(".entry");
        this.zoomDropDownDataContainer._styleBackup = {
            height: this.zoomDropDownDataContainer.getStyle("height"),
            maxHeight: this.zoomDropDownEntries.inject(0, function(e, d) {
                return e + parseInt(d.getStyle("height"))
            })
        };
        this.zoomDropDownClick = this.element.down(".dropdown .dropDownImage").addEvent("click", function(d) {
            if (!c.mapContainer.isEventsEnabled()) {
                return
            }
            d.stop();
            if (c.zoomDropDownDataContainer._dropped) {
                b();
                return
            }
            c.zoomDropDownDataContainer._dropped = true;
            c.zoomDropDownEntries.each(function(e) {
                if (e.hasClass("display")) {
                    e.addClass("selected")
                }
                e.removeClass("display").removeClass("hide")
            });
            c.zoomDropDownDataContainer.setStyles({
                height: Browser.name === "opera" ? "auto" : c.zoomDropDownDataContainer._styleBackup.maxHeight
            })
        });
        this.zoomDropDownEntries.each(function(e, d) {
            e.addEvent("click", function(f) {
                f.stop();
                if (!c.zoomDropDownDataContainer._dropped) {
                    return
                }
                c.zoomDropDownDataContainer._dropped = false;
                c.zoomDropDownDataContainer.setStyles({
                    height: c.zoomDropDownDataContainer._styleBackup.height
                });
                c.zoomDropDownEntries.each(function(g) {
                    g.addClass("hide").removeClass("selected")
                });
                e.removeClass("hide").addClass("display");
                c.mapContainer.zoom(d + 1 - c.mapContainer.transition.zoomLevel, c.mapContainer.transition.getPointOfCenterInView())
            })
        });
        $(document.body).addEvent("click", function() {
            if (c.zoomDropDownDataContainer._dropped) {
                b()
            }
        });
        a = this.element.down(".viewFull");
        if (a) {
            this.viewFull = a.addEvent("click", function(d) {
                window.location.href = c.viewFullScreenUrl.substitute(Object.merge({}, c.mapContainer.transition.getPointOfCenterInView(), {
                    zoom: c.mapContainer.transition.zoomLevel
                }))
            })
        }
        a = this.element.down(".viewNormal");
        if (a) {
            this.viewNormal = this.element.down(".viewNormal").addEvent("click", function(d) {
                window.location.href = c.viewNormalUrl.substitute(Object.merge({}, c.mapContainer.transition.getPointOfCenterInView(), {
                    zoom: c.mapContainer.transition.zoomLevel
                }))
            })
        }
        this.filterPlayer = this.element.down(".filterMy").addEvent("click", function(d) {
            Travian.ajax({
                data: {
                    cmd: "mapSetting",
                    data: {
                        type: "outline",
                        outline: "user"
                    }
                },
                onSuccess: function(e) {
                    c.filterPlayer[e.result ? "addClass" : "removeClass"]("checked");
                    c.filterPlayer.checked = e.result;
                    c.mapContainer.forceUpdateBlocksLayer("imageMark").forceUpdateBlocksSymbols("player", e.result)
                }
            })
        });
        this.filterPlayer.checked = this.filterPlayer.hasClass("checked");
        this.filterAlliance = this.element.down(".filterAlliance");
        if (!this.filterAlliance.hasClass("disabled")) {
            this.filterAlliance.addEvent("click", function(d) {
                Travian.ajax({
                    data: {
                        cmd: "mapSetting",
                        data: {
                            type: "outline",
                            outline: "alliance"
                        }
                    },
                    onSuccess: function(e) {
                        c.filterAlliance[e.result ? "addClass" : "removeClass"]("checked");
                        c.filterAlliance.checked = e.result;
                        c.mapContainer.forceUpdateBlocksLayer("imageMark").forceUpdateBlocksSymbols("alliance", e.result)
                    }
                })
            });
            this.filterAlliance.checked = this.filterAlliance.hasClass("checked")
        }
        a = this.element.down(".linkCropfinder");
        if (a && !(a.getParent().hasClass("iconRequireGold"))) {
            a.addEvent("click", function(d) {
                window.location.href = "cropfinder.php"
            })
        }
        this.coordinateEnter = $("mapCoordEnter").addEvent("submit", function(d) {
            var f = {
                x: parseInt(c.coordinateEnter.down("input.coordinates.x").value),
                y: parseInt(c.coordinateEnter.down("input.coordinates.y").value)
            };
            if (!f.x.isNaN() && !f.y.isNaN()) {
                c.mapContainer.moveTo(f)
            }
            d.stop();
            return false
        });
        this.update()
    },
    update: function() {
        var a = this;
        if (this.transition.zoomLevel === 1) {
            this.zoomIn.addClass("disabled");
            this.zoomOut.removeClass("disabled")
        } else {
            if (this.transition.zoomLevel === this.transition.zoomOptions.sizes.length) {
                this.zoomIn.removeClass("disabled");
                this.zoomOut.addClass("disabled")
            } else {
                this.zoomIn.removeClass("disabled");
                this.zoomOut.removeClass("disabled")
            }
        }
        this.zoomDropDownEntries.each(function(b) {
            if (a.zoomDropDownDataContainer._dropped) {
                b.removeClass("selected")
            } else {
                b.addClass("hide").removeClass("display")
            }
        });
        this.zoomDropDownEntries[this.transition.zoomLevel - 1].removeClass("hide").addClass(this.zoomDropDownDataContainer._dropped ? "selected" : "display")
    },
    zoom: function() {
        this.update()
    }
});
Travian.Game.Map.Outline = (function() {
    var a = Travian.emptyFunction;
    if (Browser.name === "opera") {
        a = function(c) {
            var b = c.elements.background.getStyle("top");
            c.elements.background.setStyles({
                top: 0
            });
            (function() {
                c.elements.background.setStyles({
                    top: b
                })
            }).delay(0.1)
        }
    }
    return new Class({
        Extends: Travian.Game.Map.Base,
        classType: "Travian.Game.Map.Outline",
        expanded: false,
        animate: function() {
            var b = this;
            if (this.elements.headlineExpander._fx && this.elements.headlineExpander._fx.cancel) {
                this.elements.headlineExpander._fx.cancel()
            }
            if (this.expanded === false) {
                this.expanded = true;
                this.elements.tabContainer.show();
                this.cookie.set("outline-expanded", true);
                this.elements.headlineExpander.removeClass("expand").addClass("collapse");
                this.elements.headlineExpander._fx = (new Fx.Morph(this.element, {
                    onComplete: function() {
                        a(b);
                        Object.each(b.parentContainer.mapMarks, function(c) {
                            c.update(false)
                        })
                    }
                })).start({
                    height: [this.element.getSize().y, this.element._height.max]
                })
            } else {
                this.expanded = false;
                this.cookie.set("outline-expanded", false);
                this.elements.headlineExpander.removeClass("collapse").addClass("expand");
                this.elements.headlineExpander._fx = (new Fx.Morph(this.element, {
                    onComplete: function() {
                        a(b);
                        b.elements.tabContainer.hide()
                    }
                })).start({
                    height: [this.element.getSize().y, this.element._height.min]
                })
            }
            return this
        },
        initialize: function(b, c) {
            this.parent(b, c);
            this.render()
        },
        render: function() {
            var b = this;
            this.selector = "#" + this.element;
            this.element = $(this.element);
            this.elements = {
                headline: this.element.down(".headline"),
                headlineExpander: this.element.down(".headline").down(".iconButton"),
                tabContainer: this.element.down(".tabContainer"),
                mapMarks: this.element.down("#mapMarks"),
                background: this.element.down(".background")
            };
            this.elements.headlineExpander.addClass(this.cookie.get("outline-expanded") === true ? "collapse" : "expand");
            var c = function() {
                b.element._height = {
                    max: b.parentContainer.containerViewSize.height - parseInt(b.element.getStyle("bottom")) - b.parentContainer.miniMap.elements.container.getSize().y - 2,
                    min: b.element.getSize().y
                };
                if (b.element._height.min < 0) {
                    b.element._height.min = 0
                }
                if (b.element._height.max < 0) {
                    b.element._height.max = 0
                }
                b.elements.tabContainer.hide();
                if (b.cookie.get("outline-expanded") === true) {
                    b.expanded = true;
                    b.elements.tabContainer.show();
                    b.element.setStyles({
                        height: b.element._height.max
                    });
                    Object.each(b.parentContainer.mapMarks, function(d) {
                        d.update(false)
                    });
                    a(b)
                }
                b.elements.headlineExpander.addEvent("click", function(d) {
                    b.animate()
                })
            };
            if (Browser.name === "chrome" || Browser.name === "safari") {
                c.delay(300)
            } else {
                c()
            }
            return this
        },
        update: function(b) {
            var c = this;
            this.element._height.max += b;
            if (this.element._height.min < 0) {
                this.element._height.min = 0
            }
            if (this.element._height.max < 0) {
                this.element._height.max = 0
            }
            if (this.expanded) {
                if (this.elements.headlineExpander._fx && this.elements.headlineExpander._fx.cancel) {
                    this.elements.headlineExpander._fx.cancel()
                }
                this.elements.headlineExpander._fx = (new Fx.Morph(this.element, {
                    onComplete: function() {
                        Object.each(c.parentContainer.mapMarks, function(d) {
                            d.update(false)
                        });
                        a(c)
                    }
                })).start({
                    height: [this.element.getSize().y, this.element._height.max]
                })
            }
            return this
        }
    })
})();
Travian.Game.Map.Layer = (function() {
    return new Class({
        Extends: Travian.Game.Map.Base,
        element: null,
        index: null,
        position: null,
        classType: "Travian.Game.Map.Layer",
        finishedLoading: function() {
            return this
        },
        forceUpdateContent: function() {
            return this
        },
        getContentForTooltip: function(a) {
            return false
        },
        getRequestData: function() {
            return false
        },
        hide: function() {
            this.element.hide();
            return this
        },
        initialize: function(a, c) {
            this.parent(a, c);
            if (this.position === null && this.parentContainer !== null) {
                var b = this.parentContainer.element.getSize();
                this.position = {
                    x: 0,
                    y: 0,
                    width: Math.ceil(b.x),
                    height: Math.ceil(b.y)
                }
            }
            if (this.parentContainer.classType === "Travian.Game.Map.Layer.Block") {
                this.blockContainer = this.parentContainer
            } else {
                if (this.parentContainer.blockContainer) {
                    this.blockContainer = this.parentContainer.blockContainer
                }
            }
            if (typeof a.version !== "undefined") {
                this.setVersion(a.version)
            }
            this.render()
        },
        refreshContent: function() {
            return this
        },
        render: function(a) {
            this.parent(a);
            if (this.id !== null) {
                this.element.addClass(this.id)
            }
            if (this.position) {
                this.element.setStyles({
                    position: "absolute",
                    left: this.position.x,
                    top: this.position.y,
                    width: this.position.width,
                    height: this.position.height
                })
            }
            if (this.zIndex) {
                this.element.setStyles({
                    zIndex: this.zIndex + 1
                })
            }
            if (this.parentContainer && this.parentContainer.element) {
                this.element.inject(this.parentContainer.element, "bottom")
            }
            return this
        },
        setVersion: function(a) {
            return this
        },
        show: function() {
            this.element.show();
            return this
        },
        update: function() {
            this.element.setStyles({
                left: this.position.x + "px",
                top: this.position.y + "px"
            });
            return this
        },
        updateContent: function() {
            return this
        }
    })
})();
Travian.Game.Map.Layer.Block = (function() {
    var b = function(n, m, k) {
        if (typeof m.x == "undefined") {
            m.x = k.x
        }
        if (typeof m.y == "undefined") {
            m.y = k.y
        }
        m = Travian.Game.Map.remapShortParameters(m);
        if (typeof m.text == "undefined" && typeof m.title == "undefined") {
            m.text = n.tooltipHtml.substitute(m.position)
        }
        return m
    };
    var c = function(s, q) {
        var n = Object.clone(q);
        var m = s.transition.getPointOfCenterInView();
        var o = Object.clone(s.mapCoordinates);
        n.x = parseFloat(n.x);
        n.y = parseFloat(n.y);
        m.x = parseFloat(m.x);
        m.y = parseFloat(m.y);
        o.x = parseFloat(o.x);
        o.y = parseFloat(o.y);
        var p = {
            x: (s.transition.border.right - Math.abs(n.x) < s.transition.border.right / 2),
            y: (s.transition.border.top - Math.abs(n.y) < s.transition.border.top / 2)
        };
        var r = {
            x: (s.transition.border.right - Math.abs(m.x) < s.transition.border.right / 2),
            y: (s.transition.border.top - Math.abs(m.y) < s.transition.border.top / 2)
        };
        var k = {
            x: (s.transition.border.right - Math.abs(o.x) < s.transition.border.right / 2),
            y: (s.transition.border.top - Math.abs(o.y) < s.transition.border.top / 2)
        };
        if ((p.x || r.x) && (n.x.sgn() + m.x.sgn() === 0 && n.x.sgn() !== m.x.sgn())) {
            n.x += m.x.sgn() * s.transition.border.width
        }
        if ((p.y || r.y) && (n.y.sgn() + m.y.sgn() === 0 && n.y.sgn() !== m.y.sgn())) {
            n.y += m.y.sgn() * s.transition.border.height
        }
        if ((k.x || r.x) && (o.x.sgn() + m.x.sgn() === 0 && o.x.sgn() !== m.x.sgn())) {
            o.x += m.x.sgn() * s.transition.border.width
        }
        if ((k.y || r.y) && (o.y.sgn() + m.y.sgn() === 0 && o.y.sgn() !== m.y.sgn())) {
            o.y += m.y.sgn() * s.transition.border.height
        }
        return {
            x: (n.x - o.x) * s.transition.pixelPerTile.x,
            y: (s.transition.elementsPerBlock.y - (n.y - o.y) - 1) * s.transition.pixelPerTile.y
        }
    };
    var g = function(s, q, n) {
        if (!q.type) {
            throw "Missing symbol type for symbol: " + q.dataId;
            return
        }
        var p = s.symbolTypes[q.type];
        if (!p || !p["class"] || !p.visibleInZoom[s.transition.zoomLevel]) {
            return
        }
        if (!s.symbols[q.position.x]) {
            s.symbols[q.position.x] = {}
        }
        if (!s.symbols[q.position.x][q.position.y]) {
            s.symbols[q.position.x][q.position.y] = $H({})
        }
        var o = p.sizes[s.transition.zoomLevel];
        var r = c(s, n);
        var m = s.symbols[q.position.x][q.position.y];
        var k = e(s, p, m);
        m[q.dataId] = new p["class"](Object.merge({}, p, q, {
            positionOfTile: {
                x: r.x,
                y: r.y
            },
            positionInTile: k,
            position: {
                x: r.x + k.x,
                y: r.y + k.y,
                width: p.sizes[s.transition.zoomLevel].width,
                height: p.sizes[s.transition.zoomLevel].height
            },
            positionDefault: {
                x: r.x + k.x,
                y: r.y + k.y,
                width: p.sizes[s.transition.zoomLevel].width,
                height: p.sizes[s.transition.zoomLevel].height
            },
            symbolSize: {
                width: p.sizes[s.transition.zoomLevel].width,
                height: p.sizes[s.transition.zoomLevel].height
            }
        }), s)
    };
    var f = function(k) {
        h(k);
        k.symbols = {};
        k.dataStore.getDataForArea(Travian.Game.Map.DataStore.TYPE_SYMBOL, k.mapCoordinates, true).each(function(m) {
            g(k, m, m.position)
        })
    };
    var h = function(k) {
        if (k.symbols) {
            Object.each(k.symbols, function(m) {
                Object.each(m, function(n) {
                    n.each(function(o) {
                        o.destroy();
                        delete(n[o.dataId])
                    })
                })
            });
            delete(k.symbols)
        }
    };
    var e = function(q, p, m) {
        var k = {
            x: false,
            y: false
        };
        var n = p.sizes[q.transition.zoomLevel].width;
        var o = m.getKeys().reverse().find(function(s) {
            var r = m[s].position.x == m[s].positionDefault.x;
            r = r && m[s].position.y == m[s].positionDefault.y;
            r = r && m[s].position.width == m[s].positionDefault.width;
            r = r && m[s].position.height == m[s].positionDefault.height;
            return r
        });
        if (o) {
            k.x = m[o].positionInTile.x;
            k.x += n
        }
        if (k.x === false) {
            k.x = 0
        }
        if (k.x + n > (q.position.width / q.transition.elementsPerBlock.x)) {
            k.x = 0;
            k.y += p.sizes[q.transition.zoomLevel].height
        }
        return k
    };
    var a = function(n, k, m) {
        if (typeof m == "undefined") {
            m = {}
        }
        if (typeof m.tiles != "undefined" && m.tiles.length != 0) {
            Object.each(m.tiles, function(o) {
                o = b(n, o, k);
                if (o.position.x == k.x && o.position.y == k.y) {
                    m.tile = o
                }
                n.dataStore.set({
                    position: o.position,
                    type: Travian.Game.Map.DataStore.TYPE_TOOLTIP,
                    data: o
                })
            })
        }
        if (typeof m.tile == "undefined") {
            m.tile = {};
            m.tile = b(n, m.tile, k);
            n.dataStore.set({
                position: m.tile.position,
                type: Travian.Game.Map.DataStore.TYPE_TOOLTIP,
                data: m.tile
            })
        }
        if (typeof m.tiles != "undefined" || typeof m.tile == "undefined") {
            n.dataStore.saveDataToStorage()
        }
        if (n.mapContainer.currentMousePosition.map.x == null || n.mapContainer.currentMousePosition.map.y == null) {
            return
        }
        if (k.x != n.mapContainer.currentMousePosition.map.x || k.y != n.mapContainer.currentMousePosition.map.y) {
            return
        }
        n.mapContainer.containerMover.setTitle({
            unescaped: true,
            title: m.tile.title,
            text: m.tile.text
        });
        n.mapContainer.contextMenu.update()
    };
    var d = function(n, k, m) {
        if (n.mapContainer.currentMousePosition.map.x == null || n.mapContainer.currentMousePosition.map.y == null) {
            return
        }
        if (k.x != n.mapContainer.currentMousePosition.map.x || k.y != n.mapContainer.currentMousePosition.map.y) {
            return
        }
        n.mapContainer.containerMover.setTitle({
            title: "",
            text: "{x}|{y}".substitute(k)
        })
    };
    return new Class({
        Extends: Travian.Game.Map.Layer,
        mapCoordinates: null,
        layers: null,
        versionCache: null,
        classType: "Travian.Game.Map.Layer.Block",
        addSymbol: function(k) {
            g(this, k, k.position);
            return this
        },
        deleteSymbol: function(k) {
            if (!this.symbols || !this.symbols[k.position.x] || !this.symbols[k.position.x][k.position.y]) {
                return this
            }
            if (this.symbols[k.position.x][k.position.y][k.dataId]) {
                this.symbols[k.position.x][k.position.y][k.dataId].destroy();
                delete(this.symbols[k.position.x][k.position.y][k.dataId])
            }
            return this
        },
        forceUpdateLayer: function(k) {
            if (this.layers[k]) {
                this.layers[k].forceUpdateContent()
            }
            return this
        },
        forceUpdateSymbols: function(m, k) {
            if (this.symbols) {
                Object.each(this.symbols, function(n) {
                    Object.each(n, function(o) {
                        o.each(function(p) {
                            if (p.layer == m) {
                                p.forceUpdate(k)
                            }
                        })
                    })
                })
            }
            return this
        },
        getContentForTooltip: function(k) {
            var p = this;
            var m = this.transition.translateToMap(k);
            if (this.symbols && this.symbols[m.x] && this.symbols[m.x][m.y] && this.symbols[m.x][m.y] != 0) {
                var q = false;
                var o = this.symbols[m.x][m.y].find(function(r) {
                    q = r.getContentForTooltip();
                    return q !== false && r.isPositionInRect({
                        x: k.x - p.position.x,
                        y: k.y - p.position.y
                    })
                });
                if (o && q !== false) {
                    return q
                }
            }
            var n = this.dataStore.get(Travian.Game.Map.DataStore.TYPE_TOOLTIP, m);
            if (n != null && (n.text != undefined || n.title != undefined)) {
                n = {
                    text: n.text,
                    title: n.title
                }
            } else {
                n = {
                    title: "",
                    text: this.tooltipHtml.translate(m)
                };
                this.requestDataForPosition(m)
            }
            return n
        },
        getData: function() {
            return Object.merge({
                loaded: false,
                version: 0
            }, this.dataStore.get(Travian.Game.Map.DataStore.TYPE_BLOCKS, this.mapCoordinates, "block") || {})
        },
        getRequestData: function() {
            return {
                position: {
                    x0: this.mapCoordinates.x,
                    y0: this.mapCoordinates.y,
                    x1: this.mapCoordinates.right,
                    y1: this.mapCoordinates.top
                }
            }
        },
        getVersion: function() {
            if (this.versionCache == null) {
                this.versionCache = this.getData().version
            }
            return this.versionCache
        },
        invalidateVersionCache: function() {
            this.versionCache = null;
            return this
        },
        move: function(m) {
            if (m.x == 0 && m.y == 0) {
                return this
            }
            this.position.x += m.x;
            this.position.y -= m.y;
            var k = Travian.Game.Map.Layer.Block.getCorrectPosition(this.position, this.mapContainer);
            this.position = k.position;
            this.mapCoordinates = this.transition.translateToMap(this.position);
            this.update(k.updateInnerContent);
            return this
        },
        refreshContent: function(k) {
            if (k) {
                var m = this.getData();
                m.loaded = true;
                this.setData(m)
            }
            this.parent();
            Object.each(this.layers, function(n) {
                n.refreshContent()
            });
            f(this);
            return this
        },
        render: function() {
            var m = this;
            this.layers = {};
            this.parent({
                nodeType: "div"
            });
            this.mapCoordinates = this.transition.registerCallbackOnZoom(function() {
                m.mapCoordinates = m.transition.translateToMap(m.position);
                m.update(true)
            }).translateToMap(this.position);
            this.mapContainer.layers.each(function(o, n) {
                if (!o["class"]) {
                    return
                }
                var p = {};
                Object.append(p, o);
                p.index = n;
                m.layers[p.id] = new o["class"](p, m)
            });
            var k = this.getData();
            k.loaded = true;
            this.setData(k);
            f(this);
            return this
        },
        requestDataForPosition: function(k) {
            var m = this;
            this.updater.requestPosition({
                dataStoreType: Travian.Game.Map.DataStore.TYPE_TOOLTIP,
                position: k,
                onSuccess: function(o, n) {
                    a(m, k, o)
                },
                onFailure: function(o, n) {
                    d(m, k, o)
                }
            });
            return this
        },
        setData: function(k) {
            this.dataStore.push({
                type: Travian.Game.Map.DataStore.TYPE_BLOCKS,
                position: this.mapCoordinates,
                index: "block",
                data: Object.merge({
                    loaded: false,
                    version: 0
                }, k)
            });
            return this
        },
        setVersion: function(k) {
            var m = this.getData();
            m.version = k;
            return this.setData(m)
        },
        update: function(k) {
            this.parent();
            this.updateContent(k);
            return this
        },
        updateContent: function(k) {
            this.parent();
            Object.each(this.layers, function(m) {
                m.updateContent(k)
            });
            if (k) {
                h(this);
                if (this.getData.loaded) {
                    this.refreshContent(false)
                } else {
                    this.updater.register("ajax", this)
                }
            }
            return this
        },
        updateSymbolData: function(k) {
            if (!this.symbols || !this.symbols[k.position.x] || !this.symbols[k.position.x][k.position.y]) {
                return this
            }
            if (this.symbols[k.position.x][k.position.y][k.dataId]) {
                this.symbols[k.position.x][k.position.y][k.dataId].updateData(k)
            }
            return this
        }
    })
})();
Travian.Game.Map.Layer.Block.getCorrectPosition = function(b, c) {
    var a = {
        position: b,
        updateInnerContent: false,
        updateBlockPosition: false
    };
    do {
        a.updateBlockPosition = false;
        if (a.position.x < 0 && Math.abs(a.position.x) >= c.blockSize.width) {
            a.position.x = c.elementSize.width + a.position.x;
            a.updateInnerContent = true;
            a.updateBlockPosition = true
        } else {
            if (a.position.x + a.position.width > c.elementSize.width) {
                a.position.x = a.position.x - c.elementSize.width;
                a.updateInnerContent = true;
                a.updateBlockPosition = true
            }
        }
        if (a.position.y < 0 && Math.abs(a.position.y) >= c.blockSize.height) {
            a.position.y = c.elementSize.height + a.position.y;
            a.updateInnerContent = true;
            a.updateBlockPosition = true
        } else {
            if (a.position.y + a.position.height > c.elementSize.height) {
                a.position.y = a.position.y - c.elementSize.height;
                a.updateInnerContent = true;
                a.updateBlockPosition = true
            }
        }
    } while (a.updateBlockPosition);
    return a
};
Travian.Game.Map.Layer.Image = new Class({
    Extends: Travian.Game.Map.Layer,
    image: null,
    srcUrl: null,
    classType: "Travian.Game.Map.Layer.Image",
    getPriority: function() {
        var c = {
            x: this.blockContainer.mapCoordinates.x + (this.blockContainer.mapCoordinates.right - this.blockContainer.mapCoordinates.x) / 2,
            y: this.blockContainer.mapCoordinates.y + (this.blockContainer.mapCoordinates.top - this.blockContainer.mapCoordinates.y) / 2
        };
        var a = this.transition.getPointOfCenterInView();
        var b = {
            x: a.x - c.x,
            y: a.y - c.y
        };
        return Math.pow(b.x, 2) + Math.pow(b.y, 2)
    },
    getSrcUrl: function() {
        return this.src.substitute({
            x: this.parentContainer.mapCoordinates.x,
            y: this.parentContainer.mapCoordinates.y,
            right: this.parentContainer.mapCoordinates.right,
            top: this.parentContainer.mapCoordinates.top,
            width: this.position.width,
            height: this.position.height,
            time: this.time,
            forcedUpdates: this.mapContainer.forcedUpdates,
            version: this.blockContainer.getVersion(),
            uid: this.uid
        })
    },
    refreshSrcUrl: function() {
        this.srcUrl = this.getSrcUrl();
        return this
    },
    render: function() {
        var a = this;
        this.parent({
            nodeType: "img"
        });
        if (this.srcInit) {
            this.element.src = this.srcInit
        }
        this.time = (new Date()).getTime();
        this.updateContent();
        return this
    },
    updateContent: function(a) {
        var b = this.getSrcUrl();
        if (this.srcUrl !== b || a) {
            this.refreshSrcUrl();
            this.updater.register("images", this)
        }
        return this
    }
});
Travian.Game.Map.Layer.ImageMark = new Class({
    Extends: Travian.Game.Map.Layer.Image,
    classType: "Travian.Game.Map.Layer.ImageMark",
    finishedLoading: function() {
        this.parent();
        this.show();
        return this
    },
    forceUpdateContent: function() {
        this.time = (new Date()).getTime();
        this.updateContent(true);
        return this
    },
    updateContent: function(a) {
        this.parent(a);
        if (a) {
            this.hide()
        }
        return this
    }
});
Travian.Game.Map.Layer.Loading = new Class({
    Extends: Travian.Game.Map.Layer,
    classType: "Travian.Game.Map.Layer.Loading",
    render: function() {
        this.parent({
            nodeType: "div"
        }).element.setStyles(this.styles).hide();
        return this
    },
    updateContent: function(a) {
        return this
    }
});
Travian.Game.Map.Layer.Symbol = new Class({
    Extends: Travian.Game.Map.Layer,
    byUser: false,
    classType: "Travian.Game.Map.Layer.Symbol",
    visible: true,
    destroy: function() {
        if (this.element) {
            this.element.destroy()
        }
        return this
    },
    forceUpdate: function(a) {
        if (this.byUser) {
            this.visible = a;
            this.element[a ? "show" : "hide"]()
        }
        return this
    },
    getContentForTooltip: function() {
        if (this.visible && (this.title || this.text)) {
            return {
                title: this.title,
                text: this.text
            }
        }
        return false
    },
    initialize: function(a, c) {
        var b = this;
        a.mapCoordinates = a.mapCoordinates || c.transition.translateToMap({
            x: a.position.x + c.position.x,
            y: a.position.y + c.position.y
        });
        a.id = a.id || Travian.Game.Map.getNewId();
        a.parameters = a.parameters || {};
        this.parent(a, c)
    },
    render: function() {
        this.parent({
            nodeType: "img"
        }).element.set("src", this.imgSource.substitute(Object.merge({}, this.parameters, {
            width: this.symbolSize.width,
            height: this.symbolSize.height,
            zoomLevel: this.transition.zoomLevel
        }))).setStyles({
            position: "absolute",
            left: this.position.x,
            top: this.position.y,
            width: this.position.width,
            height: this.position.height
        });
        return this
    },
    updateData: function(a) {
        this.title = a.title;
        this.text = a.text
    }
});
Travian.Game.Map.Layer.Symbol.Flag = new Class({
    Extends: Travian.Game.Map.Layer.Symbol,
    classType: "Travian.Game.Map.Layer.Symbol.Flag",
    index: null,
    render: function() {
        this.parameters.index = this.index || 1;
        this.parent();
        var a = Travian.Game.Map.Options.Toolbar;
        var b = "filterPlayer";
        if (this.layer == "alliance") {
            var b = "filterAlliance"
        }
        if (this.mapContainer.toolbar) {
            a = this.mapContainer.toolbar
        }
        this.forceUpdate(a[b].checked)
    },
    updateData: function(a) {
        this.parent(a);
        this.parameters.index = this.index = a.index;
        this.element.set("src", this.imgSource.substitute(Object.merge({}, this.parameters, {
            zoomLevel: this.transition.zoomLevel,
            width: this.symbolSize.width,
            height: this.symbolSize.height
        })))
    }
});
Travian.Game.Map.Layer.Symbol.Attack = new Class({
    Extends: Travian.Game.Map.Layer.Symbol,
    classType: "Travian.Game.Map.Layer.Symbol.Attack"
});
Travian.Game.Map.Layer.Symbol.BattleGround = new Class({
    Extends: Travian.Game.Map.Layer.Symbol,
    classType: "Travian.Game.Map.Layer.Symbol.BattleGround",
    getContentForTooltip: function() {
        return false
    },
    render: function() {
        this.position = {
            x: this.positionOfTile.x,
            y: this.positionOfTile.y,
            width: this.transition.pixelPerTile.x,
            height: this.transition.pixelPerTile.y
        };
        this.parent()
    }
});
Travian.Game.Map.Layer.Symbol.Adventure = new Class({
    Extends: Travian.Game.Map.Layer.Symbol,
    classType: "Travian.Game.Map.Layer.Symbol.Adventure",
    render: function() {
        this.position = {
            x: this.positionOfTile.x + this.transition.pixelPerTile.x - this.position.width,
            y: this.positionOfTile.y + this.transition.pixelPerTile.y - this.position.height,
            width: this.position.width,
            height: this.position.height
        };
        this.parent()
    }
});
Travian.Game.Map.Layer.Symbol.Reinforcement = new Class({
    Extends: Travian.Game.Map.Layer.Symbol,
    classType: "Travian.Game.Map.Layer.Symbol.Reinforcement",
    render: function() {
        this.position = {
            x: this.positionOfTile.x,
            y: this.positionOfTile.y + this.transition.pixelPerTile.y - this.position.height,
            width: this.position.width,
            height: this.position.height
        };
        this.parent()
    }
});
Travian.Game.Map.MapMark = new Class({
    Extends: Travian.Game.Map.Base,
    classType: "Travian.Game.Map.MapMark",
    initialize: function(a, b) {
        this.parent(a, b);
        this.render()
    },
    render: function() {
        var a = this;
        this.element = $(this.element);
        Object.each(this.layers, function(c, b) {
            a.layers[b] = new c["class"](c, a)
        });
        this.update(false);
        this.data.each(function(b) {
            if (!b.layer || !a.layers[b.layer]) {
                return
            }
            a.layers[b.layer].addData(b)
        });
        return this
    },
    update: function(d) {
        var b = this.element.isDisplayed();
        this.element.show();
        var e = [];
        var a = this.element.getSize().y;
        var c = 0;
        Object.each(this.layers, function(g, f) {
            if (g.expanded) {
                c++
            }
            e.push({
                layer: g,
                expanded: g.expanded,
                elementCollapse: g.elements.expandContainer,
                heightCurrent: g.elements.expandContainer.getSize().y
            });
            var h = g.element.getDimensions({
                computeSize: true
            });
            a -= (h.height - g.elements.expandContainer.getSize().y);
            a -= h["border-top-width"];
            a -= h["border-bottom-width"];
            a -= h["padding-top"];
            a -= h["padding-bottom"];
            a -= g.element.getStyle("margin-top").toInt();
            a -= g.element.getStyle("margin-bottom").toInt();
            if (g._fx && g._fx.cancel) {
                g._fx.cancel()
            }
        });
        if (c !== 0) {
            a = a / c - 1
        }
        if (a < 0) {
            a = 0
        }
        e.each(function(f) {
            if (d === false) {
                f.elementCollapse.setStyles({
                    height: f.expanded ? a : 0
                });
                if (f.expanded) {
                    f.layer.jScroll.refresh()
                }
            } else {
                if (f.expanded) {
                    f._fx = new Fx.Morph(f.elementCollapse, {
                        onComplete: function() {
                            f.layer.jScroll.refresh()
                        }
                    }).start({
                        height: [f.heightCurrent, a]
                    })
                } else {
                    if (!f.expanded) {
                        f._fx = new Fx.Morph(f.elementCollapse).start({
                            height: [f.heightCurrent, 0]
                        })
                    }
                }
            }
        });
        if (b === false) {
            this.element.hide()
        }
    }
});
Travian.Game.Map.MapMark.Layer = new Class({
    Extends: Travian.Game.Map.Base,
    classType: "Travian.Game.Map.MapMark.Layer",
    addData: function(a) {
        return this
    },
    deleteData: function(a) {
        if (this.datas[a.id]) {
            delete(this.datas[a.id])
        }
        return this
    },
    initialize: function(b, c) {
        this.parent(b, c);
        var a = this.cookie.get("markLayer-" + this.parentContainer.typeId + "-" + this.typeId + "-expanded");
        if (a != null) {
            this.expanded == a
        }
        this.datas = {};
        this.render()
    },
    render: function(a) {
        var b = this;
        this.element = (new Element("div")).addClass("collapseContainer").set("html", this.html.substitute(Object.merge({}, a || {}, {
            data: "dataContainer",
            add: "addButton",
            expandButton: "expandButton",
            expandContainer: "expandContainer",
            title: this.title
        }))).inject(this.parentContainer.element, "bottom");
        this.elements = {
            data: this.element.down(".dataContainer"),
            add: this.element.down(".addButton"),
            expandButton: this.element.down(".expandButton"),
            expandContainer: this.element.down(".expandContainer")
        };
        if (!this.editable && this.elements.add) {
            this.elements.add.hide()
        }
        if (this.elements.expandButton) {
            this.elements.expandButton.addClass(this.expanded ? "collapse" : "expand");
            this.elements.expandButton.addEvent("click", function(c) {
                if (b.expanded) {} else {
                    Object.each(b.parentContainer.layers, function(d) {
                        d.expanded = false;
                        d.elements.expandButton.removeClass("collapse").addClass("expand");
                        b.cookie.set("markLayer-" + d.parentContainer.typeId + "-" + d.typeId + "-expanded", d.expanded)
                    });
                    b.expanded = true;
                    b.elements.expandButton.removeClass("expand").addClass("collapse");
                    b.cookie.set("markLayer-" + b.parentContainer.typeId + "-" + b.typeId + "-expanded", true)
                }
                b.parentContainer.update()
            })
        }
        this.jScroll = new jScroll({
            container: this.elements.expandContainer
        });
        return this
    }
});
Travian.Game.Map.MapMark.Layer.Mark = new Class({
    Extends: Travian.Game.Map.MapMark.Layer,
    classType: "Travian.Game.Map.MapMark.Layer.Mark",
    dialogInstance: null,
    addData: function(a) {
        var b = new Travian.Game.Map.MapMark.Layer.Data.Mark(Object.merge({}, a, this.optionsData, {
            editable: this.editable
        }), this);
        this.datas[b.id] = b;
        return this
    },
    add: function(a) {
        var b = this;
        if (!this.editable) {
            return this
        }
        a = Travian.Game.Map.remapShortParameters(a);
        Travian.ajax({
            data: {
                cmd: "mapMultiMarkAdd",
                data: {
                    x: a.position.x,
                    y: a.position.y,
                    type: this.typeId,
                    color: a.color || 0,
                    owner: this.parentContainer.typeId,
                    text: a.text || undefined,
                    title: a.title || undefined
                }
            },
            onSuccess: function(c) {
                b.addData(c);
                b.mapContainer.forceUpdateBlocksLayer("imageMark");
                b.dialogInstance.close();
                b.dialogInstance = null
            },
            onFailure: function(d, c) {
                b.dialogInstance.enableForm().toElement().down(".errorMessage").set("html", c);
                return false
            }
        });
        return this
    },
    initialize: function(a, c) {
        var b = this;
        this.parent(a, c);
        this.colorsArray = [];
        Object.each(this.colors, function(d) {
            if (typeof d == "string") {
                b.colorsArray.push(d)
            }
        })
    },
    render: function() {
        var a = this;
        this.parent();
        this.elements.add.addEvent("click", function(b) {
            a.showDialog()
        });
        return this
    },
    showDialog: function(a) {
        var b = this;
        a = Object.merge({
            color: this.color,
            onOkay: this.add.bind(this),
            onOpen: Travian.emptyFunction,
            position: {
                x: "",
                y: ""
            }
        }, a || {});
        this.color = a.color;
        this.dialogInstance = this.dialog.html.substitute({
            select: "select",
            textX: this.dialog.textX,
            textY: this.dialog.textY,
            textDisplay: "textDisplay",
            coord: "coord",
            inputX: "inputX",
            inputY: "inputY"
        }).dialog({
            keepOpen: true,
            relativeTo: this.mapContainer.container,
            elementFocus: a.position.x == "" ? this.dialog.elementFocusNew : this.dialog.elementFocusEdit,
            buttonTextOk: this.dialog.textOkay,
            buttonTextCancel: this.dialog.textCancel,
            title: this.dialog.title,
            onOpen: function(d, e) {
                e.down(".inputX").value = a.position.x;
                e.down(".inputY").value = a.position.y;
                var c = (new Travian.Game.ColorPicker(e.down(".select"), {
                    colors: b.colorsArray,
                    defaultColor: b.color
                })).addEvent("change", function(f, g) {
                    b.colorsArray.find(function(h, k) {
                        if (h == f) {
                            b.color = k
                        }
                    })
                });
                a.onOpen(d, e, c)
            },
            onOkay: function(c, d) {
                a.onOkay({
                    color: b.color,
                    position: {
                        x: d.down(".inputX").value,
                        y: d.down(".inputY").value
                    }
                }, c, d)
            }
        }).dialog;
        return this
    }
});
Travian.Game.Map.MapMark.Layer.Flag = new Class({
    Extends: Travian.Game.Map.MapMark.Layer,
    classType: "Travian.Game.Map.MapMark.Layer.Flag",
    dialogInstance: null,
    add: function(a) {
        var b = this;
        if (!this.editable) {
            return this
        }
        a = Travian.Game.Map.remapShortParameters(a);
        if (a.index < this.indexes.min) {
            a.index = this.indexes.max
        }
        if (a.index > this.indexes.max) {
            a.index = this.indexes.min
        }
        Travian.ajax({
            data: {
                cmd: "mapFlagAdd",
                data: {
                    x: a.position.x,
                    y: a.position.y,
                    color: a.index || this.indexes.min,
                    owner: this.parentContainer.typeId,
                    text: a.text || undefined,
                    title: a.title || undefined
                }
            },
            onSuccess: function(c) {
                c.type = "flag";
                b.dataStore.push({
                    type: Travian.Game.Map.DataStore.TYPE_SYMBOL,
                    index: c.dataId,
                    position: c.position,
                    data: c,
                    time: false
                });
                b.addData(c);
                c.position = a.position;
                c.layer = b.parentContainer.typeId;
                b.mapContainer.addSymbol(c);
                b.dialogInstance.close();
                b.dialogInstance = null
            },
            onFailure: function(d, c) {
                b.dialogInstance.enableForm().toElement().down(".errorMessage").set("html", c);
                return false
            }
        });
        return this
    },
    addData: function(b) {
        var a = new Travian.Game.Map.MapMark.Layer.Data.Flag(Object.merge({}, b, this.optionsData, {
            editable: this.editable
        }), this);
        this.datas[a.id] = a;
        return this
    },
    initialize: function(a, c) {
        this.parent(a, c);
        this.imagesArray = [];
        for (var b = this.indexes.min; b <= this.indexes.max; b++) {
            this.imagesArray.push(this.imgSource.substitute({
                index: b
            }))
        }
    },
    render: function() {
        var a = this;
        this.parent();
        this.elements.add.addEvent("click", function(b) {
            a.showDialog()
        });
        return this
    },
    showDialog: function(a) {
        var b = this;
        a = Object.merge({
            index: this.index,
            onOkay: this.add.bind(this),
            onOpen: Travian.emptyFunction,
            text: "",
            position: {
                x: "",
                y: ""
            }
        }, a || {});
        this.index = a.index;
        this.dialogInstance = this.dialog.html.substitute({
            select: "select",
            textX: this.dialog.textX,
            textY: this.dialog.textY,
            textDisplay: "textDisplay",
            coord: "coord",
            inputX: "inputX",
            inputY: "inputY",
            inputText: "inputText"
        }).dialog({
            keepOpen: true,
            relativeTo: this.mapContainer.container,
            elementFocus: a.position.x == "" ? this.dialog.elementFocusNew : this.dialog.elementFocusEdit,
            buttonTextOk: this.dialog.textOkay,
            buttonTextCancel: this.dialog.textCancel,
            title: this.dialog.title,
            onOpen: function(d, e) {
                e.down(".inputX").value = a.position.x;
                e.down(".inputY").value = a.position.y;
                e.down(".inputText").value = a.text;
                var c = (new Travian.Game.ImagePicker(e.down(".select"), {
                    images: b.imagesArray,
                    defaultImage: b.index - b.indexes.min
                })).addEvent("change", function(g, f) {
                    b.imagesArray.find(function(k, h) {
                        if (k == g) {
                            b.index = h + 1
                        }
                    })
                });
                a.onOpen(d, e, c)
            },
            onOkay: function(c, d) {
                if (b.index < b.indexes.min) {
                    b.index += b.indexes.min - 1
                }
                a.onOkay({
                    index: b.index,
                    text: d.down(".inputText").value,
                    position: {
                        x: d.down(".inputX").value,
                        y: d.down(".inputY").value
                    }
                }, c, d)
            }
        }).dialog;
        return this
    }
});
Travian.Game.Map.MapMark.Layer.Data = new Class({
    Extends: Travian.Game.Map.MapMark.Layer,
    classType: "Travian.Game.Map.MapMark.Layer.Data",
    del: function() {
        this.destroy();
        this.parentContainer.deleteData(this);
        return this
    },
    render: function(a) {
        var b = this;
        this.element = (new Element("div")).set("html", this.html.substitute(Object.merge({}, a || {}, {
            entry: this.id,
            text: "textContainer",
            "delete": "deleteButton",
            select: "selectLink",
            editDelete: "editDeleteContainer"
        }))).inject(this.parentContainer.elements.data, "bottom");
        this.elements = {
            text: this.element.down(".textContainer"),
            "delete": this.element.down(".deleteButton"),
            select: this.element.down(".selectLink"),
            editDelete: this.element.down(".editDeleteContainer")
        };
        this.elements["delete"].addEvent("click", function(c) {
            b.del()
        });
        this.elements.text.set("html", this.text);
        if (!this.editable && this.elements.editDelete) {
            this.elements.editDelete.hide()
        }
        if (this.parentContainer.expanded) {
            this.parentContainer.jScroll.refresh()
        }
        return this
    }
});
Travian.Game.Map.MapMark.Layer.Data.Mark = (function() {
    var a = function(b) {
        b.elements.color.setStyles({
            backgroundColor: b.parentContainer.colors[b.color]
        })
    };
    return new Class({
        Extends: Travian.Game.Map.MapMark.Layer.Data,
        classType: "Travian.Game.Map.MapMark.Layer.Data.Mark",
        del: function() {
            var b = this;
            if (!this.editable) {
                return this
            }
            Travian.ajax({
                data: {
                    cmd: "mapFlagOrMultiMarkDelete",
                    data: {
                        dataId: this.dataId,
                        owner: this.parentContainer.parentContainer.typeId,
                        type: "mark"
                    }
                },
                onSuccess: function(c) {
                    if (c.result) {
                        b.destroy();
                        b.mapContainer.forceUpdateBlocksLayer("imageMark");
                        if (b.parentContainer.expanded) {
                            b.parentContainer.jScroll.refresh()
                        }
                    }
                }
            });
            return this
        },
        initialize: function(b, c) {
            b.color = Number(b.color);
            this.parent(b, c)
        },
        render: function(b) {
            var c = this;
            this.parent({
                color: "colorContainer",
                urlLink: "urlLink"
            });
            this.elements.color = this.element.down(".colorContainer");
            this.elements.urlLink = this.element.down(".urlLink");
            if (this.elements.urlLink) {
                this.elements.urlLink.href = this.urlLink.substitute({
                    markId: this.markId
                })
            }
            if (this.editable) {
                this.elements.select.addEvent("click", function(d) {
                    c.parentContainer.showDialog({
                        color: c.color,
                        onOpen: function(f, g, e) {
                            g.select(".coord").each(function(h) {
                                h.hide()
                            });
                            g.down(".textDisplay").show().set("html", c.text)
                        },
                        onOkay: function(e, f, g) {
                            c.setColor(e.color)
                        }
                    })
                })
            }
            a(this);
            return this
        },
        setColor: function(b) {
            var c = this;
            if (!this.editable) {
                return this
            }
            if (typeof b != "number") {
                return this
            }
            if (b < this.parentContainer.colors.min) {
                b = this.parentContainer.colors.max
            }
            if (b > this.parentContainer.colors.max) {
                b = this.parentContainer.colors.min
            }
            Travian.ajax({
                data: {
                    cmd: "mapMultiMarkUpdate",
                    data: {
                        color: b,
                        dataId: this.dataId,
                        owner: this.parentContainer.parentContainer.typeId
                    }
                },
                onSuccess: function(d) {
                    if (d) {
                        c.color = b;
                        a(c);
                        c.mapContainer.forceUpdateBlocksLayer("imageMark")
                    }
                    c.dialogInstance.close();
                    c.dialogInstance = null
                },
                onFailure: function(e, d) {
                    c.parentContainer.dialogInstance.enableForm().toElement().down(".errorMessage").set("html", d);
                    return false
                }
            });
            return this
        }
    })
})();
Travian.Game.Map.MapMark.Layer.Data.Flag = (function() {
    var a = function(b) {
        b.elements.text.set("html", b.text);
        b.elements.index.set("html", '<img src="' + b.parentContainer.imgSource.substitute({
            index: b.index
        }) + '" alt="" />')
    };
    return new Class({
        Extends: Travian.Game.Map.MapMark.Layer.Data,
        classType: "Travian.Game.Map.MapMark.Layer.Data.Flag",
        del: function() {
            var b = this;
            if (!this.editable) {
                return this
            }
            Travian.ajax({
                data: {
                    cmd: "mapFlagOrMultiMarkDelete",
                    data: {
                        dataId: this.dataId,
                        owner: this.parentContainer.parentContainer.typeId,
                        type: "flag"
                    }
                },
                onSuccess: function(c) {
                    if (c.result) {
                        b.destroy();
                        b.dataStore.remove(Travian.Game.Map.DataStore.TYPE_SYMBOL, b.position, b.dataId);
                        b.mapContainer.deleteSymbol({
                            position: b.position,
                            dataId: b.dataId
                        });
                        if (b.parentContainer.expanded) {
                            b.parentContainer.jScroll.refresh()
                        }
                    }
                }
            });
            return this
        },
        initialize: function(b, c) {
            b.index = Number(b.index);
            this.parent(b, c)
        },
        render: function(b) {
            var c = this;
            this.parent({
                index: "indexContainer",
                urlLink: "urlLink"
            });
            this.elements.index = this.element.down(".indexContainer");
            this.elements.urlLink = this.element.down(".urlLink");
            if (this.editable) {
                this.elements.select.addEvent("click", function(d) {
                    c.parentContainer.showDialog({
                        index: c.index,
                        text: c.text,
                        position: c.position,
                        onOpen: function(f, g, e) {
                            c.dialogInstance = f;
                            g.down(".inputX").disabled = true;
                            g.down(".inputY").disabled = true
                        },
                        onOkay: function(e, f, g) {
                            c.setIndex(e.index, e.text)
                        }
                    })
                })
            }
            this.elements.urlLink.addEvent("click", function(d) {
                if (c.mapContainer.isEventsEnabled()) {
                    c.mapContainer.moveTo(c.position)
                }
            });
            a(this);
            return this
        },
        setIndex: function(b, d) {
            var c = this;
            if (!this.editable) {
                return this
            }
            if (typeof b != "number") {
                return this
            }
            if (b < this.parentContainer.indexes.min) {
                b = this.parentContainer.indexes.max
            }
            if (b > this.parentContainer.indexes.max) {
                b = this.parentContainer.indexes.min
            }
            Travian.ajax({
                data: {
                    cmd: "mapFlagUpdate",
                    data: {
                        index: b,
                        text: d,
                        dataId: this.dataId,
                        owner: this.parentContainer.parentContainer.typeId
                    }
                },
                onSuccess: function(e) {
                    if (e) {
                        c.index = b;
                        c.text = d;
                        a(c);
                        var f = c.dataStore.get(Travian.Game.Map.DataStore.TYPE_SYMBOL, c.position, c.dataId);
                        f.index = c.index;
                        f.text = c.text;
                        c.dataStore.push({
                            type: Travian.Game.Map.DataStore.TYPE_SYMBOL,
                            position: c.position,
                            index: c.dataId,
                            data: f,
                            time: false
                        });
                        c.mapContainer.updateSymbolData({
                            position: c.position,
                            dataId: c.dataId,
                            index: c.index,
                            text: c.text
                        })
                    }
                    c.dialogInstance.close();
                    c.dialogInstance = null
                },
                onFailure: function(f, e) {
                    c.parentContainer.dialogInstance.enableForm().toElement().down(".errorMessage").set("html", e);
                    return false
                }
            });
            return this
        }
    })
})();
Travian.Game.Map.Options = {};
Travian.Game.Map.Options.Symbols = {
    flag: {
        "class": Travian.Game.Map.Layer.Symbol.Flag,
        imgSource: "img/map/flag/flag-{index}/{width}x{height}.png",
        byUser: true,
        zIndex: 10,
        visibleInZoom: {
            1: true,
            2: true,
            3: false,
            4: false
        },
        sizes: {
            1: {
                width: 16,
                height: 16
            },
            2: {
                width: 10,
                height: 10
            },
            3: {
                width: 6,
                height: 6
            },
            4: {
                width: 4,
                height: 4
            }
        }
    },
    attack: {
        "class": Travian.Game.Map.Layer.Symbol.Attack,
        imgSource: "img/map/attack/attack-{attackType}/{width}x{height}.gif",
        zIndex: 10,
        visibleInZoom: {
            1: true,
            2: true,
            3: false,
            4: false
        },
        sizes: {
            1: {
                width: 16,
                height: 16
            },
            2: {
                width: 10,
                height: 10
            },
            3: {
                width: 6,
                height: 6
            },
            4: {
                width: 4,
                height: 4
            }
        }
    },
    battleGround: {
        "class": Travian.Game.Map.Layer.Symbol.BattleGround,
        imgSource: "img/map/battleground/battleground-{center}-{north}-{east}-{south}-{west}-{width}x{height}.png",
        zIndex: 9,
        visibleInZoom: {
            1: true,
            2: true,
            3: false,
            4: false
        },
        sizes: {
            1: {
                width: 16,
                height: 16
            },
            2: {
                width: 8,
                height: 8
            },
            3: {
                width: 4,
                height: 4
            },
            4: {
                width: 4,
                height: 4
            }
        }
    },
    adventure: {
        "class": Travian.Game.Map.Layer.Symbol.Adventure,
        imgSource: "img/map/adventure/difficulty-{difficulty}/{width}x{height}.png",
        zIndex: 10,
        visibleInZoom: {
            1: true,
            2: true,
            3: false,
            4: false
        },
        sizes: {
            1: {
                width: 16,
                height: 16
            },
            2: {
                width: 8,
                height: 8
            },
            3: {
                width: 6,
                height: 6
            },
            4: {
                width: 4,
                height: 4
            }
        }
    },
    reinforcement: {
        "class": Travian.Game.Map.Layer.Symbol.Reinforcement,
        imgSource: "img/map/reinforcement/{width}x{height}.gif",
        zIndex: 10,
        visibleInZoom: {
            1: true,
            2: true,
            3: false,
            4: false
        },
        sizes: {
            1: {
                width: 16,
                height: 16
            },
            2: {
                width: 10,
                height: 10
            },
            3: {
                width: 6,
                height: 6
            },
            4: {
                width: 4,
                height: 4
            }
        }
    }
};
Travian.Game.Map.Options.Rulers = {
    direction: null,
    imgSource: {
        x: "img/map/rulers/x-{zoomLevel}.gif",
        y: "img/map/rulers/y-{zoomLevel}.gif"
    },
    cls: {
        x: "ruler x",
        y: "ruler y"
    },
    steps: {
        x: {
            1: 1,
            2: 1,
            3: 10,
            4: 20
        },
        y: {
            1: 1,
            2: 1,
            3: 10,
            4: 20
        }
    },
    delta: {
        x: {
            1: 0,
            2: 0,
            3: 0,
            4: 0
        },
        y: {
            1: 0,
            2: 0,
            3: -9,
            4: -19
        }
    }
};
Travian.Game.Map.Options.MiniMap = {
    container: "miniMap",
    containerContent: "minimapContainer",
    showToolTip: true,
    classLines: {
        x: "lines",
        y: "lines"
    },
    tooltipHtml: '<span class="xCoord">({x}</span><span class="pi">|</span><span class="yCoord">{y})</span><span class="clear"></span>'
};
Travian.Game.Map.Options.Toolbar = {
    element: "toolbar",
    viewFullScreenUrl: "karte.php?fullscreen=1&x={x}&y={y}&zoom={zoom}",
    viewNormalUrl: "karte.php?x={x}&y={y}&zoom={zoom}",
    filterPlayer: {
        checked: true
    },
    filterAlliance: {
        checked: true
    }
};
Travian.Game.Map.Options.Outline = {
    element: "outline"
};
Travian.Game.Map.Options.MapMark = Travian.Game.Map.Options.MapMark || {};
Travian.Game.Map.Options.MapMark.Mark = {
    "class": Travian.Game.Map.MapMark.Layer.Mark,
    title: "",
    typeId: "player",
    editable: true,
    expanded: false,
    color: 0,
    colors: {
        0: "#C0C0C0",
        1: "#FF7722",
        2: "#B15BDB",
        3: "#DF4E78",
        4: "#34822F",
        5: "#3F90C5",
        6: "#C2AF09",
        7: "#8B1C1C",
        8: "#575BD2",
        9: "#4FE600",
        min: 0,
        max: 9
    },
    html: '<div class="title">{title} <a href="#" class="add {add}">+</a></div><div class="iconButton {expandButton} small"></div><div class="clear"></div><div class="{expandContainer}"><div class="{data}"></div></div>',
    dialog: {
        title: "",
        textOkay: "okay",
        textCancel: "cancel",
        textX: "X:",
        textY: "Y:",
        elementFocusNew: "coordinateDialogX",
        elementFocusEdit: "coordinateDialogX",
        html: '<div class="mapMarkMark"><div class="color {select}"></div><div class="{coord}"><span>{textX}</span><input id="coordinateDialogX" class="text coordinates x {inputX}" type="text" /><span>{textY}</span><input class="text coordinates y {inputY}" type="text" /></div><div class="{textDisplay}"></div></div>'
    },
    optionsData: {
        urlLink: "spieler.php?uid={markId}",
        html: '<div class="entry flag {entry}"><div class="marker color"><a href="#" class="{select} {color}"></a></div><div class="text"><a href="#" class="{urlLink} {text}"></a></div><div class="iconButton delete small {editDelete} {delete}"></div><div class="clear"></div></div>'
    }
};
Travian.Game.Map.Options.MapMark = Travian.Game.Map.Options.MapMark || {};
Travian.Game.Map.Options.MapMark.Flag = {
    "class": Travian.Game.Map.MapMark.Layer.Flag,
    title: "",
    editable: true,
    expanded: true,
    typeId: "flag",
    index: 1,
    indexes: {
        min: 1,
        max: 20
    },
    imgSource: Travian.Game.Map.Options.Symbols.flag.imgSource.substitute({
        index: "{index}",
        zoomLevel: 1,
        width: 16,
        height: 16
    }),
    html: '<div class="title">{title} <a href="#" class="add {add}">+</a></div><div class="iconButton {expandButton} small"></div><div class="clear"></div><div class="{expandContainer}"><div class="{data}"></div></div>',
    dialog: {
        title: "",
        textOkay: "okay",
        textCancel: "cancel",
        textX: "X:",
        textY: "Y:",
        elementFocusNew: "coordinateDialogX",
        elementFocusEdit: "coordinateDialogText",
        html: '<div class="mapMarkField"><div class="flag {select}"></div><div class="{coord}"><span>{textX}</span><input id="coordinateDialogX" class="text coordinates x {inputX}" type="text" /><span>{textY}</span><input class="text coordinates y {inputY}" type="text" /></div><div class="{textDisplay}"><input id="coordinateDialogText" class="text {inputText}" type="text" /></div><p class="error errorMessage"></p></div>'
    },
    optionsData: {
        html: '<div class="entry flag {entry}"><div class="marker index"><a href="#" class="{select} {index}"></a></div><div class="text"><a href="#" class="{urlLink} {text}"></a></div><div class="iconButton delete small {editDelete} {delete}"></div><div class="clear"></div></div>'
    }
};
Travian.Game.Map.Options.Default = {
    container: "mapContainer",
    containerViewSize: null,
    tileDisplayInformation: {
        type: "dialog",
        optionsPopup: {
            url: "position_details.php?x={x}&y={y}",
            windowOptions: {}
        },
        optionsDialog: {
            buttonOk: false,
            data: {
                cmd: "viewTileDetails",
                x: null,
                y: null
            }
        }
    },
    blockOverflow: 1,
    blockSize: {
        width: 170,
        height: 150
    },
    mapInitialPosition: {
        x: 0,
        y: 0
    },
    grid: {
        1: "/img/map/grid/grid-1.gif",
        2: "/img/map/grid/grid-2.gif",
        3: "/img/map/grid/grid-3.gif",
        4: false
    },
    speeds: {
        slow: 5,
        normal: 20,
        fast: 40
    },
    symbolTypes: Travian.Game.Map.Options.Symbols,
    onCreate: function(a) {},
    onRender: function(a) {
        (function() {
            Travian.Game.Map.Tips.render(a, a.containerMover);
            a.rulers = new Travian.Game.Map.Rulers(Travian.Game.Map.Options.Rulers, a);
            a.rulers.render();
            a.miniMap = new Travian.Game.Map.MiniMap(Travian.Game.Map.Options.MiniMap, a);
            a.miniMap.render();
            if (a.mapMarks) {
                Object.each(a.mapMarks, function(b, c) {
                    if (b.enabled === true) {
                        a.mapMarks[c] = new Travian.Game.Map.MapMark(b, a)
                    } else {
                        delete(a.mapMarks[c])
                    }
                })
            }
            a.outline = new Travian.Game.Map.Outline(Travian.Game.Map.Options.Outline, a);
            a.toolbar = new Travian.Game.Map.Toolbar(Travian.Game.Map.Options.Toolbar, a);
            a.toolbar.render()
        }).delay(500)
    },
    onMove: function(a, b) {
        if (a.rulers) {
            a.rulers.move(b)
        }
        if (a.miniMap) {
            a.miniMap.move()
        }
    },
    onZoom: function(a) {
        if (a.rulers) {
            a.rulers.zoom()
        }
        if (a.miniMap) {
            a.miniMap.zoom()
        }
        if (a.toolbar) {
            a.toolbar.zoom()
        }
    }
};
Travian.Game.Map.Options.Default.contextMenu = {
    targets: "#mapContainer",
    zIndex: 2000,
    menu: "contextmenu",
    separators: [{
        selector: ".separatorActions",
        elements: ["#contextMenuSendTroops", "#contextMenuSendTraders"]
    }],
    actions: [{
        element: "contextMenuSendTroops",
        displayOn: "did",
        shouldDisplay: function(a) {
            return (typeof a[this.displayOn] !== "undefined")
        },
        fn: function(c, b, a) {
            window.location.href = "build.php?gid=16&tt=2&x=" + a.position.x + "&y=" + a.position.y
        }
    }, {
        element: "contextMenuSendTraders",
        displayOn: "uid",
        shouldDisplay: function(a) {
            var c = (typeof a[this.displayOn] !== "undefined");
            var b = (a.title != "{k.bt}");
            return (c && b)
        },
        fn: function(c, b, a) {
            window.location.href = "build.php?gid=17&t=5&x=" + a.position.x + "&y=" + a.position.y
        }
    }, {
        element: "contextMenuMarkPlayerAlliance",
        displayOn: "aid",
        shouldDisplay: function(a) {
            return (typeof a[this.displayOn] !== "undefined")
        },
        fn: function(c, b, a) {
            c.parentContainer.mapMarks.player.layers.alliance.showDialog({
                position: b
            })
        }
    }, {
        element: "contextMenuMarkPlayerPlayer",
        displayOn: "uid",
        shouldDisplay: function(a) {
            return (typeof a[this.displayOn] !== "undefined")
        },
        fn: function(c, b, a) {
            c.parentContainer.mapMarks.player.layers.player.showDialog({
                position: b
            })
        }
    }, {
        element: "contextMenuFlagPlayer",
        displayOn: true,
        shouldDisplay: function(a) {
            return true
        },
        fn: function(c, b, a) {
            c.parentContainer.mapMarks.player.layers.flag.showDialog({
                position: b
            })
        }
    }, {
        element: "contextMenuMarkAllianceAlliance",
        displayOn: "aid",
        shouldDisplay: function(a) {
            return (typeof a[this.displayOn] !== "undefined")
        },
        fn: function(c, b, a) {
            c.parentContainer.mapMarks.alliance.layers.alliance.showDialog({
                position: b
            })
        }
    }, {
        element: "contextMenuMarkAlliancePlayer",
        displayOn: "uid",
        shouldDisplay: function(a) {
            return (typeof a[this.displayOn] !== "undefined")
        },
        fn: function(c, b, a) {
            c.parentContainer.mapMarks.alliance.layers.player.showDialog({
                position: b
            })
        }
    }, {
        element: "contextMenuFlagAlliance",
        displayOn: true,
        shouldDisplay: function(a) {
            return true
        },
        fn: function(c, b, a) {
            c.parentContainer.mapMarks.alliance.layers.flag.showDialog({
                position: b
            })
        }
    }]
};
Travian.Game.Map.Options.Default.transition = {
    onCreate: function(a) {},
    onMove: function(a, b) {},
    onZoom: function(a) {},
    zoomOptions: {
        level: 1,
        sizes: [{
            x: 5,
            y: 5
        }, {
            x: 10,
            y: 10
        }, {
            x: 51,
            y: 51
        }, {
            x: 135,
            y: 135
        }]
    },
    border: Travian.Defaults.Map.Size
};
Travian.Game.Map.Options.Default.layers = [{
    id: "loading",
    styles: {
        background: "#000000 url(img/loading.gif) center center no-repeat",
        opacity: 0.5
    },
    "class": Travian.Game.Map.Layer.Loading,
    zIndex: 20
}, {
    id: "image",
    src: "map_block.php?tx0={x}&ty0={y}&tx1={right}&ty1={top}&w={width}&h={height}&version={version}",
    srcInit: "img/x.gif",
    "class": Travian.Game.Map.Layer.Image,
    zIndex: 1
}, {
    id: "imageMark",
    src: "map_mark.php?tx0={x}&ty0={y}&tx1={right}&ty1={top}&w={width}&h={height}&updates={forcedUpdates}",
    srcInit: "img/x.gif",
    "class": Travian.Game.Map.Layer.ImageMark,
    zIndex: 2
}];
Travian.Game.Map.Options.Default.block = {
    tooltipHtml: '<span class="xCoord">({x}</span><span class="pi">|</span><span class="yCoord">{y})</span><span class="clear"></span><br />{k.loadingData}'
};
Travian.Game.Map.Options.Default.updater = {
    maxRequestCount: 5,
    parameters: {
        multiple: {
            cmd: "mapInfo"
        },
        position: {
            cmd: "mapPositionData"
        }
    },
    requestDelayTime: {
        multiple: 100,
        position: 300
    },
    url: "ajax.php",
    elementWorking: "working",
    positionOptions: {
        areaAroundPosition: {
            1: {
                left: -5,
                bottom: -4,
                right: 5,
                top: 4
            },
            2: {
                left: -10,
                bottom: -8,
                right: 10,
                top: 8
            },
            3: {
                left: -25,
                bottom: -25,
                right: 25,
                top: 25
            },
            4: {
                left: -25,
                bottom: -25,
                right: 25,
                top: 25
            }
        }
    }
};
Travian.Game.Map.Options.Default.keyboard = {
    37: "moveLeft",
    65: "moveLeft",
    100: Browser.name != "opera" ? "moveLeft" : false,
    52: Browser.name == "opera" ? "moveLeft" : false,
    39: "moveRight",
    68: "moveRight",
    102: Browser.name != "opera" ? "moveRight" : false,
    54: Browser.name == "opera" ? "moveRight" : false,
    38: "moveUp",
    87: "moveUp",
    104: Browser.name != "opera" ? "moveUp" : false,
    56: Browser.name == "opera" ? "moveUp" : false,
    40: "moveDown",
    83: "moveDown",
    98: Browser.name != "opera" ? "moveDown" : false,
    50: Browser.name == "opera" ? "moveDown" : false,
    61: "zoomIn",
    107: Browser.name != "opera" ? "zoomIn" : false,
    43: Browser.name == "opera" ? "zoomIn" : false,
    109: "zoomOut",
    45: Browser.name == "opera" ? "zoomOut" : false,
    103: Browser.name != "opera" ? "moveLeftUp" : false,
    55: Browser.name == "opera" ? "moveLeftUp" : false,
    97: Browser.name != "opera" ? "moveLeftDown" : false,
    49: Browser.name == "opera" ? "moveLeftDown" : false,
    105: Browser.name != "opera" ? "moveRightUp" : false,
    57: Browser.name == "opera" ? "moveRightUp" : false,
    99: Browser.name != "opera" ? "moveRightDown" : false,
    51: Browser.name == "opera" ? "moveRightDown" : false,
    speed: {
        slow: "control",
        fast: "shift"
    },
    71: {
        fn: "toggleGrid",
        periodical: 0
    },
    77: {
        fn: "toggleMiniMap",
        periodical: 0
    },
    79: {
        fn: "toggleOutline",
        periodical: 0
    }
};
Travian.Game.Map.Options.Default.dataStore = {
    cachingTimeForType: {
        blocks: 30 * 60 * 1000,
        symbol: 10 * 60 * 1000,
        tile: 10 * 60 * 1000,
        tooltip: 2 * 60 * 1000
    },
    persistentStorage: false,
    useStorageForType: {
        blocks: false,
        symbol: false,
        tile: false,
        tooltip: true
    },
    clearStorageForType: {
        blocks: false,
        symbol: false,
        tile: false,
        tooltip: false
    }
};
Travian.Game.Map.Options.Default.data = {
    elements: []
};
Travian.Game.Map.Options.Default.mapMarks = {
    player: {
        enabled: true,
        data: [],
        element: "tabPlayer",
        typeId: "player",
        layers: {
            alliance: Object.merge({}, Travian.Game.Map.Options.MapMark.Mark, {
                typeId: "alliance"
            }),
            player: Object.merge({}, Travian.Game.Map.Options.MapMark.Mark, {
                typeId: "player"
            }),
            flag: Object.merge({}, Travian.Game.Map.Options.MapMark.Flag, {
                indexes: {
                    min: 1,
                    max: 10
                }
            })
        }
    },
    alliance: {
        enabled: true,
        data: [],
        element: "tabAlliance",
        typeId: "alliance",
        layers: {
            alliance: Object.merge({}, Travian.Game.Map.Options.MapMark.Mark, {
                typeId: "alliance"
            }),
            player: Object.merge({}, Travian.Game.Map.Options.MapMark.Mark, {
                typeId: "player"
            }),
            flag: Object.merge({}, Travian.Game.Map.Options.MapMark.Flag, {
                indexes: {
                    min: 11,
                    max: 20
                }
            })
        }
    }
};